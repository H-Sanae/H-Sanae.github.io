[{"title":"Hello World","url":"/2025/06/07/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"GitHub+Hexo博客创建","url":"/2025/06/07/myblog/GitHub+Hexo%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA/","content":"参考教程从0开始到部署到github\nhuahuipj.github.io\nhexo史上最全搭建教程\n\n基本步骤1. 安装git2. 安装nodejs3. 安装hexo前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹Blog，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。\n输入命令安装：\nnpm install -g hexo-cli\n\n查看版本命令：hexo -v\n初始化hexo\nhexo init myblog\n这个myblog可以自己取什么名字都行，会在当前文件夹（Blog）目录下创建一个myblog文件夹\ncd myblog #进入这个myblog文件夹npm install\n新建完成后，指定文件夹目录下有：\n\nnode_modules: 依赖包\npublic：存放生成的页面\nscaffolds：生成文章的一些模板\nsource：用来存放你的文章\nthemes：主题\n_config.yml: 博客的配置文件\n\n打开hexo的服务，在浏览器输入 localhost:4000 就可以看到你生成的博客了\nhexo ghexo server\n使用ctrl+c可以把服务关掉\n4. GitHub创建个人仓库创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名\n5. 生成SSH添加到GitHub回到你的git bash中\ngit config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;\n这里的 yourname 输入你的GitHub用户名，youremail 输入你GitHub的邮箱（双引号保留）\n然后创建SSH，一路回车(应该有3次回车)\nssh-keygen -t rsa -C &quot;youremail&quot;\n终会生成一个文件在用户目录下，打开用户目录，找到.ssh\\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key将刚复制的内容粘贴到key那里，title随便填，保存\n测试是否成功\n$ ssh -T git@github.com # 注意邮箱地址不用改\n如果提示Are you sure you want to continue connecting (yes&#x2F;no)? 输入yes，然后会看到：Hi H-Sanae! You’ve successfully authenticated, but GitHub does not provide shell access.看到这个信息说明SSH已配置成功！\n6. 将hexo部署到GitHub打开站点配置文件 _config.yml，翻到最后，修改为:(YourgithubName就是你的GitHub账户)\ndeploy:  type: git  repo: https://github.com/YourgithubName/YourgithubName.github.io.git  branch: master\nbranch 填你刚刚创建GitHub仓库的默认分支名称，看下是master还是main，不要填错了，还要注意一下，冒号后面加一个空格\n这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub\nnpm install hexo-deployer-git --save\n然后\nhexo cleanhexo ghexo d\n\n到此完成，过一会儿就可以在http://yourname.github.io 这个网站看到你的博客了！\n注意因为从hexo提交代码时会把你以前的所有代码都删掉，在上传代码到github之前，要记得先把以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的）。\n相关命令http://localhost:4000\nhexo clean   #清除缓存文件 db.json 和已生成的静态文件 publichexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)hexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)\n\n常用命令\nhexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）hexo deploy #部署到GitHubhexo help  # 查看帮助hexo version  #查看Hexo的版本\n\n缩写\nhexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy\n\n组合命令\nhexo s -g #生成并本地预览hexo d -g #生成并上传\n\n主题设置diaspora主题\n根目录全局配置文件_config.yml1、所有的配置“:”符号后面都要带空格，否则执行本地测试直接失败。2、language是设置语言。zh-Hans是中文。3、如果设置zh-Hans后仍出现乱码问题。需要更改文件的字符编码集为UTF-8，方法很多。\n写博客定位到我们的hexo根目录，执行命令：\nhexo new &#x27;my-first-blog&#x27;\nhexo会帮我们在_posts下生成相关md文件我们只需要打开这个文件就可以开始写博客了当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间一般完整格式如下：\n---title: postName #文章页面上的显示名称，一般是中文date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改categories: 默认分类 #分类tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面---以下是正文","categories":["笔记"],"tags":["博客","hexo","github"]}]