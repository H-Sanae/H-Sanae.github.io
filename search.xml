<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Obsidian+Hexo图片管理方案</title>
    <url>/2025/06/17/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/Hexo+Obsidian%E5%9B%BE%E7%89%87%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<h1 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h1><p>主要参考：<a href="https://phakeandy.github.io/2024/05/03/Hexo-Obsidian%EF%BC%9A%E8%A7%A3%E5%86%B3%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/">Hexo + Obsidian：解决图片无法显示问题 | andy’s blog</a></p>
<h1 id="Obsidian配置"><a href="#Obsidian配置" class="headerlink" title="Obsidian配置"></a>Obsidian配置</h1><p>可选参考：<a href="https://blog.csdn.net/qq_52357217/article/details/127562163">如何让Obsidian的图片存储形式设置为 .&#x2F;${filename}.assets</a></p>
<h2 id="设置obsidian仓库"><a href="#设置obsidian仓库" class="headerlink" title="设置obsidian仓库"></a>设置obsidian仓库</h2><p>此方法只对一个文章仓库有效，即将hexo博客根目录同时设置为obsidian的文章根目录，方法为使用obsidian打开博客根目录（_config.yml文件所在目录，有一个source文件夹）<br><img src="/../../images/Hexo+Obsidian%E5%9B%BE%E7%89%87%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88/file-20250617212712587.png"></p>
<h2 id="obsidian安装插件-Custom-Attachment-Location"><a href="#obsidian安装插件-Custom-Attachment-Location" class="headerlink" title="obsidian安装插件 Custom Attachment Location"></a>obsidian安装插件 Custom Attachment Location</h2><p>设置→第三方插件→关闭安全模式→社区插件市场→浏览→输入Custom Attachment Location→点击安装并启动</p>
<h3 id="设置-Location-for-New-Attachments"><a href="#设置-Location-for-New-Attachments" class="headerlink" title="设置 Location for New Attachments"></a>设置 Location for New Attachments</h3><p>设置为<code>source/images/$&#123;filename&#125;</code><br>即将粘贴在文章中的图片保存在文章根目录（也是博客根目录）下的source文件夹下的images文件夹下的一个文件夹中（以当前笔记文件名命名）</p>
<p>tips:<br>.&#x2F;为当前笔记所在目录，${filename}为当前笔记文件名<br>设置为 .&#x2F;${filename} 即将图片放在当前笔记目录下的同名文件内<br>.&#x2F;assets&#x2F;${filename} 将图片放在当前笔记目录下的assets目录下的同名目录（在笔记目录下设置一个assets文件夹用于存放各笔记的图片，防止同目录下笔记过多导致图片文件夹也多）笔者本来打算这样管理文章图片的，但目前并没有找到使其与hexo兼容的方法，故放弃，改用以上方法</p>
<h2 id="obsidian设置文件与链接"><a href="#obsidian设置文件与链接" class="headerlink" title="obsidian设置文件与链接"></a>obsidian设置文件与链接</h2><p><img src="/../../images/Hexo+Obsidian%E5%9B%BE%E7%89%87%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88/file-20250617214538889.png"><br>以上配置完成后即可使图片正常在网页中显示<br>图片链接类似如下：<br><code>\![]\(../../images/文章名称/图片名称.png)</code></p>
<p>在博客目录下打开git终端，使用<code>hexo s -g</code>命令后可在<code>http://127.0.0.1:4000/</code>里验证图片是否显示</p>
<h1 id="Hexo端配置（可选，与上文无关）"><a href="#Hexo端配置（可选，与上文无关）" class="headerlink" title="Hexo端配置（可选，与上文无关）"></a>Hexo端配置（可选，与上文无关）</h1><p><a href="https://hexo.io/zh-cn/docs/asset-folders">资源文件夹 | Hexo</a><br>修改 <code>_config.yml</code> 文件中的这个选项，这样在使用命令生成博客md文件时可以生成一个同名的资源目录，用于存放同名文章使用的资产，此法也可以实现图片的显示，<del>但似乎只有通过命令生成的才有效，且只能在<code>/source/_posts/</code>下保存</del></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true  </span><br><span class="line">marked: # 如果原本有就更改下面的这些选项，如果没有就添加  </span><br><span class="line">  prependRoot: true  </span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure>
<p>该配置完成后使用<code>hexo new post &lt;文章名&gt;</code>就会在 <code>/source/_posts/</code> 路径下新建 <code>&lt;文章名&gt;.md</code> 文件和同名资产文件夹，然后在obsidian中选择打开刚刚生成的md文件写作时也能成功匹配粘贴的图片。</p>
<h1 id="更通用的方案"><a href="#更通用的方案" class="headerlink" title="更通用的方案"></a>更通用的方案</h1><p>1.做好上面的hexo配置<br>2.安装好Custom Attachment Location插件并启用<br>3.插件选项Location for New Attachments设置为<code>./$&#123;filename&#125;</code><br>4.关闭obsidian的wiki链接（同上文设置文件与链接）</p>
<p>完成后便能实现在往文章粘贴图片时，将其存到文章同级的同名文件夹下，且能够在网页中正常显示（支持多层文件夹，即你的md文件位置可为myblog\source_posts\subdir1\subdir2\文章名.md，此时图片保存路径为myblog\source_posts\subdir1\subdir2\文章名\图片名.jpg）</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>obsidian</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>上传代码仓库到Gitee和Github</title>
    <url>/2025/06/11/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93%E5%88%B0Gitee%E5%92%8CGithub/</url>
    <content><![CDATA[<h1 id="Linux上传到Gitee"><a href="#Linux上传到Gitee" class="headerlink" title="Linux上传到Gitee"></a>Linux上传到Gitee</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>如果你的系统尚未安装 Git，请先执行以下命令进行安装</p>
<h3 id="安装Git工具"><a href="#安装Git工具" class="headerlink" title="安装Git工具"></a>安装Git工具</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Ubuntu/Debian系统 </span></span><br><span class="line"><span class="built_in">sudo</span> apt-get update </span><br><span class="line"><span class="built_in">sudo</span> apt-get install git </span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS/RHEL系统 </span></span><br><span class="line"><span class="built_in">sudo</span> yum update </span><br><span class="line"><span class="built_in">sudo</span> yum install git </span><br><span class="line"></span><br><span class="line"><span class="comment"># Arch Linux系统 </span></span><br><span class="line"><span class="built_in">sudo</span> pacman -S git</span><br></pre></td></tr></table></figure>

<h3 id="配置-Git-基本信息"><a href="#配置-Git-基本信息" class="headerlink" title="配置 Git 基本信息"></a>配置 Git 基本信息</h3><p>安装完成后，需要配置你的用户名和邮箱，这将显示在你的提交记录中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span> </span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱地址&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="在Gitee上创建仓库"><a href="#在Gitee上创建仓库" class="headerlink" title="在Gitee上创建仓库"></a>在Gitee上创建仓库</h3><p>忽略</p>
<h3 id="SSH方式"><a href="#SSH方式" class="headerlink" title="SSH方式"></a>SSH方式</h3><p>SSH 方式可以避免每次推送都输入用户名和密码，提高效率：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成SSH密钥（如果没有） </span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱地址&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看公钥 </span></span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub </span><br><span class="line"><span class="comment"># 将输出的公钥复制到Gitee的SSH公钥设置中</span></span><br></pre></td></tr></table></figure>

<p>验证连接</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure>
<p>看到欢迎信息即表示成功</p>
<p>在下一步之前，需要有一个代码仓库，可以先从git上克隆一个到本机（空仓库也行），或者自行<code>git init</code>命令将文件夹变为一个git仓库</p>
<p>设置完成后，进入代码仓库文件夹，将这个远程仓库地址改为 SSH 形式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote set-url origin git@gitee.com:你的用户名/你的仓库名.git</span><br></pre></td></tr></table></figure>
<h4 id="复用已有密钥（没弄）"><a href="#复用已有密钥（没弄）" class="headerlink" title="复用已有密钥（没弄）"></a>复用已有密钥（没弄）</h4><h2 id="将代码上传到远程仓库（gitee）"><a href="#将代码上传到远程仓库（gitee）" class="headerlink" title="将代码上传到远程仓库（gitee）"></a>将代码上传到远程仓库（gitee）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入克隆的仓库目录</span></span><br><span class="line"><span class="built_in">cd</span> 你的仓库名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改文件后，添加到暂存区</span></span><br><span class="line">git add 修改的文件 <span class="comment">#可以提交单个文件</span></span><br><span class="line">git add * <span class="comment">#也可以提交所有文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交修改</span></span><br><span class="line">git commit -m <span class="string">&quot;修改说明&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送到Gitee</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>gitee</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub+Hexo博客创建</title>
    <url>/2025/06/07/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/GitHub+Hexo%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h1><h2 id="从0开始到部署到github"><a href="#从0开始到部署到github" class="headerlink" title="从0开始到部署到github"></a>从0开始到部署到github</h2><ul>
<li><a href="https://huahuipj.github.io/2021/08/20/shi-yong-github-bu-shu-yi-ge-jian-dan-de-bo-ke/">huahuipj.github.io</a></li>
<li><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165856718216782391857659%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165856718216782391857659&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-82729029-null-null.142%5Ev33%5Eexperiment_2_v1,185%5Ev2%5Econtrol&utm_term=hexo&spm=1018.2226.3001.4187">hexo史上最全搭建教程</a></li>
<li><a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></li>
</ul>
<h2 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h2><h3 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1. 安装git"></a>1. 安装git</h3><h3 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2. 安装nodejs"></a>2. 安装nodejs</h3><h3 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h3><p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹Blog，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。</p>
<p>输入命令安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>查看版本命令：<code>hexo -v</code></p>
<p>初始化hexo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init myblog</span><br></pre></td></tr></table></figure>
<p>这个myblog可以自己取什么名字都行，会在当前文件夹（Blog）目录下创建一个myblog文件夹</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> myblog <span class="comment">#进入这个myblog文件夹</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>新建完成后，指定文件夹目录下有：</p>
<ul>
<li>node_modules: 依赖包</li>
<li>public：存放生成的页面</li>
<li>scaffolds：生成文章的一些模板</li>
<li>source：用来存放你的文章</li>
<li>themes：主题</li>
<li>_config.yml: 博客的配置文件</li>
</ul>
<p>打开hexo的服务，在浏览器输入 localhost:4000 就可以看到你生成的博客了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p>使用ctrl+c可以把服务关掉</p>
<h3 id="4-GitHub创建个人仓库"><a href="#4-GitHub创建个人仓库" class="headerlink" title="4. GitHub创建个人仓库"></a>4. GitHub创建个人仓库</h3><p>创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名</p>
<h3 id="5-生成SSH添加到GitHub"><a href="#5-生成SSH添加到GitHub" class="headerlink" title="5. 生成SSH添加到GitHub"></a>5. 生成SSH添加到GitHub</h3><p>回到你的git bash中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure>
<p>这里的 yourname 输入你的GitHub用户名，youremail 输入你GitHub的邮箱（双引号保留）</p>
<p>然后创建SSH，一路回车(应该有3次回车)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure>
<p>终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key<br>将刚复制的内容粘贴到key那里，title随便填，保存</p>
<p>测试是否成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com <span class="comment"># 注意邮箱地址不用改</span></span><br></pre></td></tr></table></figure>
<p>如果提示Are you sure you want to continue connecting (yes&#x2F;no)? 输入yes，然后会看到：<br>Hi H-Sanae! You’ve successfully authenticated, but GitHub does not provide shell access.<br>看到这个信息说明SSH已配置成功！</p>
<h3 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6. 将hexo部署到GitHub"></a>6. 将hexo部署到GitHub</h3><p>打开站点配置文件 <code>_config.yml</code>，翻到最后，修改为:<br>(YourgithubName就是你的GitHub账户)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p><code>branch</code> 填你刚刚创建<code>GitHub</code>仓库的默认分支名称，看下是<code>master</code>还是<code>main</code>，不要填错了，还要注意一下，冒号后面加一个空格</p>
<p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>然后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>到此完成，过一会儿就可以在<code>http://yourname.github.io</code> 这个网站看到你的博客了！</p>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>因为从hexo提交代码时会把你以前的所有代码都删掉，在上传代码到github之前，要记得先把以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的）。</p>
<h1 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h1><p><a href="http://localhost:4000/">http://localhost:4000</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean   #清除缓存文件 db.json 和已生成的静态文件 public</span><br><span class="line">hexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span><br><span class="line">hexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span><br></pre></td></tr></table></figure>

<p>常用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;postName&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">&quot;pageName&quot;</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo server <span class="comment">#开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span></span><br><span class="line">hexo deploy <span class="comment">#部署到GitHub</span></span><br><span class="line">hexo <span class="built_in">help</span>  <span class="comment"># 查看帮助</span></span><br><span class="line">hexo version  <span class="comment">#查看Hexo的版本</span></span><br></pre></td></tr></table></figure>

<p>缩写</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>

<p>组合命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s -g #生成并本地预览</span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure>

<h1 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h1><p><a href="https://github.com/Fechin/hexo-theme-diaspora">diaspora主题</a><br><a href="https://butterfly.js.org/posts/4aa8abbe/">Butterfly 文檔(三) 主題配置 | Butterfly</a></p>
<h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2><p><a href="https://blog.csdn.net/qq_36759224/article/details/85420403">Hexo博客优化之博客美化系列</a></p>
<h2 id="根目录全局配置文件-config-yml"><a href="#根目录全局配置文件-config-yml" class="headerlink" title="根目录全局配置文件_config.yml"></a>根目录全局配置文件_config.yml</h2><p>1、所有的配置“:”符号后面都要带空格，否则执行本地测试直接失败。<br>2、language是设置语言。zh-Hans是中文。<br>3、如果设置zh-Hans后仍出现乱码问题。需要更改文件的字符编码集为UTF-8，方法很多。</p>
<h1 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h1><p>定位到我们的hexo根目录，执行命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &#x27;my-first-blog&#x27;</span><br></pre></td></tr></table></figure>
<p>hexo会帮我们在<code>_posts</code>下生成相关md文件<br>我们只需要打开这个文件就可以开始写博客了<br>当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间<br>一般完整格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: postName #文章页面上的显示名称，一般是中文</span><br><span class="line">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改</span><br><span class="line">categories: 默认分类 #分类</span><br><span class="line">tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格</span><br><span class="line">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</span><br><span class="line">---</span><br><span class="line">以下是正文</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络相关</title>
    <url>/2025/08/01/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<h1 id="计算机网络的OSI七层模型"><a href="#计算机网络的OSI七层模型" class="headerlink" title="计算机网络的OSI七层模型"></a>计算机网络的OSI七层模型</h1><p><a href="https://blog.csdn.net/m0_62006803/article/details/134516305">https://blog.csdn.net/m0_62006803/article/details/134516305</a></p>
<p><strong>口诀：物-数-网-传-会-表-应</strong></p>
<ul>
<li>物理层（Physical Layer）</li>
<li>数据链路层（Data Link Layer）</li>
<li>网络层（Network Layer）</li>
<li>传输层（Transport Layer）</li>
<li>会话层（Session Layer）</li>
<li>表示层（Presentation Layer）</li>
<li>应用层（Application Layer）</li>
</ul>
<img src="/2025/08/01/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9B%B8%E5%85%B3/file-20250801094629861.png" class="">

<h1 id="TCP与UDP的位置及其区别"><a href="#TCP与UDP的位置及其区别" class="headerlink" title="TCP与UDP的位置及其区别"></a>TCP与UDP的位置及其区别</h1><h2 id="tcp与udp的位置"><a href="#tcp与udp的位置" class="headerlink" title="tcp与udp的位置"></a>tcp与udp的位置</h2><p>TCP和UDP都是传输层协议，处于OSI参考模型的第四层。在TCP&#x2F;IP协议栈中，TCP和UDP也位于网络层和应用层之间，负责提供端到端的数据传输服务。其中，TCP是一种面向连接的协议，提供可靠的数据传输服务，而UDP则是一种无连接的协议，提供不可靠但高效的数据传输服务。由于UDP比较简单，UDP头包含很少的字节，比TCP负载消耗少。</p>
<h2 id="tcp与udp的区别"><a href="#tcp与udp的区别" class="headerlink" title="tcp与udp的区别"></a>tcp与udp的区别</h2><ul>
<li><p><strong>连接导向 vs 无连接</strong>：TCP是一种面向连接的协议，通信双方在传输数据前需要先建立连接，然后再进行数据传输，最后释放连接；而UDP是无连接的，通信双方直接发送数据包，不需要建立连接。</p>
</li>
<li><p><strong>可靠性</strong>：TCP提供可靠的数据传输，通过序号、确认和重传机制来确保数据的完整性和顺序性；而UDP不提供可靠性保证，数据包可能会丢失或者乱序到达。</p>
</li>
<li><p><strong>拥塞控制</strong>：TCP具有拥塞控制机制，可以根据网络情况动态调整传输速率，以避免网络拥塞；UDP没有拥塞控制机制，数据包会以最大速率发送，可能导致网络拥塞。</p>
</li>
<li><p><strong>数据量限制</strong>：TCP没有固定的数据包大小限制，可以根据需要动态调整；而UDP有固定的数据包大小限制，每个数据包的大小都有一个上限。TCP的头部开销大，UDP的头部开销小。</p>
</li>
<li><p><strong>应用场景</strong>：TCP是面向字节流的，UDP是面向报文的。TCP适用于要求可靠传输、顺序传送的应用，如文件传输、邮件等；UDP适用于实时性要求高、可以容忍少量数据丢失的应用，如音频、视频流等。</p>
</li>
</ul>
<p>总的来说，TCP和UDP各有优势，适用于不同的应用场景。TCP适合对数据可靠性要求高的场景，而UDP适合对实时性要求高的场景。在实际应用中，根据具体需求选择合适的协议非常重要。</p>
<h1 id="三次握手、四次挥手"><a href="#三次握手、四次挥手" class="headerlink" title="三次握手、四次挥手"></a>三次握手、四次挥手</h1><p><a href="https://www.jianshu.com/p/a9e24a6e2bef">三次握手、七次握手、四次挥手 - 简书</a><br>TCP 中的数据传输、连接建立与终止都由特定控制参数管理，控制参数有以下这些：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>用途</th>
</tr>
</thead>
<tbody><tr>
<td>SYN</td>
<td>用于启动和建立连接时，同步设备之间的序列号。0到2^32 - 1的随机数。</td>
</tr>
<tr>
<td>ACK</td>
<td>向另一端确认已经收到 SYN，数值为收到 SYN 增一。</td>
</tr>
<tr>
<td>SYN-ACK</td>
<td>确认之前收到了 SYN，数值为自定义值。</td>
</tr>
<tr>
<td>FIN</td>
<td>终止连接。</td>
</tr>
<tr>
<td>RST</td>
<td>重置连接。</td>
</tr>
</tbody></table>
<h2 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h2><p>建立 TCP 连接需要三次握手：</p>
<ol>
<li>客户端想要连接服务端时，向服务端发送 SYN message。Message 还包含 sequence number（32位的随机数），ACK 为0，window size、最大 segment 大小。例如，如果 window size 是 2000 bits，最大 segment 大小是 200 bits，则最大可传输 segments 是 10 data。</li>
<li>服务端收到客户端 synchronization request 后，回复客户端 SYN 和 ACK。ACK 数值是收到的 SYN 加一。例如客户端发送的 SYN 是 1000，则服务端回复的 ACK 是 1001。如果服务端也想建立连接，回复中还会包括一个 SYN，这里的 SYN 是另一随机数，与客服端的 SYN 不相同。这一阶段完成时，客户端与服务端的连接已经建立。</li>
<li>收到服务端的 SYN 后，客户端回复 ACK，ACK 值是 SYN 值加一。这一过程完成后，服务端与客户端的连接也建立了起来。</li>
</ol>
<p>TCP 连接的双方通过三次握手确定 TCP 连接的初始序列号、窗口大小以及最大数据段，这样通信双方就能利用连接中的初始序列号保证双方数据段的不重不漏，通过窗口大小控制流量，并使用最大数据段避免 IP 协议对数据包分片。</p>
<p>换个角度看为什么需要三次握手？客户端和服务端通信前要进行连接，三次握手就是为了确保自己和对方的收发能力是正常的。</p>
<ol>
<li>第一次握手：客户端发送、服务端接收网络包，服务端可以得出：客户端发送能力、服务端接收能力是正常的。</li>
<li>第二次握手：服务端发送、客户端接收网络包。从客户端的视角来看，我接收到了服务端发送的响应数据包，说明服务端收到了第一次握手时我发出的网络包，且收到请求后进行了响应，这说明服务端的接收、发送能力正常，我的发送、接收能力正常。</li>
<li>第三次握手：客户端发送、服务端接收网络包，这样服务端就能得出结论：客户端的接收、发送能力正常，服务端的发送、接收能力正常。第一次、二次握手后，服务端并不知道客户端的接收能力，以及自己的发送能力是否正常。第三次握手后，这些能力才得以确认。</li>
</ol>
<p>三次握手后，客户端、服务端才确认了自己的接收、发送能力均是正常的。</p>
<h2 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h2><p>建立连接时需要发送三个 packet，但终止连接时需要四个 packet，也称为四次挥手。因为 TCP 连接是全双工的，每个方向都必须独立终止。</p>
<p>终止 TCP 连接的四次挥手：</p>
<ol>
<li>第一次挥手：客户端想要终止连接时，向服务端发送 FIN。该 segment 有两个功能：<ul>
<li>FIN 用于告诉服务端不会再向其发送数据。</li>
<li>FIN 中的 ACK 标记要终止的连接。</li>
</ul>
</li>
<li>第二次挥手：服务端收到客户端终止请求后，回复 ACK 确认 FIN。</li>
<li>第三次挥手：TCP 的连接是相互独立的。因此，服务端也需要向客户端发送 FIN。</li>
<li>第四次挥手：客户端收到服务端的 FIN 后，回复 ACK 确认，序列号增一。</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>客户端想要通过 HTTP 请求访问服务端时，需要经过三次握手；通过 HTTPS 访问服务端时，需要额外增加四次握手。</p>
<p>总结一下 HTTP 建立连接、终止连接：</p>
<ul>
<li>TCP 协议需要通过三次握手建立可靠连接。</li>
<li>想要建立 HTTPS 安全连接，需要在 TCP 可靠连接基础上使用 TLS 协议。TLS 协议需要四次握手才能建立安全连接。</li>
<li>终止 TCP 可靠连接时需要四次挥手。</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>6.24 Hadoop部署</title>
    <url>/2025/06/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/6.24%20Hadoop%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h1 id="Hadoop简介"><a href="#Hadoop简介" class="headerlink" title="Hadoop简介"></a>Hadoop简介</h1><ul>
<li>Hadoop是一个由Apache基金会所开发的分布式系统基础架构</li>
<li>主要解决，海量数据的存储和海量数据的分析计算问题</li>
<li>广义上来说，Hadoop通常是指一个更广泛的概念-Hadoop生态圈</li>
</ul>
<h2 id="分布式存储"><a href="#分布式存储" class="headerlink" title="分布式存储"></a>分布式存储</h2><p>Hadoop 的分布式存储主要基于 HDFS（分布式文件系统）:<br>HDFS将数据分割成多个数据块（block），这些数据块分散存储在集群中的不同节点上。每个数据块会有多个副本，通常默认是 3 个副本.采用分布式存储在不同的节点上，提高了数据的可靠性和容错性。</p>
<p>Hadoop的分布式核心组件是MapReduce编程模型:<br>在MapReduce任务中，数据被切分为多个任务，每个任务由或多个节点并行。每个节点负责将输入数据映射为键-值对生成中间结果。最后，中间结果按照键的排序进行合并和归并。</p>
<h1 id="Hadoop组件"><a href="#Hadoop组件" class="headerlink" title="Hadoop组件"></a>Hadoop组件</h1><h2 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h2><p>HDFS组件用于存储数据,主要由NameNode,DataNode,SecondaryNameNode 组成</p>
<ul>
<li><p><strong>NameNode (nn)</strong>: 存储文件的元数据，如文件名，文件目录结构，文件属性 (生成时间、副本数、文件权限)，以及每个文件的块列表和块所在的DataNode等。</p>
</li>
<li><p><strong>DataNode(dn)</strong>: 在本地文件系统存储文件块数据，以及块数据的校验。</p>
</li>
<li><p><strong>SecondaryNameNode(2nn)</strong>: 每隔一段时间对NameNode元数据进行备份</p>
</li>
</ul>
<h2 id="Yarn"><a href="#Yarn" class="headerlink" title="Yarn"></a>Yarn</h2><p>Yarn资源调度负责硬件资源管理,主要由:ResourceManager,NodeManager,ApplicationMaster组成</p>
<ul>
<li><p><strong>ResourceManager</strong> (资源管理器):YARN集群中的中心调度器和资源管理器。负责整个集群的资源分配和调度 监控集群中的计算资源任务的运行状态</p>
</li>
<li><p><strong>NodeManager</strong> (节点管理器):每个计算节点上运行的代理程序负责管理和监控节点上的资源和任务。接收来自RM的任务调度请求;启动、停止和监控任务的执行;发送节点的状态和可用资源报告</p>
</li>
<li><p><strong>ApplicationMaster</strong> (应用程序管理器)：每个应用程序在YARN中都有一个对应的AM.AppMaster负责协调和管理应用程序的执行。它与RM交互申请资源并监任务的执行。它还负责任务的划分和调度、容错和恢复、进度跟踪等。</p>
</li>
</ul>
<h1 id="部署完成截图"><a href="#部署完成截图" class="headerlink" title="部署完成截图"></a>部署完成截图</h1><img src="/2025/06/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/6.24%20Hadoop%E9%83%A8%E7%BD%B2/file-20250624215644108.png" class="">
<img src="/2025/06/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/6.24%20Hadoop%E9%83%A8%E7%BD%B2/file-20250624220020312.png" class="">
<img src="/2025/06/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/6.24%20Hadoop%E9%83%A8%E7%BD%B2/file-20250624220034194.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>6.25 Hive安装、配置beeline</title>
    <url>/2025/06/25/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/6.25%20Hive%E5%AE%89%E8%A3%85%E3%80%81%E9%85%8D%E7%BD%AEbeeline/</url>
    <content><![CDATA[<h1 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下载安装源</span></span><br><span class="line">wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 mysql 源</span></span><br><span class="line">yum localinstall mysql57-community-release-el7-11.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入key</span></span><br><span class="line">rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改国内源</span></span><br><span class="line">vim /etc/yum.repos.d/mysql-community.repo</span><br><span class="line"></span><br><span class="line">修改 baseurl 为 https://mirrors.cloud.tencent.com/mysql/yum/mysql-5.7-community-el7-x86_64/</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装mysql</span></span><br><span class="line">yum install -y mysql-community-server</span><br></pre></td></tr></table></figure>

<h1 id="安装Hive"><a href="#安装Hive" class="headerlink" title="安装Hive"></a>安装Hive</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#解压apache-hive-3.1.2-bin.tar.gz到/opt/module/目录下面</span></span><br><span class="line">tar -zxvf apache-hive-3.1.2-bin.tar.gz -C /opt/module/</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改`/etc/profile.d/my_env.sh`，添加环境变量</span></span><br><span class="line">vim /etc/profile.d/my_env.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加内容:</span></span><br><span class="line"><span class="comment">#HIVE_HOME</span></span><br><span class="line"><span class="built_in">export</span> HIVE_HOME=/opt/module/apache-hive-3.1.2-bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HIVE_HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#刷新环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<h1 id="配置hive-site-xml"><a href="#配置hive-site-xml" class="headerlink" title="配置hive-site.xml"></a>配置hive-site.xml</h1><p>路径：&#x2F;opt&#x2F;module&#x2F;apache-hive-3.1.2-bin&#x2F;conf&#x2F;<br>新建文件 vim hive-site.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span> </span><br><span class="line">  <span class="comment">&lt;!--jdbc连接的URL--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://hadoop100:3306/metastore?useSSL=false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--jdbc连接的Driver--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--jdbc连接的username--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--jdbc连接的password--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--Hive元数据存储版本的验证--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.schema.verification<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--元数据存储授权--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.event.db.notification.api.auth<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--Hive默认在HDFS的工作目录--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.warehouse.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/user/hive/warehouse<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.server2.enable.doAs<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.exec.mode.local.auto<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>mapred.map.child.java.opts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>-Xmx2048m<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>初始化Hive元数据库</strong><br><code>schematool -initSchema -dbType mysql -verbose</code></p>
<h1 id="优化mapreduce"><a href="#优化mapreduce" class="headerlink" title="优化mapreduce"></a>优化mapreduce</h1><p>vim $HADOOP_HOME&#x2F;etc&#x2F;hadoop&#x2F;mapred-site.xml<br>增加配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.map.memory.mb<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>1536<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.map.java.opts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>-Xmx1024M<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.reduce.memory.mb<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>3072<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.reduce.java.opts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>-Xmx2560M<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="配置beeline"><a href="#配置beeline" class="headerlink" title="配置beeline"></a>配置beeline</h1><p>配置core-site.xml 使其任意节点都可以访问hadoop<br>vim $HADOOP_HOME&#x2F;etc&#x2F;hadoop&#x2F;core-site.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.root.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="myhadoop-sh"><a href="#myhadoop-sh" class="headerlink" title="myhadoop.sh"></a><strong>myhadoop.sh</strong></h1><p>路径：&#x2F;opt&#x2F;module&#x2F;hadoop-3.1.3&#x2F;sbin&#x2F;myhadoop.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;No Args Input...&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> ;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;start&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; =================== 启动 hadoop集群 ===================&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; --------------- 启动 hdfs ---------------&quot;</span></span><br><span class="line">    ssh hadoop100 <span class="string">&quot;/opt/module/hadoop-3.1.3/sbin/start-dfs.sh&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; --------------- 启动 yarn ---------------&quot;</span></span><br><span class="line">    ssh hadoop101 <span class="string">&quot;/opt/module/hadoop-3.1.3/sbin/start-yarn.sh&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; --------------- 启动 historyserver ---------------&quot;</span></span><br><span class="line">    ssh hadoop100 <span class="string">&quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon start historyserver&quot;</span></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;stop&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; =================== 关闭 hadoop集群 ===================&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; --------------- 关闭 historyserver ---------------&quot;</span></span><br><span class="line">    ssh hadoop100 <span class="string">&quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon stop historyserver&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; --------------- 关闭 yarn ---------------&quot;</span></span><br><span class="line">    ssh hadoop101 <span class="string">&quot;/opt/module/hadoop-3.1.3/sbin/stop-yarn.sh&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; --------------- 关闭 hdfs ---------------&quot;</span></span><br><span class="line">    ssh hadoop100 <span class="string">&quot;/opt/module/hadoop-3.1.3/sbin/stop-dfs.sh&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;status&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot; =================== hadoop集群状态 ===================&quot;</span></span><br><span class="line">   <span class="keyword">for</span> host <span class="keyword">in</span> hadoop100 hadoop101 hadoop102</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> =============== <span class="variable">$host</span> ===============</span><br><span class="line">        ssh <span class="variable">$host</span> jps</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;hive&quot;</span>)</span><br><span class="line">myhadoop.sh start</span><br><span class="line">myhadoop.sh status</span><br><span class="line"><span class="built_in">nohup</span> hiveserver2 &amp;</span><br><span class="line"><span class="built_in">tail</span> -f nohup.out</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">*)</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>

<h1 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h1><p><code>myhadoop.sh hive</code></p>
<p>（关机前需执行 <code>myhadoop.sh stop</code></p>
<p>beeline登录命令（另开窗口）：<br><code>beeline -u jdbc:hive2://hadoop100:10000/db_hive -n root -p root</code></p>
<p>退出：<code>!quit</code></p>
<h1 id="结果截图"><a href="#结果截图" class="headerlink" title="结果截图"></a>结果截图</h1><img src="/2025/06/25/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/6.25%20Hive%E5%AE%89%E8%A3%85%E3%80%81%E9%85%8D%E7%BD%AEbeeline/file-20250625202811902.png" class="">
<img src="/2025/06/25/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/6.25%20Hive%E5%AE%89%E8%A3%85%E3%80%81%E9%85%8D%E7%BD%AEbeeline/file-20250625204256364.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive复合数据类型、相关函数</title>
    <url>/2025/06/27/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/6.27%20Hive%E5%A4%8D%E5%90%88%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E7%9B%B8%E5%85%B3%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="Hive复合数据类型"><a href="#Hive复合数据类型" class="headerlink" title="Hive复合数据类型"></a>Hive复合数据类型</h1><p>通过以下三种复合类型，Hive 能够高效处理半结构化数据（如日志、JSON），避免频繁进行表连接操作</p>
<h2 id="array-数组"><a href="#array-数组" class="headerlink" title="array 数组"></a>array 数组</h2><p><code>array&lt;value数据类型&gt;</code><br>存储同类型元素的有序集合，元素通过索引访问（从 0 开始）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--查询复合数据</span></span><br><span class="line"><span class="keyword">select</span>  a_score[<span class="number">0</span>] <span class="keyword">from</span> student2</span><br><span class="line"></span><br><span class="line"><span class="comment">--构造复合数据-array</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">array</span>(值,值) <span class="keyword">from</span> student</span><br></pre></td></tr></table></figure>
<h2 id="struct-集合"><a href="#struct-集合" class="headerlink" title="struct 集合"></a>struct 集合</h2><p><code>struct&lt;key值:value数据类型,key值:value数据类型&gt;</code><br>存储不同类型字段的集合，每个字段有名称和类型，通过点号（<code>.</code>）访问</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--查询复合数据</span></span><br><span class="line"><span class="keyword">select</span>  s_score.chinese <span class="keyword">from</span> student2</span><br><span class="line"></span><br><span class="line"><span class="comment">--构造复合数据</span></span><br><span class="line"><span class="keyword">select</span> named_struct(key,<span class="keyword">value</span>,key,<span class="keyword">value</span>) <span class="keyword">from</span> student</span><br></pre></td></tr></table></figure>
<h2 id="map-字典"><a href="#map-字典" class="headerlink" title="map 字典"></a>map 字典</h2><p><code>map&lt;key数据类型,value数据类型&gt;</code><br>存储键值对（Key-Value）集合，键必须唯一，通过键访问值</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--查询复合数据</span></span><br><span class="line"><span class="keyword">select</span>  m_score[<span class="string">&#x27;语文&#x27;</span>] <span class="keyword">from</span> student2</span><br><span class="line"></span><br><span class="line"><span class="comment">--构造复合数据</span></span><br><span class="line"><span class="keyword">select</span> map(key,<span class="keyword">value</span>,key,<span class="keyword">value</span>) <span class="keyword">from</span> student</span><br></pre></td></tr></table></figure>

<h1 id="Hive内置函数"><a href="#Hive内置函数" class="headerlink" title="Hive内置函数"></a>Hive内置函数</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看系统自带的函数</span></span><br><span class="line">show <span class="built_in">functions</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示自带的函数的用法</span></span><br><span class="line">desc <span class="keyword">function</span> upper;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 详细显示自带的函数的用法</span></span><br><span class="line">desc <span class="keyword">function</span> extended upper;</span><br></pre></td></tr></table></figure>

<h1 id="user-info-txt数据清洗脚本"><a href="#user-info-txt数据清洗脚本" class="headerlink" title="user_info.txt数据清洗脚本"></a>user_info.txt数据清洗脚本</h1><p>pro_user_info.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json  </span><br><span class="line"><span class="keyword">import</span> re  </span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clean_data</span>(<span class="params">input_file, output_file</span>):  </span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(input_file, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> infile, \  </span><br><span class="line">            <span class="built_in">open</span>(output_file, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> outfile:  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> infile:  </span><br><span class="line">            <span class="comment"># 跳过空行  </span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> line.strip():  </span><br><span class="line">                <span class="keyword">continue</span>  </span><br><span class="line">  </span><br><span class="line">            <span class="comment"># 分割字段  </span></span><br><span class="line">            parts = line.strip().split(<span class="string">&#x27;\t&#x27;</span>)  </span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(parts) &lt; <span class="number">8</span>:  </span><br><span class="line">                <span class="keyword">continue</span>  </span><br><span class="line">  </span><br><span class="line">            <span class="comment"># 提取基础字段  </span></span><br><span class="line">            user_id = parts[<span class="number">0</span>]  </span><br><span class="line">            name = parts[<span class="number">1</span>]  </span><br><span class="line">            sex = parts[<span class="number">2</span>]  </span><br><span class="line">            age = parts[<span class="number">3</span>]  </span><br><span class="line">            address = parts[<span class="number">4</span>]  </span><br><span class="line">            udate = parts[<span class="number">5</span>]  </span><br><span class="line">            lev = parts[<span class="number">6</span>]  </span><br><span class="line">            json_str = parts[<span class="number">7</span>]  </span><br><span class="line">  </span><br><span class="line">            <span class="comment"># 清洗日期字段 (保留日期部分)  </span></span><br><span class="line">            <span class="keyword">try</span>:  </span><br><span class="line">                udate = datetime.strptime(udate, <span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>).strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)  </span><br><span class="line">            <span class="keyword">except</span> ValueError:  </span><br><span class="line">                udate = <span class="string">&quot;1970-01-01&quot;</span>  <span class="comment"># 无效日期默认值  </span></span><br><span class="line">  </span><br><span class="line">            <span class="comment"># 解析JSON字段            try:  </span></span><br><span class="line">                info_data = json.loads(json_str)  </span><br><span class="line">            <span class="keyword">except</span> json.JSONDecodeError:  </span><br><span class="line">                <span class="comment"># 处理无效JSON格式  </span></span><br><span class="line">                info_data = &#123;  </span><br><span class="line">                    <span class="string">&quot;systemtype&quot;</span>: <span class="string">&quot;unknown&quot;</span>,  </span><br><span class="line">                    <span class="string">&quot;education&quot;</span>: <span class="string">&quot;unknown&quot;</span>,  </span><br><span class="line">                    <span class="string">&quot;marriage_status&quot;</span>: <span class="string">&quot;0&quot;</span>,  </span><br><span class="line">                    <span class="string">&quot;phonebrand&quot;</span>: <span class="string">&quot;unknown&quot;</span>  </span><br><span class="line">                &#125;  </span><br><span class="line">  </span><br><span class="line">            <span class="comment"># 构建复合数据类型  </span></span><br><span class="line">            <span class="comment"># 1. struct格式: 字段值逗号分隔            s_info = f&quot;&#123;info_data[&#x27;systemtype&#x27;]&#125;,&#123;info_data[&#x27;education&#x27;]&#125;,&quot; \  </span></span><br><span class="line">                     <span class="string">f&quot;<span class="subst">&#123;info_data[<span class="string">&#x27;marriage_status&#x27;</span>]&#125;</span>,<span class="subst">&#123;info_data[<span class="string">&#x27;phonebrand&#x27;</span>]&#125;</span>&quot;</span>  </span><br><span class="line">  </span><br><span class="line">            <span class="comment"># 2. map格式: key:value 逗号分隔  </span></span><br><span class="line">            m_info = <span class="string">&#x27;,&#x27;</span>.join([<span class="string">f&quot;<span class="subst">&#123;k&#125;</span>:<span class="subst">&#123;v&#125;</span>&quot;</span> <span class="keyword">for</span> k, v <span class="keyword">in</span> info_data.items()])  </span><br><span class="line">  </span><br><span class="line">            <span class="comment"># 3. array格式: 值按固定顺序逗号分隔  </span></span><br><span class="line">            a_info = <span class="string">f&quot;<span class="subst">&#123;info_data[<span class="string">&#x27;systemtype&#x27;</span>]&#125;</span>,&quot;</span> \  </span><br><span class="line">                     <span class="string">f&quot;<span class="subst">&#123;info_data[<span class="string">&#x27;education&#x27;</span>]&#125;</span>,&quot;</span> \  </span><br><span class="line">                     <span class="string">f&quot;<span class="subst">&#123;info_data[<span class="string">&#x27;marriage_status&#x27;</span>]&#125;</span>,&quot;</span> \  </span><br><span class="line">                     <span class="string">f&quot;<span class="subst">&#123;info_data[<span class="string">&#x27;phonebrand&#x27;</span>]&#125;</span>&quot;</span>  </span><br><span class="line">  </span><br><span class="line">            <span class="comment"># 构建清洗后的行  </span></span><br><span class="line">            cleaned_line = <span class="string">&#x27;\t&#x27;</span>.join([  </span><br><span class="line">                user_id, name, sex, age, address, udate, lev,  </span><br><span class="line">                s_info, m_info, a_info  </span><br><span class="line">            ])  </span><br><span class="line">  </span><br><span class="line">            outfile.write(cleaned_line + <span class="string">&#x27;\n&#x27;</span>)  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:  </span><br><span class="line">    input_file = <span class="string">&quot;user_info.txt&quot;</span>  </span><br><span class="line">    output_file = <span class="string">&quot;user_info_clean.txt&quot;</span>  </span><br><span class="line">    clean_data(input_file, output_file)  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;数据清洗完成! 输出文件: <span class="subst">&#123;output_file&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="上传数据"><a href="#上传数据" class="headerlink" title="上传数据"></a>上传数据</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hadoop dfs -<span class="built_in">mkdir</span> /data/user  <span class="comment"># 创建文件夹</span></span><br><span class="line">hdfs dfs -<span class="built_in">ls</span> /data/user  <span class="comment"># 查看文件夹</span></span><br><span class="line">hadoop dfs -put -f user_info_clean.txt /data/user <span class="comment">#上传数据文件 -f 覆盖上传</span></span><br></pre></td></tr></table></figure>

<h1 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span> user_info(</span><br><span class="line">    id <span class="type">int</span>,</span><br><span class="line">    name string,</span><br><span class="line">    sex string,</span><br><span class="line">    age <span class="type">int</span>,</span><br><span class="line">    address string,</span><br><span class="line">    udate <span class="type">date</span>,</span><br><span class="line">    lev <span class="type">int</span>,</span><br><span class="line">    s_info struct<span class="operator">&lt;</span>systemtype:string, education:string, marriage_status:string, phonebrand:string<span class="operator">&gt;</span>,</span><br><span class="line">    m_info map<span class="operator">&lt;</span>string,string<span class="operator">&gt;</span>,</span><br><span class="line">    a_info <span class="keyword">array</span><span class="operator">&lt;</span>string<span class="operator">&gt;</span></span><br><span class="line">)</span><br><span class="line"><span class="type">row</span> format delimited</span><br><span class="line">fields terminated <span class="keyword">by</span> <span class="string">&#x27;\t&#x27;</span></span><br><span class="line">collection items terminated <span class="keyword">by</span> <span class="string">&#x27;,&#x27;</span></span><br><span class="line">map keys terminated <span class="keyword">by</span> <span class="string">&#x27;:&#x27;</span></span><br><span class="line">lines terminated <span class="keyword">by</span> <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">location <span class="string">&#x27;/data/user&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--3.1 按月统计各个地区男女生人数</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    address `地区`,</span><br><span class="line">    date_format(udate,<span class="string">&#x27;yyyy-mm&#x27;</span>) `月份`,</span><br><span class="line">    <span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sex<span class="operator">=</span><span class="string">&#x27;male&#x27;</span> <span class="keyword">then</span> id <span class="keyword">end</span>) `男性人数`,</span><br><span class="line">    <span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sex<span class="operator">=</span><span class="string">&#x27;female&#x27;</span> <span class="keyword">then</span> id <span class="keyword">end</span>) `女性人数`</span><br><span class="line"><span class="keyword">from</span> user_info</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> address, date_format(udate, <span class="string">&#x27;yyyy-mm&#x27;</span>)</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> `地区`,`月份`;</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.2 统计各地区的不同手机型号使用人数,并按照老中青(35以下青年 男65岁以下女55岁以下中年 男65岁以上女55岁以上老年)年龄划分</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    address `地区`,</span><br><span class="line">    map(&quot;青&quot;, </span><br><span class="line">        <span class="built_in">count</span>(if(s_info.systemtype <span class="operator">=</span> <span class="string">&#x27;android&#x27;</span> <span class="keyword">and</span> </span><br><span class="line">                ((sex <span class="operator">=</span> <span class="string">&#x27;male&#x27;</span> <span class="keyword">and</span> age <span class="operator">&lt;</span> <span class="number">35</span>) <span class="keyword">or</span> (sex <span class="operator">=</span> <span class="string">&#x27;female&#x27;</span> <span class="keyword">and</span> age <span class="operator">&lt;</span> <span class="number">35</span>)), <span class="number">1</span>, <span class="keyword">null</span>)),</span><br><span class="line">        &quot;中&quot;, </span><br><span class="line">        <span class="built_in">count</span>(if(s_info.systemtype <span class="operator">=</span> <span class="string">&#x27;android&#x27;</span> <span class="keyword">and</span> </span><br><span class="line">                ((sex <span class="operator">=</span> <span class="string">&#x27;male&#x27;</span> <span class="keyword">and</span> age <span class="keyword">between</span> <span class="number">35</span> <span class="keyword">and</span> <span class="number">65</span>) <span class="keyword">or</span> (sex <span class="operator">=</span> <span class="string">&#x27;female&#x27;</span> <span class="keyword">and</span> age <span class="keyword">between</span> <span class="number">35</span> <span class="keyword">and</span> <span class="number">55</span>)), <span class="number">1</span>, <span class="keyword">null</span>)),</span><br><span class="line">        &quot;老&quot;, </span><br><span class="line">        <span class="built_in">count</span>(if(s_info.systemtype <span class="operator">=</span> <span class="string">&#x27;android&#x27;</span> <span class="keyword">and</span> </span><br><span class="line">                ((sex <span class="operator">=</span> <span class="string">&#x27;male&#x27;</span> <span class="keyword">and</span> age <span class="operator">&gt;</span> <span class="number">65</span>) <span class="keyword">or</span> (sex <span class="operator">=</span> <span class="string">&#x27;female&#x27;</span> <span class="keyword">and</span> age <span class="operator">&gt;</span> <span class="number">55</span>)), <span class="number">1</span>, <span class="keyword">null</span>))</span><br><span class="line">    ) `安卓使用人数`,</span><br><span class="line">    </span><br><span class="line">    map(</span><br><span class="line">        &quot;青&quot;, </span><br><span class="line">        <span class="built_in">count</span>(if(s_info.systemtype <span class="operator">=</span> <span class="string">&#x27;ios&#x27;</span> <span class="keyword">and</span> </span><br><span class="line">                ((sex <span class="operator">=</span> <span class="string">&#x27;male&#x27;</span> <span class="keyword">and</span> age <span class="operator">&lt;</span> <span class="number">35</span>) <span class="keyword">or</span> (sex <span class="operator">=</span> <span class="string">&#x27;female&#x27;</span> <span class="keyword">and</span> age <span class="operator">&lt;</span> <span class="number">35</span>)), <span class="number">1</span>, <span class="keyword">null</span>)),</span><br><span class="line">        &quot;中&quot;, </span><br><span class="line">        <span class="built_in">count</span>(if(s_info.systemtype <span class="operator">=</span> <span class="string">&#x27;ios&#x27;</span> <span class="keyword">and</span> </span><br><span class="line">                ((sex <span class="operator">=</span> <span class="string">&#x27;male&#x27;</span> <span class="keyword">and</span> age <span class="keyword">between</span> <span class="number">35</span> <span class="keyword">and</span> <span class="number">65</span>) <span class="keyword">or</span> (sex <span class="operator">=</span> <span class="string">&#x27;female&#x27;</span> <span class="keyword">and</span> age <span class="keyword">between</span> <span class="number">35</span> <span class="keyword">and</span> <span class="number">55</span>)), <span class="number">1</span>, <span class="keyword">null</span>)),</span><br><span class="line">        &quot;老&quot;, </span><br><span class="line">        <span class="built_in">count</span>(if(s_info.systemtype <span class="operator">=</span> <span class="string">&#x27;ios&#x27;</span> <span class="keyword">and</span> </span><br><span class="line">                ((sex <span class="operator">=</span> <span class="string">&#x27;male&#x27;</span> <span class="keyword">and</span> age <span class="operator">&gt;</span> <span class="number">65</span>) <span class="keyword">or</span> (sex <span class="operator">=</span> <span class="string">&#x27;female&#x27;</span> <span class="keyword">and</span> age <span class="operator">&gt;</span> <span class="number">55</span>)), <span class="number">1</span>, <span class="keyword">null</span>))</span><br><span class="line">    ) `ios使用人数`</span><br><span class="line"><span class="keyword">from</span> user_info</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> address;</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.3 统计不同地区,不同学历,使用的手机品牌(去重)</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    address `地区`,</span><br><span class="line">    s_info.education `学历`,</span><br><span class="line">    collect_list(s_info.phonebrand) `手机品牌列表`</span><br><span class="line"><span class="keyword">from</span> user_info</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> address, s_info.education;</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.4 统计不同等级,各个手机品牌的使用人数(需要行转列)</span></span><br><span class="line"><span class="keyword">with</span> brand_counts <span class="keyword">as</span> (</span><br><span class="line">  <span class="keyword">select</span></span><br><span class="line">    lev,</span><br><span class="line">    s_info.phonebrand <span class="keyword">as</span> phonebrand,</span><br><span class="line">    <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> cnt</span><br><span class="line">  <span class="keyword">from</span> user_info</span><br><span class="line">  <span class="keyword">where</span> s_info.phonebrand <span class="keyword">is</span> <span class="keyword">not null</span></span><br><span class="line">  <span class="keyword">group</span> <span class="keyword">by</span> lev, s_info.phonebrand</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">  lev,</span><br><span class="line">  str_to_map(concat_ws(<span class="string">&#x27;,&#x27;</span>, collect_list(concat(phonebrand, <span class="string">&#x27;:&#x27;</span>, cnt)))) <span class="keyword">as</span> phonebrand_list</span><br><span class="line"><span class="keyword">from</span> brand_counts</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> lev;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>Python连接Hive</title>
    <url>/2025/06/26/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/6.26%20Python%E8%BF%9E%E6%8E%A5Hive/</url>
    <content><![CDATA[<h1 id="hadoop上传数据"><a href="#hadoop上传数据" class="headerlink" title="hadoop上传数据"></a>hadoop上传数据</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hadoop dfs -<span class="built_in">mkdir</span> /emp</span><br><span class="line">hadoop dfs -put emp0901.txt /emp/</span><br><span class="line"></span><br><span class="line">hadoop dfs -<span class="built_in">mkdir</span> /student</span><br><span class="line">hadoop dfs -put student2.csv /student/</span><br></pre></td></tr></table></figure>

<h1 id="处理student2-txt表"><a href="#处理student2-txt表" class="headerlink" title="处理student2.txt表"></a>处理student2.txt表</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">transform_student_data</span>(<span class="params">input_file, output_file</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    将JSON格式的学生数据转换为CSV格式</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    参数:</span></span><br><span class="line"><span class="string">    input_file: 输入JSON数据文件路径</span></span><br><span class="line"><span class="string">    output_file: 输出CSV文件路径</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(input_file, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> infile, \</span><br><span class="line">                <span class="built_in">open</span>(output_file, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> outfile:</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 写入CSV表头</span></span><br><span class="line">            <span class="comment"># outfile.write(&quot;name,id,class_name,age,chinese,math,english,sex\n&quot;)</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> infile:</span><br><span class="line">                <span class="comment"># 解析JSON数据</span></span><br><span class="line">                student = json.loads(line.strip())</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 提取并处理分数数据</span></span><br><span class="line">                scores = student[<span class="string">&quot;score&quot;</span>]</span><br><span class="line">                score_dict = &#123;&#125;</span><br><span class="line">                <span class="keyword">for</span> subject_score <span class="keyword">in</span> scores.split(<span class="string">&#x27;|&#x27;</span>):</span><br><span class="line">                    subject, score = subject_score.split(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">                    score_dict[subject] = score</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 构造CSV行</span></span><br><span class="line">                csv_line = <span class="string">f&quot;<span class="subst">&#123;student[<span class="string">&#x27;name&#x27;</span>]&#125;</span>,<span class="subst">&#123;student[<span class="string">&#x27;id&#x27;</span>]&#125;</span>,<span class="subst">&#123;student[<span class="string">&#x27;class_name&#x27;</span>]&#125;</span>,&quot;</span> \</span><br><span class="line">                           <span class="string">f&quot;<span class="subst">&#123;student[<span class="string">&#x27;age&#x27;</span>]&#125;</span>,<span class="subst">&#123;score_dict.get(<span class="string">&#x27;语文&#x27;</span>, <span class="string">&#x27;&#x27;</span>)&#125;</span>,&quot;</span> \</span><br><span class="line">                           <span class="string">f&quot;<span class="subst">&#123;score_dict.get(<span class="string">&#x27;数学&#x27;</span>, <span class="string">&#x27;&#x27;</span>)&#125;</span>,<span class="subst">&#123;score_dict.get(<span class="string">&#x27;英语&#x27;</span>, <span class="string">&#x27;&#x27;</span>)&#125;</span>,&quot;</span> \</span><br><span class="line">                           <span class="string">f&quot;<span class="subst">&#123;student[<span class="string">&#x27;sex&#x27;</span>]&#125;</span>\n&quot;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 写入CSV文件</span></span><br><span class="line">                outfile.write(csv_line)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;转换成功! 结果已保存到: <span class="subst">&#123;output_file&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;处理过程中出错: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用示例</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    input_file = <span class="string">&quot;student2.txt&quot;</span>  <span class="comment"># 包含JSON数据的输入文件</span></span><br><span class="line">    output_file = <span class="string">&quot;student2.csv&quot;</span>  <span class="comment"># 输出CSV文件</span></span><br><span class="line"></span><br><span class="line">    transform_student_data(input_file, output_file)</span><br></pre></td></tr></table></figure>

<h1 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--创建emp表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span> emp(</span><br><span class="line">empno <span class="type">int</span>,</span><br><span class="line">ename string,</span><br><span class="line">job string,</span><br><span class="line">mgr <span class="type">int</span>,</span><br><span class="line">hiredate string,</span><br><span class="line">sal <span class="type">float</span>,</span><br><span class="line">comm <span class="type">float</span>,</span><br><span class="line">deptno <span class="type">int</span></span><br><span class="line">)</span><br><span class="line"><span class="type">row</span> format delimited</span><br><span class="line">fields terminated <span class="keyword">by</span> <span class="string">&#x27;;&#x27;</span></span><br><span class="line">lines terminated <span class="keyword">by</span> <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">location <span class="string">&#x27;/emp&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建student表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span> student(</span><br><span class="line">name string,</span><br><span class="line">id string,</span><br><span class="line">class_name string,</span><br><span class="line">age <span class="type">int</span>,</span><br><span class="line">chinese <span class="type">int</span>,</span><br><span class="line">math <span class="type">int</span>,</span><br><span class="line">english <span class="type">float</span>,</span><br><span class="line">sex string</span><br><span class="line">)</span><br><span class="line"><span class="type">row</span> format delimited</span><br><span class="line">fields terminated <span class="keyword">by</span> <span class="string">&#x27;,&#x27;</span></span><br><span class="line">lines terminated <span class="keyword">by</span> <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">location <span class="string">&#x27;/student&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="载入数据"><a href="#载入数据" class="headerlink" title="载入数据"></a>载入数据</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--加local是取linux系统的路径，不加是取hdfs文件系统的路径</span></span><br><span class="line">load data <span class="keyword">local</span> inpath <span class="string">&#x27;/root/student.csv&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> student</span><br><span class="line"></span><br><span class="line"><span class="comment">--一般不用values</span></span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student</span><br><span class="line"></span><br><span class="line"><span class="comment">--导出数据</span></span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">local</span> directory <span class="string">&#x27;/root/emp&#x27;</span></span><br><span class="line"><span class="type">row</span> format delimited fields terminated <span class="keyword">by</span> <span class="string">&#x27;|&#x27;</span> <span class="comment">--分隔符</span></span><br></pre></td></tr></table></figure>

<h1 id="Linux环境安装python"><a href="#Linux环境安装python" class="headerlink" title="Linux环境安装python"></a>Linux环境安装python</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf Python-3.9.10.tgz -C /opt/module/</span><br><span class="line"><span class="comment"># 支撑包</span></span><br><span class="line">yum install openssl-devel libffi-devel bzip2-devel gcc gcc-c++ wget -y</span><br><span class="line"><span class="comment"># 配置</span></span><br><span class="line"><span class="built_in">cd</span> /opt/module/Python-3.9.10/</span><br><span class="line">./configure --enable-optimizations</span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">make altinstall</span><br></pre></td></tr></table></figure>

<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line">vim  /etc/profile.d/my_env.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/opt/python39/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#生效 环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#或者进行软连接 配置 </span></span><br><span class="line"><span class="built_in">cp</span> libpython3.9.a  /usr/lib64/</span><br><span class="line"></span><br><span class="line"><span class="built_in">ln</span> -s /opt/module/Python-3.9.10/python /usr/bin/python3</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/bin/pip3.9 /usr/bin/pip3   </span><br></pre></td></tr></table></figure>

<h2 id="安装pyhive库"><a href="#安装pyhive库" class="headerlink" title="安装pyhive库"></a>安装pyhive库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install  -i https://mirrors.aliyun.com/pypi/simple/  thrift</span><br><span class="line">pip3 install  -i https://mirrors.aliyun.com/pypi/simple/  thrift-sasl</span><br><span class="line">pip3.9 install   -i https://mirrors.aliyun.com/pypi/simple/ PyHive</span><br><span class="line">pip3.9 install   -i https://mirrors.aliyun.com/pypi/simple/ PyM</span><br></pre></td></tr></table></figure>
<h2 id="使用测试"><a href="#使用测试" class="headerlink" title="使用测试"></a>使用测试</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyhive <span class="keyword">import</span> hive</span><br><span class="line"></span><br><span class="line">conn=hive.connect(host=<span class="string">&#x27;localhost&#x27;</span>,port=<span class="number">10000</span>,username=<span class="string">&#x27;root&#x27;</span>,database=<span class="string">&#x27;db_hive&#x27;</span>)</span><br><span class="line">cursor=conn.cursor()</span><br><span class="line">sql=<span class="string">&#x27;show tables&#x27;</span></span><br><span class="line">cursor.execute(sql)</span><br><span class="line"><span class="built_in">print</span>(cursor.fetchall())</span><br></pre></td></tr></table></figure>

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--4.student2指标计算  </span></span><br><span class="line"><span class="comment">--4.1 统计各班 语文平均分,数学平均分,英语平均分 语文最高分,英语最高分,数学最高分  </span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">    class_name,</span><br><span class="line">    round(<span class="built_in">avg</span>(chinese), <span class="number">2</span>) avg_chinese,</span><br><span class="line">    round(<span class="built_in">avg</span>(math), <span class="number">2</span>) avg_math,</span><br><span class="line">    round(<span class="built_in">avg</span>(english), <span class="number">2</span>) avg_english,</span><br><span class="line">    <span class="built_in">max</span>(chinese) max_chinese,</span><br><span class="line">    <span class="built_in">max</span>(math) max_math,</span><br><span class="line">    <span class="built_in">max</span>(english) max_english</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> class_name</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.2 统计各班男生语文最高分,男生数学最高分,男生英语最高分, 女生语文最高分, 女生数学最高分, 女生英语最高分  </span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">    class_name,</span><br><span class="line">    <span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> sex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">then</span> chinese <span class="keyword">else</span> <span class="keyword">null</span> <span class="keyword">end</span>) mc,</span><br><span class="line">    <span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> sex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">then</span> math <span class="keyword">else</span> <span class="keyword">null</span> <span class="keyword">end</span>) mm,</span><br><span class="line">    <span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> sex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">then</span> english <span class="keyword">else</span> <span class="keyword">null</span> <span class="keyword">end</span>) me,</span><br><span class="line">    <span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">then</span> chinese <span class="keyword">else</span> <span class="keyword">null</span> <span class="keyword">end</span>) fmc,</span><br><span class="line">    <span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">then</span> math <span class="keyword">else</span> <span class="keyword">null</span> <span class="keyword">end</span>) fmm,</span><br><span class="line">    <span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">then</span> english <span class="keyword">else</span> <span class="keyword">null</span> <span class="keyword">end</span>) fme</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> class_name</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.3 统计每人平均分,总分,三科中的最高分,最高分科目名称,在本班的总分排名(有并列),判断是否在平均分线以上  </span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">    name,</span><br><span class="line">    id,</span><br><span class="line">    class_name,</span><br><span class="line">    sex,</span><br><span class="line">    round((chinese<span class="operator">+</span>math<span class="operator">+</span>english)<span class="operator">/</span><span class="number">3.0</span>, <span class="number">2</span>) avg_score,</span><br><span class="line">    (chinese<span class="operator">+</span>math<span class="operator">+</span>english) total_score,</span><br><span class="line">    greatest(chinese, math, english) highest_score,</span><br><span class="line">    <span class="keyword">case</span> greatest(chinese, math, english)</span><br><span class="line">        <span class="keyword">when</span> chinese <span class="keyword">then</span> <span class="string">&#x27;语文&#x27;</span></span><br><span class="line">        <span class="keyword">when</span> math <span class="keyword">then</span> <span class="string">&#x27;数学&#x27;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="string">&#x27;英语&#x27;</span></span><br><span class="line">    <span class="keyword">end</span> highest_subject,</span><br><span class="line">    <span class="built_in">dense_rank</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> class_name <span class="keyword">order</span> <span class="keyword">by</span> (chinese<span class="operator">+</span>math<span class="operator">+</span>english) <span class="keyword">desc</span>) class_rank,</span><br><span class="line">    if((chinese<span class="operator">+</span>math<span class="operator">+</span>english) <span class="operator">&gt;=</span> <span class="built_in">avg</span>(chinese<span class="operator">+</span>math<span class="operator">+</span>english) <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> class_name), <span class="string">&#x27;是&#x27;</span>, <span class="string">&#x27;否&#x27;</span>) above_avg</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> class_name, class_rank;</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.4 统计每个学生总分并降序排序 ,显示本人总分和上一个学生分数的差值</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">    name, id, class_name,</span><br><span class="line">    (chinese <span class="operator">+</span> math <span class="operator">+</span> english) total_score,</span><br><span class="line">    <span class="built_in">coalesce</span>(<span class="built_in">lag</span>(chinese <span class="operator">+</span> math <span class="operator">+</span> english) <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> chinese <span class="operator">+</span> math <span class="operator">+</span> english <span class="keyword">desc</span>) <span class="operator">-</span> (chinese <span class="operator">+</span> math <span class="operator">+</span> english), <span class="number">0</span>) cha_score</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> total_score <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>Python</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hive分区表、分桶表</title>
    <url>/2025/06/30/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/6.30%20Hive%E5%88%86%E5%8C%BA%E8%A1%A8%E3%80%81%E5%88%86%E6%A1%B6%E8%A1%A8/</url>
    <content><![CDATA[<h1 id="分区表"><a href="#分区表" class="headerlink" title="分区表"></a>分区表</h1><p>分区是将一个表或索引物理地分解为多个更小、更可管理的部分。<br>分区对应用透明，即对访问数据库的应用而言，逻辑上讲只有一个表或一个索引（相当于应用“看到”的只是一个表或索引），但在物理上这个表或索引可能由数十个物理分区组成。</p>
<p>在 Hadoop 中，Hive 分区表通常以特定的目录结构来存储。<br>每个分区对应一个独立的目录，目录名通常包含分区列的值。数据文件会存储在相应的分区目录下。</p>
<h1 id="分桶表"><a href="#分桶表" class="headerlink" title="分桶表"></a>分桶表</h1><p>•分区提供一个隔离数据和优化查询的便利方式。不过，并非所有的数据集都可形成合理的分区。对于一张表或者分区，Hive 可以进一步组织成桶，也就是更为细粒度的数据范围划分。</p>
<p>•分桶是将数据集分解成更容易管理的若干部分的另一个技术。</p>
<p>•分区针对的是数据的存储路径；分桶针对的是数据文件。</p>
<p>分桶策略：Hive的分桶采用对分桶字段的值进行哈希，然后除以桶的个数求余的方 式决定该条记录存放在哪个桶当中。</p>
<table>
<thead>
<tr>
<th></th>
<th>分区表</th>
<th>分桶表</th>
</tr>
</thead>
<tbody><tr>
<td>划分依据</td>
<td>分区列的离散值（目录分割）</td>
<td>分桶列的哈希值（文件分割）</td>
</tr>
<tr>
<td>数量灵活性</td>
<td>分区数量可动态新增</td>
<td>桶数量固定（创建时指定）</td>
</tr>
<tr>
<td>优化目标</td>
<td>减少扫描范围（过滤查询）</td>
<td>优化 Join 和抽样（哈希分片）</td>
</tr>
</tbody></table>
<h1 id="实践练习"><a href="#实践练习" class="headerlink" title="实践练习"></a>实践练习</h1><p>1.清洗excel文件 超市数据.xlsx 为文本文件，按照分区字段对文件进行拆分<br>ps: 浮点数精确小数点后2位，不需要有表头和index ，数据分隔符不能是逗号<br>数据清洗脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取Excel文件</span></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;超市数据.xlsx&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建输出目录</span></span><br><span class="line">output_dir = <span class="string">&#x27;超市数据_分区&#x27;</span></span><br><span class="line">os.makedirs(output_dir, exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要处理的浮点数列</span></span><br><span class="line">float_columns = [<span class="string">&#x27;销售额&#x27;</span>, <span class="string">&#x27;折扣&#x27;</span>, <span class="string">&#x27;利润&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按类别拆分并保存文件</span></span><br><span class="line"><span class="keyword">for</span> category <span class="keyword">in</span> df[<span class="string">&#x27;类别&#x27;</span>].unique():</span><br><span class="line">    <span class="comment"># 使用.loc创建显式副本</span></span><br><span class="line">    category_df = df.loc[df[<span class="string">&#x27;类别&#x27;</span>] == category].copy()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 浮点数保留两位小数（使用更安全的赋值方式）</span></span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> float_columns:</span><br><span class="line">        <span class="keyword">if</span> col <span class="keyword">in</span> category_df.columns:</span><br><span class="line">            category_df[col] = category_df[col].<span class="built_in">round</span>(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存为制表符分隔的文本文件</span></span><br><span class="line">    file_path = os.path.join(output_dir, <span class="string">f&#x27;<span class="subst">&#123;category&#125;</span>.txt&#x27;</span>)</span><br><span class="line">    category_df.to_csv(file_path, sep=<span class="string">&#x27;\t&#x27;</span>, na_rep=<span class="string">&#x27;nan&#x27;</span>, header=<span class="literal">False</span>, index=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;数据已按类别清洗并拆分至目录: <span class="subst">&#123;output_dir&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>2.创建一个分区表，做分桶 clustered by （id ） into 2 buckets， 将文本文件分别 插入到分区中  </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create table</span> supermarket_p1 (</span><br><span class="line">id string, <span class="comment">-- 行 ID  </span></span><br><span class="line">ord_id string comment <span class="string">&#x27;订单 ID&#x27;</span>,  </span><br><span class="line">ord_date string comment <span class="string">&#x27;订单日期&#x27;</span>, </span><br><span class="line">exch_date string comment <span class="string">&#x27;发货日期&#x27;</span>,</span><br><span class="line">exch_type string comment <span class="string">&#x27;邮寄方式&#x27;</span>,</span><br><span class="line">cust_id string comment <span class="string">&#x27;客户 ID &#x27;</span>,</span><br><span class="line">cust_name string comment <span class="string">&#x27;客户名称&#x27;</span>,</span><br><span class="line">d_type string comment <span class="string">&#x27;细分&#x27;</span>,</span><br><span class="line">city string comment <span class="string">&#x27;城市&#x27;</span>, </span><br><span class="line">prov string comment <span class="string">&#x27;省/自治区&#x27;</span>,  </span><br><span class="line">country string comment<span class="string">&#x27;国家&#x27;</span>,</span><br><span class="line">area string comment <span class="string">&#x27;地区&#x27;</span>, </span><br><span class="line">pro_id string comment <span class="string">&#x27;产品 ID&#x27;</span>,  </span><br><span class="line">type1 string comment <span class="string">&#x27;类别&#x27;</span>,</span><br><span class="line">type2 string comment <span class="string">&#x27;子类别&#x27;</span>, </span><br><span class="line">pro_name string comment <span class="string">&#x27;产品名称&#x27;</span>,</span><br><span class="line">sales <span class="type">float</span> comment <span class="string">&#x27;销售额&#x27;</span>,  </span><br><span class="line">count1 <span class="type">int</span> comment <span class="string">&#x27;数量  &#x27;</span>,</span><br><span class="line">discount <span class="type">float</span> comment <span class="string">&#x27;折扣  &#x27;</span>,</span><br><span class="line">profit <span class="type">float</span> comment <span class="string">&#x27;利润&#x27;</span></span><br><span class="line">)</span><br><span class="line">partitioned <span class="keyword">by</span> (c_type1 string)</span><br><span class="line">clustered <span class="keyword">by</span> (id) <span class="keyword">into</span> <span class="number">2</span> buckets</span><br><span class="line"><span class="type">row</span> format delimited fields terminated <span class="keyword">by</span> <span class="string">&#x27;\t&#x27;</span></span><br></pre></td></tr></table></figure>

<p>上传数据到hdfs系统</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hdfs dfs -<span class="built_in">mkdir</span> -p /user/hive/warehouse/supermarket/data</span><br><span class="line">hdfs dfs -put 办公用品.txt /user/hive/warehouse/supermarket/data</span><br><span class="line">hdfs dfs -put 技术.txt /user/hive/warehouse/supermarket/data</span><br><span class="line">hdfs dfs -put 家具.txt /user/hive/warehouse/supermarket/data</span><br></pre></td></tr></table></figure>

<p><strong>插入数据</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">load data inpath <span class="string">&#x27;/user/hive/warehouse/supermarket/data/办公用品.txt&#x27;</span></span><br><span class="line"><span class="keyword">into</span> <span class="keyword">table</span> supermarket_p1 <span class="keyword">partition</span> (c_type1<span class="operator">=</span><span class="string">&#x27;bgyp&#x27;</span>)</span><br><span class="line"></span><br><span class="line">load data inpath <span class="string">&#x27;/user/hive/warehouse/supermarket/data/技术.txt&#x27;</span></span><br><span class="line"><span class="keyword">into</span> <span class="keyword">table</span> supermarket_p1 <span class="keyword">partition</span> (c_type1<span class="operator">=</span><span class="string">&#x27;jishu&#x27;</span>)</span><br><span class="line"></span><br><span class="line">load data inpath <span class="string">&#x27;/user/hive/warehouse/supermarket/data/家具.txt&#x27;</span></span><br><span class="line"><span class="keyword">into</span> <span class="keyword">table</span> supermarket_p1 <span class="keyword">partition</span> (c_type1<span class="operator">=</span><span class="string">&#x27;jiajv&#x27;</span>)</span><br></pre></td></tr></table></figure>
<img src="/2025/06/30/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/6.30%20Hive%E5%88%86%E5%8C%BA%E8%A1%A8%E3%80%81%E5%88%86%E6%A1%B6%E8%A1%A8/file-20250630184725751.png" class="">

<p>3.创建一个 按订单时间分区的分区表 (year_ string, month_ string)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create table</span> supermarket_p2 (</span><br><span class="line">id string, <span class="comment">-- 行 ID  </span></span><br><span class="line">ord_id string comment <span class="string">&#x27;订单 ID&#x27;</span>,  </span><br><span class="line">ord_date string comment <span class="string">&#x27;订单日期&#x27;</span>, </span><br><span class="line">exch_date string comment <span class="string">&#x27;发货日期&#x27;</span>,</span><br><span class="line">exch_type string comment <span class="string">&#x27;邮寄方式&#x27;</span>,</span><br><span class="line">cust_id string comment <span class="string">&#x27;客户 ID &#x27;</span>,</span><br><span class="line">cust_name string comment <span class="string">&#x27;客户名称&#x27;</span>,</span><br><span class="line">d_type string comment <span class="string">&#x27;细分&#x27;</span>,</span><br><span class="line">city string comment <span class="string">&#x27;城市&#x27;</span>, </span><br><span class="line">prov string comment <span class="string">&#x27;省/自治区&#x27;</span>,  </span><br><span class="line">country string comment<span class="string">&#x27;国家&#x27;</span>,</span><br><span class="line">area string comment <span class="string">&#x27;地区&#x27;</span>, </span><br><span class="line">pro_id string comment <span class="string">&#x27;产品 ID&#x27;</span>,  </span><br><span class="line">type1 string comment <span class="string">&#x27;类别&#x27;</span>,</span><br><span class="line">type2 string comment <span class="string">&#x27;子类别&#x27;</span>, </span><br><span class="line">pro_name string comment <span class="string">&#x27;产品名称&#x27;</span>,</span><br><span class="line">sales <span class="type">float</span> comment <span class="string">&#x27;销售额&#x27;</span>,  </span><br><span class="line">count1 <span class="type">int</span> comment <span class="string">&#x27;数量  &#x27;</span>,</span><br><span class="line">discount <span class="type">float</span> comment <span class="string">&#x27;折扣  &#x27;</span>,</span><br><span class="line">profit <span class="type">float</span> comment <span class="string">&#x27;利润&#x27;</span></span><br><span class="line">)</span><br><span class="line">partitioned <span class="keyword">by</span> (year_ string, month_ string)</span><br><span class="line"><span class="type">row</span> format delimited fields terminated <span class="keyword">by</span> <span class="string">&#x27;\t&#x27;</span></span><br></pre></td></tr></table></figure>

<p><strong>动态分区配置</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--开启动态分区(默认开启)</span></span><br><span class="line"><span class="keyword">set</span> hive.exec.dynamic.partition<span class="operator">=</span><span class="literal">true</span></span><br><span class="line"><span class="comment">--指定非严格模式 nonstrict模式表示允许所有的分区字段都可以使用动态分区</span></span><br><span class="line"><span class="keyword">set</span> hive.exec.dynamic.partition.mode<span class="operator">=</span>nonstrict</span><br><span class="line"><span class="comment">--在所有执行MR的节点上，最大一共可以创建多少个动态分区。默认1000</span></span><br><span class="line"><span class="keyword">set</span> hive.exec.max.dynamic.partitions<span class="operator">=</span><span class="number">1000</span></span><br><span class="line"><span class="comment">--在每个执行MR的节点上，最大可以创建多少个动态分区(分区字段有多少种设多少个)</span></span><br><span class="line"><span class="keyword">set</span> hive.exec.max.dynamic.partitions.pernode<span class="operator">=</span><span class="number">100</span></span><br><span class="line"><span class="comment">--整个MR Job中，最大可以创建多少个HDFS文件。默认100000</span></span><br><span class="line"><span class="keyword">set</span> hive.exec.max.created.files<span class="operator">=</span><span class="number">100000</span></span><br><span class="line"><span class="comment">--当有空分区生成时，是否抛出异常</span></span><br><span class="line"><span class="keyword">set</span> hive.error.on.empty.partition<span class="operator">=</span><span class="literal">false</span></span><br><span class="line"><span class="comment">--打开正则查询模式`(dt|hr)?+.+`</span></span><br><span class="line"><span class="keyword">set</span> hive.support.quoted.identifiers<span class="operator">=</span><span class="keyword">none</span></span><br></pre></td></tr></table></figure>

<p>4.将第二部的数据 使用动态分区的方法 导入到 第三步的表中</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert into</span> supermarket_p2 <span class="keyword">partition</span> (year_,month_)</span><br><span class="line"><span class="keyword">select</span> p1.<span class="operator">*</span>,date_format(ord_date,&quot;yyyy&quot;),date_format(ord_date,&quot;MM&quot;)</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> `(c_type1)?<span class="operator">+</span>.<span class="operator">+</span>` <span class="keyword">from</span> supermarket_p1) p1</span><br></pre></td></tr></table></figure>
<img src="/2025/06/30/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/6.30%20Hive%E5%88%86%E5%8C%BA%E8%A1%A8%E3%80%81%E5%88%86%E6%A1%B6%E8%A1%A8/file-20250630184637044.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>sqoop工具使用</title>
    <url>/2025/07/01/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.1%20sqoop%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="连接mysql"><a href="#连接mysql" class="headerlink" title="连接mysql"></a>连接mysql</h1><img src="/2025/07/01/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.1%20sqoop%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/file-20250701115623231.png" class="">

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--创建数据库</span></span><br><span class="line"><span class="keyword">create</span> database test</span><br><span class="line"><span class="keyword">DEFAULT</span> <span class="keyword">CHARACTER SET</span> utf8</span><br><span class="line"><span class="keyword">DEFAULT</span> <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> databases</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建账号</span></span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">user</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">Grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> test.<span class="operator">*</span> </span><br><span class="line"><span class="keyword">to</span> test@<span class="string">&#x27;%&#x27;</span> </span><br><span class="line">identified <span class="keyword">by</span> <span class="string">&#x27;test&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> option;</span><br><span class="line"></span><br><span class="line"><span class="comment">--刷新权限配置</span></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.拷贝安装包以及mysql的jar到/root目录 并解压</span></span><br><span class="line">tar -zvxf sqoop-1.4.6.bin__hadoop-2.0.4-alpha.tar.gz -C /opt/module/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.配置环境变量</span></span><br><span class="line">vim /etc/profile.d/my_env.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入 sqoop 路径</span></span><br><span class="line"><span class="comment">#SQOOP_HOME</span></span><br><span class="line"><span class="built_in">export</span> SQOOP_HOME=/opt/module/sqoop-1.4.6.bin__hadoop-2.0.4-alpha</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$SQOOP_HOME</span>/bin</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.配置sqoop</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$SQOOP_HOME</span>/conf</span><br><span class="line"><span class="built_in">cp</span> sqoop-env-template.sh sqoop-env.sh</span><br><span class="line"></span><br><span class="line">vim sqoop-env.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> HADOOP_COMMON_HOME=/opt/module/hadoop-3.1.3</span><br><span class="line"><span class="built_in">export</span> HADOOP_MAPRED_HOME=/opt/module/hadoop-3.1.3</span><br><span class="line"><span class="built_in">export</span> HIVE_HOME=/opt/module/apache-hive-3.1.2-bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝 jdbc 驱动到 sqoop 的 lib 目录下</span></span><br><span class="line"><span class="built_in">cp</span> mysql-connector-java-5.1.27-bin.jar /opt/module/sqoop-1.4.6.bin__hadoop-2.0.4-alpha/lib/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.测试连接</span></span><br><span class="line">sqoop list-databases --connect jdbc:mysql://localhost:3306/ --username root --password root</span><br></pre></td></tr></table></figure>


<h1 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">use test <span class="comment">--进入test表空间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create table</span> emp(</span><br><span class="line">empno <span class="type">int</span>,</span><br><span class="line">ename <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">job <span class="type">varchar</span> (<span class="number">50</span>),</span><br><span class="line">mgr <span class="type">int</span>,</span><br><span class="line">hiredate <span class="type">varchar</span> (<span class="number">100</span>),</span><br><span class="line">sal <span class="type">decimal</span>(<span class="number">6</span>,<span class="number">2</span>),</span><br><span class="line">comm <span class="type">decimal</span>(<span class="number">6</span>,<span class="number">2</span>),</span><br><span class="line">deptno <span class="type">int</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">create table</span> student(</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">id <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">class_name <span class="type">varchar</span>(<span class="number">50</span>),</span><br><span class="line">age <span class="type">int</span>,</span><br><span class="line">chinese <span class="type">int</span>,</span><br><span class="line">math <span class="type">int</span>,</span><br><span class="line">english <span class="type">int</span>,</span><br><span class="line">sex <span class="type">varchar</span>(<span class="number">10</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>编写脚本 sqoop_create_table.sh </p>
<p>emp表</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqoop create-hive-table \</span><br><span class="line">--connect jdbc:mysql://hadoop100:3306/test \</span><br><span class="line">--username <span class="built_in">test</span> \</span><br><span class="line">--password <span class="built_in">test</span> \</span><br><span class="line">--table emp \</span><br><span class="line">--create-hive-table \</span><br><span class="line">--hive-database db_hive \</span><br><span class="line">--hive-table sqoop_emp \</span><br><span class="line">--fields-terminated-by <span class="string">&#x27;\t&#x27;</span> \</span><br><span class="line">--lines-terminated-by <span class="string">&#x27;\n&#x27;</span></span><br></pre></td></tr></table></figure>

<p>student表</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqoop create-hive-table \</span><br><span class="line">--connect jdbc:mysql://hadoop100:3306/test \</span><br><span class="line">--username <span class="built_in">test</span> \</span><br><span class="line">--password <span class="built_in">test</span> \</span><br><span class="line">--table student \</span><br><span class="line">--create-hive-table \</span><br><span class="line">--hive-database db_hive \</span><br><span class="line">--hive-table sqoop_student \</span><br><span class="line">--fields-terminated-by <span class="string">&#x27;\t&#x27;</span> \</span><br><span class="line">--lines-terminated-by <span class="string">&#x27;\n&#x27;</span></span><br></pre></td></tr></table></figure>

<p>执行脚本后在db_hive数据库里执行<code>show tables</code>查看是否有sqoop_emp &#x2F; sqoop_student表<br><code>desc formatted sqoop_emp</code> 查看表结构</p>
<h1 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h1><h2 id="mysql-test-表数据导入"><a href="#mysql-test-表数据导入" class="headerlink" title="mysql.test 表数据导入"></a>mysql.test 表数据导入</h2><p>编写脚本 sqoop_exp_emp.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqoop <span class="built_in">export</span> \</span><br><span class="line">--connect jdbc:mysql://hadoop100:3306/test \</span><br><span class="line">--username <span class="built_in">test</span> \</span><br><span class="line">--password <span class="built_in">test</span> \</span><br><span class="line">--table emp \</span><br><span class="line">--export-dir <span class="string">&#x27;/emp&#x27;</span> \</span><br><span class="line">-m 1 \</span><br><span class="line">--fields-terminated-by <span class="string">&#x27;;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>执行后在mysql.test数据库查询emp表是否成功导入数据</p>
<p>sqoop_exp_student.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sqoop <span class="built_in">export</span> \</span><br><span class="line">--connect <span class="string">&quot;jdbc:mysql://hadoop100:3306/test?useUnicode=true&amp;characterEncoding=utf-8&quot;</span> \</span><br><span class="line">--username <span class="built_in">test</span> \</span><br><span class="line">--password <span class="built_in">test</span> \</span><br><span class="line">--table student \</span><br><span class="line">--export-dir <span class="string">&#x27;/student&#x27;</span> \</span><br><span class="line">-m 1 \</span><br><span class="line">--fields-terminated-by <span class="string">&#x27;,&#x27;</span></span><br></pre></td></tr></table></figure>
<p>执行后在mysql.test数据库查询student表是否成功导入数据</p>
<h2 id="db-hive库的sqoop表数据导入"><a href="#db-hive库的sqoop表数据导入" class="headerlink" title="db_hive库的sqoop表数据导入"></a>db_hive库的sqoop表数据导入</h2><p>编写脚本 sqoop_imp_emp.sh </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">sqoop import \</span><br><span class="line">--connect <span class="string">&quot;jdbc:mysql://hadoop100:3306/test?useUnicode=true&amp;characterEncoding=utf-8&quot;</span> \</span><br><span class="line">--username <span class="built_in">test</span> \</span><br><span class="line">--password <span class="built_in">test</span> \</span><br><span class="line">--table emp \</span><br><span class="line">--hive-import \</span><br><span class="line">--delete-target-dir \</span><br><span class="line">--hive-database db_hive \</span><br><span class="line">--fields-terminated-by <span class="string">&quot;\t&quot;</span> \</span><br><span class="line">--target-dir <span class="string">&quot;/user/hive/warehouse/db_hive.db/sqoop_emp&quot;</span> \</span><br><span class="line">--hive-table sqoop_emp \</span><br><span class="line">-m 1</span><br></pre></td></tr></table></figure>
<p>执行后在db_hive数据库查询sqoop_emp表是否成功导入数据</p>
<p>sqoop_imp_student.sh </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">sqoop import \</span><br><span class="line">--connect <span class="string">&quot;jdbc:mysql://hadoop100:3306/test?useUnicode=true&amp;characterEncoding=utf-8&quot;</span> \</span><br><span class="line">--username <span class="built_in">test</span> \</span><br><span class="line">--password <span class="built_in">test</span> \</span><br><span class="line">--table student \</span><br><span class="line">--hive-import \</span><br><span class="line">--delete-target-dir \</span><br><span class="line">--hive-database db_hive \</span><br><span class="line">--fields-terminated-by <span class="string">&quot;\t&quot;</span> \</span><br><span class="line">--target-dir <span class="string">&quot;/user/hive/warehouse/db_hive.db/sqoop_student&quot;</span> \</span><br><span class="line">--hive-table sqoop_student \</span><br><span class="line">-m 1</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>执行后在db_hive数据库查询sqoop_student表是否成功导入数据</p>
<h1 id="分区表全量导入导出"><a href="#分区表全量导入导出" class="headerlink" title="分区表全量导入导出"></a>分区表全量导入导出</h1><h2 id="建表-1"><a href="#建表-1" class="headerlink" title="建表"></a>建表</h2><p>在mysql.test中建表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create table</span> supermarket(</span><br><span class="line">id <span class="type">varchar</span>(<span class="number">100</span>), <span class="comment">-- 行 ID  </span></span><br><span class="line">ord_id <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;订单 ID&#x27;</span>,  </span><br><span class="line">ord_date <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;订单日期&#x27;</span>, </span><br><span class="line">exch_date <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;发货日期&#x27;</span>,</span><br><span class="line">exch_type <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;邮寄方式&#x27;</span>,</span><br><span class="line">cust_id <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;客户 ID &#x27;</span>,</span><br><span class="line">cust_name <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;客户名称&#x27;</span>,</span><br><span class="line">d_type <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;细分&#x27;</span>,</span><br><span class="line">city <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;城市&#x27;</span>, </span><br><span class="line">prov <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;省/自治区&#x27;</span>,  </span><br><span class="line">country <span class="type">varchar</span>(<span class="number">100</span>) comment<span class="string">&#x27;国家&#x27;</span>,</span><br><span class="line">area <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;地区&#x27;</span>, </span><br><span class="line">pro_id <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;产品 ID&#x27;</span>,  </span><br><span class="line">type1 <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;类别&#x27;</span>,</span><br><span class="line">type2 <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;子类别&#x27;</span>, </span><br><span class="line">pro_name <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;产品名称&#x27;</span>,</span><br><span class="line">sales <span class="type">decimal</span>(<span class="number">12</span>,<span class="number">4</span>) comment <span class="string">&#x27;销售额&#x27;</span>,  </span><br><span class="line">count1 <span class="type">int</span> comment <span class="string">&#x27;数量  &#x27;</span>,</span><br><span class="line">discount <span class="type">decimal</span>(<span class="number">12</span>,<span class="number">4</span>) comment <span class="string">&#x27;折扣  &#x27;</span>,</span><br><span class="line">profit <span class="type">decimal</span>(<span class="number">12</span>,<span class="number">4</span>) comment <span class="string">&#x27;利润&#x27;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h2 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h2><p>编写 sqoop_exp_supermarket.sh 脚本<br>将hive库的supermarket_p1表数据导出到mysql库的supermarket表</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">sqoop_maket</span></span>()&#123;</span><br><span class="line">sqoop  <span class="built_in">export</span> \</span><br><span class="line">--connect <span class="string">&quot;jdbc:mysql://hadoop100:3306/test?useUnicode=true&amp;characterEncoding=utf-8&quot;</span> \</span><br><span class="line">--username <span class="built_in">test</span> \</span><br><span class="line">--password <span class="built_in">test</span> \</span><br><span class="line">-m 1 \</span><br><span class="line">--table supermarket \</span><br><span class="line">--input-fields-terminated-by  <span class="string">&#x27;\t&#x27;</span> \</span><br><span class="line">--export-dir <span class="string">&quot;/user/hive/warehouse/db_hive.db/supermarket_p1/<span class="variable">$val</span>/&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">part=`beeline -u jdbc:hive2://hadoop100:10000/db_hive \</span><br><span class="line">-n root -p root --outputformat=csv2 --showHeader=<span class="literal">false</span> \</span><br><span class="line">-e <span class="string">&#x27;show partitions supermarket_p1;&#x27;</span>`</span><br><span class="line"><span class="keyword">for</span>  val <span class="keyword">in</span> <span class="variable">$part</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$val</span></span><br><span class="line">sqoop_maket </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>执行后在mysql.test数据库查询supermarket表是否成功导入数据</p>
<h2 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h2><p>编写 sqoop_imp_supermarket.sh 脚本<br>Sqoop导入函数：从MySQL表supermarket中查询特定类型的数据，并导入到Hive分区表</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">sqoop_imp</span></span>()&#123;</span><br><span class="line">sqoop import \</span><br><span class="line">--connect <span class="string">&quot;jdbc:mysql://hadoop100:3306/test?useUnicode=true&amp;characterEncoding=utf-8&quot;</span> \</span><br><span class="line">--username <span class="built_in">test</span> \</span><br><span class="line">--password <span class="built_in">test</span> \</span><br><span class="line">--query  <span class="string">&quot;select * from supermarket where type1 =&#x27;<span class="variable">$part</span>&#x27; and \$CONDITIONS&quot;</span> \</span><br><span class="line">--hive-import \</span><br><span class="line">--create-hive-table \</span><br><span class="line">--hive-overwrite \</span><br><span class="line">--fields-terminated-by <span class="string">&quot;\t&quot;</span> \</span><br><span class="line">--hive-database db_hive \</span><br><span class="line">--hive-table supermarket_sqoop \</span><br><span class="line">--target-dir <span class="string">&quot;/user/hive/warehouse/db_hive.db/supermarket_sqoop/type_p=<span class="variable">$part_v</span>/&quot;</span> \</span><br><span class="line">--hive-partition-key type_p \</span><br><span class="line">--hive-partition-value <span class="string">&quot;<span class="variable">$part_v</span>&quot;</span> \</span><br><span class="line">-m 1</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> `mysql -uroot -proot --database=<span class="built_in">test</span> -Ne \</span><br><span class="line"><span class="string">&quot;SELECT </span></span><br><span class="line"><span class="string">CONCAT(type1,&#x27;|&#x27;, </span></span><br><span class="line"><span class="string">CASE WHEN type1 = &#x27;家具&#x27; THEN &#x27;jiajv&#x27; </span></span><br><span class="line"><span class="string">WHEN type1 = &#x27;办公用品&#x27; THEN &#x27;bgyp&#x27; </span></span><br><span class="line"><span class="string">WHEN type1 = &#x27;技术&#x27; THEN &#x27;jishu&#x27; END)   </span></span><br><span class="line"><span class="string">FROM supermarket group by type1&quot;</span>` </span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">part=`<span class="built_in">echo</span> <span class="variable">$p</span> | awk -F <span class="string">&#x27;|&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>`</span><br><span class="line">part_v=`<span class="built_in">echo</span> <span class="variable">$p</span> | awk -F <span class="string">&#x27;|&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;***************************&#x27;</span><span class="variable">$part</span> <span class="variable">$part_v</span> <span class="string">&#x27;*****************************&#x27;</span></span><br><span class="line">sqoop_imp</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>执行后在db_hive数据库查询supermarket_sqoop表是否成功导入数据<br>若表存在但没数据需要在db_hive库sql脚本中执行以下语句后再查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--分区重构</span></span><br><span class="line">msck repair <span class="keyword">table</span> supermarket_sqoop</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>sqoop</tag>
      </tags>
  </entry>
  <entry>
    <title>网站日志文件清洗并上传到hive数据库</title>
    <url>/2025/07/02/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.2%20%E7%BD%91%E7%AB%99%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E6%B8%85%E6%B4%97%E5%B9%B6%E4%B8%8A%E4%BC%A0%E5%88%B0hive%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h1 id="相关总结"><a href="#相关总结" class="headerlink" title="相关总结"></a>相关总结</h1><h3 id="一、参数接收与文件校验"><a href="#一、参数接收与文件校验" class="headerlink" title="一、参数接收与文件校验"></a><strong>一、参数接收与文件校验</strong></h3><h4 id="1-用户输入获取"><a href="#1-用户输入获取" class="headerlink" title="1. 用户输入获取"></a><strong>1. 用户输入获取</strong></h4><p>从命令行接收日期参数（格式：<code>yyyymmdd</code>）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dt = <span class="built_in">input</span>(<span class="string">&quot;请输入参数: &quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> dt:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请输入参数（格式：yyyymmdd）&quot;</span>)</span><br><span class="line">    exit()</span><br></pre></td></tr></table></figure>
<h4 id="2-参数格式验证"><a href="#2-参数格式验证" class="headerlink" title="2. 参数格式验证"></a><strong>2. 参数格式验证</strong></h4><p>检查输入是否符合 8 位纯数字格式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_value</span>(<span class="params">dt, fpath</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(dt) == <span class="number">8</span> <span class="keyword">and</span> dt.isdigit():</span><br><span class="line">            fname = <span class="string">f&quot;<span class="subst">&#123;dt[<span class="number">0</span>:<span class="number">4</span>]&#125;</span>-<span class="subst">&#123;dt[<span class="number">4</span>:<span class="number">6</span>]&#125;</span>-<span class="subst">&#123;dt[<span class="number">6</span>:<span class="number">8</span>]&#125;</span>.log&quot;</span></span><br><span class="line">            fnamein = <span class="string">f&#x27;<span class="subst">&#123;fpath&#125;</span>/<span class="subst">&#123;fname&#125;</span>&#x27;</span></span><br><span class="line">            <span class="keyword">return</span> fname, fnamein</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;输入参数格式不对: yyyymmdd&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br></pre></td></tr></table></figure>

<h4 id="3-文件存在性检查"><a href="#3-文件存在性检查" class="headerlink" title="3. 文件存在性检查"></a><strong>3. 文件存在性检查</strong></h4><p>验证对应日期的日志文件是否存在</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_file</span>(<span class="params">file</span>):</span><br><span class="line">	<span class="keyword">if</span> os.path.isfile(file):</span><br><span class="line">		<span class="keyword">return</span> file</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;找不到该文件&quot;</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure>

<h3 id="二、日志数据清洗（ETL）"><a href="#二、日志数据清洗（ETL）" class="headerlink" title="二、日志数据清洗（ETL）"></a><strong>二、日志数据清洗（ETL）</strong></h3><h4 id="1-日志文件读取"><a href="#1-日志文件读取" class="headerlink" title="1. 日志文件读取"></a><strong>1. 日志文件读取</strong></h4><p>逐行读取原始日志文件</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(fnamein, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">	<span class="keyword">for</span> r <span class="keyword">in</span> f.readlines():</span><br><span class="line">		<span class="comment"># 处理每一行日志</span></span><br></pre></td></tr></table></figure>
<h4 id="2-基础字段提取"><a href="#2-基础字段提取" class="headerlink" title="2. 基础字段提取"></a><strong>2. 基础字段提取</strong></h4><p>从日志行中解析 IP、日期和 URL</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result = r.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">ip = result[<span class="number">0</span>]</span><br><span class="line">date = result[<span class="number">3</span>]  <span class="comment"># 格式: [20/May/2021:00:00:02</span></span><br><span class="line">date = datetime.strptime(date, <span class="string">&#x27;[%d/%b/%Y:%H:%M:%S&#x27;</span>)</span><br><span class="line">date = datetime.strftime(date, <span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line">url = result[<span class="number">6</span>]</span><br></pre></td></tr></table></figure>
<h4 id="3-User-Agent-解析"><a href="#3-User-Agent-解析" class="headerlink" title="3. User-Agent 解析"></a><strong>3. User-Agent 解析</strong></h4><p>从 User-Agent 字符串中提取操作系统和浏览器信息</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result1 = r.split(<span class="string">&#x27;&quot;&#x27;</span>)[-<span class="number">2</span>]  <span class="comment"># 提取User-Agent字段</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 操作系统检测逻辑</span></span><br><span class="line">os_markers = [(<span class="string">&quot;Windows&quot;</span>, <span class="string">&quot;Windows&quot;</span>), (<span class="string">&quot;MacOS&quot;</span>, <span class="string">&quot;Mac OS&quot;</span>), (<span class="string">&quot;Linux&quot;</span>, <span class="string">&quot;Linux&quot;</span>)]</span><br><span class="line">osinfo = <span class="string">&quot;Unknown&quot;</span></span><br><span class="line"><span class="keyword">for</span> os_name, marker <span class="keyword">in</span> os_markers:</span><br><span class="line">	<span class="keyword">if</span> marker <span class="keyword">in</span> result1:</span><br><span class="line">		osinfo = os_name</span><br><span class="line">		<span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 浏览器检测逻辑</span></span><br><span class="line">browser_markers = [(<span class="string">&quot;Chrome&quot;</span>, <span class="string">&quot;Chrome&quot;</span>), (<span class="string">&quot;Safari&quot;</span>, <span class="string">&quot;Safari&quot;</span>), ...]</span><br><span class="line">browser = <span class="string">&quot;Unknown&quot;</span></span><br><span class="line"><span class="keyword">for</span> browser_name, marker <span class="keyword">in</span> browser_markers:</span><br><span class="line">	<span class="keyword">if</span> marker <span class="keyword">in</span> result1:</span><br><span class="line">		browser = browser_name</span><br><span class="line">		<span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<h4 id="4-清洗数据写入"><a href="#4-清洗数据写入" class="headerlink" title="4. 清洗数据写入"></a><strong>4. 清洗数据写入</strong></h4><p>将提取的字段写入临时文件，使用制表符分隔</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">loginfo = [ip, date, url, osinfo, browser]</span><br><span class="line">f1.write(<span class="string">&#x27;\t&#x27;</span>.join(loginfo) + <span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure>


<h3 id="三、数据导入-Hive-数据库"><a href="#三、数据导入-Hive-数据库" class="headerlink" title="三、数据导入 Hive 数据库"></a><strong>三、数据导入 Hive 数据库</strong></h3><h4 id="1-Hive-表创建"><a href="#1-Hive-表创建" class="headerlink" title="1. Hive 表创建"></a><strong>1. Hive 表创建</strong></h4><p>检查目标表是否存在，不存在则创建分区表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sql_create = <span class="string">&quot;&quot;&quot;CREATE TABLE IF NOT EXISTS log (</span></span><br><span class="line"><span class="string">	ip string,</span></span><br><span class="line"><span class="string">	date_l string,</span></span><br><span class="line"><span class="string">	url string,</span></span><br><span class="line"><span class="string">	osinfo string,</span></span><br><span class="line"><span class="string">	browser string</span></span><br><span class="line"><span class="string">) PARTITIONED BY (dt string)</span></span><br><span class="line"><span class="string">ROW FORMAT DELIMITED</span></span><br><span class="line"><span class="string">FIELDS TERMINATED BY &#x27;\t&#x27;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">cursor.execute(sql_create)</span><br></pre></td></tr></table></figure>
<h4 id="2-数据加载到分区"><a href="#2-数据加载到分区" class="headerlink" title="2. 数据加载到分区"></a><strong>2. 数据加载到分区</strong></h4><p>将清洗后的临时文件数据加载到对应日期分区</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sql_load = <span class="string">f&quot;&quot;&quot;LOAD DATA LOCAL INPATH &#x27;<span class="subst">&#123;fnameou&#125;</span>&#x27;</span></span><br><span class="line"><span class="string">INTO TABLE log PARTITION (dt=&#x27;<span class="subst">&#123;dt&#125;</span>&#x27;)&quot;&quot;&quot;</span></span><br><span class="line">cursor.execute(sql_load)</span><br></pre></td></tr></table></figure>
<h4 id="3-Hive-连接管理"><a href="#3-Hive-连接管理" class="headerlink" title="3. Hive 连接管理"></a><strong>3. Hive 连接管理</strong></h4><p>建立与 HiveServer2 的连接并执行 SQL</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">conn = hive.connect(</span><br><span class="line">	host=<span class="string">&#x27;192.168.200.100&#x27;</span>,</span><br><span class="line">	port=<span class="number">10000</span>,</span><br><span class="line">	username=<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">	database=<span class="string">&#x27;db_hive&#x27;</span></span><br><span class="line">)</span><br><span class="line">cursor = conn.cursor()</span><br><span class="line"><span class="comment"># 执行SQL...</span></span><br><span class="line">cursor.execute(sql)</span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure>
<h1 id="etl-log-py-脚本完整代码"><a href="#etl-log-py-脚本完整代码" class="headerlink" title="etl_log.py 脚本完整代码"></a>etl_log.py 脚本完整代码</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> pyhive <span class="keyword">import</span> hive</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志文件目录</span></span><br><span class="line">fpath = <span class="string">&#x27;/root/mydata&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">etl_log</span>(<span class="params">fnamein, fnameou</span>):</span><br><span class="line">    <span class="comment"># 清洗日志文件，提取关键信息并写入新文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(fnamein, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(fnameou, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f1:</span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> f.readlines():</span><br><span class="line">                <span class="comment"># 分割日志行，提取基础字段</span></span><br><span class="line">                result = r.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">                ip = result[<span class="number">0</span>]</span><br><span class="line">                date = result[<span class="number">3</span>]</span><br><span class="line">                <span class="comment"># 转换日期格式</span></span><br><span class="line">                date = datetime.strptime(date, <span class="string">&#x27;[%d/%b/%Y:%H:%M:%S&#x27;</span>)</span><br><span class="line">                date = datetime.strftime(date, <span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line">                url = result[<span class="number">6</span>]</span><br><span class="line">                <span class="comment"># 提取User-Agent信息</span></span><br><span class="line">                result1 = r.split(<span class="string">&#x27;&quot;&#x27;</span>)[-<span class="number">2</span>]</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 操作系统识别规则</span></span><br><span class="line">                os_markers = [</span><br><span class="line">                    (<span class="string">&quot;Windows&quot;</span>, <span class="string">&quot;Windows&quot;</span>),</span><br><span class="line">                    (<span class="string">&quot;MacOS&quot;</span>, <span class="string">&quot;Mac OS&quot;</span>),</span><br><span class="line">                    (<span class="string">&quot;Linux&quot;</span>, <span class="string">&quot;Linux&quot;</span>)</span><br><span class="line">                ]</span><br><span class="line">                <span class="comment"># 浏览器识别规则</span></span><br><span class="line">                browser_markers = [</span><br><span class="line">                    (<span class="string">&quot;Chrome&quot;</span>, <span class="string">&quot;Chrome&quot;</span>),</span><br><span class="line">                    (<span class="string">&quot;Safari&quot;</span>, <span class="string">&quot;Safari&quot;</span>),</span><br><span class="line">                    (<span class="string">&quot;Firefox&quot;</span>, <span class="string">&quot;Firefox&quot;</span>),</span><br><span class="line">                    (<span class="string">&quot;Opera&quot;</span>, <span class="string">&quot;Opera&quot;</span>)</span><br><span class="line">                ]</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 检测操作系统</span></span><br><span class="line">                osinfo = <span class="string">&quot;Unknown&quot;</span></span><br><span class="line">                <span class="keyword">for</span> os_name, marker <span class="keyword">in</span> os_markers:</span><br><span class="line">                    <span class="keyword">if</span> marker <span class="keyword">in</span> result1:</span><br><span class="line">                        osinfo = os_name</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 检测浏览器</span></span><br><span class="line">                browser = <span class="string">&quot;Unknown&quot;</span></span><br><span class="line">                <span class="keyword">for</span> browser_name, marker <span class="keyword">in</span> browser_markers:</span><br><span class="line">                    <span class="keyword">if</span> marker <span class="keyword">in</span> result1:</span><br><span class="line">                        browser = browser_name</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 构建清洗后的记录并写入文件</span></span><br><span class="line">                loginfo = [ip, date, url, osinfo, browser]</span><br><span class="line">                f1.write(<span class="string">&#x27;\t&#x27;</span>.join(loginfo) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_log</span>(<span class="params">fnameou, dt</span>):</span><br><span class="line">    <span class="comment"># 将清洗后的文件加载到Hive数据库</span></span><br><span class="line">    <span class="comment"># 创建log表sql语句</span></span><br><span class="line">    sql_create = <span class="string">&quot;&quot;&quot;create table if not exists log (</span></span><br><span class="line"><span class="string">        ip string,</span></span><br><span class="line"><span class="string">        date_l string,</span></span><br><span class="line"><span class="string">        url string,</span></span><br><span class="line"><span class="string">        osinfo string,</span></span><br><span class="line"><span class="string">        browser string</span></span><br><span class="line"><span class="string">    )</span></span><br><span class="line"><span class="string">    partitioned by (dt string)</span></span><br><span class="line"><span class="string">    row format delimited</span></span><br><span class="line"><span class="string">    fields terminated by &#x27;\t&#x27;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 加载数据SQL</span></span><br><span class="line">    sql_load = <span class="string">f&quot;&quot;&quot;load data local INPATH &#x27;<span class="subst">&#123;fnameou&#125;</span>&#x27;</span></span><br><span class="line"><span class="string">    into table log partition (dt=&#x27;<span class="subst">&#123;dt&#125;</span>&#x27;)&quot;&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 连接Hive并执行SQL</span></span><br><span class="line">    conn = hive.connect(host=<span class="string">&#x27;192.168.200.100&#x27;</span>, port=<span class="number">10000</span>, username=<span class="string">&#x27;root&#x27;</span>, database=<span class="string">&#x27;db_hive&#x27;</span>)</span><br><span class="line">    cursor = conn.cursor()</span><br><span class="line">    cursor.execute(sql_create)</span><br><span class="line">    cursor.execute(sql_load)</span><br><span class="line">    cursor.close()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_value</span>(<span class="params">dt, fpath</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;验证输入参数并返回日志文件路径&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(dt) == <span class="number">8</span> <span class="keyword">and</span> dt.isdigit():</span><br><span class="line">        <span class="comment"># 转换日期格式为标准日志文件名</span></span><br><span class="line">        fname = <span class="string">f&quot;<span class="subst">&#123;dt[<span class="number">0</span>:<span class="number">4</span>]&#125;</span>-<span class="subst">&#123;dt[<span class="number">4</span>:<span class="number">6</span>]&#125;</span>-<span class="subst">&#123;dt[<span class="number">6</span>:<span class="number">8</span>]&#125;</span>.log&quot;</span></span><br><span class="line">        fnamein = <span class="string">f&#x27;<span class="subst">&#123;fpath&#125;</span>/<span class="subst">&#123;fname&#125;</span>&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> fname, fnamein</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;输入参数格式不对: yyyymmdd&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_file</span>(<span class="params">file</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;验证文件是否存在&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> os.path.isfile(file):</span><br><span class="line">        <span class="keyword">return</span> file</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;找不到该文件&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 获取用户输入的日期参数</span></span><br><span class="line">    dt = <span class="built_in">input</span>(<span class="string">&quot;请输入参数: &quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> dt:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;请输入参数（格式：yyyymmdd）&quot;</span>)</span><br><span class="line">        exit()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 验证参数并获取文件路径</span></span><br><span class="line">    result = test_value(dt, fpath)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> result:</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        fname, fnamein = result</span><br><span class="line">        fnamein = test_file(fnamein)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> fnamein:  <span class="comment"># 增加文件检查的退出逻辑</span></span><br><span class="line">            exit()</span><br><span class="line">            </span><br><span class="line">        <span class="comment"># 构建输出文件名并执行ETL和加载</span></span><br><span class="line">        fname1 = <span class="string">f&quot;etl_<span class="subst">&#123;fname.replace(<span class="string">&#x27;.log&#x27;</span>,<span class="string">&#x27;.txt&#x27;</span>)&#125;</span>&quot;</span></span><br><span class="line">        fnameou = <span class="string">f&#x27;<span class="subst">&#123;fpath&#125;</span>/<span class="subst">&#123;fname1&#125;</span>&#x27;</span></span><br><span class="line">        etl_log(fnamein, fnameou)</span><br><span class="line">        load_log(fnameou, dt)</span><br></pre></td></tr></table></figure>

<h2 id="验证结果"><a href="#验证结果" class="headerlink" title="验证结果"></a>验证结果</h2><img src="/2025/07/02/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.2%20%E7%BD%91%E7%AB%99%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E6%B8%85%E6%B4%97%E5%B9%B6%E4%B8%8A%E4%BC%A0%E5%88%B0hive%E6%95%B0%E6%8D%AE%E5%BA%93/file-20250702174207501.png" class="">
<img src="/2025/07/02/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.2%20%E7%BD%91%E7%AB%99%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E6%B8%85%E6%B4%97%E5%B9%B6%E4%B8%8A%E4%BC%A0%E5%88%B0hive%E6%95%B0%E6%8D%AE%E5%BA%93/file-20250702174233881.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>hadoop问答</title>
    <url>/2025/07/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.7%20hadoop%E9%97%AE%E7%AD%94/</url>
    <content><![CDATA[<h2 id="1-hadoop组件有哪些-分别有什么功能"><a href="#1-hadoop组件有哪些-分别有什么功能" class="headerlink" title="1. hadoop组件有哪些?分别有什么功能"></a>1. hadoop组件有哪些?分别有什么功能</h2><table>
<thead>
<tr>
<th><strong>组件</strong></th>
<th><strong>功能</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>HDFS</strong></td>
<td>分布式文件存储系统，提供高容错性海量存储</td>
</tr>
<tr>
<td><strong>MapReduce</strong></td>
<td>分布式计算框架，并行处理大数据集</td>
</tr>
<tr>
<td><strong>YARN</strong></td>
<td>资源调度系统，管理集群资源并分配任务</td>
</tr>
<tr>
<td><strong>Hive</strong></td>
<td>主要用于处理结构化和半结构化数据</td>
</tr>
<tr>
<td><strong>Common</strong></td>
<td>通用工具库，支持其他模块</td>
</tr>
</tbody></table>
<h2 id="2-分布式存储的组件是什么-有哪些进程-进程的作用是什么"><a href="#2-分布式存储的组件是什么-有哪些进程-进程的作用是什么" class="headerlink" title="2. 分布式存储的组件是什么 ?有哪些进程? 进程的作用是什么?"></a>2. 分布式存储的组件是什么 ?有哪些进程? 进程的作用是什么?</h2><p>分布式存储组件是 <strong>HDFS</strong>，其包含的进程及作用如下：</p>
<table>
<thead>
<tr>
<th><strong>进程</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>NameNode</strong></td>
<td>管理元数据（文件名、块位置、权限），响应客户端请求</td>
</tr>
<tr>
<td><strong>DataNode</strong></td>
<td>存储实际数据块，定期向NN发送心跳和块报告</td>
</tr>
<tr>
<td><strong>SecondaryNameNode</strong></td>
<td>定期合并FsImage和Edits日志（非热备，缓解NN压力）</td>
</tr>
</tbody></table>
<h2 id="3-资源调度使用什么组件-该组件有哪些进程-每个进程的作用是什么"><a href="#3-资源调度使用什么组件-该组件有哪些进程-每个进程的作用是什么" class="headerlink" title="3. 资源调度使用什么组件? 该组件有哪些进程?每个进程的作用是什么?"></a>3. 资源调度使用什么组件? 该组件有哪些进程?每个进程的作用是什么?</h2><p>资源调度使用的组件是 <strong>YARN</strong>，相关进程及作用如下：</p>
<table>
<thead>
<tr>
<th><strong>进程</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>ResourceManager</strong></td>
<td>负责全局资源的调度和分配</td>
</tr>
<tr>
<td><strong>NodeManager</strong></td>
<td>管理单个节点上的资源和容器</td>
</tr>
<tr>
<td><strong>ApplicationMaster</strong></td>
<td>为特定应用程序协调资源，并与 NodeManager 进行通信</td>
</tr>
</tbody></table>
<h2 id="4-分布式计算分为几个步骤-shuffle有几个步骤"><a href="#4-分布式计算分为几个步骤-shuffle有几个步骤" class="headerlink" title="4. 分布式计算分为几个步骤? shuffle有几个步骤?"></a>4. 分布式计算分为几个步骤? shuffle有几个步骤?</h2><p>分布式计算主要包含 <strong>Map</strong> 和 <strong>Reduce</strong> 两个步骤。<br>典型的 MapReduce 分布式计算过程大致可以分成 4 个主要阶段：</p>
<table>
<thead>
<tr>
<th>阶段</th>
<th>主要作用</th>
</tr>
</thead>
<tbody><tr>
<td>1️⃣ Input</td>
<td>从 HDFS（或其他存储）读取输入数据，切分成 Split，分配给不同的 Map Task</td>
</tr>
<tr>
<td>2️⃣ Map</td>
<td>每个 Map Task 处理 Split，生成 <code>&lt;key, value&gt;</code> 对，中间结果按 key 排序、分区、缓冲</td>
</tr>
<tr>
<td>3️⃣ Shuffle</td>
<td>核心阶段，从 Map Task 把数据传输到 Reduce Task，包括分区、排序、拷贝、合并</td>
</tr>
<tr>
<td>4️⃣ Reduce</td>
<td>Reduce Task 聚合同一个 key 的所有 value，执行用户逻辑，输出结果写回 HDFS</td>
</tr>
</tbody></table>
<p>Shuffle 作为连接 Map 和 Reduce 的阶段，具体步骤如下：</p>
<ol>
<li><strong>Map 端输出并分区</strong>：Map 任务完成后，输出结果会按照键进行分区。</li>
<li><strong>排序与合并</strong>：对分区内的数据进行排序，并可能进行合并操作。</li>
<li><strong>网络传输</strong>：将排序好的数据通过网络传输到对应的 Reduce 任务。</li>
<li><strong>Reduce 端合并与排序</strong>：Reduce 任务接收数据后，再次进行合并和排序。</li>
</ol>
<h2 id="5-hdfs文件系统的读取数据流程是什么"><a href="#5-hdfs文件系统的读取数据流程是什么" class="headerlink" title="5. hdfs文件系统的读取数据流程是什么?"></a>5. hdfs文件系统的读取数据流程是什么?</h2><img src="/2025/07/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.7%20hadoop%E9%97%AE%E7%AD%94/file-20250707174147186.png" class="">
<ol>
<li>客户端向 NameNode 发送文件读取请求。</li>
<li>NameNode 返回文件数据块的位置信息。</li>
<li>客户端直接与 DataNode 建立连接读取数据。</li>
<li>DataNode 将数据块传输给客户端。</li>
<li>若读取多个数据块，客户端会并行读取以提高效率</li>
</ol>
<h2 id="6-hdfs文件系统的写文件流程是什么"><a href="#6-hdfs文件系统的写文件流程是什么" class="headerlink" title="6. hdfs文件系统的写文件流程是什么?"></a>6. hdfs文件系统的写文件流程是什么?</h2><img src="/2025/07/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.7%20hadoop%E9%97%AE%E7%AD%94/file-20250707173638905.png" class="">
<ol>
<li>客户端向 NameNode 发起文件创建请求。</li>
<li>NameNode 检查文件是否存在以及客户端权限，若通过检查则创建文件记录（响应上传请求）。</li>
<li>客户端将数据分成数据块，以流式方式写入第一个 DataNode。</li>
<li>DataNode 按照流水线方式将数据块复制到其他副本节点。</li>
<li>完成写入后，DataNode 向客户端确认，客户端再向 NameNode 确认（数据同步）。</li>
</ol>
<h2 id="7-hdfs文件系统-namenode的更新流程是什么"><a href="#7-hdfs文件系统-namenode的更新流程是什么" class="headerlink" title="7. hdfs文件系统 namenode的更新流程是什么?"></a>7. hdfs文件系统 namenode的更新流程是什么?</h2><ol>
<li>所有对文件系统元数据的修改操作都会记录到编辑日志（EditLog）中。</li>
<li>内存中的命名空间（Namespace）会被实时更新。</li>
<li>SecondaryNameNode 定期从 NameNode 获取编辑日志和命名空间镜像。</li>
<li>SecondaryNameNode 将编辑日志合并到命名空间镜像中，生成新的检查点。</li>
<li>NameNode 在启动时会使用最新的检查点恢复元数据。</li>
</ol>
<h2 id="8-整个mapreduce阶段经历几次排序-分别在哪些阶段"><a href="#8-整个mapreduce阶段经历几次排序-分别在哪些阶段" class="headerlink" title="8. 整个mapreduce阶段经历几次排序?分别在哪些阶段?"></a>8. 整个mapreduce阶段经历几次排序?分别在哪些阶段?</h2><p>在整个 MapReduce 阶段中，核心的排序大致发生 3 次，主要在以下阶段：</p>
<table>
<thead>
<tr>
<th>阶段</th>
<th>排序目的</th>
<th>主要发生在哪</th>
</tr>
</thead>
<tbody><tr>
<td>Map输出排序</td>
<td>对 Map 输出按 key 排序</td>
<td>Map Task 内存缓冲区写磁盘时</td>
</tr>
<tr>
<td>Shuffle 归并排序</td>
<td>把多个 Map 输出文件归并成有序流</td>
<td>Reduce Task 拉取后本地归并</td>
</tr>
<tr>
<td>Reduce输入排序</td>
<td>按 key 进行最终分组（可有自定义二次排序）</td>
<td>Reduce Task 输入流</td>
</tr>
</tbody></table>
<h2 id="9-hive中内部表和外部表有什么区别-分区表和分桶表有什么区别"><a href="#9-hive中内部表和外部表有什么区别-分区表和分桶表有什么区别" class="headerlink" title="9. hive中内部表和外部表有什么区别? 分区表和分桶表有什么区别?"></a>9. hive中内部表和外部表有什么区别? 分区表和分桶表有什么区别?</h2><ul>
<li><p><strong>内部表与外部表的区别</strong>：</p>
<ul>
<li>内部表（Managed Table）：Hive 管理数据的存储位置，删除表时会同时删除数据。</li>
<li>外部表（External Table）：数据由用户指定存储位置，删除表时仅删除元数据，数据不会被删除。</li>
</ul>
</li>
<li><p><strong>分区表与分桶表的区别</strong>：</p>
<ul>
<li>分区表（Partitioned Table）：按照指定字段（如日期、地区）将数据存储在不同的目录中。</li>
<li>分桶表（Bucketed Table）：通过哈希函数将数据分到不同的文件（桶）中，常用于提高查询效率</li>
</ul>
</li>
</ul>
<h2 id="10-数据倾斜是什么-如何规避和处理"><a href="#10-数据倾斜是什么-如何规避和处理" class="headerlink" title="10. 数据倾斜是什么? 如何规避和处理?"></a>10. 数据倾斜是什么? 如何规避和处理?</h2><p><strong>数据倾斜</strong>指的是在分布式计算中，部分任务处理的数据量远大于其他任务，导致整体性能下降的现象。</p>
<p><strong>规避和处理方法</strong>有：</p>
<ul>
<li>对 key 进行预处理，如添加随机前缀。</li>
<li>采用 Combiner 减少数据传输量。</li>
<li>增大 Reduce 任务数量。</li>
<li>利用 Hive 的 skewjoin 优化。</li>
<li>过滤异常 key 或对其进行单独处理。</li>
</ul>
<h2 id="11-如何使用hdfs文件系统上传或下载数据-关闭hdfs文件系统安全模式"><a href="#11-如何使用hdfs文件系统上传或下载数据-关闭hdfs文件系统安全模式" class="headerlink" title="11. 如何使用hdfs文件系统上传或下载数据? 关闭hdfs文件系统安全模式"></a>11. 如何使用hdfs文件系统上传或下载数据? 关闭hdfs文件系统安全模式</h2><ul>
<li><strong>上传数据</strong>：使用命令 <code>hdfs dfs -put &lt;本地路径&gt; &lt;HDFS路径&gt;</code>。</li>
<li><strong>下载数据</strong>：使用命令 <code>hdfs dfs -get &lt;HDFS路径&gt; &lt;本地路径&gt;</code>。</li>
<li><strong>关闭安全模式</strong>：先使用命令 <code>hdfs dfsadmin -safemode get</code> 查看安全模式状态，再使用 <code>hdfs dfsadmin -safemode leave</code> 关闭安全模式。</li>
</ul>
<h2 id="12-order-by-和sort-by-的区别和使用场景"><a href="#12-order-by-和sort-by-的区别和使用场景" class="headerlink" title="12. order by 和sort by 的区别和使用场景?"></a>12. order by 和sort by 的区别和使用场景?</h2><ul>
<li><strong>Order By</strong>：对查询结果进行全局排序，会将所有数据发送到一个 Reduce 任务中，在处理大量数据时效率较低。</li>
<li><strong>Sort By</strong>：仅保证每个 Reduce 任务内部数据有序，最终结果可能不是全局有序的，但处理效率更高。</li>
</ul>
<p><strong>使用场景</strong>：当需要严格全局有序时使用 Order By，对全局顺序要求不高时使用 Sort By。</p>
<h2 id="13-cluster-by-和distribute-by-的区别和使用场景"><a href="#13-cluster-by-和distribute-by-的区别和使用场景" class="headerlink" title="13. cluster by 和distribute by 的区别和使用场景?"></a>13. cluster by 和distribute by 的区别和使用场景?</h2><ul>
<li><strong>Cluster By</strong>：相当于 Distribute By 和 Sort By 的组合，既按照指定字段进行数据分发，又对分发后的数据进行排序。</li>
<li><strong>Distribute By</strong>：仅控制数据在不同 Reduce 任务之间的分发，不保证排序。</li>
</ul>
<p><strong>使用场景</strong>：Cluster By 用于需要数据分发和排序的场景，Distribute By 用于只需要控制数据分发的场景。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>datax脚本实现数据导入导出</title>
    <url>/2025/07/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.3%20datax%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</url>
    <content><![CDATA[<h1 id="DataX"><a href="#DataX" class="headerlink" title="DataX"></a>DataX</h1><p>项目地址：<a href="https://github.com/alibaba/DataX">https://github.com/alibaba/DataX</a><br>官方文档：<a href="https://github.com/alibaba/DataX/blob/master/introduction.md">https://github.com/alibaba/DataX/blob/master/introduction.md</a></p>
<p>DataX 是阿里巴巴开源的一个异构数据源离线同步工具，致力于实现包括关系型数据库(MySQL、Oracle等)、HDFS、Hive、ODPS、HBase、FTP等各种异构数据源之间稳定高效的数据同步功能。</p>
<p>​ DataX本身作为数据同步框架，将不同数据源的同步抽象为从源头数据源读取数据的Reader插件，以及向目标端写入数据的Writer插件，理论上DataX框架可以支持任意数据源类型的数据同步工作。同时DataX插件体系作为一套生态系统, 每接入一套新数据源该新加入的数据源即可实现和现有的数据源互通。</p>
<h1 id="XXL-JOB"><a href="#XXL-JOB" class="headerlink" title="XXL-JOB"></a>XXL-JOB</h1><p>一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展<br>任务调度中心页面：<code>http://192.168.200.100:8080/xxl-job-admin/</code><br>启停脚本：vim &#x2F;opt&#x2F;module&#x2F;apache-hive-3.1.2-bin&#x2F;bin&#x2F;xxl</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">act=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;starting xxl-job&quot;</span></span><br><span class="line">    ssh root@hadoop100 <span class="string">&quot;cd /opt/module/xxljob; nohup java -jar xxl-job-admin-2.3.0.jar &gt; xxl-job.log 2&gt;&amp;1 &amp;&quot;</span></span><br><span class="line">    ssh root@hadoop100 <span class="string">&quot;cd /opt/module/xxljob; nohup java -jar xxl-job-executor-sample-springboot-2.3.0.jar &gt; xxl-job-executor.log 2&gt;&amp;1 &amp;&quot;</span></span><br><span class="line">    ssh root@hadoop101 <span class="string">&quot;cd /opt/module/xxljob; nohup java -jar xxl-job-executor-sample-springboot-2.3.0.jar &gt; xxl-job-executor.log 2&gt;&amp;1 &amp;&quot;</span></span><br><span class="line">    ssh root@hadoop102 <span class="string">&quot;cd /opt/module/xxljob; nohup java -jar xxl-job-executor-sample-springboot-2.3.0.jar &gt; xxl-job-executor.log 2&gt;&amp;1 &amp;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;stopping xxl-job&quot;</span></span><br><span class="line">    ssh root@hadoop100 <span class="string">&quot;ps -aux | grep xxl-job-admin | grep -v grep | awk &#x27;&#123;print \$2&#125;&#x27; | xargs kill -9&quot;</span></span><br><span class="line">    ssh root@hadoop100 <span class="string">&quot;ps -aux | grep xxl-job-executor-sample | grep -v grep | awk &#x27;&#123;print \$2&#125;&#x27; | xargs kill -9&quot;</span></span><br><span class="line">    ssh root@hadoop101 <span class="string">&quot;ps -aux | grep xxl-job-executor-sample | grep -v grep | awk &#x27;&#123;print \$2&#125;&#x27; | xargs kill -9&quot;</span></span><br><span class="line">    ssh root@hadoop102 <span class="string">&quot;ps -aux | grep xxl-job-executor-sample | grep -v grep | awk &#x27;&#123;print \$2&#125;&#x27; | xargs kill -9&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;=============== hadoop102 =================&quot;</span></span><br><span class="line">    ssh root@hadoop102 <span class="string">&quot;ps -aux | grep xxl-job-executor-sample | grep -v grep&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;=============== hadoop101 =================&quot;</span></span><br><span class="line">    ssh root@hadoop101 <span class="string">&quot;ps -aux | grep xxl-job-executor-sample | grep -v grep&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;=============== hadoop100 =================&quot;</span></span><br><span class="line">    ssh root@hadoop100 <span class="string">&quot;ps -aux | grep xxl-job | grep -v grep&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$act</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">    start</span><br><span class="line">    status</span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">    stop</span><br><span class="line">    status</span><br><span class="line">;;</span><br><span class="line">restart)</span><br><span class="line">    stop</span><br><span class="line">    start</span><br><span class="line">    status</span><br><span class="line">;;</span><br><span class="line">status)</span><br><span class="line">    status</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>

<h1 id="Hive-表导出到-MySQL-数据库"><a href="#Hive-表导出到-MySQL-数据库" class="headerlink" title="Hive 表导出到 MySQL 数据库"></a>Hive 表导出到 MySQL 数据库</h1><h2 id="test-read-hdfs-json"><a href="#test-read-hdfs-json" class="headerlink" title="test_read_hdfs.json"></a><code>test_read_hdfs.json</code></h2><p>将 HDFS 中的数据同步到 MySQL 数据库</p>
<ol>
<li>从 HDFS 路径 <code>/user/hive/warehouse/db_hive.db/sqoop_emp</code> 读取数据</li>
<li>按制表符分隔解析文本行，提取 8 个字段</li>
<li>通过 3 个并发通道将数据传输到 MySQL</li>
<li>将数据插入到 MySQL 的 <code>test.emp</code> 表中</li>
</ol>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;setting&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;channel&quot;</span><span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;reader&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hdfsreader&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;parameter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/user/hive/warehouse/db_hive.db/sqoop_emp&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;defaultFS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hdfs://hadoop100:8020&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;column&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span></span><br><span class="line">                        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;fileType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;encoding&quot;</span><span class="punctuation">:</span> <span class="string">&quot;UTF-8&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;fieldDelimiter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\t&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;writer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mysqlwriter&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;parameter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;writeMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;insert&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;column&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                            <span class="string">&quot;empno&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="string">&quot;ename&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="string">&quot;job&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="string">&quot;mgr&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="string">&quot;hiredate&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="string">&quot;sal&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="string">&quot;comm&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="string">&quot;deptno&quot;</span></span><br><span class="line">                        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;session&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                            <span class="string">&quot;set session sql_mode=&#x27;ANSI&#x27;&quot;</span></span><br><span class="line">                        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;connection&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;jdbcUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jdbc:mysql://hadoop100:3306/test?useSSL=False&amp;useUnicode=true&amp;characterEncoding=utf-8&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;table&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                                    <span class="string">&quot;emp&quot;</span></span><br><span class="line">                                <span class="punctuation">]</span></span><br><span class="line">                            <span class="punctuation">&#125;</span></span><br><span class="line">                        <span class="punctuation">]</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<img src="/2025/07/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.3%20datax%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/file-20250703173220788.png" class="">
<img src="/2025/07/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.3%20datax%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/file-20250703173253687.png" class="">

<h2 id="exp-log-sh"><a href="#exp-log-sh" class="headerlink" title="exp_log.sh"></a><code>exp_log.sh</code></h2><ol>
<li><p><strong>生成配置文件</strong>：根据传入的日期分区参数 <code>$1</code>，动态生成 DataX 配置文件 <code>exp_log.json</code>，配置从 HDFS 读取指定日期分区的数据，并写入 MySQL 表。</p>
</li>
<li><p><strong>创建目标表</strong>：在 MySQL 中创建 <code>log</code> 表（如果不存在），定义五个 VARCHAR 类型的字段用于存储日志数据。</p>
</li>
<li><p><strong>执行数据同步</strong>：调用 DataX 工具执行数据导出任务，将 HDFS 上的文本格式数据（<code>/user/hive/warehouse/db_hive.db/log/dt=$part</code>）按字段映射关系写入 MySQL 的 <code>log</code> 表。</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">part=<span class="variable">$1</span> </span><br><span class="line"><span class="comment"># 创建一个json，用来给datax调用</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    &quot;job&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;setting&quot;: &#123;</span></span><br><span class="line"><span class="string">            &quot;speed&quot;: &#123;</span></span><br><span class="line"><span class="string">                &quot;channel&quot;: 3</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        &quot;content&quot;: [</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">                &quot;reader&quot;: &#123;</span></span><br><span class="line"><span class="string">                    &quot;name&quot;: &quot;hdfsreader&quot;,</span></span><br><span class="line"><span class="string">                    &quot;parameter&quot;: &#123;</span></span><br><span class="line"><span class="string">                        &quot;path&quot;: &quot;/user/hive/warehouse/db_hive.db/log/dt=&#x27;</span><span class="variable">$part</span><span class="string">&#x27;&quot;,</span></span><br><span class="line"><span class="string">                        &quot;defaultFS&quot;: &quot;hdfs://hadoop100:8020&quot;,</span></span><br><span class="line"><span class="string">                        &quot;column&quot;: [</span></span><br><span class="line"><span class="string">                            &#123;</span></span><br><span class="line"><span class="string">                                &quot;index&quot;: 0,</span></span><br><span class="line"><span class="string">                                &quot;type&quot;: &quot;string&quot;</span></span><br><span class="line"><span class="string">                            &#125;,</span></span><br><span class="line"><span class="string">                            &#123;</span></span><br><span class="line"><span class="string">                                &quot;index&quot;: 1,</span></span><br><span class="line"><span class="string">                                &quot;type&quot;: &quot;string&quot;</span></span><br><span class="line"><span class="string">                            &#125;,</span></span><br><span class="line"><span class="string">                            &#123;</span></span><br><span class="line"><span class="string">                                &quot;index&quot;: 2,</span></span><br><span class="line"><span class="string">                                &quot;type&quot;: &quot;string&quot;</span></span><br><span class="line"><span class="string">                            &#125;,</span></span><br><span class="line"><span class="string">                            &#123;</span></span><br><span class="line"><span class="string">                                &quot;index&quot;: 3,</span></span><br><span class="line"><span class="string">                                &quot;type&quot;: &quot;string&quot;</span></span><br><span class="line"><span class="string">                            &#125;,</span></span><br><span class="line"><span class="string">                            &#123;</span></span><br><span class="line"><span class="string">                                &quot;index&quot;: 4,</span></span><br><span class="line"><span class="string">                                &quot;type&quot;: &quot;string&quot;</span></span><br><span class="line"><span class="string">                            &#125;</span></span><br><span class="line"><span class="string">                        ],</span></span><br><span class="line"><span class="string">                        &quot;fileType&quot;: &quot;text&quot;,</span></span><br><span class="line"><span class="string">                        &quot;encoding&quot;: &quot;UTF-8&quot;,</span></span><br><span class="line"><span class="string">                        &quot;fieldDelimiter&quot;: &quot;\t&quot;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;,</span></span><br><span class="line"><span class="string">                &quot;writer&quot;: &#123;</span></span><br><span class="line"><span class="string">                    &quot;name&quot;: &quot;mysqlwriter&quot;,</span></span><br><span class="line"><span class="string">                    &quot;parameter&quot;: &#123;</span></span><br><span class="line"><span class="string">                        &quot;writeMode&quot;: &quot;insert&quot;,</span></span><br><span class="line"><span class="string">                        &quot;username&quot;: &quot;test&quot;,</span></span><br><span class="line"><span class="string">                        &quot;password&quot;: &quot;test&quot;,</span></span><br><span class="line"><span class="string">                        &quot;column&quot;: [</span></span><br><span class="line"><span class="string">                            &quot;ip&quot;,</span></span><br><span class="line"><span class="string">                            &quot;date_l&quot;,</span></span><br><span class="line"><span class="string">                            &quot;url&quot;,</span></span><br><span class="line"><span class="string">                            &quot;osinfo&quot;,</span></span><br><span class="line"><span class="string">                            &quot;bowser&quot;</span></span><br><span class="line"><span class="string">                        ],</span></span><br><span class="line"><span class="string">                        &quot;session&quot;: [</span></span><br><span class="line"><span class="string">                            &quot;set session sql_mode=&#x27;</span><span class="string">&quot;&#x27;ANSI&#x27;&quot;</span><span class="string">&#x27;&quot;</span></span><br><span class="line"><span class="string">                        ],</span></span><br><span class="line"><span class="string">                        &quot;connection&quot;: [</span></span><br><span class="line"><span class="string">                            &#123;</span></span><br><span class="line"><span class="string">                                &quot;jdbcUrl&quot;: &quot;jdbc:mysql://hadoop100:3306/test?useSSL=False&amp;useUnicode=true&amp;characterEncoding=utf-8&quot;,</span></span><br><span class="line"><span class="string">                                &quot;table&quot;: [</span></span><br><span class="line"><span class="string">                                    &quot;log&quot;</span></span><br><span class="line"><span class="string">                                ]</span></span><br><span class="line"><span class="string">                            &#125;</span></span><br><span class="line"><span class="string">                        ]</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        ]</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> &gt; /root/datax/json/exp_log.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写一个建表语句，再mysql建表</span></span><br><span class="line">mysql -utest -ptest --database=<span class="built_in">test</span> -e \</span><br><span class="line"><span class="string">&#x27;create table if not exists log (</span></span><br><span class="line"><span class="string">    ip varchar(500),</span></span><br><span class="line"><span class="string">    date_l varchar(500),</span></span><br><span class="line"><span class="string">    url varchar(500),</span></span><br><span class="line"><span class="string">    osinfo varchar(500),</span></span><br><span class="line"><span class="string">    bowser varchar(500)</span></span><br><span class="line"><span class="string">)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动datax程序，完成操作</span></span><br><span class="line">/usr/local/bin/python3.9 /opt/module/datax/bin/datax.py /root/datax/json/exp_log.json</span><br></pre></td></tr></table></figure>
<img src="/2025/07/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.3%20datax%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/file-20250703191235507.png" class="">

<h2 id="xxl-job-任务调度中心-新增任务管理"><a href="#xxl-job-任务调度中心-新增任务管理" class="headerlink" title="xxl-job-任务调度中心-新增任务管理"></a>xxl-job-任务调度中心-新增任务管理</h2><img src="/2025/07/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.3%20datax%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/file-20250703191803161.png" class="">

<p><strong>GLUE IDE</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;xxl-job: hello shell&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;脚本位置：<span class="variable">$0</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;任务参数：<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;分片序号 = <span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;分片总数 = <span class="variable">$3</span>&quot;</span></span><br><span class="line">/root/datax/shell/exp_log.sh <span class="variable">$1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Good bye!&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure>

<p>分别手动执行一次</p>
<img src="/2025/07/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.3%20datax%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/file-20250703193230506.png" class="">

<p>mysql.test中查询log数据量</p>
<img src="/2025/07/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.3%20datax%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/file-20250703193442275.png" class="">


<h1 id="动态分区表导入导出"><a href="#动态分区表导入导出" class="headerlink" title="动态分区表导入导出"></a>动态分区表导入导出</h1><h2 id="imp-log-json"><a href="#imp-log-json" class="headerlink" title="imp_log.json"></a><code>imp_log.json</code></h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;setting&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;channel&quot;</span><span class="punctuation">:</span> <span class="number">3</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;errorLimit&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;record&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;percentage&quot;</span><span class="punctuation">:</span> <span class="number">0.02</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;reader&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mysqlreader&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;parameter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;column&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                            <span class="string">&quot;*&quot;</span></span><br><span class="line">                        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;splitPk&quot;</span><span class="punctuation">:</span> <span class="string">&quot;db_id&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;connection&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;querySql&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                                    <span class="string">&quot;select * from log where osinfo = &#x27;Windows&#x27;;&quot;</span></span><br><span class="line">                                <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;jdbcUrl&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                                    <span class="string">&quot;jjdbc:mysql://hadoop100:3306/test?useSSL=False&amp;useUnicode=true&amp;characterEncoding=utf-8&quot;</span></span><br><span class="line">                                <span class="punctuation">]</span></span><br><span class="line">                            <span class="punctuation">&#125;</span></span><br><span class="line">                        <span class="punctuation">]</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;writer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hdfswriter&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;parameter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;defaultFS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hdfs://hadoop100:8020&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;fileType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;orc&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/user/hive/warehouse/db_hive.db/log_tmp&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;fileName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;log_p&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;column&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ip&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;date_l&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;url&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;osinfo&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;browser&quot;</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span></span><br><span class="line">                            <span class="punctuation">&#125;</span></span><br><span class="line">                        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;writeMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;truncate&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;fieldDelimiter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;compress&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NONE&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>在db_hive中建log_temp表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create table</span> log_tmp(</span><br><span class="line">	ip string,</span><br><span class="line">	date_l string,</span><br><span class="line">	url string,</span><br><span class="line">	osinfo string,</span><br><span class="line">	browser string</span><br><span class="line">)</span><br><span class="line"><span class="type">row</span> format delimited</span><br><span class="line">fields terminated <span class="keyword">by</span> <span class="string">&#x27;\t&#x27;</span></span><br><span class="line">lines terminated <span class="keyword">by</span> <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">stored <span class="keyword">as</span> orc</span><br></pre></td></tr></table></figure>

<p>运行脚本<br><code>/usr/local/bin/python3.9 /opt/module/datax/bin/datax.py /root/datax/json/imp_log.json</code></p>
<img src="/2025/07/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.3%20datax%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/file-20250703202325356.png" class="">

<h2 id="imp-log-sh"><a href="#imp-log-sh" class="headerlink" title="imp_log.sh"></a><code>imp_log.sh</code></h2><ol>
<li><strong>JSON 配置文件生成</strong>：创建 DataX 任务配置文件 <code>imp_log.json</code>，配置从 MySQL 读取数据并写入 HDFS 的 ORC 文件格式。</li>
<li><strong>Hive 表创建</strong>：使用 Beeline 连接 Hive，创建两个 ORC 格式的表：<ul>
<li><code>log_tmp</code>：临时表，用于存储从 MySQL 导入的原始数据</li>
<li><code>log_p</code>：分区表，按操作系统类型 (<code>os_tp</code>) 分区</li>
</ul>
</li>
<li><strong>数据抽取与导入</strong>：调用 DataX 工具执行数据同步任务，将 MySQL 的 <code>log</code> 表数据导入到 Hive 的 <code>log_tmp</code> 表。</li>
<li><strong>动态分区插入</strong>：配置 Hive 动态分区参数，将 <code>log_tmp</code> 表的数据按 <code>osinfo</code> 字段的值自动分配到 <code>log_tmp2</code> 表的不同分区中。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#创建json文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;job&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;setting&quot;: &#123;</span></span><br><span class="line"><span class="string">            &quot;speed&quot;: &#123;</span></span><br><span class="line"><span class="string">                &quot;channel&quot;: 3</span></span><br><span class="line"><span class="string">            &#125;,</span></span><br><span class="line"><span class="string">            &quot;errorLimit&quot;: &#123;</span></span><br><span class="line"><span class="string">                &quot;record&quot;: 0,</span></span><br><span class="line"><span class="string">                &quot;percentage&quot;: 0.02</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        &quot;content&quot;: [</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">                &quot;reader&quot;: &#123;</span></span><br><span class="line"><span class="string">                    &quot;name&quot;: &quot;mysqlreader&quot;,</span></span><br><span class="line"><span class="string">                    &quot;parameter&quot;: &#123;</span></span><br><span class="line"><span class="string">                        &quot;username&quot;: &quot;test&quot;,</span></span><br><span class="line"><span class="string">                        &quot;password&quot;: &quot;test&quot;,</span></span><br><span class="line"><span class="string">                        &quot;column&quot;: [</span></span><br><span class="line"><span class="string">                            &quot;*&quot;</span></span><br><span class="line"><span class="string">                        ],</span></span><br><span class="line"><span class="string">                        //&quot;splitPk&quot;: &quot;db_id&quot;,</span></span><br><span class="line"><span class="string">                        &quot;connection&quot;: [</span></span><br><span class="line"><span class="string">                            &#123;</span></span><br><span class="line"><span class="string">                                &quot;table&quot;: [</span></span><br><span class="line"><span class="string">                                    &quot;log;&quot;</span></span><br><span class="line"><span class="string">                                ],</span></span><br><span class="line"><span class="string">                                &quot;jdbcUrl&quot;: [</span></span><br><span class="line"><span class="string">                                    &quot;jdbc:mysql://hadoop100:3306/test?useSSL=False&amp;useUnicode=true&amp;characterEncoding=utf-8&quot;</span></span><br><span class="line"><span class="string">                                ]</span></span><br><span class="line"><span class="string">                            &#125;</span></span><br><span class="line"><span class="string">                        ]</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;,</span></span><br><span class="line"><span class="string">                &quot;writer&quot;: &#123;</span></span><br><span class="line"><span class="string">                    &quot;name&quot;: &quot;hdfswriter&quot;,</span></span><br><span class="line"><span class="string">                    &quot;parameter&quot;: &#123;</span></span><br><span class="line"><span class="string">                        &quot;defaultFS&quot;: &quot;hdfs://hadoop100:8020&quot;,</span></span><br><span class="line"><span class="string">                        &quot;fileType&quot;: &quot;orc&quot;,</span></span><br><span class="line"><span class="string">                        &quot;path&quot;: &quot;/user/hive/warehouse/db_hive.db/log_tmp&quot;,</span></span><br><span class="line"><span class="string">                        &quot;fileName&quot;: &quot;log_tmp&quot;,</span></span><br><span class="line"><span class="string">                        &quot;column&quot;: [</span></span><br><span class="line"><span class="string">                            &#123;</span></span><br><span class="line"><span class="string">                                &quot;name&quot;: &quot;ip&quot;,</span></span><br><span class="line"><span class="string">                                &quot;type&quot;: &quot;string&quot;</span></span><br><span class="line"><span class="string">                            &#125;,</span></span><br><span class="line"><span class="string">                            &#123;</span></span><br><span class="line"><span class="string">                                &quot;name&quot;: &quot;date_l&quot;,</span></span><br><span class="line"><span class="string">                                &quot;type&quot;: &quot;string&quot;</span></span><br><span class="line"><span class="string">                            &#125;,</span></span><br><span class="line"><span class="string">                            &#123;</span></span><br><span class="line"><span class="string">                                &quot;name&quot;: &quot;url&quot;,</span></span><br><span class="line"><span class="string">                                &quot;type&quot;: &quot;string&quot;</span></span><br><span class="line"><span class="string">                            &#125;,</span></span><br><span class="line"><span class="string">                            &#123;</span></span><br><span class="line"><span class="string">                                &quot;name&quot;: &quot;osinfo&quot;,</span></span><br><span class="line"><span class="string">                                &quot;type&quot;: &quot;string&quot;</span></span><br><span class="line"><span class="string">                            &#125;,</span></span><br><span class="line"><span class="string">                            &#123;</span></span><br><span class="line"><span class="string">                                &quot;name&quot;: &quot;browser&quot;,</span></span><br><span class="line"><span class="string">                                &quot;type&quot;: &quot;string&quot;</span></span><br><span class="line"><span class="string">                            &#125;</span></span><br><span class="line"><span class="string">                        ],</span></span><br><span class="line"><span class="string">                        &quot;writeMode&quot;: &quot;truncate&quot;,</span></span><br><span class="line"><span class="string">                        &quot;fieldDelimiter&quot;: &quot;\t&quot;,</span></span><br><span class="line"><span class="string">                        &quot;compress&quot;: &quot;NONE&quot;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        ]</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> &gt; /root/datax/json/imp_log.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建临时表和分区表</span></span><br><span class="line">beeline -u jdbc:hive2://hadoop100:10000/db_hive -u root -p 545456 -e \</span><br><span class="line"><span class="string">&quot;CREATE TABLE if not exists log_tmp(</span></span><br><span class="line"><span class="string">ip string,</span></span><br><span class="line"><span class="string">date_l string,</span></span><br><span class="line"><span class="string">url string,</span></span><br><span class="line"><span class="string">osinfo string,</span></span><br><span class="line"><span class="string">browser string</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">row format delimited</span></span><br><span class="line"><span class="string">fields terminated by &#x27;\t&#x27;</span></span><br><span class="line"><span class="string">lines TERMINATED by &#x27;\n&#x27;</span></span><br><span class="line"><span class="string">STORED AS orc;</span></span><br><span class="line"><span class="string">CREATE TABLE if not exists log_p(</span></span><br><span class="line"><span class="string">ip string,</span></span><br><span class="line"><span class="string">date_l string,</span></span><br><span class="line"><span class="string">url string, </span></span><br><span class="line"><span class="string">osinfo string,</span></span><br><span class="line"><span class="string">browser string</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">partitioned by (os_tp string)</span></span><br><span class="line"><span class="string">row format delimited</span></span><br><span class="line"><span class="string">fields terminated by &#x27;\t&#x27;</span></span><br><span class="line"><span class="string">lines TERMINATED by &#x27;\n&#x27;</span></span><br><span class="line"><span class="string">STORED AS orc &quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;*******************建表完成--***********************&#x27;</span></span><br><span class="line"><span class="comment">#导入数据</span></span><br><span class="line">/bin/python3 /opt/module/datax/bin/datax.py /root/datax/json/imp_log.json</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;*****************数据导入成功************************&#x27;</span></span><br><span class="line"><span class="comment">#动态分区</span></span><br><span class="line">beeline -u jdbc:hive2://hadoop100:10000/db_hive -u root -p 545456 -e \</span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">set hive.exec.dynamic.partition=true;</span></span><br><span class="line"><span class="string">set hive.exec.dynamic.partition.mode=nonstrict;</span></span><br><span class="line"><span class="string">set hive.exec.max.dynamic.partitions=200;</span></span><br><span class="line"><span class="string">set hive.exec.max.dynamic.partitions.pernode=50;</span></span><br><span class="line"><span class="string">set hive.exec.max.created.files=1000;</span></span><br><span class="line"><span class="string">set hive.error.on.empty.partition=false;</span></span><br><span class="line"><span class="string">set hive.support.quoted.identifiers=none;</span></span><br><span class="line"><span class="string">insert into log_p partition (os_tp) select l.*,osinfo from log_tmp l;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;------------------完成------------------&#x27;</span></span><br></pre></td></tr></table></figure>
<img src="/2025/07/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.3%20datax%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/file-20250703210754507.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>datax</tag>
      </tags>
  </entry>
  <entry>
    <title>5.16总结：Linux基础</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.16%E6%80%BB%E7%BB%93%EF%BC%9ALinux%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>查看ip命令：ifconfig<br>IP: 192.168.48.129</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.16%E6%80%BB%E7%BB%93%EF%BC%9ALinux%E5%9F%BA%E7%A1%80/file-20250618200815881.png" class="">

<h1 id="文件夹规范"><a href="#文件夹规范" class="headerlink" title="文件夹规范"></a>文件夹规范</h1><p>在 Linux 系统里，不同的文件夹依据其设计定位，存放着特定类型的文件。</p>
<p><strong>&#x2F;bin</strong><br>存放着系统启动时需要的基本命令，如ls、cd、cp、mv等。这些命令是系统正常运行和用户进行基本操作所必需的，无论是在普通用户模式还是在单用户模式下都能使用。</p>
<p><strong>&#x2F;sbin</strong><br>主要存放系统管理员使用的系统管理命令，例如init、ifconfig、route等。这些命令通常需要较高的权限才能执行，用于系统配置、管理和维护等操作。</p>
<p><strong>&#x2F;etc</strong><br>用于存放系统的各种配置文件，如passwd（用户账户信息）、group（用户组信息）、fstab（文件系统挂载信息）、network（网络配置文件）等。系统在启动和运行过程中会读取这些配置文件，以确定系统的运行参数和设置。</p>
<p><strong>&#x2F;dev</strong><br>包含了系统中的设备文件，如硬盘、光驱、串口、终端等设备都在这个目录下有对应的文件。通过这些设备文件，用户和程序可以访问和控制硬件设备。</p>
<p><strong>&#x2F;home</strong><br>普通用户的主目录所在位置，每个用户都有一个以自己用户名命名的子目录，用于存放用户个人的文件、配置文件和工作目录等。</p>
<p><strong>&#x2F;root</strong><br>系统管理员（root 用户）的主目录，root 用户可以在这个目录下进行系统管理和维护等操作。</p>
<p><strong>&#x2F;lib</strong><br>存放系统和应用程序运行时需要的共享库文件，这些库文件包含了可被多个程序共享的代码和数据，有助于节省系统资源和提高程序的运行效率。</p>
<p><strong>&#x2F;proc</strong><br>这是一个虚拟文件系统，它提供了系统内核和进程的相关信息，如系统内存使用情况、进程列表、CPU 状态等。可以通过访问&#x2F;proc目录下的文件来获取这些信息，用于系统监控和调试。</p>
<p><strong>&#x2F;sys</strong><br>也是一个虚拟文件系统，主要用于提供系统硬件设备的相关信息和属性，内核通过这个文件系统向用户空间提供关于系统硬件的信息。</p>
<p><strong>&#x2F;tmp</strong><br>临时文件目录，用于存放系统和应用程序在运行过程中产生的临时文件。系统在启动时会自动清理这个目录，通常不需要用户手动清理。</p>
<p><strong>&#x2F;var</strong><br>用于存放系统运行时经常变化的数据，如日志文件（&#x2F;var&#x2F;log）、邮件文件（&#x2F;var&#x2F;mail）、缓存文件（&#x2F;var&#x2F;cache）等。</p>
<p><strong>&#x2F;opt</strong><br>通常用于安装第三方应用程序或软件包，这些软件可能是由软件开发商提供的，也可能是用户自行编译安装的。</p>
<p><strong>&#x2F;usr</strong><br>包含了系统的共享资源，如可执行文件、库文件、头文件、文档等。它进一步分为&#x2F;usr&#x2F;bin（用户命令）、&#x2F;usr&#x2F;sbin（系统管理命令）、&#x2F;usr&#x2F;lib（库文件）、&#x2F;usr&#x2F;include（头文件）、&#x2F;usr&#x2F;share（共享数据，如文档、字体等）等子目录。</p>
<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="cd-切换目录"><a href="#cd-切换目录" class="headerlink" title="cd 切换目录"></a>cd 切换目录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~ 回到自己的家目录，一般直接用 <span class="built_in">cd</span> 即可</span><br><span class="line"><span class="built_in">cd</span> ../ 回到当前目录的上一级目录</span><br><span class="line"><span class="built_in">cd</span> / 回到根目录</span><br><span class="line">从根目录算起的路径叫做绝对路径，以斜线开头</span><br><span class="line"><span class="built_in">cd</span> /home/test/</span><br><span class="line">从当前目录算起的路径叫做相对路径，当前工作目录的相对位置</span><br><span class="line"><span class="built_in">cd</span> <span class="built_in">test</span> （当前位置有<span class="built_in">test</span>文件夹时可用）</span><br><span class="line"><span class="built_in">pwd</span> 显示现在所在的目录位置</span><br></pre></td></tr></table></figure>

<h2 id="ls-查看内容"><a href="#ls-查看内容" class="headerlink" title="ls 查看内容"></a>ls 查看内容</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -a 显示全部包括隐藏文件(隐藏文件以.开头)</span><br><span class="line">ll 等于 <span class="built_in">ls</span> -l 显示长格式属性，常用</span><br><span class="line"><span class="built_in">ls</span> -r 反向排序 </span><br><span class="line"><span class="built_in">ls</span> -S 按照占磁盘大小从大到小排序 </span><br><span class="line"><span class="built_in">ls</span> -t 以时间排序（由新到旧） </span><br><span class="line"><span class="built_in">ls</span> /home/test 指定路径查看</span><br></pre></td></tr></table></figure>
<p>-a -l -r 这类属于参数，可同时在一个 - 中设置，不分顺序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">按磁盘大小从大到小反向排序（即从小到大），长格式显示所有文件</span><br><span class="line"><span class="built_in">ls</span> -rlaS /home/test</span><br></pre></td></tr></table></figure>
<h2 id="mkdir-创建目录"><a href="#mkdir-创建目录" class="headerlink" title="mkdir 创建目录"></a>mkdir 创建目录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> a 创建一个目录 </span><br><span class="line"><span class="built_in">mkdir</span> b c 同时创建多个目录 </span><br><span class="line"><span class="built_in">mkdir</span> -p d/e 创建多级目录(创建一个目录d，里面有个目录e)</span><br></pre></td></tr></table></figure>
<p>蓝色 代表目录<br>白色 代表文件</p>
<h2 id="touch-创建空文件"><a href="#touch-创建空文件" class="headerlink" title="touch 创建空文件"></a>touch 创建空文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> name.txt </span><br><span class="line"><span class="built_in">touch</span> /root/test/name.txt  <span class="comment">#文件名可带路径</span></span><br><span class="line"><span class="built_in">touch</span> &#123;1..5&#125;.txt  <span class="comment">#批量创建5个文件</span></span><br><span class="line"><span class="built_in">touch</span> student&#123;1..10&#125;.txt  <span class="comment">#文件名分别为student1.txt；student2.txt；student3.txt...student100.txt</span></span><br></pre></td></tr></table></figure>
<p>通配符：配合文件名及目录使用<br>？匹配一个字符 ?.txt<br>* 匹配全部字符 *.txt<br>{1..10} 1到10<br>{a..z} a b c …z<br>{A..Z} A B C …..Z</p>
<h2 id="rm-删除文件或目录"><a href="#rm-删除文件或目录" class="headerlink" title="rm 删除文件或目录"></a>rm 删除文件或目录</h2><p>rm 一般都带 -f 强制删除<br>删文件夹必带 -r 将指定目录下的所有文件与子目录一并处理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> t.txt 删除文件，会提示是否删除，输入y执行删除，n不删除 </span><br><span class="line"><span class="built_in">rm</span> -r a 删除a目录（文件夹）及其里面的文件及子目录 </span><br><span class="line"><span class="built_in">rm</span> -rf * 强制删除文件夹下面的子目录和文件 </span><br><span class="line"><span class="built_in">rm</span> -rf q*强制删除以q开头的文件夹及下面的子目录和文件</span><br></pre></td></tr></table></figure>

<h2 id="mv-移动文件或目录并命名"><a href="#mv-移动文件或目录并命名" class="headerlink" title="mv 移动文件或目录并命名"></a>mv 移动文件或目录并命名</h2><p>mv移动时可设置文件名，不填写路径只写文件名相当于不移动只重命名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> a b <span class="comment">#将文件a重命名为b</span></span><br><span class="line"><span class="built_in">mv</span> a.txt b.txt <span class="comment">#将a.txt重命名为b.txt</span></span><br><span class="line"><span class="built_in">mv</span> a c/ <span class="comment">#将文件a移动到c目录下</span></span><br><span class="line"><span class="built_in">mv</span> b.txt ../c.txt <span class="comment">#将b.txt移动到上一级目录并重命名为c.txt</span></span><br></pre></td></tr></table></figure>

<h2 id="cp-拷贝文件到指定目录并命名"><a href="#cp-拷贝文件到指定目录并命名" class="headerlink" title="cp 拷贝文件到指定目录并命名"></a>cp 拷贝文件到指定目录并命名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r 递归拷贝目录（复制包括所有子文件，必须使用） </span><br><span class="line"><span class="built_in">cp</span> a.txt b/a.txt </span><br><span class="line"><span class="built_in">cp</span> a.txt b/b.txt </span><br><span class="line"><span class="built_in">cp</span> -r /root/a /root/b</span><br></pre></td></tr></table></figure>

<h2 id="ln-软连接"><a href="#ln-软连接" class="headerlink" title="ln 软连接"></a>ln 软连接</h2><p>类似win快捷方式<br>浅蓝色<br>删除带 -r</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s 目标位置 链接名称</span><br><span class="line">目标位置：要链接到的原始文件或目录的路径</span><br><span class="line">链接名称：要创建的软连接的名称和位置，不写路径默认在当前目录下创建</span><br><span class="line"><span class="built_in">ln</span> -s /home/test/ wk</span><br><span class="line"><span class="built_in">ln</span> -s /home/test/ /home/wk</span><br><span class="line">删除软连接</span><br><span class="line"><span class="built_in">rm</span> -rf wk</span><br></pre></td></tr></table></figure>
<p>软连接存放路径一般放在用户的家目录，放在其他地方会出问题</p>
<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>Tab 命令补全；文件名或者路径补全；连续按2次Tab键，显示以已输入字符开头的所有命令、文件名或路径<br>Ctrl + C 取消当前命令行的编辑；结束当前执行的命令<br>上下键自动记录命令<br>Ctrl+滚轮上下滚动可以放大缩小<br>mobax右键快速粘贴，修改完重启mobox生效  （0516文件目录类.mp4_01:01:39）<br>鼠标中键也可快速粘贴</p>
<h2 id="vim-编辑文件"><a href="#vim-编辑文件" class="headerlink" title="vim 编辑文件"></a>vim 编辑文件</h2><p>在命令行下执行：vim 文件名 进入一般模式<br><strong>在一般模</strong>式下输入 i 或 a 进入编辑模式</p>
<p><strong>编辑模式</strong>按 esc 退回一般模式<br>在一般模式下输入 : 或 &#x2F; 进入命令模式</p>
<p><strong>命令模式</strong>下输入命令进行保存退出，有以下命令：<br>:wq 保存退出； :q 不保存退出； :q! 强制不保存退出<br>命令模式按 esc 退回一般模式</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.16%E6%80%BB%E7%BB%93%EF%BC%9ALinux%E5%9F%BA%E7%A1%80/file-20250618200735270.png" class="">

<h3 id="一般模式-命令"><a href="#一般模式-命令" class="headerlink" title="一般模式 命令"></a>一般模式 命令</h3><p>dd 删除光标所在的行,且保存到剪贴板<br>3dd 删除光标所在的三行,且保存到剪贴板<br>yy复制光标所在的行<br>4yy复制光标所在的连续4行<br>p（小写） 将已复制的内容在光标的下一行粘贴<br>P（大写）将已复制的内容在光标的上一行粘贴<br>x,X：在一行字中，x 为向后删除一个字符（相当于[Del]键），X 为向前删除一个字符 （相当于[Backspace]）也可5x（向后删除5个字符）等<br>G光标快速定位到最后一行 gg 光标快速定位到第一行<br>u 撤销上一步操作</p>
<h3 id="命令模式-命令"><a href="#命令模式-命令" class="headerlink" title="命令模式 命令"></a>命令模式 命令</h3><p>:wq 保存退出； :q 不保存退出； :q! 强制不保存退出<br>:set nu 显示行号；  :set nonu 取消行号<br>:5 光标快读定位到第5行<br>:nohl 去除高亮显示</p>
<p><strong>查找字符</strong>：&#x2F;<br>&#x2F;hello 查找字符串hello，按n向下搜索，按N向上搜索</p>
<p><strong>替换字符串</strong><br>替换字符串命令的基本语法是: [range]s&#x2F;⽬标字符串&#x2F;替换字符串&#x2F;[option]<br>其中range和option字段都可以缺省不填，间隔符除了&#x2F;还可以是其他的<br>range：表⽰搜索范围，默认表⽰当前⾏； 1,10表⽰从第1到第10⾏<br>g 表示全局替换，有多少次替换多少次；无g 只替代每行第一个<br>s 表示替换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#把整个文件的nologin替换成888888 </span></span><br><span class="line">:1,<span class="variable">$s</span>/nologin/88888/g</span><br><span class="line"></span><br><span class="line"><span class="comment">#把1到10行的nologin替换成888888</span></span><br><span class="line">:1,10s/nologin/88888/g</span><br></pre></td></tr></table></figure>


<h2 id="锁死IP"><a href="#锁死IP" class="headerlink" title="锁死IP"></a>锁死IP</h2><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.16%E6%80%BB%E7%BB%93%EF%BC%9ALinux%E5%9F%BA%E7%A1%80/file-20250618200840558.png" class="">

<h2 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h2><p>类似于备份系统，以便还原系统<br>虚拟机-快照-拍摄快照<br>如果系统出问题可以还原到这个拍照的节点<br>快照可以是关机也可以是开机，但建议关机拍快照</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.16%E6%80%BB%E7%BB%93%EF%BC%9ALinux%E5%9F%BA%E7%A1%80/file-20250717155831812.png" class="">

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.分别使用绝对路径和相对路径切换到home目录 </span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> ../home  <span class="comment">#当前为~</span></span><br><span class="line">2.回到当前目录的上一级目录 </span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line">3.回到家目录 </span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line">4.在/home目录下创建两个目录 class a </span><br><span class="line"><span class="built_in">mkdir</span> /home/class a  <span class="comment">#这个写法会在home下创一个class，在/下创一个a</span></span><br><span class="line"><span class="built_in">mkdir</span> /home/class /home/a</span><br><span class="line">5.创建目录 /home/class/students</span><br><span class="line"><span class="built_in">mkdir</span> /home/class/students</span><br><span class="line">6.删除一个目录 /home/a </span><br><span class="line"><span class="built_in">rm</span> -rf /home/a</span><br><span class="line">7.在目录 /home/class/students 下创建个文件 name.txt </span><br><span class="line"><span class="built_in">touch</span> /home/class/students/name.txt</span><br><span class="line">8.将 /home/class/students/name.txt 复制到 /home/class 目录 </span><br><span class="line"><span class="built_in">cp</span> /home/class/students/name.txt /home/class</span><br><span class="line">9.创建/home/class/teachers文件夹，复制整个目录 /home/class/students 到 /home/class/teachers/文件夹下 </span><br><span class="line"><span class="built_in">mkdir</span> /home/class/teachers</span><br><span class="line"><span class="built_in">cp</span> -r /home/class/students /home/class/teachers/</span><br><span class="line">10.删除 /home/class/name.txt</span><br><span class="line"><span class="built_in">rm</span> -f /home/class/name.txt </span><br><span class="line">11.删除文件夹及里面的文件 /home/class/teachers </span><br><span class="line"><span class="built_in">rm</span> -rf /home/class/teachers </span><br><span class="line">12./home目录下创建一个文件name.txt,重命名 /home/name.txt 文件为 age.txt </span><br><span class="line"><span class="built_in">touch</span> /home/name.txt</span><br><span class="line"><span class="built_in">mv</span> /home/name.txt /home/age.txt</span><br><span class="line">13.将 /home/age.txt 拷贝到 /root/ 目录下 </span><br><span class="line"><span class="built_in">cp</span> /home/age.txt /root/</span><br><span class="line">14.在/root下创建一个软连接wk，指向/etc/sysconfig/network-scripts/ifcfg-ens33，然后 使用ll查看这个软连接</span><br><span class="line"><span class="built_in">ln</span> -s /etc/sysconfig/network-scripts/ifcfg-ens33 /root/wk</span><br><span class="line">15.删除上题中建立的软连接 </span><br><span class="line"><span class="built_in">rm</span> -rf wk</span><br><span class="line">16.在/root下递归创建目录xxx/yyy/zzz </span><br><span class="line"><span class="built_in">mkdir</span> -p xxx/yyy/zzz</span><br><span class="line">17.使用<span class="built_in">touch</span>命令在zzz目录中批量创建文件：test1.log...test10.log，a.txt...z.txt， a1.txt...a10.txt b1.txt..b10.txt ... z1.txt...z10.txt </span><br><span class="line"><span class="built_in">cd</span> xxx/yyy/zzz</span><br><span class="line"><span class="built_in">touch</span> <span class="built_in">test</span>&#123;1..10&#125;.<span class="built_in">log</span> &#123;a..z&#125;.txt &#123;a..z&#125;&#123;1..10&#125;.txt</span><br><span class="line">18.删除zzz中所有名字是单个字母后缀是txt的文件 </span><br><span class="line"><span class="built_in">rm</span> -f ?.txt</span><br><span class="line">19.将zzz中所有<span class="built_in">test</span>开头的文件复制到上级目录yyy中</span><br><span class="line"><span class="built_in">cp</span> <span class="built_in">test</span>* ../</span><br></pre></td></tr></table></figure>

<p>练习题目3</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.将/etc/man_db.conf复制到家目录/root下; </span><br><span class="line"><span class="built_in">cp</span> /etc/man_db.conf /root/</span><br><span class="line"></span><br><span class="line">2.使用vim开启家目录下的man_db.conf在vim中设定一下行号; </span><br><span class="line">vim man_db.conf</span><br><span class="line">:<span class="built_in">set</span> num</span><br><span class="line"></span><br><span class="line">3.定位到第68行 </span><br><span class="line">:68</span><br><span class="line"></span><br><span class="line">4.移动到第一行，并且向下搜寻一下SECTION这个字符串，请问他在第几行? <span class="comment">#102行</span></span><br><span class="line">:1</span><br><span class="line">/SECTION</span><br><span class="line">5.接下来，我要</span><br><span class="line">将50到100行之间的小写[man]字符串改为大写[MAN]字符串 </span><br><span class="line">:50,100s/man/MAN/g</span><br><span class="line"></span><br><span class="line">6.修改完之后，突然反悔了，要全部复原，有哪些方法? </span><br><span class="line">u  <span class="comment">#撤销上一步操作</span></span><br><span class="line">:q!  <span class="comment">#强制不保存退出</span></span><br><span class="line"></span><br><span class="line">7.我要复制65到73这9行内容,并且贴到最后一行之后; </span><br><span class="line">:65,73y  <span class="comment">#复制65到73这9行内容</span></span><br><span class="line">:$  <span class="comment">#跳转到最后一行</span></span><br><span class="line">p  <span class="comment">#粘贴到下一行</span></span><br><span class="line">:65,73t$  <span class="comment">#组合命令，一行实现</span></span><br><span class="line"></span><br><span class="line">8.到第70行，并且向右删除5个字符 </span><br><span class="line">:70</span><br><span class="line">5x</span><br><span class="line"></span><br><span class="line">9.在第一行新增一行，该行内容输入[I am a student…] </span><br><span class="line">:1  <span class="comment">##先定位到第一行</span></span><br><span class="line">i  <span class="comment">#按i进入编辑模式再输入I am a student…</span></span><br><span class="line"></span><br><span class="line">10.找到原来猴子吃桃的题目，把代码拷贝到第50行之后 </span><br><span class="line"><span class="comment">#直接粘贴（）</span></span><br><span class="line"></span><br><span class="line">11.到第30行，删除30到38行 </span><br><span class="line">:30</span><br><span class="line">9dd</span><br><span class="line"></span><br><span class="line">12.取消行号，存储后离开吧！</span><br><span class="line">:<span class="built_in">set</span> nonu</span><br><span class="line">:wq</span><br><span class="line"></span><br><span class="line">13.配置静态ip，vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line"><span class="comment">#见上图锁死IP</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.19总结：Linux命令</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.19%E6%80%BB%E7%BB%93%EF%BC%9ALinux%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="Linux命令（搜索查看查找类）"><a href="#Linux命令（搜索查看查找类）" class="headerlink" title="Linux命令（搜索查看查找类）"></a>Linux命令（搜索查看查找类）</h1><h2 id="find-从指定目录查找文件"><a href="#find-从指定目录查找文件" class="headerlink" title="find 从指定目录查找文件"></a>find 从指定目录查找文件</h2><p>-name &lt;查询方式&gt; 按照指定的文件名查找模式查找文件<br>-mtime n 查找n天以前被修改过的所有文件。<br>-exec&lt;执行指令&gt;：假设find指令的回传值为True，就执行该指令；<br>-size &lt;文件大小&gt; 按照指定的文件大小查找文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /root -name <span class="string">&quot;*.pdf&quot;</span> find /root -name <span class="string">&quot;*.pdf&quot;</span> -a -size +1M find /root -mtime +7 <span class="comment">#七天前被修改过的文件 </span></span><br><span class="line">find /root -name <span class="string">&quot;*.sql&quot;</span> -<span class="built_in">exec</span> <span class="built_in">ls</span> -l &#123;&#125; \; <span class="comment">#查找文件并以ls -l形式显示 </span></span><br><span class="line">find /root -name <span class="string">&quot;*.pdf&quot;</span> -<span class="built_in">exec</span> <span class="built_in">rm</span> -f &#123;&#125; \;</span><br></pre></td></tr></table></figure>


<h2 id="head-与-tail-查看行"><a href="#head-与-tail-查看行" class="headerlink" title="head 与 tail 查看行"></a>head 与 tail 查看行</h2><p>头+ 尾-<br>head -n +行数 文件名 （不加-n默认开头十行）<br>tail -n -行数 文件名 （不加-n默认结尾十行） </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">head</span> a.txt <span class="comment">#默认显示开头十行</span></span><br><span class="line"><span class="built_in">tail</span> a.txt <span class="comment">#默认显示结尾十行 </span></span><br><span class="line"><span class="built_in">head</span> -n +3 a.txt   <span class="comment">#只显示前三行 </span></span><br><span class="line"><span class="built_in">tail</span> -n -3 a.txt   <span class="comment">#只显示后三行</span></span><br></pre></td></tr></table></figure>

<h2 id="cat-查看内容"><a href="#cat-查看内容" class="headerlink" title="cat 查看内容"></a>cat 查看内容</h2><p>cat（英文全拼：concatenate）命令用于连接文件并打印到标准输出设备上。<br>-n 显示行号包括空行<br>-b 跳过空白行编号<br>-s 将所有的连续的多个空行替换为一个空行（压缩成一个空行） </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> 1.<span class="built_in">log</span> 2.<span class="built_in">log</span> </span><br><span class="line"><span class="built_in">cat</span> -sb test.log</span><br></pre></td></tr></table></figure>

<h2 id="more查看大内容"><a href="#more查看大内容" class="headerlink" title="more查看大内容"></a>more查看大内容</h2><p>more 分屏查看文件（敲空格查看下一页）</p>
<h2 id="grep-过滤查找"><a href="#grep-过滤查找" class="headerlink" title="grep 过滤查找"></a>grep 过滤查找</h2><p>以行为单位进行查找，显示结果为满足的行<br>-c 统计满足的行数<br>-v 反转不包含</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep <span class="string">&quot;p&quot;</span> 1.txt <span class="comment">#单文件搜索包含p的行 </span></span><br><span class="line">grep <span class="string">&quot;P&quot;</span> 1.txt b.txt <span class="comment">#多文件搜索 </span></span><br><span class="line">grep -v <span class="string">&quot;p&quot;</span> 1.txt <span class="comment">#单文件搜索不包含p的行 </span></span><br><span class="line">grep -c <span class="string">&quot;p&quot;</span> 1.txt <span class="comment">#统计出现多少行 </span></span><br><span class="line">grep <span class="string">&quot;^n&quot;</span> 1.txt <span class="comment">#显示以n开头的行</span></span><br><span class="line">grep <span class="string">&quot;n$&quot;</span> 1.txt <span class="comment">#显示以n结尾的行 </span></span><br></pre></td></tr></table></figure>

<h2 id="history-查看已经执行过的历史命令"><a href="#history-查看已经执行过的历史命令" class="headerlink" title="history 查看已经执行过的历史命令"></a>history 查看已经执行过的历史命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">history</span> 5 <span class="comment">#最近五个命令</span></span><br></pre></td></tr></table></figure>

<h2 id="wc-统计文件"><a href="#wc-统计文件" class="headerlink" title="wc 统计文件"></a>wc 统计文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">wc</span> -c name.txt <span class="comment">#查看文件的字节数</span></span><br><span class="line"><span class="built_in">wc</span> -l name.txt <span class="comment">#查看文件的行数</span></span><br></pre></td></tr></table></figure>

<h2 id="du-查看空间"><a href="#du-查看空间" class="headerlink" title="du 查看空间"></a>du 查看空间</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">du</span> -h name.txt 人性化方式（带单位） </span><br><span class="line"><span class="built_in">du</span> -s name.txt 只统计每个参数所占用空间总的大小 </span><br><span class="line"><span class="built_in">du</span> -sh /root</span><br></pre></td></tr></table></figure>

<h2 id="管道符号-（配合命令使用）"><a href="#管道符号-（配合命令使用）" class="headerlink" title="管道符号 | （配合命令使用）"></a>管道符号 | （配合命令使用）</h2><p>管道符 | 表示将前一个命令的处理结果输出传递给后面的命令处理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">history</span> | grep -c <span class="string">&quot;ll&quot;</span> <span class="comment">#统计历史输入了几次ll命令</span></span><br></pre></td></tr></table></figure>

<h2 id="和-指令"><a href="#和-指令" class="headerlink" title="&gt; 和 &gt;&gt; 指令"></a>&gt; 和 &gt;&gt; 指令</h2><p>&gt; 输出重定向(覆盖写),<br>&gt;&gt; 追加（追加写）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l | grep -c <span class="string">&quot;^d&quot;</span> </span><br><span class="line"><span class="built_in">ls</span> -l | grep <span class="string">&quot;^d&quot;</span> | <span class="built_in">wc</span> -l </span><br><span class="line"><span class="built_in">history</span> | grep -c <span class="string">&quot;ls&quot;</span> </span><br><span class="line"><span class="built_in">history</span> | grep <span class="string">&quot;ls&quot;</span> | grep <span class="string">&quot;s$&quot;</span> &gt; ttt.txt </span><br><span class="line"><span class="built_in">cat</span> a.txt b.txt &gt;&gt; ttt.txt </span><br><span class="line"><span class="built_in">cat</span> a.txt b.txt | grep <span class="string">&quot;s&quot;</span> &gt;&gt; ttt.txt</span><br></pre></td></tr></table></figure>


<h1 id="解压安装类"><a href="#解压安装类" class="headerlink" title="解压安装类"></a>解压安装类</h1><h2 id="zip压缩-unzip解压"><a href="#zip压缩-unzip解压" class="headerlink" title="zip压缩 unzip解压"></a>zip压缩 unzip解压</h2><p>常用选项：<br>-r  递归压缩，即压缩目录<br>-d&lt;目录&gt;  指定解压后文件的存放目录<br>压缩用相对路径，解压可以用绝对路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩文件和目录 </span></span><br><span class="line">zip 文件名.zip 将要压缩的内容 </span><br><span class="line">zip test.zip -r a/b  <span class="comment">#注：绝对路径压缩会带前面的路径文件夹</span></span><br><span class="line"><span class="comment"># 解压缩文件 </span></span><br><span class="line">unzip 文件名.zip</span><br><span class="line">unzip linux.x64_11gR2_database_1of2.zip -d /opt/app/database/</span><br></pre></td></tr></table></figure>

<h2 id="tar-压缩解压"><a href="#tar-压缩解压" class="headerlink" title="tar 压缩解压"></a>tar 压缩解压</h2><p>-z  调用 gzip 程序进行压缩或解压<br>-c  创建（Create）.tar 格式的包文件<br>-x  解开.tar 格式的包文件<br>-c  &lt;&#x2F;解压时指定释放的目标文件夹 指定目录<br>-v  输出详细信息（Verbose）<br>-f  表示使用归档文件（一般都要带上表示使用tar，放在最后）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">压缩：tar [选项] ... 归档文件名（压缩包名字） 源文件或目录 <span class="comment">#压缩选项一般用-zcvf</span></span><br><span class="line">解压：tar [选项] ... 归档文件名 [-C 目标目录]  <span class="comment">#解压选项一般用-zxvf</span></span><br><span class="line">tar -zcvf abc123.tar.gz abc.txt 123.txt  <span class="comment">#将abc.txt和123.txt压缩成abc123.tar.gz</span></span><br><span class="line">tar -zcvf abc123.tar.gz m </span><br><span class="line">tar -zxvf abc123.tar.gz -C /home/test/  <span class="comment">#解压到指定目录</span></span><br></pre></td></tr></table></figure>

<h2 id="Yum包管理"><a href="#Yum包管理" class="headerlink" title="Yum包管理"></a>Yum包管理</h2><p>Yum是一个Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载 RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum list | grep xxx  <span class="comment">#查询yum服务器是否有需要安装的软件</span></span><br><span class="line">yum info xxx  <span class="comment">#查询指定的yum包信息</span></span><br><span class="line">yum install xxx  <span class="comment">#安装指定的yum包</span></span><br><span class="line">yum remove xxx  <span class="comment">#卸载指定的yum包 </span></span><br><span class="line">yum list installed  <span class="comment">#查看已安装的软件包</span></span><br><span class="line">yum install ntpdate  <span class="comment"># # 安装网络对时</span></span><br></pre></td></tr></table></figure>

<h1 id="用户权限类"><a href="#用户权限类" class="headerlink" title="用户权限类"></a>用户权限类</h1><p>登录时尽量少用root帐号登录，因为它是系统管理员，最大的权限，避免操作失误。可 以利用普通用户登录，登录后再用 su - 用户名 命令来切换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su - <span class="built_in">test</span>  <span class="comment">#切换到test用户</span></span><br><span class="line">su - root <span class="comment">#切换到root用户（需要输入密码）</span></span><br></pre></td></tr></table></figure>

<h2 id="用户及用户组"><a href="#用户及用户组" class="headerlink" title="用户及用户组"></a>用户及用户组</h2><p>类似于角色，系统可以对有共性的多个用户进行统一的管理 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">新增用户组 groupadd xiaoshou </span><br><span class="line">添加用户 useradd xiaomei </span><br><span class="line">添加用户时加上组 useradd -g xiaoshou xiaomei </span><br><span class="line">指定/修改密码 passwd xiaomei </span><br><span class="line">查询用户信息 <span class="built_in">id</span> xiaomei </span><br><span class="line">切换用户 su - xiaomei </span><br><span class="line">查看当前用户 <span class="built_in">whoami</span> </span><br><span class="line">修改用户的组 usermod -g 用户组 用户名 </span><br><span class="line">删除用户 userdel xiaomei (<span class="built_in">exit</span>退出后再删除) </span><br><span class="line">删除组 groupdel xiaoshou</span><br></pre></td></tr></table></figure>
<h3 id="用户和组的相关文件"><a href="#用户和组的相关文件" class="headerlink" title="用户和组的相关文件"></a>用户和组的相关文件</h3><p><strong>&#x2F;etc&#x2F;passwd 文件</strong><br>用户（user）的配置文件，记录用户的各种信息<br>每行的含义：用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell</p>
<p><strong>&#x2F;etc&#x2F;group 文件</strong><br>组(group)的配置文件，记录Linux包含的组的信息<br>每行含义：组名:口令:组标识号:组内用户列表</p>
<h2 id="权限详解"><a href="#权限详解" class="headerlink" title="权限详解"></a>权限详解</h2><p>[ r ]代表可读(read)<br>[ w ]代表可写(write)<br>[ x ]代表可执行(execute)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">drwxr-xr-x.  2 root    root      6 5月  16 14:26 a</span><br><span class="line">-rw-rw-rw-.  1 wukong shenxian   0 5月  19 16:32 1.txt</span><br></pre></td></tr></table></figure>
<p>10个字符.<br>第一个字符代表文件类型：文件（-） 目录（d） 链接（l）<br>接下来每三个字符为一组，共三组，分别代表 文件拥有者、同组的其他用户、不同组的其他用户</p>
<p>可用数字表示为：r&#x3D;4， w&#x3D;2， x&#x3D;1<br>因此 rwx&#x3D;4+2+1&#x3D;7</p>
<h2 id="chmod-修改权限"><a href="#chmod-修改权限" class="headerlink" title="chmod 修改权限"></a>chmod 修改权限</h2><p>u 所有者  g 所有组  o 其他人  a 所有人(u、g、o的总和) </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> u=rwx,g=rx,o=x name.txt</span><br><span class="line"><span class="built_in">chmod</span> o+w name.txt </span><br><span class="line"><span class="built_in">chmod</span> a-x name.txt</span><br><span class="line"><span class="built_in">chmod</span> +x name.txt <span class="comment">#不写用户默认为所有人，效果同a+x</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> u=rwx,g=rx,o=x file</span><br><span class="line"><span class="built_in">chmod</span> 751 file  <span class="comment">#功能同上     </span></span><br><span class="line">   　　 　   </span><br><span class="line"><span class="built_in">chmod</span> -R u+r directory  <span class="comment">#递归地给directory目录下所有文件和子目录的属主分配读的权限</span></span><br></pre></td></tr></table></figure>

<h3 id="chown-修改文件所有者"><a href="#chown-修改文件所有者" class="headerlink" title="chown 修改文件所有者"></a>chown 修改文件所有者</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> [-R] 所有者 文件或目录  <span class="comment">#-R表示递归里面的所有文件及目录 </span></span><br><span class="line"><span class="built_in">chown</span> test02 /root/test.txt </span><br><span class="line"><span class="built_in">chown</span> -R 用户:组 /usr/local/mysql </span><br><span class="line"><span class="built_in">chown</span> meimei:students 1.txt</span><br></pre></td></tr></table></figure>

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.将/etc/passwd文件拷贝到/root/目录下，并改名为ptest</span></span><br><span class="line"><span class="built_in">cp</span> /etc/passwd /root/ptest</span><br><span class="line"><span class="comment">#2.查看ptest的前八行数据 </span></span><br><span class="line"><span class="built_in">head</span> -n +8 ptest</span><br><span class="line"><span class="comment">#3.过滤查看ptest文件中包含root的行 </span></span><br><span class="line">grep <span class="string">&quot;root&quot;</span> ptest</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.查看/home目录占用空间 </span></span><br><span class="line"><span class="built_in">du</span> -sh /home</span><br><span class="line"></span><br><span class="line"><span class="comment">#5./root中新建文件test.log，插入内容如下： @directory-client @gnome-apps @gnome-desktop </span></span><br><span class="line"><span class="built_in">touch</span> /root/test.log</span><br><span class="line">vim test.log</span><br><span class="line">i <span class="string">&quot;@directory-client @gnome-apps @gnome-desktop &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#6.将test.log和ptest合并到/root目录下的test1.log </span></span><br><span class="line"><span class="built_in">cat</span> test.log ptest &gt; /root/test1.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#7.将/root目录下的ptest加上行号输出到test2.log</span></span><br><span class="line"><span class="built_in">cat</span> -n /root/ptest &gt; test2.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#8.查找并显示根目录下大于1M的png文件 </span></span><br><span class="line">find / -name <span class="string">&quot;*.png&quot;</span> -a -size +1M</span><br><span class="line"></span><br><span class="line"><span class="comment">#9.统计系统上使用ls命令的次数 </span></span><br><span class="line"><span class="built_in">history</span> | grep -c <span class="string">&quot;ls&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#10.将/root/ptest中出现了root的行存储到test.txt文件 </span></span><br><span class="line">grep <span class="string">&quot;root&quot;</span> /root/ptest &gt; test.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#11.根据名称查找 /root 下的txt文件 </span></span><br><span class="line">find /root -name <span class="string">&quot;*.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#12.查找整个linux系统下大于20M的文件 (+n 大于 -n小于 n等于) </span></span><br><span class="line">find / -size +20M</span><br><span class="line"></span><br><span class="line"><span class="comment">#13.查找/root/xxx/yyy/zzz下所有.txt文件并把他们删掉 </span></span><br><span class="line">find /root/xxx/yyy/zzz -name <span class="string">&quot;*.txt&quot;</span> -<span class="built_in">exec</span> <span class="built_in">rm</span> -f &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment">#14.统计ptest文件的字节数 </span></span><br><span class="line"><span class="built_in">wc</span> -c ptest</span><br><span class="line"><span class="built_in">cat</span> ptest | <span class="built_in">wc</span> -c  <span class="comment">#只显示数字</span></span><br><span class="line"><span class="comment">#15.统计ptest文件以s开头的行的数量</span></span><br><span class="line">grep -c <span class="string">&quot;^s&quot;</span> ptest</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.将 /root/xxx 压缩成 a.tar.gz </span></span><br><span class="line">tar -zcvf a.tar.gz /root/xxx </span><br><span class="line"></span><br><span class="line"><span class="comment">#2.将 a.tar.gz 解压到/root/ceshi/ </span></span><br><span class="line"><span class="built_in">mkdir</span> ceshi</span><br><span class="line">tar -zxvf a.tar.gz -C /root/ceshi/</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.增加用户组 students </span></span><br><span class="line">groupadd students</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.添加新用户kunkun及meimei并直接加到students组 </span></span><br><span class="line">useradd -g students kunkun</span><br><span class="line">useradd -g students meimei</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.指定kunkun密码, 然后切换到这个用户 </span></span><br><span class="line">passwd kunkun</span><br><span class="line">kunkun123</span><br><span class="line">su - kunkun</span><br><span class="line"><span class="comment">#6.到该用户的家目录新建一个student.txt </span></span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line"><span class="built_in">touch</span> student.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.查询并写入该用户的用户信息到student.txt, 退出exit </span></span><br><span class="line"><span class="built_in">id</span> kunkun &gt; student.txt</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#8.使用root账号新建文件1.txt及2.txt 对文件/root/1.txt 为所有用户分配读写执行权限 </span></span><br><span class="line"><span class="built_in">touch</span> 1.txt 2.txt</span><br><span class="line"><span class="built_in">chmod</span> 777 /root/1.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#9.对文件/root/2.txt 设置权限为rwxr-xr--</span></span><br><span class="line"><span class="built_in">chmod</span> 754 /root/2.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#10.对文件/root/2.txt 设置属组权限增加写的权限 </span></span><br><span class="line"><span class="built_in">chmod</span> g+w /root/2.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#11.给/root/1.txt文件修改kunkun用户及students用户组权限 </span></span><br><span class="line"><span class="built_in">chown</span> kunkun:students /root/1.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#12./root/下创建文件夹open，里面批量创建文件open1.log...open100.log </span></span><br><span class="line"><span class="built_in">mkdir</span> open</span><br><span class="line"><span class="built_in">touch</span> /root/open/open&#123;1..100&#125;.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#13.对文件夹open设置为meimei用户及students用户组权限 </span></span><br><span class="line"><span class="built_in">chown</span> -R meimei:students open</span><br><span class="line"></span><br><span class="line"><span class="comment">#14.对文件夹open设置权限为rwxr-xr-x </span></span><br><span class="line"><span class="built_in">chmod</span> -R 755 open</span><br><span class="line"></span><br><span class="line"><span class="comment">#15.查看/etc/group及/etc/passwd文件内容重定向到/root/open.txt中 </span></span><br><span class="line"><span class="built_in">cat</span> /etc/group /etc/passwd &gt; /root/open.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#16.删除用户kunkun和meimei，查看/etc/passwd的后3行数据追加到/root/open.txt中 </span></span><br><span class="line">userdel kunkun</span><br><span class="line">userdel meimei</span><br><span class="line"><span class="built_in">tail</span> -n -3 /etc/passwd &gt;&gt; /root/open.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#17.删除用户组，查看/etc/group的后3行数据追加到/root/open.txt中 </span></span><br><span class="line">groupdel students</span><br><span class="line"><span class="built_in">tail</span> -n -3 /etc/group &gt;&gt; /root/open.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#18.删除home下两个用户的文件夹及里面的内容</span></span><br><span class="line"><span class="built_in">rm</span> -rf /home/kunkun /home/meimei</span><br><span class="line"></span><br><span class="line"><span class="comment">#19.神仙妖怪大战，使用拼音来化名，例如：shaseng为沙僧 </span></span><br><span class="line"><span class="comment">#建立两个组 (神仙, 妖怪)，建立用户 (悟空, 八戒, 沙僧)，把悟空和八戒放入妖怪，沙僧放入神仙 </span></span><br><span class="line">groupadd shenxian</span><br><span class="line">groupadd yaoguai</span><br><span class="line">useradd -g yaoguai wukong</span><br><span class="line">useradd -g yaoguai bajie</span><br><span class="line">useradd -g shenxian shaseng</span><br><span class="line"><span class="comment">#设置三个用户的密码 </span></span><br><span class="line">passwd wukong</span><br><span class="line">wukong123</span><br><span class="line">passwd bajie</span><br><span class="line">bajie123</span><br><span class="line">passwd shaseng</span><br><span class="line">shaseng123</span><br><span class="line"><span class="comment">#用悟空在自己的家目录下建立一个文件 monkey.txt，该文件要输出 i am a monkey </span></span><br><span class="line">su - wukong</span><br><span class="line"><span class="built_in">touch</span> monkey.txt</span><br><span class="line">vim monkey.txt</span><br><span class="line">i <span class="comment">#i am a monkey</span></span><br><span class="line">esc :wq</span><br><span class="line"><span class="comment">#用root账号给八戒一个对悟空文件夹及内容可以rwx的权限 </span></span><br><span class="line">su - root</span><br><span class="line"><span class="built_in">chmod</span> -R g=rwx /home/wukong</span><br><span class="line"><span class="comment">#八戒修改 monkey.txt 加入一句话( i am a pig ) </span></span><br><span class="line">su - bajie</span><br><span class="line">vim /home/wukong/monkey.txt</span><br><span class="line">i <span class="comment">#i am a pig</span></span><br><span class="line">esc :wq</span><br><span class="line"><span class="comment">#测试一下沙僧对该文件有没有权限访问 </span></span><br><span class="line">su - shaseng</span><br><span class="line">vim /home/wukong/monkey.txt <span class="comment">#显示权限不足</span></span><br><span class="line">:q</span><br><span class="line"><span class="comment">#把沙僧放入妖怪组 </span></span><br><span class="line">su - root</span><br><span class="line">usermod -g yaoguai shaseng</span><br><span class="line"><span class="comment">#让沙僧修改该文件 monkey.txt，加入一句话 (&quot;我是沙僧，我是妖怪!&quot;)</span></span><br><span class="line">su - shaseng</span><br><span class="line">vim /home/wukong/monkey.txt</span><br><span class="line">i <span class="comment">#我是沙僧，我是妖怪!</span></span><br><span class="line">esc :wq</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.19总结：git相关</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.19%E6%80%BB%E7%BB%93%EF%BC%9Agit%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<h1 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h1><p>右键–git bash here–命令窗口（一般在对应工作区右键打开） </p>
<p>仓库区和工作区<br>.git文件夹为仓库区：类似于一个数据存储着每一次提交的变化<br>.git所在目录称为工作区，我们在这里创建项目和其他文件 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init：创建本地仓库 </span><br><span class="line">git add 文件名 <span class="comment">#把文件添加到暂存区，暂存区存储将要被提交的文件变化</span></span><br><span class="line">git add * <span class="comment">#上一条代码的文件名可换为*号表示添加所有文件</span></span><br><span class="line">git commit -m “说明文本”  <span class="comment">#提交暂存区存储变化并生成一个新的版本</span></span><br><span class="line">git status  <span class="comment">#查看命令状态（可选）</span></span><br><span class="line">git <span class="built_in">log</span>  <span class="comment">#查看日志</span></span><br></pre></td></tr></table></figure>

<h1 id="Git服务器和远程仓库"><a href="#Git服务器和远程仓库" class="headerlink" title="Git服务器和远程仓库"></a>Git服务器和远程仓库</h1><p>github.com 全球最大开源项目托管平台 <a href="https://github.com/">https://github.com/</a><br>Gitee.com 国内知名开源项目托管平台 码云 <a href="https://gitee.com/">https://gitee.com</a></p>
<h1 id="gitee码云"><a href="#gitee码云" class="headerlink" title="gitee码云"></a>gitee码云</h1><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.19%E6%80%BB%E7%BB%93%EF%BC%9Agit%E7%9B%B8%E5%85%B3/file-20250618200911701.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.19%E6%80%BB%E7%BB%93%EF%BC%9Agit%E7%9B%B8%E5%85%B3/file-20250618200929532.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.19%E6%80%BB%E7%BB%93%EF%BC%9Agit%E7%9B%B8%E5%85%B3/file-20250618200943196.png" class="">
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>银行业务</title>
    <url>/2025/07/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Hadoop/7.8%20%E9%93%B6%E8%A1%8C%E4%B8%9A%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="1-银行主要的经营业务有哪些-源系统有哪些"><a href="#1-银行主要的经营业务有哪些-源系统有哪些" class="headerlink" title="1. 银行主要的经营业务有哪些? 源系统有哪些?"></a>1. 银行主要的经营业务有哪些? 源系统有哪些?</h2><p><strong>主要经营业务</strong>：存款业务、贷款业务、中间业务、网银业务、银行卡业务、支付结算业务等。</p>
<p><strong>源系统</strong>：CBS（核心业务系统）、NIB（新中间业务系统）、CLM（信贷系统）、EBS（网银系统）、FLM（农贷系统）、IBS（老中间业务系统）、SEP（二代支付系统）、CFE（老卡前置系统）、ATP（新卡前置系统）、NFT（银联系统）</p>
<h2 id="2-说明哈尔滨银行项目的硬件配置"><a href="#2-说明哈尔滨银行项目的硬件配置" class="headerlink" title="2. 说明哈尔滨银行项目的硬件配置"></a>2. 说明哈尔滨银行项目的硬件配置</h2><p><strong>生产硬件配置：</strong></p>
<table>
<thead>
<tr>
<th><strong>系统</strong></th>
<th><strong>服务器</strong></th>
<th><strong>型号</strong></th>
<th><strong>配置</strong></th>
<th><strong>数量</strong></th>
</tr>
</thead>
<tbody><tr>
<td>数据平台</td>
<td>数据库服务器</td>
<td>IBM P720</td>
<td>4C&#x2F;32GB&#x2F;2*300GB硬盘&#x2F;2个双口千兆以太网卡&#x2F;2*HBA卡</td>
<td>2台</td>
</tr>
<tr>
<td>数据平台</td>
<td>应用服务器</td>
<td>HP DL380</td>
<td>4C&#x2F;128GB&#x2F;2*600G硬盘&#x2F;2块双口千兆网卡&#x2F;2*HBA卡</td>
<td>2台</td>
</tr>
</tbody></table>
<p><strong>开发、测试硬件配置：</strong></p>
<table>
<thead>
<tr>
<th><strong>系统</strong></th>
<th><strong>服务器</strong></th>
<th><strong>型号</strong></th>
<th><strong>配置</strong></th>
<th><strong>数量</strong></th>
</tr>
</thead>
<tbody><tr>
<td>数据平台</td>
<td>数据库服务器</td>
<td>虚拟机</td>
<td>2C&#x2F;8GB&#x2F;300GB硬盘</td>
<td>2台</td>
</tr>
<tr>
<td>数据平台</td>
<td>应用服务器</td>
<td>虚拟机</td>
<td>2C&#x2F;8GB&#x2F;300GB硬盘</td>
<td>2台</td>
</tr>
</tbody></table>
<h2 id="3-介绍哈尔滨银行项目各个项目阶段以及项目周期内主要工作"><a href="#3-介绍哈尔滨银行项目各个项目阶段以及项目周期内主要工作" class="headerlink" title="3. 介绍哈尔滨银行项目各个项目阶段以及项目周期内主要工作"></a>3. 介绍哈尔滨银行项目各个项目阶段以及项目周期内主要工作</h2><ul>
<li><strong>项目准备阶段</strong>：预计 2014 年 8 月 21 日至 2014 年 8 月 31 日。主要工作包括完成项目启动，明确项目目标、范围和各方职责，搭建项目团队，准备项目所需的办公环境、设备和资料等，为后续阶段的工作奠定基础。</li>
<li><strong>需求分析阶段</strong>：预计 2014 年 8 月 25 日至 2014 年 11 月 14 日。乙方对甲方各个业务部门的需求进行评估、调研，编写需求分析文档；甲方将需求分析结果发回需求提出方进行签字确认，确保需求的准确性和完整性。</li>
<li><strong>设计阶段</strong>：预计 2014 年 10 月 8 日至 2014 年 11 月 30 日。乙方根据需求分析结果进行架构设计、模块划分、数据探查、模型设计等工作，编写架构设计说明书、ETL 概要设计、前端概要设计等文档；甲方对概要设计进行评审并反馈意见。</li>
<li><strong>开发阶段</strong>：预计 2014 年 10 月 27 日至 2015 年 1 月 11 日。乙方参照详细设计进行程序开发，包括 ETL 程序、报表程序等，并编写相关的配置文件；甲方对源代码进行评审。</li>
<li><strong>测试阶段</strong>：预计 2015 年 1 月 5 日至 2015 年 3 月 8 日。乙方进行单元测试并编写单元测试文档，之后进行集成测试，确保系统各部分能协同工作；甲方提前至少 2 周申请测试数据，参与集成测试，对测试结果进行确认。</li>
<li><strong>上线阶段</strong>：预计 2015 年 3 月 9 日至 2015 年 3 月 20 日。甲方保证生产设备到位，协调运维中心确保上线顺利进行；乙方按照上线步骤进行上线，提交上线部署方案和上线报告。</li>
<li><strong>第一阶段现场维护阶段</strong>：预计 2015 年 3 月 23 日至 2015 年 4 月 30 日。乙方提供 2 人共计 1.5 人月现场维护，解决系统上线后出现的问题，保障系统稳定运行。</li>
<li><strong>第二阶段</strong>：预计 2015 年 6 月 1 日至 2015 年 8 月 31 日。接入新信贷系统数据（不超过 130 张表），对整体架构模型进行扩展，修改汇总层、报表层程序，改造 63 张第一阶段信贷类报表，开发针对新信贷系统的数据反抽和分发程序，最终实现村行老数据平台下线。</li>
<li><strong>第二阶段维护阶段</strong>：预计 2015 年 9 月 1 日至 2015 年 9 月 30 日。乙方提供 2 人共计 1.5 人月现场维护，确保第二阶段上线后系统的稳定运行。</li>
</ul>
<h2 id="4-在需求调研阶段主要的工作内容有哪些，调研流程是什么"><a href="#4-在需求调研阶段主要的工作内容有哪些，调研流程是什么" class="headerlink" title="4. 在需求调研阶段主要的工作内容有哪些，调研流程是什么"></a>4. 在需求调研阶段主要的工作内容有哪些，调研流程是什么</h2><ul>
<li><p><strong>主要工作内容</strong></p>
<ul>
<li>乙方对甲方各个业务部门提出的需求进行评估，判断需求的合理性、可行性以及与项目目标的契合度。</li>
<li>乙方深入业务部门进行调研，了解业务流程、数据流向、报表需求等详细信息，收集相关资料。</li>
<li>乙方根据调研结果编写需求分析说明书，明确需求的具体内容、范围和业务规则等。</li>
<li>乙方整理源系统表清单，明确需要接入的数据来源和具体表结构。</li>
<li>乙方编写建表和配置文件的初步方案。</li>
</ul>
</li>
<li><p><strong>调研流程</strong></p>
<ul>
<li>甲方业务部门提出需求，传递给乙方。</li>
<li>乙方对需求进行初步筛选和评估，确定调研的重点和范围。</li>
<li>乙方组织与业务部门的沟通会议，通过访谈、问卷等方式进行详细调研。</li>
<li>乙方根据调研信息整理形成需求分析文档初稿。</li>
<li>乙方将需求分析结果反馈给甲方，甲方将其发回需求提出方进行签字确认。</li>
<li>若有修改意见，乙方根据意见进行调整完善，直至需求得到最终确认。</li>
</ul>
</li>
</ul>
<h2 id="5-数据缓冲层的作用-增量剥离操作的流程"><a href="#5-数据缓冲层的作用-增量剥离操作的流程" class="headerlink" title="5. 数据缓冲层的作用,增量剥离操作的流程"></a>5. 数据缓冲层的作用,增量剥离操作的流程</h2><ul>
<li><strong>数据缓冲层的作用</strong>：文档中未明确提及数据缓冲层，结合常见数据平台设计，数据缓冲层通常用于临时存储从源系统采集的原始数据，作为数据进入后续处理环节（如 ODS 层）前的过渡区域，可对数据进行初步的校验和整理，减轻后续处理层的压力，保证数据处理的稳定性和效率。</li>
<li><strong>增量剥离操作的流程</strong>：根据对村行现有数据的分析，由于大部分数据无法提供每日增量，所以将源系统全量数据与 ODS 全量数据进行比对，找出源系统中发生变化和新产生的数据，作为当日增量数据。</li>
</ul>
<h2 id="6-实施工作主要内容有哪些"><a href="#6-实施工作主要内容有哪些" class="headerlink" title="6. 实施工作主要内容有哪些"></a>6. 实施工作主要内容有哪些</h2><ul>
<li><strong>数据源接入</strong>：第一阶段接入核心、老信贷、农贷等多个系统的多张表数据；第二阶段接入新信贷系统不超过 130 张表数据。</li>
<li><strong>架构与模型设计</strong>：设计缓冲层、贴源层、基础层、汇总层、报表层的整体架构和数据模型，实现增量剥离、数据采集加载、历史拉链、按主题汇总等功能。</li>
<li><strong>平台工具搭建</strong>：搭建调度平台（USE）、分发平台（FEX）、报表平台（RIDP）和报表工具（MSTR）的环境，包括资料库配置、开发和测试环境准备等。</li>
<li><strong>程序开发</strong>：开发 ETL 程序用于数据的抽取、转换、加载和反抽；开发报表程序满足各业务部门的报表需求；开发数据分发程序为下游系统提供数据。</li>
<li><strong>测试工作</strong>：进行单元测试、集成测试，确保程序功能正确、系统运行稳定，甲方参与测试并确认结果。</li>
<li><strong>上线部署</strong>：制定上线部署方案，完成系统的上线工作，确保新系统顺利投入使用。</li>
<li><strong>报表开发与改造</strong>：第一阶段开发 143 张报表，第二阶段改造 63 张第一阶段信贷类报表。</li>
<li><strong>数据服务提供</strong>：实现数据反抽和分发，为下游系统提供每天增量数据。</li>
<li><strong>老平台下线</strong>：在第二阶段完成村行老数据平台的下线工作，由新数据平台全面替代。</li>
</ul>
<h2 id="10-简单描述哈尔滨银行业务源系统抽取流程"><a href="#10-简单描述哈尔滨银行业务源系统抽取流程" class="headerlink" title="10. 简单描述哈尔滨银行业务源系统抽取流程"></a>10. 简单描述哈尔滨银行业务源系统抽取流程</h2><p>村镇银行各业务系统的数据，通过文本文件的形式采集到数据平台。ETL1 阶段读取源系统数据文件，对数据进行加工（包括数据采集，对部分数据质量有问题的数据进行处理；以及增量剥离，找出当日增量数据），然后将加工后的数据加载到 ODS 数据库。</p>
<h2 id="11-说明哈尔滨银行项目数仓分层以及各层功能-该项目主题有哪些"><a href="#11-说明哈尔滨银行项目数仓分层以及各层功能-该项目主题有哪些" class="headerlink" title="11. 说明哈尔滨银行项目数仓分层以及各层功能,该项目主题有哪些?"></a>11. 说明哈尔滨银行项目数仓分层以及各层功能,该项目主题有哪些?</h2><ul>
<li><strong>数仓分层及各层功能</strong>：数据平台共由 SDM、ODM、FDM、MDM 四个层次组成。<ul>
<li><strong>ODM（操作型数据存储）</strong>：贴近业务源系统，用于支持村行执行层的业务人员对业务数据的 T+1 的明细查询需求。</li>
<li><strong>SDM、FDM、MDM</strong>：实现对全行数据最快 T+1 的整合、数据历史的保留、以及按报表需求的汇总，用于支持村行管理层、决策层各位领导的日常综合运营分析、战略决策分析。其中，FDM、MDM 中客户、产品以及账户等数据信息永久保留且保留历史信息，交易类数据和汇总类数据保留 7 年。</li>
</ul>
</li>
<li><strong>项目主题</strong>：包括客户分析、渠道分析、存款分析、贷款分析、产品分析、绩效分析等。</li>
</ul>
<h2 id="12-哈尔滨银行项目抽取报表数量-数据量大小-数据存储周期"><a href="#12-哈尔滨银行项目抽取报表数量-数据量大小-数据存储周期" class="headerlink" title="12. 哈尔滨银行项目抽取报表数量,数据量大小,数据存储周期"></a>12. 哈尔滨银行项目抽取报表数量,数据量大小,数据存储周期</h2><ul>
<li><strong>抽取报表数量</strong>：共有201张报表需求，项目前期阶段实现前143张报表需求，待信贷系统上线后对后面的58张报表进行开发改造</li>
<li><strong>数据量大小</strong>：本项目中，数据平台每月增量数据大约在 10G 左右。数据库表空间规划 200GB，数据文件存储空间规划 100GB，合计 300GB。</li>
<li><strong>数据存储周期</strong>：<ul>
<li><strong>ODM 中</strong>：源系统数据文件保留 7 天；客户、产品以及账户等数据信息保留最新数据信息，不保留历史；交易类数据保留 13 个月，13 个月前数据做归档，归档数据保留 1 年。</li>
<li><strong>FDM、MDM 中</strong>：客户、产品以及账户等数据信息永久保留，保留历史信息；交易类数据和汇总类数据保留 7 年，7 年以前数据做归档，归档数据保留 3 年。</li>
<li><strong>数据分发平台中</strong>：反抽出的增量数据保留 7 天，7 天前数据进行归档，30 天前数据做物理删除。</li>
</ul>
</li>
</ul>
<h2 id="13-索引在什么情况下会失效-如何确认慢sql所在位置-以及定位后如何优化"><a href="#13-索引在什么情况下会失效-如何确认慢sql所在位置-以及定位后如何优化" class="headerlink" title="13. 索引在什么情况下会失效?如何确认慢sql所在位置,以及定位后如何优化?"></a>13. 索引在什么情况下会失效?如何确认慢sql所在位置,以及定位后如何优化?</h2><ul>
<li><p><strong>索引失效的情况</strong></p>
<ul>
<li>使用<code>OR</code>连接包含非索引列的条件，如<code>WHERE idx_col1 = 1 OR col2 = 2</code>（<code>col2</code>无索引）。</li>
<li>对索引列进行函数操作，例如<code>WHERE SUBSTR(idx_col, 1, 2) = &#39;AB&#39;</code>。</li>
<li>使用不等于（<code>!=</code>、<code>&lt;&gt;</code>）、<code>NOT IN</code>、<code>IS NOT NULL</code>等操作符，如<code>WHERE idx_col != 10</code>。</li>
<li>索引列参与计算，如<code>WHERE idx_col + 1 = 10</code>。</li>
<li>字符串不加引号导致隐式转换，如<code>WHERE idx_str_col = 123</code>（实际应为字符串<code>&#39;123&#39;</code>）。</li>
<li><code>LIKE</code>以通配符开头，如<code>WHERE idx_col LIKE &#39;%abc&#39;</code>。</li>
<li>组合索引不满足最左匹配原则，如组合索引<code>(a,b,c)</code>，查询条件仅用<code>b=1</code>。</li>
</ul>
</li>
<li><p><strong>确认慢 SQL 位置的方法</strong></p>
<ul>
<li>数据库自带工具：如 MySQL 的<code>slow_query_log</code>（慢查询日志），可配置记录执行时间超过阈值的 SQL；Oracle 的<code>AWR</code>（自动工作负载仓库）报告、<code>ASH</code>（活动会话历史）报告，能定位消耗资源多的 SQL。</li>
<li>监控工具：如<code>Percona Monitoring and Management</code>（PMM）、<code>Datadog</code>等，可实时监控 SQL 执行耗时。</li>
<li>执行计划分析：通过<code>EXPLAIN</code>（MySQL）或<code>EXPLAIN PLAN</code>（Oracle）查看 SQL 执行计划，判断是否使用索引、是否全表扫描等。</li>
</ul>
</li>
<li><p><strong>慢 SQL 优化举例</strong></p>
<ul>
<li><strong>场景</strong>：查询 “年龄大于 30 的用户姓名”，表<code>user</code>有索引<code>idx_age</code>，但 SQL 为<code>SELECT name FROM user WHERE age + 1 &gt; 31</code>，此时索引<code>idx_age</code>失效，执行全表扫描。</li>
<li><strong>优化</strong>：修改 SQL 为<code>SELECT name FROM user WHERE age &gt; 30</code>，使索引<code>idx_age</code>生效，减少扫描行数。</li>
</ul>
</li>
</ul>
<h2 id="14-异常压制在什么情况下使用-游标在什么情况下使用-举实际代码案例"><a href="#14-异常压制在什么情况下使用-游标在什么情况下使用-举实际代码案例" class="headerlink" title="14. 异常压制在什么情况下使用?游标在什么情况下使用?举实际代码案例"></a>14. 异常压制在什么情况下使用?游标在什么情况下使用?举实际代码案例</h2><ul>
<li><p><strong>异常压制的使用场景</strong>：当某个异常发生时，不希望程序中断，且该异常对整体流程影响较小，可压制异常并记录日志以便后续分析。例如，在批量处理数据时，个别记录格式错误，可跳过错误记录继续处理其他数据。</p>
</li>
<li><p><strong>游标使用场景</strong>：需要逐行处理查询结果集时使用，适用于结果集较小、需复杂逻辑处理单行数据的情况。例如，遍历查询出的订单记录，逐行计算订单金额并更新到另一张表。</p>
</li>
<li><p><strong>代码案例</strong></p>
<ul>
<li><p><strong>异常压制（Python）</strong>    </p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line">data_list = [<span class="string">&quot;123&quot;</span>, <span class="string">&quot;45a&quot;</span>, <span class="string">&quot;789&quot;</span>]  <span class="comment"># 包含异常数据&quot;45a&quot;</span></span><br><span class="line">result = []</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> data_list:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        num = <span class="built_in">int</span>(data)</span><br><span class="line">        result.append(num)</span><br><span class="line">    <span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># 压制异常，记录日志后继续处理</span></span><br><span class="line">        logging.warning(<span class="string">f&quot;数据&#x27;<span class="subst">&#123;data&#125;</span>&#x27;转换失败：<span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;处理后结果：&quot;</span>, result)  <span class="comment"># 输出：处理后结果： [123, 789]</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>游标（MySQL 存储过程）</strong></p>
  <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DELIMITER <span class="operator">/</span><span class="operator">/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> UpdateOrderAmount()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> order_id <span class="type">INT</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> total_amount <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">DECLARE</span> done <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">-- 声明游标</span></span><br><span class="line">    <span class="keyword">DECLARE</span> order_cursor <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> </span><br><span class="line">        <span class="keyword">SELECT</span> id, quantity <span class="operator">*</span> price <span class="keyword">FROM</span> order_item;</span><br><span class="line">    <span class="comment">-- 处理游标结束</span></span><br><span class="line">    <span class="keyword">DECLARE</span> CONTINUE HANDLER <span class="keyword">FOR</span> <span class="keyword">NOT</span> FOUND <span class="keyword">SET</span> done <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">OPEN</span> order_cursor;</span><br><span class="line">    <span class="comment">-- 遍历游标</span></span><br><span class="line">    read_loop: LOOP</span><br><span class="line">        <span class="keyword">FETCH</span> order_cursor <span class="keyword">INTO</span> order_id, total_amount;</span><br><span class="line">        IF done <span class="keyword">THEN</span></span><br><span class="line">            LEAVE read_loop;</span><br><span class="line">        <span class="keyword">END</span> IF;</span><br><span class="line">        <span class="comment">-- 逐行更新订单总金额</span></span><br><span class="line">        <span class="keyword">UPDATE</span> <span class="keyword">order</span> <span class="keyword">SET</span> total <span class="operator">=</span> total_amount <span class="keyword">WHERE</span> id <span class="operator">=</span> order_id;</span><br><span class="line">    <span class="keyword">END</span> LOOP;</span><br><span class="line">    <span class="keyword">CLOSE</span> order_cursor;</span><br><span class="line"><span class="keyword">END</span> <span class="operator">/</span><span class="operator">/</span></span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="15-如何处理不同类型的重复数据-各种类型数据缺失如何处理"><a href="#15-如何处理不同类型的重复数据-各种类型数据缺失如何处理" class="headerlink" title="15. 如何处理不同类型的重复数据?各种类型数据缺失如何处理?"></a>15. 如何处理不同类型的重复数据?各种类型数据缺失如何处理?</h2><ul>
<li><p><strong>重复数据处理</strong></p>
<ul>
<li><strong>完全重复数据（所有字段均相同）</strong>：直接删除重复记录，保留一条。例如，表<code>student</code>中存在两条完全相同的记录，可执行<code>DELETE t1 FROM student t1 JOIN student t2 ON t1.id &gt; t2.id AND t1.name = t2.name AND t1.age = t2.age</code>（假设<code>id</code>为唯一标识）。</li>
<li><strong>部分字段重复（关键信息重复，其他字段不同）</strong>：根据业务规则合并。例如，用户表中同一手机号对应多条记录，可合并为一条，取最新的注册时间和状态。</li>
<li><strong>逻辑重复（因数据标准不统一导致的重复）</strong>：先标准化数据，再去重。例如，“北京” 和 “北京市” 视为重复，先统一为 “北京市”，再删除重复项。</li>
</ul>
</li>
<li><p><strong>数据缺失处理</strong></p>
<ul>
<li><strong>数值型缺失</strong><ul>
<li>均值 &#x2F; 中位数填充：适用于近似正态分布的数据，如用 “用户平均年龄” 填充缺失的年龄值。</li>
<li>众数填充：适用于有明显集中趋势的数据，如用 “最常见的职业” 填充缺失的职业值。</li>
<li>插值法：如时间序列数据，用前后时间点的数值插值填充缺失值。</li>
</ul>
</li>
<li><strong>分类型缺失</strong><ul>
<li>众数填充：用出现频率最高的类别填充，如用 “汉族” 填充缺失的民族值。</li>
<li>特殊值填充：用 “未知”“N&#x2F;A” 等标识缺失，适用于无法确定合理值的场景。</li>
<li>基于业务规则填充：如 “性别” 缺失，可根据 “名字” 中的常见性别特征推测（如 “张伟” 推测为男性）。</li>
</ul>
</li>
<li><strong>文本型缺失</strong>：根据上下文填充，或用 “无内容” 标识；若为重要信息（如地址），可联系数据提供方补充。</li>
<li><strong>时间型缺失</strong>：用默认时间（如 “1970-01-01”）填充，或根据相关事件时间推导（如订单创建时间缺失，用支付时间减合理间隔填充）。</li>
</ul>
</li>
</ul>
<h2 id="16-简述拉链表的存储过程流程"><a href="#16-简述拉链表的存储过程流程" class="headerlink" title="16. 简述拉链表的存储过程流程"></a>16. 简述拉链表的存储过程流程</h2><ol>
<li>从源系统获取增量数据或全量数据。</li>
<li>将源数据与拉链表中当前有效的数据进行比对，识别出新增、修改和删除的数据。</li>
<li>对于修改的数据，将拉链表中对应记录的结束时间更新为当前日期的前一天，标记其失效。</li>
<li>将新增的数据和修改后的数据作为新记录插入到拉链表中，设置其开始时间为当前日期，结束时间为一个默认的最大日期（如 9999-12-31），表示当前有效。</li>
<li>对于删除的数据，将拉链表中对应记录的结束时间更新为当前日期的前一天，标记其失效。</li>
<li>记录拉链表的更新日志，包括操作时间、操作类型、影响记录数等信息，以便后续追溯和监控。</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>5.21总结：定时任务、添加硬盘、python、nginx安装</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="echo-输出字符"><a href="#echo-输出字符" class="headerlink" title="echo 输出字符"></a>echo 输出字符</h2><p>换行打印输入字符 解释<br>-n 不换行显示<br>-e 出现转义字符进行解释处理<br>转义字符<br>\n 换行 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;hello&quot;</span>  <span class="comment">#不换行显示</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;你好\n坤坤&quot;</span>  <span class="comment">#换行显示</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;test&quot;</span> &gt; t.txt</span><br></pre></td></tr></table></figure>

<h2 id="date-显示日期"><a href="#date-显示日期" class="headerlink" title="date 显示日期"></a>date 显示日期</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">date</span> (显示当前时间) </span><br><span class="line"><span class="built_in">date</span> +<span class="string">&quot;%Y&quot;</span>  <span class="comment">#显示当前年份, +号紧贴，没有空格</span></span><br><span class="line"><span class="built_in">date</span> +<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>  <span class="comment">#自定格式显示</span></span><br><span class="line"><span class="built_in">date</span> +<span class="string">&quot;%Y年%m月%d日 %H时%M分%S秒&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="date-d-日期解析"><a href="#date-d-日期解析" class="headerlink" title="date -d 日期解析"></a>date -d 日期解析</h3><p>用于字符转日期</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;2009-12-12&quot;</span> </span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;2009-12-12 + 1 day&quot;</span> </span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;+1 day&quot;</span> </span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;+1 month&quot;</span> </span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;+1 year&quot;</span> </span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;2009-12-12 + 1 day&quot;</span> +<span class="string">&quot;%Y/%m/%d %H:%M:%S&quot;</span> &gt; time.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">date</span> -s <span class="string">&quot;2023-08-08 12:34:56&quot;</span> <span class="comment">#设置系统当前时间</span></span><br></pre></td></tr></table></figure>

<h3 id="linux网络对时"><a href="#linux网络对时" class="headerlink" title="linux网络对时"></a>linux网络对时</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装netdate </span></span><br><span class="line">yum install ntpdate </span><br><span class="line"><span class="comment">#执行命令，同步时间。 </span></span><br><span class="line">ntpdate us.pool.ntp.org</span><br></pre></td></tr></table></figure>

<h2 id="cal-查看日历"><a href="#cal-查看日历" class="headerlink" title="cal 查看日历"></a>cal 查看日历</h2><p>cal 日 月 年 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cal  <span class="comment">#显示当前日历 </span></span><br><span class="line">cal 2023  <span class="comment">#显示2023年日历 </span></span><br><span class="line">cal 01 2023  <span class="comment">#显示2023年1月日历 </span></span><br><span class="line">cal 15 01 2023  <span class="comment">#显示2023年1月15日日历</span></span><br></pre></td></tr></table></figure>
<h2 id="wget命令"><a href="#wget命令" class="headerlink" title="wget命令"></a>wget命令</h2><p>用来从指定的URL下载文件。<br>python下载地址：<a href="https://www.python.org/ftp/python">https://www.python.org/ftp/python</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tar.xz</span><br></pre></td></tr></table></figure>
<h2 id="seq命令"><a href="#seq命令" class="headerlink" title="seq命令"></a>seq命令</h2><p>用于产生从某个数到另外一个数之间的所有整数<br>seq [选项]… 首数 增量 尾数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">seq</span> 1 10  <span class="comment">#正序输出，默认递增1</span></span><br><span class="line"><span class="built_in">seq</span> 1 2 100  <span class="comment">#递增2 #2,4,6...100</span></span><br><span class="line"><span class="built_in">seq</span> 100 -1 1  <span class="comment">#倒序输出</span></span><br></pre></td></tr></table></figure>

<h2 id="Linux定时执行计划"><a href="#Linux定时执行计划" class="headerlink" title="Linux定时执行计划"></a>Linux定时执行计划</h2><p>方式一：修改配置文件：&#x2F;etc&#x2F;crontab （要指明执行用户）<br>分 时 日 月 周 用户名 执行的命令 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/crontab </span><br><span class="line">5 * * * * root <span class="built_in">date</span> &gt; /root/time.txt </span><br><span class="line"><span class="built_in">date</span> +<span class="string">&quot;\%Y&quot;</span> &gt; /root/time.txt <span class="comment">#定时任务中的特殊符号需要转义%</span></span><br></pre></td></tr></table></figure>

<p>方式二：通过crontab命令（不需要指明执行用户，默认就是当前用户） </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e  <span class="comment"># 编辑用户的cron配置文件； </span></span><br><span class="line">crontab -l  <span class="comment">#查看用户的计划任务； </span></span><br><span class="line">crontab -r  <span class="comment">#删除用户的计划任务； </span></span><br><span class="line">5 * * * * <span class="built_in">date</span> &gt; /root/time.txt</span><br></pre></td></tr></table></figure>

<p>特殊符号说明<br>*  任何时间。比如 第一个 * 表示一小时中每分钟都执行一次的意思<br>,   不连续的时间。比如 0 8,12,16 * * * 表示在每天的8点0分，12点0分，16点0分都执行一次命令<br>-   连续的时间范围。比如 0 5 * * 1-6 表示在周一到六凌晨5点0分执行命令<br>*&#x2F;n   每隔多久执行一次。比如 *&#x2F;10 * * * * 表示每隔10分钟就执行一遍命令</p>
<h2 id="linux添加硬盘分区挂载"><a href="#linux添加硬盘分区挂载" class="headerlink" title="linux添加硬盘分区挂载"></a>linux添加硬盘分区挂载</h2><h3 id="fdisk"><a href="#fdisk" class="headerlink" title="fdisk"></a>fdisk</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk -l  <span class="comment">#可以查看系统所有硬盘的分区情况 </span></span><br><span class="line">fdisk /dev/sdb1  <span class="comment">#可以分区</span></span><br></pre></td></tr></table></figure>
<h3 id="df"><a href="#df" class="headerlink" title="df"></a>df</h3><p>用于显示 Linux 系统中各文件系统的硬盘使用情况，包括文件系统所在硬盘分区的总容量、已使用的容量、剩余容量等。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">df</span> -h  <span class="comment">#查看磁盘使用及挂载情况</span></span><br></pre></td></tr></table></figure>
<h3 id="linux添加硬盘分区挂载-1"><a href="#linux添加硬盘分区挂载-1" class="headerlink" title="linux添加硬盘分区挂载"></a>linux添加硬盘分区挂载</h3><p>1.关闭虚拟机添加硬盘：虚拟机-设置-添加-硬盘-1G-单个文件存储-打开虚拟机<br>进入目录&#x2F;dev，查看出现文件sdb<br>df -h 列出磁盘使用情况，目前没有新加的硬盘<br>fdisk -l 发现存在待分区的磁盘 </p>
<p>2.分区：fdisk &#x2F;dev&#x2F;sdb 依次输入m n p 1 空 空 w<br>cd &#x2F;dev 看到sdb1文件出现 </p>
<p>3.创建文件格式：mkfs.ext4 &#x2F;dev&#x2F;sdb1 </p>
<p>4.挂载：先创建目录，mkdir -p &#x2F;mnt&#x2F;pan1<br>vim &#x2F;etc&#x2F;fstab<br>添加&#x2F;dev&#x2F;sdb1 &#x2F;mnt&#x2F;pan1 ext4 defaults 0 0<br>重启虚拟机<br>df -h 查看挂载情况<br>df -hl &#x2F;mnt&#x2F;pan1 查看目录空间</p>
<h2 id="VMware虚拟机扩展Linux的root根目录磁盘空间（Centos7）"><a href="#VMware虚拟机扩展Linux的root根目录磁盘空间（Centos7）" class="headerlink" title="VMware虚拟机扩展Linux的root根目录磁盘空间（Centos7）"></a>VMware虚拟机扩展Linux的root根目录磁盘空间（Centos7）</h2><p><a href="https://blog.csdn.net/weixin_48530545/article/details/131239455">VMware虚拟机扩展Linux的root根目录磁盘空间（Centos7）_linux虚拟机扩容根目录-CSDN博客</a></p>
<h1 id="python安装"><a href="#python安装" class="headerlink" title="python安装"></a>python安装</h1><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/file-20250704184256283.png" class="">
<h1 id="nginx安装"><a href="#nginx安装" class="headerlink" title="nginx安装"></a>nginx安装</h1><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/file-20250704184313194.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/file-20250704184325178.png" class="">

<h1 id="vscode连接linux编写python"><a href="#vscode连接linux编写python" class="headerlink" title="vscode连接linux编写python"></a>vscode连接linux编写python</h1><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/file-20250704184336322.png" class="">

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.把当前时间显示为字符串格式，例如：2023年08月08日 12时30分25秒 </span></span><br><span class="line"><span class="built_in">date</span> +<span class="string">&quot;%Y年%m月%d日 %H时%M分%S秒&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.把字符串20880909转换为时间类型显示 </span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;20880909&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.设置当前系统时间为你的生日 </span></span><br><span class="line"><span class="built_in">date</span> -s <span class="string">&quot;1999-10-13&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.把系统时间更新为网络时间 </span></span><br><span class="line">ntpdate us.pool.ntp.org</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.显示2008年的日历信息 </span></span><br><span class="line">cal 2008</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.显示你的出生年月日的日历信息</span></span><br><span class="line">cal 13 10 1999</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.输出一个直角三角形</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;*\n***\n*****\n*******\n*********&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#8.生成一个序列8 18 28 ...... 98 </span></span><br><span class="line"><span class="built_in">seq</span> 8 10 98</span><br><span class="line"></span><br><span class="line"><span class="comment">#9.生成一个序列99 96 93 ...... 6 3 </span></span><br><span class="line"><span class="built_in">seq</span> 99 -3 3</span><br><span class="line"></span><br><span class="line"><span class="comment">#10.用第一种方式设置定时任务，每2分钟把当前系统时间追加到文件/root/time.txt中(格式：2023-06-12 10:39:20) </span></span><br><span class="line">vim /etc/crontab</span><br><span class="line">i</span><br><span class="line">*/2 * * * * root <span class="built_in">date</span> +<span class="string">&quot;\%Y-\%m-\%d \%H:\%M:\%S&quot;</span> &gt;&gt; /root/time.txt</span><br><span class="line">esc :wq</span><br><span class="line"></span><br><span class="line"><span class="comment">#11.用第二种方式设置定时任务，每一分钟将/etc/passwd拷贝到/root下 </span></span><br><span class="line">crontab -e</span><br><span class="line">i</span><br><span class="line">* * * * * <span class="built_in">cp</span> /etc/passwd /root/</span><br><span class="line">esc :wq</span><br><span class="line"></span><br><span class="line"><span class="comment">#12.删除上面的两个定时任务</span></span><br><span class="line">vim /etc/crontab</span><br><span class="line">i</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">esc :wq</span><br><span class="line">crontab -r</span><br></pre></td></tr></table></figure>
<h2 id="添加一块2G的硬盘，分区并挂载到-mnt-ceshi目录下："><a href="#添加一块2G的硬盘，分区并挂载到-mnt-ceshi目录下：" class="headerlink" title="添加一块2G的硬盘，分区并挂载到&#x2F;mnt&#x2F;ceshi目录下："></a>添加一块2G的硬盘，分区并挂载到&#x2F;mnt&#x2F;ceshi目录下：</h2><p>关闭虚拟机-&gt;虚拟机-设置-添加-硬盘-2G-单个文件存储-打开虚拟机</p>
<p>进入目录&#x2F;dev，查看出现文件sdb</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/file-20250704184352842.png" class="">

<p>df -h 列出磁盘使用情况，目前没有新加的硬盘</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/file-20250704184403610.png" class="">

<p>fdisk -l 发现存在待分区的磁盘</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/file-20250704184413266.png" class="">

<p>分区：fdisk &#x2F;dev&#x2F;sdb 依次输入m n p 1 空 空 w</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/file-20250704184437450.png" class="">

<p>cd &#x2F;dev 看到sdb1文件出现</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/file-20250704184449690.png" class="">

<p>创建文件格式：mkfs.ext4 &#x2F;dev&#x2F;sdb1</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/file-20250704184458978.png" class="">

<p>挂载：先创建目录<br>mkdir -p &#x2F;mnt&#x2F;pan1<br>vim &#x2F;etc&#x2F;fstab<br>添加&#x2F;dev&#x2F;sdb1 &#x2F;mnt&#x2F;pan1 ext4 defaults 0 0</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/file-20250704184507986.png" class="">

<p>重启虚拟机<br>df -h 查看挂载情况 </p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/file-20250704184516857.png" class="">

<p>df -hl &#x2F;mnt&#x2F;pan1 查看目录空间</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/file-20250704184526458.png" class="">
<p>添加硬盘成功</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.20总结：安装MySQL和Oracle</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.20%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%89%E8%A3%85MySQL%E5%92%8COracle/</url>
    <content><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="网络配置类"><a href="#网络配置类" class="headerlink" title="网络配置类"></a>网络配置类</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">clear  <span class="comment">#清屏</span></span><br><span class="line">ifconfig  <span class="comment">#列出网卡信息</span></span><br><span class="line">ping ip地址  <span class="comment">#看网络是不是连通</span></span><br><span class="line">free  <span class="comment">#查看内存使用情况</span></span><br></pre></td></tr></table></figure>

<h3 id="top-查看系统整体资源"><a href="#top-查看系统整体资源" class="headerlink" title="top 查看系统整体资源"></a>top 查看系统整体资源</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PID：进程的标识符。 </span><br><span class="line">USER：运行进程的用户名。 </span><br><span class="line">PR（优先级）：进程的优先级。 </span><br><span class="line">NI（Nice值）：进程的优先级调整值。 </span><br><span class="line">VIRT（虚拟内存）：进程使用的虚拟内存大小。 </span><br><span class="line">RES（常驻内存）：进程实际使用的物理内存大小。 </span><br><span class="line">SHR（共享内存）：进程共享的内存大小。 </span><br><span class="line">%CPU：进程占用 CPU 的使用率。 </span><br><span class="line">%MEM：进程占用内存的使用率。 </span><br><span class="line">TIME+：进程的累计 CPU 时间。</span><br></pre></td></tr></table></figure>

<h2 id="ps-显示系统执行的进程"><a href="#ps-显示系统执行的进程" class="headerlink" title="ps 显示系统执行的进程"></a>ps 显示系统执行的进程</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps -aux  <span class="comment">#查看所有用户所有进程 </span></span><br><span class="line">ps -ef  <span class="comment">#查看子父进程之间的关系（常用）</span></span><br><span class="line"></span><br><span class="line">ps -ef | grep <span class="string">&quot;mysql&quot;</span> <span class="comment">#查看mysql服务</span></span><br><span class="line">ps -ef | grep <span class="string">&quot;oracle&quot;</span> <span class="comment">#查看oracle服务</span></span><br></pre></td></tr></table></figure>
<h2 id="pstree-查看进程树"><a href="#pstree-查看进程树" class="headerlink" title="pstree 查看进程树"></a>pstree 查看进程树</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pstree 1660  <span class="comment">#树状的形式显示进程的pid</span></span><br></pre></td></tr></table></figure>
<h2 id="kill"><a href="#kill" class="headerlink" title="kill"></a>kill</h2><p>最常用的信号是：<br>1 (HUP)：重新加载进程。<br>9 (KILL)：强制杀死一个进程。<br>15 (TERM)：正常停止一个进程。<br>kill -9 16989 杀死进程</p>
<h2 id="systemctl-服务管理"><a href="#systemctl-服务管理" class="headerlink" title="systemctl 服务管理"></a>systemctl 服务管理</h2><p>systemctl [ start | stop | restart | status] 服务名<br>service 服务名 [ start | stop | restart | status]<br>服务名：mysql network firewalld等<br>systemctl是新版本写法，service是老版本写法<br>防火墙操作：status&#x2F;start&#x2F;stop&#x2F;restart&#x2F;disable&#x2F;enable 多两个<br>查看防火墙： systemctl status firewalld<br>停止防火墙： systemctl disable firewalld 重启后生效<br>注：直接关死即可，单机版使用防火墙</p>
<h2 id="netstat-端口（port）"><a href="#netstat-端口（port）" class="headerlink" title="netstat 端口（port）"></a>netstat 端口（port）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -nltp <span class="comment">#查看网络端口</span></span><br></pre></td></tr></table></figure>
<p>mysql 端口默认 3306<br>oracle 端口默认 1521<br>centos7 端口默认 22<br>nginx 端口默认 80<br>达梦 端口默认5236</p>
<h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su - oracle</span><br><span class="line">sqlplus / as sysdba </span><br><span class="line">SQL&gt; startup; </span><br><span class="line">SQL&gt; quit;</span><br><span class="line">lsnrctl start</span><br></pre></td></tr></table></figure>

<h2 id="解锁scott"><a href="#解锁scott" class="headerlink" title="解锁scott"></a>解锁scott</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su - oracle</span><br><span class="line">sqlplus / as sysdba </span><br><span class="line">SQL&gt; alter user scott identified by oracle123456; </span><br><span class="line">SQL&gt; alter user scott account unlock; </span><br><span class="line">SQL&gt; quit;</span><br></pre></td></tr></table></figure>

<h2 id="ifconfig没有东西：网卡丢失"><a href="#ifconfig没有东西：网卡丢失" class="headerlink" title="ifconfig没有东西：网卡丢失"></a>ifconfig没有东西：网卡丢失</h2><p>出现这种报错一般是和 NetworkManager 服务冲突导致的，直接关闭 NetworkManger 服务就好了。<br>1.关闭NetworkManager ：service NetworkManager stop<br>2.禁止开机启动 ：systemctl disable NetworkManager<br>3.重启网络： service network restart<br>4.查看网络状态：systemctl status network<br>或者登录虚拟机，点击电源按钮选择有线连接即可</p>
<h2 id="文件夹"><a href="#文件夹" class="headerlink" title="文件夹"></a>文件夹</h2><p>&#x2F;usr&#x2F;local&#x2F;  一般放小软件的安装<br>&#x2F;opt&#x2F;app&#x2F;  一般放大软件的安装</p>
<h1 id="DBeaver连接MySQL"><a href="#DBeaver连接MySQL" class="headerlink" title="DBeaver连接MySQL"></a>DBeaver连接MySQL</h1><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.20%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%89%E8%A3%85MySQL%E5%92%8COracle/file-20250729195827935.png" class="">
<h2 id="DBeaver连接Oracle"><a href="#DBeaver连接Oracle" class="headerlink" title="DBeaver连接Oracle"></a>DBeaver连接Oracle</h2><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.20%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%89%E8%A3%85MySQL%E5%92%8COracle/file-20250729195835234.png" class="">
<h2 id="开机自启修改"><a href="#开机自启修改" class="headerlink" title="开机自启修改"></a>开机自启修改</h2><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.20%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%89%E8%A3%85MySQL%E5%92%8COracle/file-20250729195842864.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.20%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%89%E8%A3%85MySQL%E5%92%8COracle/file-20250729195850393.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.20%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%89%E8%A3%85MySQL%E5%92%8COracle/file-20250729195858215.png" class="">

<h3 id="开机自启验证"><a href="#开机自启验证" class="headerlink" title="开机自启验证"></a>开机自启验证</h3><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.20%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%89%E8%A3%85MySQL%E5%92%8COracle/file-20250729195929026.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.20%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%89%E8%A3%85MySQL%E5%92%8COracle/file-20250729195944194.png" class="">

<h1 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h1><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.20%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%89%E8%A3%85MySQL%E5%92%8COracle/file-20250729195920474.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.22总结：shell脚本命令</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.22%E6%80%BB%E7%BB%93%EF%BC%9Ashell%E8%84%9A%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="shell变量"><a href="#shell变量" class="headerlink" title="shell变量"></a>shell变量</h1><h2 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h2><p>$HOME :当前登录用户的 “家目录” 路径<br>$USER：当前用户名<br>$RANDOM 可以随机生成 0~32767之间的整数数字</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$HOME</span> <span class="comment">#相当于pwd</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$USER</span> <span class="comment">#相当于whoami</span></span><br><span class="line"><span class="built_in">echo</span> $[RANDOM%100+1] <span class="comment">#生成1-100的随机整数</span></span><br></pre></td></tr></table></figure>

<h2 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h2><p>变量名&#x3D;值；变量名和&#x3D;之间不能用空格<br>用$符引用变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xm=<span class="string">&quot;哥哥&quot;</span></span><br><span class="line">age=5</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$xm</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$xm</span>是<span class="variable">$age</span>岁&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#命令赋值需要用反点``引起</span></span><br><span class="line">n=`<span class="built_in">cat</span> /etc/passwd | grep -c <span class="string">&quot;root&quot;</span>` </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$n</span></span><br></pre></td></tr></table></figure>

<h2 id="特殊变量"><a href="#特殊变量" class="headerlink" title="特殊变量"></a>特殊变量</h2><p>$n  n为number，$0代表该脚本名称，$1-$9代表第一到第九个参数（位置参数）<br>$#  获取所有输入参数的个数，常用于循环；<br>$@  代表命令行中所有的参数，$@会把每个参数区分对待；<br>$?  返回最后一次命令执行的状态，返回0代表正确执行，返回非0代表执行不正确。</p>
<h1 id="read-读取终端输入"><a href="#read-读取终端输入" class="headerlink" title="read 读取终端输入"></a>read 读取终端输入</h1><p>-p：指定读取值时的提示符；<br>-t：指定读取值时等待的时间（秒）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入密码：&quot;</span> s </span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入密码：&quot;</span> -t 10 pw <span class="comment">#10秒后关闭输入</span></span><br></pre></td></tr></table></figure>

<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符 &#x3D;"></a>赋值运算符 &#x3D;</h2><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><p>字符串比较： &#x3D;&#x3D; 等于  !&#x3D; 不等于<br>数值比较：-eq 等于 -ne 不等于 -lt 小于 -le 小于等于 -gt 大于 -ge 大于等于<br>类型权限：-f 存在且是文件 -d 存在且是目录 -r 读 (read) -w 写(write) -x 执行 (execute)</p>
<h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>-a 与  -o 或  ! 非</p>
<h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2><p>$((运算式)) 或 $[运算式]<br>+ , - , *, &#x2F;, % 加，减，乘，除，取余</p>
<h1 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h1><h2 id="if-条件判断"><a href="#if-条件判断" class="headerlink" title="if [ 条件判断 ]"></a>if [ 条件判断 ]</h2><ul>
<li>if [ 条件判断式 ] 中括号里面两边要加空格!</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sex=<span class="string">&quot;男&quot;</span> </span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$sex</span> == <span class="string">&quot;男&quot;</span> ] </span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;去做饭&quot;</span> </span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$sex</span> == <span class="string">&quot;女&quot;</span> ] </span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;去逛街&quot;</span> </span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;其他&quot;</span> </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多条件应用</span></span><br><span class="line">a=3 b=4 c=<span class="string">&quot;s&quot;</span> </span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -lt <span class="variable">$b</span> -a <span class="variable">$c</span> == <span class="string">&quot;s&quot;</span> ] </span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;true&quot;</span> </span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;false&quot;</span> </span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断文件是否存在 </span></span><br><span class="line"><span class="keyword">if</span> [ -f /root/a.txt ] </span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;是文件&quot;</span> <span class="built_in">cat</span> /root/a.txt </span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;不是文件&quot;</span> </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h2 id="case-等值判断"><a href="#case-等值判断" class="headerlink" title="case 等值判断"></a>case 等值判断</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sex=<span class="string">&quot;男&quot;</span> </span><br><span class="line"><span class="keyword">case</span> <span class="variable">$sex</span> <span class="keyword">in</span> </span><br><span class="line"><span class="string">&quot;男&quot;</span>) <span class="built_in">echo</span> <span class="string">&quot;打游戏&quot;</span> ;; </span><br><span class="line"><span class="string">&quot;女&quot;</span>) <span class="built_in">echo</span> <span class="string">&quot;去逛街&quot;</span> ;;</span><br><span class="line">*) <span class="built_in">echo</span> <span class="string">&quot;其他&quot;</span> ;; </span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>

<h1 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h1><h2 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5` </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span> </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 位置参数 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$@</span> </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span> </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串 </span></span><br><span class="line">s=<span class="string">&quot;a b c dd e&quot;</span> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$s</span> </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span> </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令结果 </span></span><br><span class="line">s=`<span class="built_in">ls</span> /root`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$s</span> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$s</span> </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span> </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 二重循环：循环里面嵌套循环，外层循环先开始，内层循环结束后，再开始外层的下一个循环</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5` </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5` </span><br><span class="line">	<span class="keyword">do</span> </span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$j</span>&quot;</span>  <span class="comment">#内层循环 </span></span><br><span class="line">	<span class="keyword">done</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span>  <span class="comment">#外层循环 </span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#乘法表（双重嵌套）</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9` </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 <span class="variable">$i</span>` </span><br><span class="line">	<span class="keyword">do</span> </span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">&quot; <span class="variable">$j</span> * <span class="variable">$i</span> = <span class="subst">$(($i * $j)</span>) &quot;</span> </span><br><span class="line">	<span class="keyword">done</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;&quot;</span> </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<h2 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">i=1 </span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -le 10 ] </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span> </span><br><span class="line">	i=$((<span class="variable">$i</span>+<span class="number">1</span>)) </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 不确定循环次数 </span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;及格了吗？（y/n）：&quot;</span> answer </span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$answer</span> == <span class="string">&quot;n&quot;</span> ] </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;学习做作业考试&quot;</span> </span><br><span class="line">	<span class="built_in">read</span> -p <span class="string">&quot;及格了吗？（y/n）：&quot;</span> answer </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;终于及格了&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="循环控制"><a href="#循环控制" class="headerlink" title="循环控制"></a>循环控制</h2><p>只影响离自己最近的那个循环<br>break 跳出当前循环（如果有多重循环会继续执行上一层循环）<br>continue 跳出语句（不再往下执行），继续执行当前循环的下一个元素</p>
<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.输入两个数字判断两个数字的大小 </span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入第一个数&quot;</span> num1</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入第二个数&quot;</span> num2</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num1</span> -eq <span class="variable">$num2</span> ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$num1</span>=<span class="variable">$num2</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$num1</span> -gt <span class="variable">$num2</span> ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$num1</span>&gt;<span class="variable">$num2</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$num1</span>&lt;<span class="variable">$num2</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.输入一个数字输出这个数字是偶数还是奇数 </span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个整数: &quot;</span> num</span><br><span class="line"><span class="keyword">if</span> [ $[num%2] -eq 0 ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$num</span> 是偶数&quot;</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$num</span> 是奇数&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.判断一个年份是否是闰年,400整除是世纪闰年，100不整除并且被4整除是闰年，其余是平年</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个年份：&quot;</span> y</span><br><span class="line"><span class="keyword">if</span> [ $[y%400] -eq 0 -o $[y%100] -ne 0 -a $[y%4] -eq 0 ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$y</span>是闰年&quot;</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$y</span>是平年&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.输入三个数，不考虑相等，有小到大打印输出 </span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;输入三个数（用空格分隔）：&quot;</span> num1 num2 num3</span><br><span class="line"><span class="comment"># num1 &lt;= num2</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num1</span> -gt <span class="variable">$num2</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    temp=<span class="variable">$num1</span></span><br><span class="line">    num1=<span class="variable">$num2</span></span><br><span class="line">    num2=<span class="variable">$temp</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># num1 &lt;= num3</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num1</span> -gt <span class="variable">$num3</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    temp=<span class="variable">$num1</span></span><br><span class="line">    num1=<span class="variable">$num3</span></span><br><span class="line">    num3=<span class="variable">$temp</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># num2 &lt;= num3</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num2</span> -gt <span class="variable">$num3</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    temp=<span class="variable">$num2</span></span><br><span class="line">    num2=<span class="variable">$num3</span></span><br><span class="line">    num3=<span class="variable">$temp</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;排序：<span class="variable">$num1</span> <span class="variable">$num2</span> <span class="variable">$num3</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#5.编写脚本,将系统日志文件（/var/log/messages），拷贝到/root/文件夹中 </span></span><br><span class="line"><span class="built_in">cp</span> /var/log/messages /root/</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.编写脚本，位置参数传入学生的姓名和班级，打印“我的名字叫xx，我的班级是xx班” </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;我的名字叫<span class="variable">$1</span>，我的班级是<span class="variable">$2</span>班&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#7.用if，写一个shell脚本，运行时输入一个数字，如果是666则输出evil，如果是777则输出lucky, 如果是其他则输出human。 </span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个数字：&quot;</span> num</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num</span> -eq 666 ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;evil&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$num</span> -eq 777 ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;lucky&quot;</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;human&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#8.用case方法改写上面的功能。</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个数字：&quot;</span> num</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$num</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;666&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;evil&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;777&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;lucky&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;human&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#9.判断/root/hosts是否是存在并且是普通文件，如果不存在则新建一个，如果已经存在，则追加写入当前时间到此文件中 </span></span><br><span class="line">path=<span class="string">&quot;/root/hosts&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$path</span> ]</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line">	<span class="built_in">date</span> &gt;&gt; <span class="variable">$path</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;是文件，已追加&quot;</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="built_in">touch</span> <span class="variable">$path</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;没有文件，已新建&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#10.判断当前用户是否为root，如果不是则打印非root账号，是的话就执行ifconfig查看 网卡信息（$USER获取当前用户） </span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$USER</span> == <span class="string">&quot;root&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span> ifconfig</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$USER</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#11.位置参数传递一个绝对路径的文件，添加所有人可执行权限且提示添加执行权限成功，如果没有传递参数提示没有传递文件。 </span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -eq 0 ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;没有传递文件&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ ! -f <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]</span><br><span class="line">	<span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;&#x27;<span class="variable">$1</span>&#x27; 不是文件&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">chmod</span> a+x <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;已为 &#x27;<span class="variable">$1</span>&#x27; 添加所有人可执行权限&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#12.编写脚本判断mysql是否正常启动（端口号3306，查看端口netstat -nltp,然后grep过 滤返回行数，判断行数是否大于0）</span></span><br><span class="line">port=`netstat -nltp | grep -c <span class="string">&quot;3306&quot;</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$port</span> -gt 0 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;MySQL服务已启动&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;MySQL服务未启动&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#13.首先显示当天日期， 然后查找给定的用户是否在系统中工作（cat /etc/passwd）。 如果在系统中，就输出一条欢迎语句（例如 hello，root！）；如果不在系统中，就 输出一条语句（waiting for root！） </span></span><br><span class="line"><span class="built_in">date</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入要查找的用户：&quot;</span> usr</span><br><span class="line">n=`<span class="built_in">cat</span> /etc/passwd | grep -c <span class="variable">$usr</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$n</span> -gt 0 ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;hello,<span class="variable">$usr</span>！&quot;</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;waiting for <span class="variable">$usr</span>！&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#14.接受一个参数，若给定参数不是目录， 则给出提示信息； 否则使用 ls -l 命令列出该目录下的内容，并输出有多少个子目录（d 开头），多少 个普通文件(-开头）。显示示例如下： 目录的数量：16 文件的数量：25</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个路径:&quot;</span> path</span><br><span class="line"><span class="keyword">if</span> [ -d <span class="variable">$path</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">ls</span> -l <span class="variable">$path</span></span><br><span class="line">    d=`<span class="built_in">ls</span> -l <span class="variable">$path</span> | grep -c <span class="string">&quot;^d&quot;</span>`</span><br><span class="line">    f=`<span class="built_in">ls</span> -l <span class="variable">$path</span> | grep -c <span class="string">&quot;^-&quot;</span>`</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;目录数量：<span class="variable">$d</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;文件数量：<span class="variable">$f</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;&#x27;<span class="variable">$path</span>&#x27;不是目录&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.写一个循环，输出20-40 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 20 40`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.从1-50的单数，倒序</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 50 -1 1`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">if</span> [ $[i%2] -ne 0 ]</span><br><span class="line">    <span class="keyword">then</span> <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.计算并显示 1 到 100 之间的奇数之和</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 100`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ $[i%2] -ne 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">sum</span>=$[<span class="built_in">sum</span>+<span class="variable">$i</span>]</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$sum</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#5.有若干只鸡兔同在一个笼子里，从上面数有35个头，从下面数有94只脚。问笼中各有多少只鸡和兔？ </span></span><br><span class="line">ck=35</span><br><span class="line">rb=0</span><br><span class="line">leg=70</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$leg</span> -ne 94 ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    ck=$[ck-1]</span><br><span class="line">    rb=$[rb+1]</span><br><span class="line">    leg=$[ck*2+rb*4]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ck</span>只鸡和<span class="variable">$rb</span>只兔&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#6.猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个，第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前 一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。</span></span><br><span class="line">n=1</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    n=$[(n+1)*2]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第一天共摘了<span class="variable">$n</span>个桃&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#7.创建用户组wanmei，批量建立用户wm1到wm9,用户属于wanmei组,创建完成查看/etc/group和/etc/passwd文件 </span></span><br><span class="line">g=<span class="string">&quot;wanmei&quot;</span></span><br><span class="line">u=<span class="string">&quot;wm&quot;</span></span><br><span class="line">groupadd <span class="variable">$g</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    u=wm<span class="variable">$i</span></span><br><span class="line">    useradd -g <span class="variable">$g</span> <span class="variable">$u</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">cat</span> /etc/group /etc/passwd</span><br><span class="line"><span class="comment">#8.删除上面的用户和用户组 </span></span><br><span class="line">g=<span class="string">&quot;wanmei&quot;</span></span><br><span class="line">u=<span class="string">&quot;wm&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    u=wm<span class="variable">$i</span></span><br><span class="line">    userdel <span class="variable">$u</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">groupdel <span class="variable">$g</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#9.实现传入一个目录作为参数，如果传入的不是目录则提示不是目录，如果是目录则将该目录下所有的普通文件的文件名都罗列出来 </span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个目录:&quot;</span> <span class="built_in">dir</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$dir</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;不是目录&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    names=`<span class="built_in">ls</span> <span class="variable">$dir</span>`</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$names</span>&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$names</span></span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span> [ -d <span class="variable">$dir</span>/<span class="variable">$i</span> ] <span class="comment">#必须要带绝对路径</span></span><br><span class="line">                <span class="keyword">then</span></span><br><span class="line">                    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#10.猜数字游戏：电脑随机产生一个100以内的数字（1-99），通过每次键盘输入来猜数字，输入的小了就提示往大猜，输入大了就提示往小里猜， 直到输入正确数字（通过$RANDOM获取随机数）</span></span><br><span class="line">n=$[RANDOM%99+1]</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;现在生成了一个1-99的随机数，请输入你猜的数字：&quot;</span> num</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$num</span> -eq <span class="variable">$n</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;恭喜你猜对了！&quot;</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">elif</span> [ <span class="variable">$num</span> -lt <span class="variable">$n</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">&quot;猜错了，往大猜：&quot;</span> num</span><br><span class="line">    <span class="keyword">elif</span> [ <span class="variable">$num</span> -gt <span class="variable">$n</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">&quot;猜错了，往小猜：&quot;</span> num</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">&quot;输入不合法，请重新输入：&quot;</span> num</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.23总结：函数</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.23%E6%80%BB%E7%BB%93%EF%BC%9A%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="二重循环"><a href="#二重循环" class="headerlink" title="二重循环"></a>二重循环</h1><p>循环里面嵌套循环，外层循环先开始，内层循环结束后，再开始外层的下一个循环</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5` </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5` </span><br><span class="line">	<span class="keyword">do</span> </span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$j</span>&quot;</span>  <span class="comment">#内层循环 </span></span><br><span class="line">	<span class="keyword">done</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span>  <span class="comment">#外层循环 </span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#乘法表（双重嵌套）</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9` </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 <span class="variable">$i</span>` </span><br><span class="line">	<span class="keyword">do</span> </span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$j</span>*<span class="variable">$i</span> = <span class="subst">$(($i*$j)</span>)&quot;</span> </span><br><span class="line">	<span class="keyword">done</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;&quot;</span> </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="循环控制"><a href="#循环控制" class="headerlink" title="循环控制"></a>循环控制</h2><p>只影响离自己最近的那个循环<br>break 跳出当前循环（如果有多重循环会继续执行上一层循环）<br>continue 跳出语句（不再往下执行），继续执行当前循环的下一个元素</p>
<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">name</span></span>()&#123;</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;hello 黄文哲&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">getSum</span></span>()&#123;</span><br><span class="line">	<span class="built_in">sum</span>=$((<span class="variable">$1</span>+<span class="variable">$2</span>))  <span class="comment">#这里的$1 $2是调用函数时的位置参数</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$sum</span>&quot;</span></span><br><span class="line">	name  <span class="comment">#函数可以互相嵌套，前提是被嵌套的函数要先声明</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行函数</span></span><br><span class="line">getSum <span class="variable">$1</span> <span class="variable">$2</span>  <span class="comment">#这里的$1 $2是脚本的位置参数（./test.sh 1 2）</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入数字1:&quot;</span> n1</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入数字2:&quot;</span> n2</span><br><span class="line">he=`getSum <span class="variable">$n1</span> <span class="variable">$n2</span>` <span class="comment">#调用函数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$he</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="递归（自己调用自己）"><a href="#递归（自己调用自己）" class="headerlink" title="递归（自己调用自己）"></a>递归（自己调用自己）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#输入一个目录显示里面的所有目录</span></span><br><span class="line"><span class="function"><span class="title">getDir</span></span>()&#123;</span><br><span class="line">    names=`<span class="built_in">ls</span> <span class="variable">$1</span>`</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$names</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> [ -d <span class="variable">$1</span>/<span class="variable">$i</span> ]</span><br><span class="line">            <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$i</span>&quot;</span></span><br><span class="line">                getDir <span class="variable">$1</span>/<span class="variable">$i</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.99乘法表 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9` </span><br><span class="line">	<span class="keyword">do</span> </span><br><span class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 <span class="variable">$i</span>` </span><br><span class="line">		<span class="keyword">do</span> </span><br><span class="line">			<span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$j</span>×<span class="variable">$i</span>=<span class="subst">$(($i*$j)</span>) &quot;</span> </span><br><span class="line">		<span class="keyword">done</span> </span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;&quot;</span> </span><br><span class="line">	<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.拼接一个直角三角形 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 <span class="variable">$i</span>`</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">                <span class="built_in">echo</span> -n <span class="string">&quot;*&quot;</span></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot; &quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.上个练习基础上拼接一个等腰三角形 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">for</span> k <span class="keyword">in</span> `<span class="built_in">seq</span> 1 $((<span class="number">5</span>-<span class="variable">$i</span>))`</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">               <span class="built_in">echo</span> -n <span class="string">&quot; &quot;</span> </span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 $((<span class="variable">$i</span>*<span class="number">2</span>-<span class="number">1</span>))`</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">                <span class="built_in">echo</span> -n <span class="string">&quot;*&quot;</span></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot; &quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.上个练习基础上拼接一个菱形 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$i</span> -le 5 ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> `<span class="built_in">seq</span> 1 $((<span class="number">5</span>-<span class="variable">$i</span>))`</span><br><span class="line">                <span class="keyword">do</span></span><br><span class="line">                    <span class="built_in">echo</span> -n <span class="string">&quot; &quot;</span> </span><br><span class="line">                <span class="keyword">done</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 $((<span class="variable">$i</span>*<span class="number">2</span>-<span class="number">1</span>))`</span><br><span class="line">                <span class="keyword">do</span></span><br><span class="line">                    <span class="built_in">echo</span> -n <span class="string">&quot;*&quot;</span></span><br><span class="line">                <span class="keyword">done</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot; &quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> `<span class="built_in">seq</span> 1 $((<span class="variable">$i</span>-<span class="number">5</span>))`</span><br><span class="line">                <span class="keyword">do</span></span><br><span class="line">                    <span class="built_in">echo</span> -n <span class="string">&quot; &quot;</span> </span><br><span class="line">                <span class="keyword">done</span></span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> `<span class="built_in">seq</span> 1 $(((<span class="number">10</span>-<span class="variable">$i</span>)*<span class="number">2</span>-<span class="number">1</span>))`</span><br><span class="line">                <span class="keyword">do</span></span><br><span class="line">                    <span class="built_in">echo</span> -n <span class="string">&quot;*&quot;</span></span><br><span class="line">                <span class="keyword">done</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot; &quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#5.打印输出100至200之间的全部素数，输出素数并统计共有多少个素数。 注：质数(prime number)又称素数，有无限个。一个大于1的自然数，除了1和它本身外，不能被其他自然数整除，换句话说就是该数除了1和它本身以外不再有其他的因数;否则称为合数。</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 100 200`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        n=$((<span class="variable">$i</span>-<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 2 <span class="variable">$n</span>`</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span> [ $((<span class="variable">$i</span>%<span class="variable">$j</span>)) -eq 0 ]</span><br><span class="line">                    <span class="keyword">then</span> <span class="built_in">break</span></span><br><span class="line">                <span class="keyword">elif</span> [ <span class="variable">$j</span> -eq <span class="variable">$n</span> ]</span><br><span class="line">                    <span class="keyword">then</span> </span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span></span><br><span class="line">                        count=$((<span class="variable">$count</span>+<span class="number">1</span>))</span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;共有<span class="variable">$count</span>个素数&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.编写函数, 函数传入三个参数,输出积</span></span><br><span class="line"><span class="function"><span class="title">getJi</span></span>()&#123;</span><br><span class="line">    ji=$((<span class="variable">$1</span>*<span class="variable">$2</span>*<span class="variable">$3</span>))</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$he</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.编写函数，传递一个数字参数5，实现1到5的累加，返回和，输出&quot;和是：15&quot; </span></span><br><span class="line"><span class="function"><span class="title">getSum</span></span>()&#123;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 <span class="variable">$1</span>`</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">sum</span>=$((<span class="variable">$sum</span>+<span class="variable">$i</span>))</span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;和是：<span class="variable">$sum</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.编写函数,当该函数没有参数或参数多于2个, 输出-1,只有一个参数时, 输出1,有两个参数 时, 输出2 提示：使用$#判断参数的个数 </span></span><br><span class="line"><span class="function"><span class="title">countNum</span></span>()&#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$#</span> -eq 1 -o <span class="variable">$#</span> -eq 2 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$#</span>&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;-1&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.编写函数，实现传入一个目录参数，将该目录下（递归）所有的文件都打印出来（遇到文件则打印，遇到目录则继续调函数递归） </span></span><br><span class="line"><span class="function"><span class="title">getFile</span></span>()&#123;</span><br><span class="line">    names=`<span class="built_in">ls</span> <span class="variable">$1</span>`</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$names</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> [ -f <span class="variable">$1</span>/<span class="variable">$i</span> ]</span><br><span class="line">            <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$i</span>&quot;</span></span><br><span class="line">            <span class="keyword">elif</span> [ -d <span class="variable">$1</span>/<span class="variable">$i</span> ]</span><br><span class="line">            <span class="keyword">then</span></span><br><span class="line">                getFile <span class="variable">$1</span>/<span class="variable">$i</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.编写函数，传入一个数字n，实现n的阶乘,效果如下：</span></span><br><span class="line"><span class="function"><span class="title">jiecheng</span></span>()&#123;</span><br><span class="line">    txt=<span class="string">&quot;<span class="variable">$1</span>!=<span class="variable">$1</span>&quot;</span></span><br><span class="line">    res=1</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> <span class="variable">$1</span> -1 1`</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> [ <span class="variable">$i</span> -ne <span class="variable">$n</span> ]</span><br><span class="line">                <span class="keyword">then</span> txt=<span class="variable">$txt</span>*<span class="variable">$i</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            res=$((<span class="variable">$res</span>*<span class="variable">$i</span>))</span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;根据数字<span class="variable">$1</span>得到阶乘表达式是：<span class="variable">$txt</span>=<span class="variable">$res</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入数字：&quot;</span> n</span><br><span class="line">jiecheng <span class="variable">$n</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.24总结：shell工具</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.24%E6%80%BB%E7%BB%93%EF%BC%9Ashell%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h1 id="shell工具"><a href="#shell工具" class="headerlink" title="shell工具"></a>shell工具</h1><p>grep 、sed、awk被称为linux中的”三剑客”<br>grep  更适合单纯的查找或匹配文本<br>sed  更适合编辑匹配到的文本<br>awk  更适合格式化文本，对文本进行较复杂格式处理</p>
<h2 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h2><p>sort命令可将文件进行排序，并将排序结果标准输出</p>
<p><strong>参数说明</strong><br><strong>-n</strong>  依照数值的大小排序（升序）<br><strong>-r</strong>  以相反的顺序来排序<br><strong>-t</strong>  设置排序时所用的分隔字符<br><strong>-k</strong>  指定需要排序的列</p>
<p>例如，文件夹sh下有如下sort.txt文件：<br>bb:40:5.4<br>bd:20:4.2<br>xz:50:2.3<br>cls:10:3.5<br>ss:30:1.6</p>
<p>按照”：”分割后的第三列倒序排序：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sort</span> -t <span class="string">&quot;:&quot;</span> -nrk 3 /root/sh/sort.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line">bb:40:5.4 </span><br><span class="line">bd:20:4.2 </span><br><span class="line">cls:10:3.5 </span><br><span class="line">xz:50:2.3 </span><br><span class="line">ss:30:1.6</span><br></pre></td></tr></table></figure>
<h2 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h2><p>stream editor（流编辑器）的简称<br>它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中（“模式空间“），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。</p>
<p><strong>参数说明</strong><br><strong>p</strong> 打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行<br><strong>i</strong> 插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)<br><strong>a</strong> 新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)<br><strong>s</strong> 取代，可以直接进行取代的工作，通常这个 s 的动作可以搭配正则表示法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.显示文件的第 2 行的内容： </span></span><br><span class="line">sed -n <span class="string">&#x27;2 p&#x27;</span> /root/sh/sort.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#2.显示文件的第 2 行到第 4 行的内容： </span></span><br><span class="line">sed -n <span class="string">&#x27;2,4 p&#x27;</span> /root/sh/sort.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#3.将文件中的bb全部替换为BB </span></span><br><span class="line">sed <span class="string">&#x27;s/bb/BB/g&#x27;</span> /root/sh/sort.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#4.以文件bb开头的上一行添加 </span></span><br><span class="line">sed <span class="string">&#x27;/^bb/i hello&#x27;</span> /root/sh/sort.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#5.将文件中的d全部删除 </span></span><br><span class="line">sed <span class="string">&#x27;s/d//g&#x27;</span> /root/sh/sort.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以使用管道符 | 连续处理，接着重定向保存</span></span><br><span class="line"><span class="comment"># 使用 | 连续处理时只需在第一个语句里指定文件路径，后续的处理不能写！</span></span><br><span class="line"><span class="comment"># 命令过长需要换行时可以使用\拼接</span></span><br><span class="line"><span class="comment"># 使用 | 换行时可不使用 \</span></span><br><span class="line">sed <span class="string">&#x27;s/bd/BB/g&#x27;</span> /root/sh/sort.txt \</span><br><span class="line">| sed <span class="string">&#x27;s/ss/SS/g&#x27;</span> | sed <span class="string">&#x27;s/cls/AA/g&#x27;</span> \</span><br><span class="line">| <span class="built_in">sort</span> -t <span class="string">&quot;:&quot;</span>  -nrk 3 | sed <span class="string">&#x27;/^bb/i one,two,three&#x27;</span> \</span><br><span class="line">| sed <span class="string">&#x27;s/:/./g&#x27;</span> &gt; /root/sh/sort.csv</span><br><span class="line"></span><br><span class="line">sed <span class="string">&#x27;s/bd/BB/g&#x27;</span> /root/sh/sort.txt |</span><br><span class="line">sed <span class="string">&#x27;s/ss/SS/g&#x27;</span> | sed <span class="string">&#x27;s/cls/AA/g&#x27;</span> |</span><br><span class="line"><span class="built_in">sort</span> -t <span class="string">&quot;:&quot;</span>  -nrk 3 | sed <span class="string">&#x27;/^bb/i one,two,three&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/:/./g&#x27;</span> &gt; /root/sh/sort.csv</span><br></pre></td></tr></table></figure>

<h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><p>一个完整的awk命令格式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk [options] <span class="string">&#x27;BEGIN&#123;command1&#125; &#123;command2&#125; END&#123;command3&#125;&#x27;</span> file</span><br><span class="line"><span class="comment">#[options]设置分隔字段</span></span><br><span class="line"><span class="comment">#BEGIN可设置列名</span></span><br><span class="line"><span class="comment">#command2设置打印的列</span></span><br><span class="line"><span class="comment">#END可显示行列总数量</span></span><br><span class="line"><span class="comment">#file表示文件路径</span></span><br></pre></td></tr></table></figure>
<p>-v FS 指定以什么对字段进行分隔<br>-v OFS 指定输出的字段以什么分隔<br>不写导出后的分隔符默认以空格划分</p>
<p><strong>内置参数</strong><br>NF 分割完字段的数量<br>$1 代表文本行中的第 1 个数据字段<br>$2 代表文本行中的第 2 个数据字段<br>输出指定列：{print $1,$2}<br>分隔符相同的情况输出一整行：{print}</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1-3重要</span></span><br><span class="line"><span class="comment">#1.以:为分隔符，打印第2列和第1列 </span></span><br><span class="line">awk -v FS=<span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $2,$1&#125;&#x27;</span> /root/shell/sort.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#2.以:为分隔符，打印第2列和第1列，列之间用,分割 </span></span><br><span class="line">awk -v FS=<span class="string">&quot;:&quot;</span> -v OFS=<span class="string">&quot;,&quot;</span> <span class="string">&#x27;&#123;print $2,$1&#125;&#x27;</span> /root/shell/sort.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#3.添加列保存为csv，下载，使用excel查看 </span></span><br><span class="line">awk -v FS=<span class="string">&quot;:&quot;</span> -v OFS=<span class="string">&quot;,&quot;</span> <span class="string">&#x27;BEGIN&#123;print &quot;one,two,three&quot;&#125;&#123;print $2,$1,$3&#125;&#x27;</span> /root/shell/sort.txt &gt; /root/shell/sort.csv </span><br><span class="line"></span><br><span class="line"><span class="comment">#4-5扩展</span></span><br><span class="line"><span class="comment">#4.第二列大于30 </span></span><br><span class="line">awk -v FS=<span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123; if($2&gt;30)&#123;print $2&#125;&#125;&#x27;</span> /root/shell/sort.txt </span><br><span class="line"><span class="comment">#5.行列总数量 </span></span><br><span class="line">awk -v FS=<span class="string">&quot;:&quot;</span> <span class="string">&#x27;BEGIN&#123;n=0&#125;&#123;for(i=1;i&lt;=NF;i++)&#123;n++&#125; &#125;END&#123;print n&#125;&#x27;</span> /root/shell/sort.txt</span><br></pre></td></tr></table></figure>
<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.复制网卡文件/etc/sysconfig/network-scripts/ifcfg-ens33 到家目录，并且改名为 wangka.txt </span></span><br><span class="line"><span class="built_in">cp</span> /etc/sysconfig/network-scripts/ifcfg-ens33 <span class="variable">$HOME</span>/wangka.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.找到含有 IP 的行输出 </span></span><br><span class="line"><span class="built_in">cat</span> wangka.txt | grep <span class="string">&quot;IPADDR&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.显示文件的第 3 行到第 5 行的内容 </span></span><br><span class="line">sed -n <span class="string">&#x27;3,5 p&#x27;</span> <span class="variable">$HOME</span>/wangka.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.将文件中的255全部替换为250 </span></span><br><span class="line">sed <span class="string">&#x27;s/255/250/g&#x27;</span> <span class="variable">$HOME</span>/wangka.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.以文件IPADDR开头的上一行添加hello </span></span><br><span class="line">sed <span class="string">&#x27;/^IPADDR/i hello&#x27;</span> <span class="variable">$HOME</span>/wangka.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.找到所有DNS，并且删掉</span></span><br><span class="line">sed <span class="string">&#x27;s/DNS//g&#x27;</span> <span class="variable">$HOME</span>/wangka.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.使用管道符连续处理4. 5. 6. 题，并且重定向结果保存为wangka.csv</span></span><br><span class="line">sed <span class="string">&#x27;s/255/250/g&#x27;</span> <span class="variable">$HOME</span>/wangka.txt |</span><br><span class="line">sed <span class="string">&#x27;/^IPADDR/i hello&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/DNS//g&#x27;</span> &gt; <span class="variable">$HOME</span>/wangka.csv</span><br><span class="line"></span><br><span class="line"><span class="comment">#8. 根据wangka.csv文件自己灵活处理重定向为ip.txt,内容如下： </span></span><br><span class="line"><span class="comment"># 192.168.145.151 </span></span><br><span class="line"><span class="comment"># 250.250.250.0 </span></span><br><span class="line"><span class="comment"># 192.168.145.2 </span></span><br><span class="line"><span class="comment"># 8.8.8.8 </span></span><br><span class="line"><span class="comment"># 114.114.114.114 </span></span><br><span class="line">sed -n <span class="string">&#x27;20,24 p&#x27;</span> <span class="variable">$HOME</span>/wangka.csv |</span><br><span class="line">awk -v FS=<span class="string">&quot;\&quot;&quot;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> &gt; <span class="variable">$HOME</span>/ip.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#9.ip.txt中以.分割，按照第一列进行降序排序 </span></span><br><span class="line"><span class="built_in">sort</span> -t <span class="string">&quot;.&quot;</span> -nrk 1 <span class="variable">$HOME</span>/ip.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#10.ip.txt中以.为分隔符，打印第1列和第2列 </span></span><br><span class="line">awk -v FS=<span class="string">&quot;.&quot;</span> <span class="string">&#x27;&#123;print $1,$2&#125;&#x27;</span> <span class="variable">$HOME</span>/ip.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#11.ip.txt中以.为分隔符，打印第3列和第4列，列之间用,分割</span></span><br><span class="line">awk -v FS=<span class="string">&quot;.&quot;</span> -v OFS=<span class="string">&quot;,&quot;</span> <span class="string">&#x27;&#123;print $3,$4&#125;&#x27;</span> <span class="variable">$HOME</span>/ip.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#12.ip.txt中以.为分隔符，列之间用,分割，且加一行，保存为ip.csv,格式如下： </span></span><br><span class="line"><span class="comment"># one,two,three,four </span></span><br><span class="line"><span class="comment"># 192,168,145,151 </span></span><br><span class="line"><span class="comment"># 250,250,250,0 </span></span><br><span class="line"><span class="comment"># 192,168,145,2 </span></span><br><span class="line"><span class="comment"># 8,8,8,8 </span></span><br><span class="line"><span class="comment"># 114,114,114,114</span></span><br><span class="line">awk -v FS=<span class="string">&quot;.&quot;</span> -v OFS=<span class="string">&quot;,&quot;</span> <span class="string">&#x27;BEGIN&#123;print &quot;one,two,three,four&quot;&#125;&#123;print $1,$2,$3,$4&#125;&#x27;</span> <span class="variable">$HOME</span>/ip.txt &gt; <span class="variable">$HOME</span>/ip.csv</span><br><span class="line"></span><br><span class="line"><span class="comment">#13.在家目录下创建一个names.txt的文件，写入班级的所有同学的姓名，每个一行，每次随机产生一个姓名</span></span><br><span class="line">c=`<span class="built_in">cat</span> names.txt | <span class="built_in">wc</span> -l`</span><br><span class="line">n=$[RANDOM%<span class="variable">$c</span>+1]</span><br><span class="line">sed -n <span class="string">&quot;<span class="variable">$n</span> p&quot;</span> <span class="variable">$HOME</span>/names.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#14.批量修改家目录下的文件扩展名，使用位置参数传递两种扩展名，例如txt文件为csv 文件。（注：碰到特殊符号使用\进行转义）</span></span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line">f=`<span class="built_in">ls</span> *.<span class="variable">$1</span>`</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$f</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        new=`<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span> | sed <span class="string">&quot;s/\.$1$/.<span class="variable">$2</span>/&quot;</span>`</span><br><span class="line">        <span class="built_in">mv</span> <span class="variable">$i</span> <span class="variable">$new</span></span><br><span class="line">    <span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ollama部署本地AI大模型</title>
    <url>/2025/08/05/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.5%20Ollama%E9%83%A8%E7%BD%B2%E6%9C%AC%E5%9C%B0AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<p><a href="https://ollama.com/">Ollama官网</a><br><a href="https://blog.csdn.net/m0_70486148/article/details/146326507">DeepSeek本地部署+联网搜索+知识库</a></p>
<h1 id="相关常用命令-cmd"><a href="#相关常用命令-cmd" class="headerlink" title="相关常用命令 (cmd)"></a>相关常用命令 (cmd)</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">ollama -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看模型列表</span></span><br><span class="line">ollama list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载模型</span></span><br><span class="line">ollama pull deepseek-r1:8b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行一个模型（第一次运行若未下载会自动下载）</span></span><br><span class="line">ollama run deepseek-r1:8b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看运行中的模型</span></span><br><span class="line">ollama ps</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止运行中的模型</span></span><br><span class="line">ollama stop deepseek-r1:8b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除模型</span></span><br><span class="line">ollama <span class="built_in">rm</span> qwen2.5:7b</span><br></pre></td></tr></table></figure>

<h1 id="可视化配置（Edge插件）"><a href="#可视化配置（Edge插件）" class="headerlink" title="可视化配置（Edge插件）"></a>可视化配置（Edge插件）</h1><p>获取 Page Assist 扩展</p>
<img src="/2025/08/05/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.5%20Ollama%E9%83%A8%E7%BD%B2%E6%9C%AC%E5%9C%B0AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/file-20250805190419870.png" class="">

<h1 id="知识库配置"><a href="#知识库配置" class="headerlink" title="知识库配置"></a>知识库配置</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载文本嵌入模型</span></span><br><span class="line">ollama pull shaw/dmeta-embedding-zh</span><br></pre></td></tr></table></figure>

<p>在RAG设置中配置文本嵌入模型</p>
<img src="/2025/08/05/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.5%20Ollama%E9%83%A8%E7%BD%B2%E6%9C%AC%E5%9C%B0AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/file-20250805195253304.png" class="">

<p>添加知识库文件</p>
<img src="/2025/08/05/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.5%20Ollama%E9%83%A8%E7%BD%B2%E6%9C%AC%E5%9C%B0AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/file-20250805195858904.png" class="">

<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>导入知识库前</p>
<img src="/2025/08/05/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.5%20Ollama%E9%83%A8%E7%BD%B2%E6%9C%AC%E5%9C%B0AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/file-20250805204034544.png" class="">

<p>导入知识库后</p>
<img src="/2025/08/05/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.5%20Ollama%E9%83%A8%E7%BD%B2%E6%9C%AC%E5%9C%B0AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/file-20250805204959769.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>ollama</tag>
      </tags>
  </entry>
  <entry>
    <title>5.26总结：数据清洗、数据导入和备份</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.26%E6%80%BB%E7%BB%93%EF%BC%9A%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97%E3%80%81%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%92%8C%E5%A4%87%E4%BB%BD/</url>
    <content><![CDATA[<h1 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h1><p>数据清洗即是将爬下来未处理的数据文件（txt、json等格式），转化为csv文件，一般需要通过sed把里面不必要的字符删除，再以通过awk以一定规律分割，最后将脚本的处理结果重定向到csv文件中。</p>
<p>一般处理思路：<br>sed掐头-去尾-换行-置空值-删符号-删元素（列名）-awk分隔、添加列名 &gt; 重定向到csv</p>
<table>
<thead>
<tr>
<th>操作类型</th>
<th>sed&#x2F;awk 实现方案</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td><strong>去除结构标记</strong></td>
<td>删除JSON头尾</td>
<td><code>sed &#39;s/^&#123;&quot;data&quot;:\[//; s/\]&#125;$//&#39;</code></td>
</tr>
<tr>
<td><strong>字段分隔</strong></td>
<td>替换分隔符为换行符</td>
<td><code>sed &#39;s/&#125;,&#123;/\n/g&#39;</code></td>
</tr>
<tr>
<td><strong>特殊字符处理</strong></td>
<td>移除转义字符</td>
<td><code>sed &#39;s/\\//g&#39;</code></td>
</tr>
<tr>
<td><strong>空值标准化</strong></td>
<td>统一空值表示</td>
<td><code>sed &#39;s/&quot;&quot;/null/g&#39;</code></td>
</tr>
<tr>
<td><strong>引号处理</strong></td>
<td>删除所有引号</td>
<td><code>tr -d &#39;&quot;&#39;</code></td>
</tr>
<tr>
<td><strong>字段提取</strong></td>
<td>按位置重组字段</td>
<td><code>awk &#39;&#123;print $2,$1,$3&#125;&#39;</code></td>
</tr>
</tbody></table>
<p>导出的csv文件用excel打开可能中文显示会乱码（wps不会），需正常显示可如下操作：</p>
<ul>
<li>右键csv文件以txt方式打开-另存为-设置编码为ANSI-确定保存<br>此后用excel打开此文件即可正常显示中文</li>
</ul>
<h1 id="通过mysql对数据库服务器操作"><a href="#通过mysql对数据库服务器操作" class="headerlink" title="通过mysql对数据库服务器操作"></a>通过mysql对数据库服务器操作</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -h127.0.0.1 -P3306 -uroot -proot123456 <span class="built_in">test</span> -e <span class="string">&quot;select * from student&quot;</span></span><br></pre></td></tr></table></figure>
<p>-h：MySQL服务器的ip地址或主机名；<br>-u：连接MySQL服务器的用户名；<br>-e：执行mysql内部命令；<br>-p：连接MySQL服务器的密码。<br>-P：连接MySQL服务器的端口</p>
<h1 id="mysqldump-备份命令"><a href="#mysqldump-备份命令" class="headerlink" title="mysqldump 备份命令"></a>mysqldump 备份命令</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.导出education数据库里面的users表的表数据和表结构(下面以users表为例)</span></span><br><span class="line">mysqldump -u[用户名] -h[ip] -p[密码] -P[端口号] 数据库名 表名 &gt; 导出的文件名.sql</span><br><span class="line">mysqldump -uroot -h127.0.0.1 -proot -P3306 education <span class="built_in">users</span> &gt; d:/user.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#导出多张表:</span></span><br><span class="line">mysqldump -uroot -proot --databases <span class="built_in">test</span> --tables t1 t2 &gt; two.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.只导出表结构不导表数据，添加“-d“命令参数</span></span><br><span class="line">mysqldump -uroot -h127.0.0.1 -proot -p3306 -d education <span class="built_in">users</span> &gt; d:/user.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.只导出表数据不导表结构，添加“-t&quot;命令参数</span></span><br><span class="line">mysqldump -uroot -h127.0.0.1 -proot -p3306 -t education <span class="built_in">users</span> &gt; d:/user.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.导出数据库的表结构和表数据(导入的时候需要指定数据库，保证指定的数据库存在)</span></span><br><span class="line"><span class="comment">#导出命令</span></span><br><span class="line">mysqldump -h127.0.0.1 -P3306 -uroot -proot education  &gt; d:/database.sql</span><br><span class="line"><span class="comment">#导入命令</span></span><br><span class="line">mysql -uroot -proot -h127.0.0.1 -P3306 education &lt; d:/database.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.导出特定数据库的所有表格的表结构及其数据，添加&quot;--databases“命令参数(导入的时候直接执行导出sql就行)</span></span><br><span class="line"><span class="comment">#导出命令</span></span><br><span class="line">mysqldump -h127.0.0.1 -P3306 -uroot -proot education --databases education &gt; database.sql</span><br><span class="line"><span class="comment">#导入命令:</span></span><br><span class="line">mysql -uroot -proot -h127.0.0.1 -P3306 &lt;d:/all database.sql</span><br></pre></td></tr></table></figure>


<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.清洗数据《infotest.txt》保存成《infotest.csv》 </span></span><br><span class="line">sed <span class="string">&#x27;s/\[&#123;//g&#x27;</span> /root/sh/infotest.txt |  <span class="comment">#掐头</span></span><br><span class="line">sed <span class="string">&#x27;s/&#125;\]//g&#x27;</span> |  <span class="comment">#去尾</span></span><br><span class="line">sed <span class="string">&#x27;s/&quot;&quot;/null/g&#x27;</span> |  <span class="comment">#置空值</span></span><br><span class="line">sed <span class="string">&#x27;s/&quot;//g&#x27;</span> |  <span class="comment">#删引号</span></span><br><span class="line"><span class="comment">#删除元素说明</span></span><br><span class="line">sed <span class="string">&#x27;s/catchTime://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/commentCount://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/content://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/createTime://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/pic_list://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/praiseCount://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/reportCount://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/source://g&#x27;</span> |</span><br><span class="line"><span class="comment">#以逗号分割，添加列名，保存到csv</span></span><br><span class="line">awk -v FS=<span class="string">&quot;,&quot;</span> -v OFS=<span class="string">&quot;,&quot;</span> <span class="string">&#x27;BEGIN&#123;print &quot;catchTime,commentCount,content,createTime,pic_list,praiseCount,reportCount,source&quot;&#125;&#123;print $1,$2,$3,$4,$5,$6,$7,$8&#125;&#x27;</span> \</span><br><span class="line">&gt; /root/sh/infotest.csv</span><br></pre></td></tr></table></figure>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.26%E6%80%BB%E7%BB%93%EF%BC%9A%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97%E3%80%81%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%92%8C%E5%A4%87%E4%BB%BD/file-20250729200104183.png" class="">

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#2.清洗数据《douban.txt》保存成《douban.csv》</span></span><br><span class="line">sed <span class="string">&#x27;s/&#123;&quot;subjects&quot;:\[&#123;//g&#x27;</span> /root/sh/douban.txt |  <span class="comment">#掐头</span></span><br><span class="line">sed <span class="string">&#x27;s/&#125;\]&#125;//g&#x27;</span> |  <span class="comment">#去尾</span></span><br><span class="line">sed <span class="string">&#x27;s/&#125;,&#123;/\n/g&#x27;</span> |  <span class="comment">#换行</span></span><br><span class="line">sed <span class="string">&#x27;s/\\//g&#x27;</span> |  <span class="comment">#删\号</span></span><br><span class="line">sed <span class="string">&#x27;s/&quot;&quot;/null/g&#x27;</span> |  <span class="comment">#置空值</span></span><br><span class="line">sed <span class="string">&#x27;s/&quot;//g&#x27;</span> |  <span class="comment">#删引号</span></span><br><span class="line"><span class="comment">#删除元素说明</span></span><br><span class="line">sed <span class="string">&#x27;s/id://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/title://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/episodes_info://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/rate://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/cover_x://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/url://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/playable://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/cover://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/cover_y://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/is_new://g&#x27;</span> |</span><br><span class="line"><span class="comment">#以逗号分割，添加列名，保存到csv</span></span><br><span class="line">awk -v FS=<span class="string">&quot;,&quot;</span> -v OFS=<span class="string">&quot;,&quot;</span> <span class="string">&#x27;BEGIN&#123;print &quot;id,title,episodes_info,rate,cover_x,url,playable,cover,cover_y,is_new&quot;&#125;&#123;print $8,$4,$1,$2,$3,$5,$6,$7,$9,$10&#125;&#x27;</span> \</span><br><span class="line">&gt;/root/sh/douban.csv</span><br></pre></td></tr></table></figure>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.26%E6%80%BB%E7%BB%93%EF%BC%9A%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97%E3%80%81%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%92%8C%E5%A4%87%E4%BB%BD/file-20250729200113071.png" class="">

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#编写shell脚本/root/shell/mysqlcsv.sh 实现：</span></span><br><span class="line"><span class="comment">#1.如果douban表存在则删除 </span></span><br><span class="line"><span class="comment">#2.如果douban表不存在则新建 </span></span><br><span class="line"><span class="comment">#3.导入douban.csv数据到douban表中,建表过程为根据导入的csv文件自动创建表 </span></span><br><span class="line"><span class="comment">#4.查询douban表验证结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置mysql连接参数</span></span><br><span class="line">dbhost=<span class="string">&quot;127.0.0.1&quot;</span>  <span class="comment">#主机名</span></span><br><span class="line">dbprot=3306  <span class="comment">#端口</span></span><br><span class="line">dbuser=<span class="string">&quot;root&quot;</span>  <span class="comment">#用户名</span></span><br><span class="line">dbpass=<span class="string">&quot;root123456&quot;</span>  <span class="comment">#密码</span></span><br><span class="line">db=<span class="string">&quot;test&quot;</span>  <span class="comment">#表空间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果douban表存在则删除 </span></span><br><span class="line">sql1=<span class="string">&quot;drop table if exists douban&quot;</span></span><br><span class="line">mysql -h<span class="variable">$dbhost</span> -P<span class="variable">$dbprot</span> -u<span class="variable">$dbuser</span> -p<span class="variable">$dbpass</span> <span class="variable">$db</span> -e  <span class="string">&quot;<span class="variable">$sql1</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取第一行（列名）</span></span><br><span class="line">names=`<span class="built_in">head</span> -n +1 /root/sh/douban.csv | sed <span class="string">&#x27;s/,/ /g&#x27;</span>`</span><br><span class="line"><span class="comment">#找出最后一个列名</span></span><br><span class="line">lastname=`<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$names</span>&quot;</span> | awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果douban表不存在则新建 </span></span><br><span class="line">sql2=<span class="string">&quot;create table if not exists douban(&quot;</span></span><br><span class="line"> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$names</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$i</span> == <span class="string">&quot;<span class="variable">$lastname</span>&quot;</span> ]</span><br><span class="line">        <span class="keyword">then</span> </span><br><span class="line">            sql2=<span class="string">&quot;$sql2<span class="variable">$i</span> varchar(200))&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            sql2=<span class="string">&quot;$sql2<span class="variable">$i</span> varchar(200),&quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">mysql -h<span class="variable">$dbhost</span> -P<span class="variable">$dbprot</span> -u<span class="variable">$dbuser</span> -p<span class="variable">$dbpass</span> <span class="variable">$db</span> -e  <span class="string">&quot;<span class="variable">$sql2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#导入数据</span></span><br><span class="line">sql3=<span class="string">&quot;LOAD DATA INFILE &#x27;/usr/local/mysql/data/douban.csv&#x27; INTO TABLE douban</span></span><br><span class="line"><span class="string">CHARACTER SET utf8</span></span><br><span class="line"><span class="string">FIELDS TERMINATED BY &#x27;,&#x27;</span></span><br><span class="line"><span class="string">LINES TERMINATED BY &#x27;\n&#x27;</span></span><br><span class="line"><span class="string">IGNORE 1 LINES&quot;</span></span><br><span class="line">mysql -h<span class="variable">$dbhost</span> -P<span class="variable">$dbprot</span> -u<span class="variable">$dbuser</span> -p<span class="variable">$dbpass</span> <span class="variable">$db</span> -e  <span class="string">&quot;<span class="variable">$sql3</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看表和数据</span></span><br><span class="line">sql4=<span class="string">&quot;select * from douban&quot;</span></span><br><span class="line">mysql -h<span class="variable">$dbhost</span> -P<span class="variable">$dbprot</span> -u<span class="variable">$dbuser</span> -p<span class="variable">$dbpass</span> <span class="variable">$db</span> -e  <span class="string">&quot;<span class="variable">$sql4</span>&quot;</span></span><br></pre></td></tr></table></figure>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Linux/5.26%E6%80%BB%E7%BB%93%EF%BC%9A%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97%E3%80%81%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%92%8C%E5%A4%87%E4%BB%BD/file-20250729200138577.png" class="">

<p>练习：实现每天凌晨3点10分备份数据库test到&#x2F;root&#x2F;backup&#x2F;db</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#一、编写shell脚本为 /root/shell/backdb.sh </span></span><br><span class="line"><span class="comment">#1.判断路径/root/backup/db是否存在，不存在创建，存在开始备份 </span></span><br><span class="line"><span class="comment">#2.备份后的文件以时间命名，如20230401110101.sql </span></span><br><span class="line"><span class="comment">#3.在备份的同时，检查是否有10天前的备份数据库文件，有则删除之 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql连接参数</span></span><br><span class="line">dbhost=<span class="string">&quot;127.0.0.1&quot;</span>  <span class="comment">#主机名</span></span><br><span class="line">dbport=3306  <span class="comment">#端口</span></span><br><span class="line">dbuser=<span class="string">&quot;root&quot;</span>  <span class="comment">#用户名</span></span><br><span class="line">dbpwd=<span class="string">&quot;root123456&quot;</span>  <span class="comment">#密码</span></span><br><span class="line">db=<span class="string">&quot;test&quot;</span>  <span class="comment">#表空间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置备份目录</span></span><br><span class="line">backup_dir=<span class="string">&quot;/root/backup/db&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 检查并创建备份目录</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">&quot;<span class="variable">$backup_dir</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$backup_dir</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;创建备份目录: <span class="variable">$backup_dir</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;备份目录存在: <span class="variable">$backup_dir</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 生成带时间戳的备份文件名</span></span><br><span class="line">backup_file=<span class="string">&quot;<span class="variable">$backup_dir</span>/<span class="subst">$(date +&#x27;%Y%m%d%H%M%S&#x27;)</span>.sql&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行数据库备份</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;开始备份数据库 <span class="variable">$db</span> 到 <span class="variable">$backup_file</span>&quot;</span></span><br><span class="line">mysqldump -h<span class="variable">$dbhost</span> -P<span class="variable">$dbport</span> -u<span class="variable">$dbuser</span> -p<span class="variable">$dbpwd</span> <span class="variable">$db</span> &gt; <span class="variable">$backup_file</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查备份是否成功</span></span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;数据库备份成功!&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;数据库备份失败!&quot;</span> &gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 删除10天前的备份文件</span></span><br><span class="line">find <span class="string">&quot;<span class="variable">$backup_dir</span>&quot;</span> -name <span class="string">&quot;*.sql&quot;</span> -mtime +10 -<span class="built_in">exec</span> <span class="built_in">rm</span> -f &#123;&#125; \;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;已清理10天前的备份文件&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前备份文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;当前备份文件:&quot;</span></span><br><span class="line"><span class="built_in">ls</span> -lh <span class="string">&quot;<span class="variable">$backup_dir</span>&quot;</span>/*.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#二、编写定时任务，任务是执行上面的shell脚本</span></span><br><span class="line"><span class="built_in">sudo</span> vim /etc/crontab</span><br><span class="line"><span class="comment">#每天凌晨3点10分备份数据库</span></span><br><span class="line">10 3 * * * root /root/sh/backdb.sh</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Python虚拟环境（conda）创建AI项目</title>
    <url>/2025/08/06/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.6%20Python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%EF%BC%88conda%EF%BC%89%E5%88%9B%E5%BB%BAAI%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<h1 id="conda"><a href="#conda" class="headerlink" title="conda"></a>conda</h1><p><a href="https://blog.csdn.net/excnies/article/details/147963523">Conda配置完全指南-CSDN</a></p>
<p>Conda 是一个开源的跨平台包管理与环境管理工具，广泛应用于数据科学、机器学习及 Python 开发领域。它不仅能帮助用户快速安装、更新和卸载第三方库，还能创建相互隔离的虚拟环境，解决不同项目之间的依赖冲突问题。例如，项目 A 依赖 Python 3.7 和 NumPy 1.0，而项目 B 需要 Python 3.10 和 NumPy 2.0，通过 conda 可分别创建独立环境，避免版本冲突。此外，conda 不仅支持 Python 包，还能管理 R、C&#x2F;C++ 等非 Python 依赖，极大提升了跨语言开发的便捷性。</p>
<h2 id="Anaconda-和-Miniconda"><a href="#Anaconda-和-Miniconda" class="headerlink" title="Anaconda 和 Miniconda"></a>Anaconda 和 Miniconda</h2><ul>
<li><p><strong>Anaconda</strong> 是基于 conda 的完整发行版，预装了超过 250 个科学计算和数据分析的常用工具包（如 NumPy、Pandas、Jupyter），适合新手或需要快速搭建开发环境的用户。但 Anaconda 的安装包体积较大（约 3 GB），对存储空间有限的用户可能不够友好。</p>
</li>
<li><p><strong>Miniconda</strong> 是 conda 的极简版本，仅包含核心的 conda 工具、Python 基础环境和所依赖的包以及少量其他实用包。（安装包约 50 MB）。用户需手动安装所需依赖，适合熟悉 Python 生态或追求轻量化的开发者。例如，若仅需 TensorFlow 和 PyTorch，可通过 Miniconda 按需安装，避免冗余占用。</p>
</li>
</ul>
<h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><p>将安装目录下的Scripts目录添加到用户和系统变量的Path中<br>D:\Development\Miniconda3\Scripts</p>
<h2 id="conda相关命令"><a href="#conda相关命令" class="headerlink" title="conda相关命令"></a>conda相关命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定Python版本创建环境（环境名ai70、python版本3.12）</span></span><br><span class="line">conda create --name ai70 python=3.12</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有已创建的 conda 环境（当前激活的环境会以星号 `*` 标记）</span></span><br><span class="line">conda <span class="built_in">env</span> list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 激活环境</span></span><br><span class="line">conda activate ai70</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出环境</span></span><br><span class="line"><span class="comment"># 退出当前激活的环境后，会返回到上一个环境（通常是 `base` 环境，或者如果没有其他环境激活，则返回到系统默认环境）</span></span><br><span class="line">conda deactivate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除环境</span></span><br><span class="line">conda <span class="built_in">env</span> remove -n &lt;环境名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装包</span></span><br><span class="line">conda install &lt;包名称&gt;</span><br><span class="line">pip install &lt;包名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除包</span></span><br><span class="line">conda remove &lt;包名称&gt;</span><br><span class="line">pip uninstall &lt;包名称&gt;</span><br></pre></td></tr></table></figure>

<p>VSCode中切换环境</p>
<img src="/2025/08/06/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.6%20Python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%EF%BC%88conda%EF%BC%89%E5%88%9B%E5%BB%BAAI%E9%A1%B9%E7%9B%AE/file-20250806143116004.png" class="">

<h1 id="fastapi"><a href="#fastapi" class="headerlink" title="fastapi"></a>fastapi</h1><p><a href="https://fastapi.tiangolo.com/zh/">FastAPI文档</a></p>
<p>安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install fastapi</span><br><span class="line">pip install uvicorn</span><br></pre></td></tr></table></figure>

<h2 id="基础开发"><a href="#基础开发" class="headerlink" title="基础开发"></a>基础开发</h2><p>ai_api.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI</span><br><span class="line"><span class="keyword">import</span> ollama</span><br><span class="line"> </span><br><span class="line">app = FastAPI()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 装饰器 实现内部功能 黑盒操作</span></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">root</span>():</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Hello World&quot;</span>&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 携带 title 参数, 返回 ai 的 调用接口</span></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/question&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">question</span>(<span class="params">title = <span class="string">&quot;&quot;</span></span>):</span><br><span class="line">    <span class="keyword">if</span> title == <span class="string">&quot;&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;请输入你需要问的问题&quot;</span>&#125;</span><br><span class="line"> </span><br><span class="line">    response = ollama.chat(</span><br><span class="line">        model=<span class="string">&#x27;deepseek-r1:1.5b&#x27;</span>,</span><br><span class="line">        messages=[&#123;<span class="string">&#x27;role&#x27;</span>: <span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;content&#x27;</span>: title&#125;],</span><br><span class="line">    )</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;content&quot;</span>: response[<span class="string">&#x27;message&#x27;</span>][<span class="string">&#x27;content&#x27;</span>]&#125;</span><br></pre></td></tr></table></figure>

<p>运行服务器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uvicorn ai_api:app --port 8500 --host 127.0.0.1 --reload</span><br></pre></td></tr></table></figure>

<p>打开网页：127.0.0.1:8500</p>
<img src="/2025/08/06/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.6%20Python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%EF%BC%88conda%EF%BC%89%E5%88%9B%E5%BB%BAAI%E9%A1%B9%E7%9B%AE/file-20250806172709274.png" class="">
<p>显示hello world说明服务启动成功</p>
<p>打开网页：127.0.0.1:8500&#x2F;question?title&#x3D;&lt;你想问的问题&gt;</p>
<img src="/2025/08/06/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.6%20Python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%EF%BC%88conda%EF%BC%89%E5%88%9B%E5%BB%BAAI%E9%A1%B9%E7%9B%AE/file-20250806172832067.png" class="">

<h1 id="AI聊天项目"><a href="#AI聊天项目" class="headerlink" title="AI聊天项目"></a>AI聊天项目</h1><p>实现功能：角色扮演 + 上下文记忆 + 思维链提取 + 前后端交互<br>网页聊天界面：通过 HTML + JS 实现<br>自定义 AI 人设：system_prompt 嵌入消息<br>多轮对话记忆：前端传messa历史<br>分离思考过程：<code>&lt;think&gt;</code>标签提取<br>清除对话功能：前端<code>startNewChat()</code>设置消息提示AI</p>
<h2 id="main-py"><a href="#main-py" class="headerlink" title="main.py"></a>main.py</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI, HTTPException</span><br><span class="line"><span class="keyword">from</span> fastapi.staticfiles <span class="keyword">import</span> StaticFiles</span><br><span class="line"><span class="keyword">from</span> fastapi.responses <span class="keyword">import</span> FileResponse</span><br><span class="line"><span class="keyword">import</span> ollama</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">app = FastAPI()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载静态文件</span></span><br><span class="line">app.mount(<span class="string">&quot;/static&quot;</span>, StaticFiles(directory=<span class="string">&quot;static&quot;</span>), name=<span class="string">&quot;static&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储对话历史（简单版，按会话可扩展为 session）</span></span><br><span class="line"><span class="comment"># 这里我们不持久化，每次新请求从前端传 history</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">get_chat_page</span>():</span><br><span class="line">    <span class="keyword">return</span> FileResponse(<span class="string">&quot;static/index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_think_content</span>(<span class="params">text</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;提取 &lt;think&gt;...&lt;/think&gt; 内容，并返回 (think, response)&quot;&quot;&quot;</span></span><br><span class="line">    pattern = <span class="string">r&quot;&lt;think&gt;(.*?)&lt;/think&gt;&quot;</span></span><br><span class="line">    <span class="keyword">match</span> = re.search(pattern, text, re.DOTALL)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">        think = <span class="keyword">match</span>.group(<span class="number">1</span>).strip()</span><br><span class="line">        <span class="comment"># 移除原文中的 &lt;think&gt;...&lt;/think&gt;</span></span><br><span class="line">        response = re.sub(pattern, <span class="string">&quot;&quot;</span>, text, flags=re.DOTALL).strip()</span><br><span class="line">        <span class="keyword">return</span> think, response</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span>, text.strip()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/api/chat&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">chat</span>(<span class="params">request: <span class="built_in">dict</span></span>):</span><br><span class="line">    messages = request.get(<span class="string">&quot;messages&quot;</span>, [])</span><br><span class="line">    persona = request.get(<span class="string">&quot;persona&quot;</span>, <span class="string">&quot;尖酸刻薄的网友，话语充满攻击性&quot;</span>).strip()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> messages:</span><br><span class="line">        <span class="keyword">raise</span> HTTPException(status_code=<span class="number">400</span>, detail=<span class="string">&quot;消息不能为空&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 构建 prompt，明确角色和人设</span></span><br><span class="line">        system_prompt = <span class="string">f&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">你的人设是：<span class="subst">&#123;persona&#125;</span>。请严格保持以该人设身份性格与用户对话。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>.strip()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 构建上下文</span></span><br><span class="line">        full_messages = [&#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>, <span class="string">&quot;content&quot;</span>: system_prompt&#125;]</span><br><span class="line">        full_messages.extend(messages)  <span class="comment"># 包含完整的对话历史</span></span><br><span class="line"></span><br><span class="line">        response = ollama.chat(</span><br><span class="line">            model=<span class="string">&quot;deepseek-r1:8b&quot;</span>,  <span class="comment"># 设置模型</span></span><br><span class="line">            messages=full_messages,</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        ai_content = response[<span class="string">&quot;message&quot;</span>][<span class="string">&quot;content&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 提取思考过程和正式回复</span></span><br><span class="line">        think, response_text = extract_think_content(ai_content)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">&quot;response&quot;</span>: response_text,</span><br><span class="line">            <span class="string">&quot;think&quot;</span>: think <span class="keyword">or</span> <span class="string">&quot;即答&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Ollama error:&quot;</span>, e)</span><br><span class="line">        <span class="keyword">raise</span> HTTPException(status_code=<span class="number">500</span>, detail=<span class="string">&quot;AI 调用失败&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><p>前端html代码应放在项目的static文件夹下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>本地 AI 聊天<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-pseudo">:root</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--primary</span>: <span class="number">#6366f1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--primary-dark</span>: <span class="number">#4f46e5</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--secondary</span>: <span class="number">#8b5cf6</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--background</span>: <span class="number">#f8fafc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--surface</span>: <span class="number">#ffffff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--surface-elevated</span>: <span class="number">#f1f5f9</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--text-primary</span>: <span class="number">#1e293b</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--text-secondary</span>: <span class="number">#64748b</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--border</span>: <span class="number">#e2e8f0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--user-message</span>: <span class="number">#6366f1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--ai-message</span>: <span class="number">#f1f5f9</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--shadow-sm</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.05</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attr">--shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">6px</span> -<span class="number">1px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>), <span class="number">0</span> <span class="number">2px</span> <span class="number">4px</span> -<span class="number">1px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.06</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attr">--shadow-lg</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">15px</span> -<span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>), <span class="number">0</span> <span class="number">4px</span> <span class="number">6px</span> -<span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.05</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attr">--radius</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--transition</span>: all <span class="number">0.3s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.4</span>, <span class="number">0</span>, <span class="number">0.2</span>, <span class="number">1</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&quot;Inter&quot;</span>, -apple-system, BlinkMacSystemFont, <span class="string">&quot;Segoe UI&quot;</span>, Roboto, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--background);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">var</span>(--text-primary);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">1.6</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">max-width</span>: <span class="number">900px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">85vh</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">max-height</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="built_in">var</span>(--radius);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--shadow-lg);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--surface);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: <span class="built_in">var</span>(--transition);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">header</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">135deg</span>, <span class="built_in">var</span>(--primary), <span class="built_in">var</span>(--secondary));</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--shadow);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">header</span> <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">1.5rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">gap</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.theme-toggle</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: <span class="built_in">var</span>(--transition);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.theme-toggle</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.3</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">15deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.config-bar</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--surface-elevated);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">16px</span> <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--border);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">gap</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.config-group</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">gap</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">min-width</span>: <span class="number">250px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.config-group</span> <span class="selector-tag">label</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">600</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">var</span>(--text-secondary);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">white-space</span>: nowrap;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.config-group</span> <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--border);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--surface);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">var</span>(--text-primary);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: <span class="built_in">var</span>(--transition);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.config-group</span> <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span><span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-color</span>: <span class="built_in">var</span>(--primary);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">99</span>, <span class="number">102</span>, <span class="number">241</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.btn</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">600</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: <span class="built_in">var</span>(--transition);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">gap</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.btn-primary</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--primary);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.btn-primary</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--primary-dark);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">2px</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--shadow);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.btn-secondary</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--surface-elevated);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">var</span>(--text-primary);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--border);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.btn-secondary</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--border);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.chat-container</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.chat-box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow-y</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--background);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">gap</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.chat-box</span>::-webkit-scrollbar &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.chat-box</span>::-webkit-scrollbar-track &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: transparent;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.chat-box</span>::-webkit-scrollbar-thumb &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--border);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.chat-box</span>::-webkit-scrollbar-thumb:hover &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--text-secondary);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.message</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">max-width</span>: <span class="number">75%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">16px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="built_in">var</span>(--radius);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--shadow-sm);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: fadeInUp <span class="number">0.3s</span> ease-out;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> fadeInUp &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">from</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">opacity</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">10px</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">to</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">opacity</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.user</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-self</span>: flex-end;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--user-message);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom-right-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.ai</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-self</span>: flex-start;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--ai-message);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">var</span>(--text-primary);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom-left-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.think-block</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">var</span>(--text-secondary);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--surface);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--border);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: <span class="built_in">var</span>(--transition);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.think-block</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-color</span>: <span class="built_in">var</span>(--primary);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">99</span>, <span class="number">102</span>, <span class="number">241</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.think-block</span> <span class="selector-tag">summary</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">600</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">var</span>(--primary);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">gap</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.think-block</span> <span class="selector-tag">summary</span>::-webkit-details-marker &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.think-block</span><span class="selector-attr">[open]</span> <span class="selector-tag">summary</span> <span class="selector-tag">i</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.think-block</span> <span class="selector-tag">summary</span> <span class="selector-tag">i</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: <span class="built_in">var</span>(--transition);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.think-block-content</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-top</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--border);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-style</span>: italic;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">var</span>(--text-secondary);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input-area</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--surface);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--border);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">gap</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#user-input</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">14px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--border);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--surface);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">var</span>(--text-primary);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: <span class="built_in">var</span>(--transition);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#user-input</span><span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-color</span>: <span class="built_in">var</span>(--primary);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">99</span>, <span class="number">102</span>, <span class="number">241</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.send-btn</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.send-btn</span><span class="selector-pseudo">:active</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.95</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 深色模式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span><span class="selector-class">.dark-mode</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--background</span>: <span class="number">#0f172a</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--surface</span>: <span class="number">#1e293b</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--surface-elevated</span>: <span class="number">#334155</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--text-primary</span>: <span class="number">#f1f5f9</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--text-secondary</span>: <span class="number">#94a3b8</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--border</span>: <span class="number">#334155</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--ai-message</span>: <span class="number">#334155</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attr">--shadow-sm</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attr">--shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">6px</span> -<span class="number">1px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>), <span class="number">0</span> <span class="number">2px</span> <span class="number">4px</span> -<span class="number">1px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attr">--shadow-lg</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">15px</span> -<span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>), <span class="number">0</span> <span class="number">4px</span> <span class="number">6px</span> -<span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 响应式设计 */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">95vh</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">max-height</span>: none;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border-radius</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">header</span> <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">1.25rem</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.config-bar</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.config-group</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">min-width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.chat-box</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.message</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">max-width</span>: <span class="number">85%</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.input-area</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 加载动画 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.typing-indicator</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">gap</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">16px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--ai-message);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="built_in">var</span>(--radius);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom-left-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: fit-content;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.typing-indicator</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="built_in">var</span>(--text-secondary);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: typing <span class="number">1.4s</span> infinite;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.typing-indicator</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">0.2s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.typing-indicator</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: <span class="number">0.4s</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> typing &#123;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span>,</span></span><br><span class="line"><span class="language-css">            <span class="number">60%</span>,</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">                <span class="attribute">opacity</span>: <span class="number">0.7</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="number">30%</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">10px</span>);</span></span><br><span class="line"><span class="language-css">                <span class="attribute">opacity</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-robot&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                本地 AI 聊天助手</span><br><span class="line">            <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;theme-toggle&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;toggleTheme()&quot;</span> <span class="attr">title</span>=<span class="string">&quot;切换主题&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-moon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;config-bar&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;config-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;persona&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-user-cog&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> AI 人设：</span><br><span class="line">                <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;persona&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;例如：友善的助手、专业的顾问...&quot;</span> <span class="attr">value</span>=<span class="string">&quot;知识渊博且乐于助人的AI助手&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;startNewChat()&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-plus-circle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 新对话</span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;chat-container&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;chat-box&quot;</span> <span class="attr">id</span>=<span class="string">&quot;chat-box&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;message ai&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;think-block&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">summary</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-brain&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> AI 思考过程</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;think-block-content&quot;</span>&gt;</span></span><br><span class="line">                            欢迎新用户！我将以当前设定的人设开始为您提供帮助。</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    你好！我是你的AI助手，很高兴为你服务。你可以随时修改我的人设，让我以不同的方式与你交流。有什么我可以帮助你的吗？</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-area&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;user-input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入你的问题...&quot;</span> <span class="attr">autofocus</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary send-btn&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;sendMessage()&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-paper-plane&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> chatBox = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;chat-box&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> userInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;user-input&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> themeToggle = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.theme-toggle i&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> chatHistory = [];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> isDarkMode = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;darkMode&quot;</span>) === <span class="string">&quot;true&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 初始化主题</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (isDarkMode) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;dark-mode&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            themeToggle.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;fa-moon&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            themeToggle.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;fa-sun&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">sendMessage</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> message = userInput.<span class="property">value</span>.<span class="title function_">trim</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> persona = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;persona&quot;</span>).<span class="property">value</span>.<span class="title function_">trim</span>() || <span class="string">&quot;知识伙伴&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (!message) <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">addMessage</span>(message, <span class="string">&quot;user&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            chatHistory.<span class="title function_">push</span>(&#123; <span class="attr">role</span>: <span class="string">&quot;user&quot;</span>, <span class="attr">content</span>: message &#125;);</span></span><br><span class="line"><span class="language-javascript">            userInput.<span class="property">value</span> = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 显示输入指示器</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">showTypingIndicator</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&quot;/api/chat&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">messages</span>: chatHistory, persona &#125;),</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> data = <span class="keyword">await</span> res.<span class="title function_">json</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 移除输入指示器</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">removeTypingIndicator</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">addAIMessage</span>(data.<span class="property">response</span>, data.<span class="property">think</span>);</span></span><br><span class="line"><span class="language-javascript">                chatHistory.<span class="title function_">push</span>(&#123; <span class="attr">role</span>: <span class="string">&quot;assistant&quot;</span>, <span class="attr">content</span>: data.<span class="property">response</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">catch</span> (err) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">removeTypingIndicator</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">addMessage</span>(<span class="string">&quot;❌ 请求失败，请检查后端是否运行。&quot;</span>, <span class="string">&quot;ai&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">showTypingIndicator</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> indicator = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            indicator.<span class="property">className</span> = <span class="string">&quot;typing-indicator&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            indicator.<span class="property">id</span> = <span class="string">&quot;typing-indicator&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            indicator.<span class="property">innerHTML</span> = <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;span&gt;&lt;/span&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;span&gt;&lt;/span&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;span&gt;&lt;/span&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            `</span>;</span></span><br><span class="line"><span class="language-javascript">            chatBox.<span class="title function_">appendChild</span>(indicator);</span></span><br><span class="line"><span class="language-javascript">            chatBox.<span class="property">scrollTop</span> = chatBox.<span class="property">scrollHeight</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">removeTypingIndicator</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> indicator = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;typing-indicator&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (indicator) &#123;</span></span><br><span class="line"><span class="language-javascript">                indicator.<span class="title function_">remove</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">addMessage</span>(<span class="params">text, sender</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> msg = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            msg.<span class="property">className</span> = <span class="string">`message <span class="subst">$&#123;sender&#125;</span>`</span>;</span></span><br><span class="line"><span class="language-javascript">            msg.<span class="property">textContent</span> = text;</span></span><br><span class="line"><span class="language-javascript">            chatBox.<span class="title function_">appendChild</span>(msg);</span></span><br><span class="line"><span class="language-javascript">            chatBox.<span class="property">scrollTop</span> = chatBox.<span class="property">scrollHeight</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">addAIMessage</span>(<span class="params">response, think</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> msg = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            msg.<span class="property">className</span> = <span class="string">&quot;message ai&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> thinkBlock = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            thinkBlock.<span class="property">className</span> = <span class="string">&quot;think-block&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            thinkBlock.<span class="property">innerHTML</span> = <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;summary&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;i class=&quot;fas fa-brain&quot;&gt;&lt;/i&gt; AI 思考过程</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;/summary&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;div class=&quot;think-block-content&quot;&gt;<span class="subst">$&#123;think&#125;</span>&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            `</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> responseText = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            responseText.<span class="property">textContent</span> = response;</span></span><br><span class="line"><span class="language-javascript">            msg.<span class="title function_">appendChild</span>(thinkBlock);</span></span><br><span class="line"><span class="language-javascript">            msg.<span class="title function_">appendChild</span>(responseText);</span></span><br><span class="line"><span class="language-javascript">            chatBox.<span class="title function_">appendChild</span>(msg);</span></span><br><span class="line"><span class="language-javascript">            chatBox.<span class="property">scrollTop</span> = chatBox.<span class="property">scrollHeight</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">startNewChat</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            chatBox.<span class="property">innerHTML</span> = <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;div class=&quot;message ai&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;div class=&quot;think-block&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;summary&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;i class=&quot;fas fa-brain&quot;&gt;&lt;/i&gt; AI 思考过程</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;/summary&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;div class=&quot;think-block-content&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            开始新的对话，重置上下文。</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    对话已重置！我们可以开始新的话题了。有什么我可以帮助你的吗？</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            `</span>;</span></span><br><span class="line"><span class="language-javascript">            chatHistory = [];</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">toggleTheme</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            isDarkMode = !isDarkMode;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&quot;dark-mode&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;darkMode&quot;</span>, isDarkMode);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (isDarkMode) &#123;</span></span><br><span class="line"><span class="language-javascript">                themeToggle.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;fa-moon&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                themeToggle.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;fa-sun&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                themeToggle.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&quot;fa-sun&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                themeToggle.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;fa-moon&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        userInput.<span class="title function_">addEventListener</span>(<span class="string">&quot;keypress&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (e.<span class="property">key</span> === <span class="string">&quot;Enter&quot;</span>) <span class="title function_">sendMessage</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 自动调整高度</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">autoResize</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">height</span> = <span class="string">&#x27;auto&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">height</span> = <span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="variable language_">this</span>.<span class="property">scrollHeight</span>, <span class="number">120</span>) + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        userInput.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, autoResize);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="完成效果"><a href="#完成效果" class="headerlink" title="完成效果"></a>完成效果</h2><img src="/2025/08/06/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.6%20Python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%EF%BC%88conda%EF%BC%89%E5%88%9B%E5%BB%BAAI%E9%A1%B9%E7%9B%AE/file-20250806201208536.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>影刀、扣子云AI应用：简历信息提取</title>
    <url>/2025/08/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.7%20%E4%BA%91AI%E5%BA%94%E7%94%A8%EF%BC%9A%E7%AE%80%E5%8E%86%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96/</url>
    <content><![CDATA[<h1 id="影刀AI-Power"><a href="#影刀AI-Power" class="headerlink" title="影刀AI Power"></a>影刀AI Power</h1><p><a href="https://aipower.yingdao.com/home">影刀AI Power</a><br>使用AI提取简历信息的简单应用</p>
<img src="/2025/08/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.7%20%E4%BA%91AI%E5%BA%94%E7%94%A8%EF%BC%9A%E7%AE%80%E5%8E%86%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96/file-20250807143310782.png" class="">

<p>提取图片简历信息工作流</p>
<img src="/2025/08/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.7%20%E4%BA%91AI%E5%BA%94%E7%94%A8%EF%BC%9A%E7%AE%80%E5%8E%86%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96/file-20250807144522207.png" class="">
<img src="/2025/08/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.7%20%E4%BA%91AI%E5%BA%94%E7%94%A8%EF%BC%9A%E7%AE%80%E5%8E%86%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96/file-20250807143439915.png" class="">

<h1 id="扣子-coze"><a href="#扣子-coze" class="headerlink" title="扣子(coze)"></a>扣子(coze)</h1><p><a href="https://www.coze.cn/home">主页 - 扣子</a><br><a href="https://www.coze.cn/open/docs/developer_guides">API 介绍 - 文档 - 扣子</a></p>
<p><strong>创建智能体</strong></p>
<img src="/2025/08/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.7%20%E4%BA%91AI%E5%BA%94%E7%94%A8%EF%BC%9A%E7%AE%80%E5%8E%86%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96/file-20250807144847660.png" class="">
<img src="/2025/08/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.7%20%E4%BA%91AI%E5%BA%94%E7%94%A8%EF%BC%9A%E7%AE%80%E5%8E%86%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96/file-20250807145800299.png" class="">

<p><strong>代码实现</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> PyPDF2 <span class="keyword">import</span> PdfReader</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment"># 调用AI处理简历数据</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_info_by_ai</span>(<span class="params">text</span>):</span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 调用扣子的智能体应用的API</span></span><br><span class="line">    url = <span class="string">&quot;https://api.coze.cn/v3/chat&quot;</span></span><br><span class="line">    <span class="comment"># 个人令牌</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Authorization&quot;</span>: <span class="string">&quot;Bearer pat_CEHGFgHprgT4dBVj8qiSHcfrisi5GooR7pIIjiIdiSz1n90oxUrlyFn86pgZ4Amv&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    payload = &#123;</span><br><span class="line">        <span class="string">&quot;bot_id&quot;</span>: <span class="string">&quot;7535731177307947048&quot;</span>,</span><br><span class="line">        <span class="string">&quot;user_id&quot;</span>: <span class="string">&quot;123456789&quot;</span>,</span><br><span class="line">        <span class="string">&quot;stream&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">        <span class="string">&quot;auto_save_history&quot;</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">&quot;additional_messages&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">                <span class="string">&quot;content&quot;</span>: text,</span><br><span class="line">                <span class="string">&quot;content_type&quot;</span>: <span class="string">&quot;text&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 发送初始请求</span></span><br><span class="line">        response = requests.post(</span><br><span class="line">            url=url,</span><br><span class="line">            headers=headers,</span><br><span class="line">            data=json.dumps(payload),</span><br><span class="line">            timeout=<span class="number">30</span></span><br><span class="line">        )</span><br><span class="line">        response.raise_for_status()</span><br><span class="line">        init_result = response.json()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;初始响应（AI开始处理）：&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(json.dumps(init_result, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 提取关键ID</span></span><br><span class="line">        conversation_id = init_result[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;conversation_id&quot;</span>]</span><br><span class="line">        chat_id = init_result[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;id&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 轮询等待对话完成（延长超时时间至2分钟）</span></span><br><span class="line">        retrieve_url = <span class="string">&quot;https://api.coze.cn/v3/chat/retrieve&quot;</span></span><br><span class="line">        status = init_result[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;status&quot;</span>]</span><br><span class="line">        max_wait_seconds = <span class="number">120</span>  <span class="comment"># 延长至2分钟</span></span><br><span class="line">        wait_count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> status != <span class="string">&quot;completed&quot;</span> <span class="keyword">and</span> wait_count &lt; max_wait_seconds:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;AI处理中（<span class="subst">&#123;wait_count&#125;</span>秒），状态：<span class="subst">&#123;status&#125;</span>...&quot;</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            wait_count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 调用查看对话详情接口确认状态</span></span><br><span class="line">            retrieve_params = &#123;</span><br><span class="line">                <span class="string">&quot;conversation_id&quot;</span>: conversation_id,</span><br><span class="line">                <span class="string">&quot;chat_id&quot;</span>: chat_id</span><br><span class="line">            &#125;</span><br><span class="line">            retrieve_response = requests.get(</span><br><span class="line">                retrieve_url,</span><br><span class="line">                headers=headers,</span><br><span class="line">                params=retrieve_params,</span><br><span class="line">                timeout=<span class="number">30</span></span><br><span class="line">            )</span><br><span class="line">            retrieve_response.raise_for_status()</span><br><span class="line">            status = retrieve_response.json()[<span class="string">&quot;data&quot;</span>][<span class="string">&quot;status&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 处理不同状态</span></span><br><span class="line">        <span class="keyword">if</span> status != <span class="string">&quot;completed&quot;</span>:</span><br><span class="line">            error_msg = <span class="string">f&quot;对话未完成，最终状态：<span class="subst">&#123;status&#125;</span>&quot;</span></span><br><span class="line">            <span class="built_in">print</span>(error_msg)</span><br><span class="line">            <span class="keyword">return</span> error_msg</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取对话消息详情</span></span><br><span class="line">        messages_url = <span class="string">&quot;https://api.coze.cn/v3/chat/message/list&quot;</span></span><br><span class="line">        messages_params = &#123;</span><br><span class="line">            <span class="string">&quot;conversation_id&quot;</span>: conversation_id,</span><br><span class="line">            <span class="string">&quot;chat_id&quot;</span>: chat_id</span><br><span class="line">        &#125;</span><br><span class="line">        messages_response = requests.get(</span><br><span class="line">            messages_url,</span><br><span class="line">            headers=headers,</span><br><span class="line">            params=messages_params,</span><br><span class="line">            timeout=<span class="number">30</span></span><br><span class="line">        )</span><br><span class="line">        messages_response.raise_for_status()</span><br><span class="line">        messages_result = messages_response.json()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 提取AI的有效回复</span></span><br><span class="line">        ai_answers = [</span><br><span class="line">            msg[<span class="string">&quot;content&quot;</span>] <span class="keyword">for</span> msg <span class="keyword">in</span> messages_result[<span class="string">&quot;data&quot;</span>]</span><br><span class="line">            <span class="keyword">if</span> msg.get(<span class="string">&quot;role&quot;</span>) == <span class="string">&quot;assistant&quot;</span> <span class="keyword">and</span> msg.get(<span class="string">&quot;type&quot;</span>) == <span class="string">&quot;answer&quot;</span></span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ai_answers:</span><br><span class="line">            <span class="keyword">return</span> ai_answers[-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;未找到AI的有效回复&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.HTTPError <span class="keyword">as</span> e:</span><br><span class="line">        error_msg = <span class="string">f&quot;HTTP错误：<span class="subst">&#123;e&#125;</span>\n错误响应内容：<span class="subst">&#123;e.response.text&#125;</span>&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(error_msg)</span><br><span class="line">        <span class="keyword">return</span> error_msg</span><br><span class="line">    <span class="keyword">except</span> KeyError <span class="keyword">as</span> e:</span><br><span class="line">        error_msg = <span class="string">f&quot;响应格式错误，缺少字段：<span class="subst">&#123;e&#125;</span>&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(error_msg)</span><br><span class="line">        <span class="keyword">return</span> error_msg</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        error_msg = <span class="string">f&quot;处理错误：<span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(error_msg)</span><br><span class="line">        <span class="keyword">return</span> error_msg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理简历列表</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handle_resumes</span>():</span><br><span class="line">    resume_dir = <span class="string">r&quot;D:\学习\智云大数据\简历&quot;</span></span><br><span class="line">    <span class="comment"># 检查目录是否存在</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(resume_dir):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;错误: 目录 <span class="subst">&#123;resume_dir&#125;</span> 不存在&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="comment"># 遍历目录中的文件</span></span><br><span class="line">    <span class="keyword">with</span> os.scandir(resume_dir) <span class="keyword">as</span> files:</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            <span class="keyword">if</span> file.is_file() <span class="keyword">and</span> file.name.lower().endswith(<span class="string">&#x27;.pdf&#x27;</span>):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;\n处理PDF文件: <span class="subst">&#123;file.path&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="comment"># 创建PDF阅读器对象</span></span><br><span class="line">                    reader = PdfReader(file.path)</span><br><span class="line">                    text = <span class="string">&quot;&quot;</span></span><br><span class="line">                    </span><br><span class="line">                    <span class="comment"># 遍历每一页并提取文本</span></span><br><span class="line">                    <span class="keyword">for</span> page <span class="keyword">in</span> reader.pages:</span><br><span class="line">                        text += page.extract_text() <span class="keyword">or</span> <span class="string">&quot;&quot;</span></span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> text.strip():</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;警告: PDF文件未提取到文本内容&quot;</span>)</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;提取的文本长度: <span class="subst">&#123;<span class="built_in">len</span>(text)&#125;</span> 字符&quot;</span>)</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># 调用AI处理简历</span></span><br><span class="line">                    ai_response = get_info_by_ai(text)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;AI处理结果:\n<span class="subst">&#123;ai_response&#125;</span>&quot;</span>)</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;处理PDF文件 <span class="subst">&#123;file.name&#125;</span> 时出错: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"><span class="comment"># 主程序入口</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    handle_resumes()</span><br></pre></td></tr></table></figure>

<p><strong>运行结果</strong></p>
<img src="/2025/08/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/8.7%20%E4%BA%91AI%E5%BA%94%E7%94%A8%EF%BC%9A%E7%AE%80%E5%8E%86%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96/file-20250807181205169.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>AI</tag>
        <tag>影刀</tag>
      </tags>
  </entry>
  <entry>
    <title>Prompt和RAG工程</title>
    <url>/2025/09/02/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/Prompt%E5%92%8CRAG%E5%B7%A5%E7%A8%8B/</url>
    <content><![CDATA[<h3 id="1-Prompt-工程（Prompt-Engineering）"><a href="#1-Prompt-工程（Prompt-Engineering）" class="headerlink" title="1. Prompt 工程（Prompt Engineering）"></a>1. Prompt 工程（Prompt Engineering）</h3><h4 id="什么是-Prompt-工程？"><a href="#什么是-Prompt-工程？" class="headerlink" title="什么是 Prompt 工程？"></a>什么是 Prompt 工程？</h4><p>Prompt 工程是一门设计和优化输入提示（Prompt）的学科，其目的是为了从大语言模型（LLM）中引导出更准确、相关和符合预期的输出。</p>
<p>你可以把 LLM 想象成一个学识渊博但需要引导的助手。如果你问得模糊（例如：“总结一下”），它可能不知道你要总结什么。但如果你问得具体（例如：“用三段话总结下面这篇文章的核心观点，目标读者是初学者：【文章内容】”），它就能给出高质量的回答。<br><strong>crafting（精心设计）这个具体指令的过程，就是 Prompt 工程</strong></p>
<h4 id="核心目标："><a href="#核心目标：" class="headerlink" title="核心目标："></a>核心目标：</h4><ul>
<li><strong>控制输出格式</strong>：让模型以 JSON、表格、列表、特定风格（正式、口语化）等格式输出。</li>
<li><strong>扮演角色</strong>：让模型扮演特定角色（如资深律师、编程专家、莎士比亚）来回答问题。</li>
<li><strong>提高准确性</strong>：通过提供示例（少样本学习，Few-Shot Learning）、步骤分解（Chain-of-Thought）等方式，减少模型“幻觉”，提高回答质量。</li>
<li><strong>执行复杂任务</strong>：通过一个复杂的 Prompt 让模型完成多步骤任务，例如：“1. 识别以下文本的情感；2. 提取关键词；3. 根据情感和关键词生成一封回复邮件。”</li>
</ul>
<h4 id="关键技术点："><a href="#关键技术点：" class="headerlink" title="关键技术点："></a>关键技术点：</h4><ul>
<li><strong>指令（Instruction）</strong>：清晰、明确的命令。</li>
<li><strong>上下文（Context）</strong>：提供相关的背景信息。</li>
<li><strong>输入数据（Input Data）</strong>：需要模型处理的主体内容。</li>
<li><strong>输出指示器（Output Indicator）</strong>：指定输出的格式或类型。</li>
<li><strong>少样本学习（Few-Shot Learning）</strong>：提供几个输入-输出的例子，让模型模仿。</li>
</ul>
<p><strong>例子：</strong></p>
<ul>
<li><strong>差 Prompt</strong>：“写点关于牛顿的东西。” （输出可能泛泛而谈）</li>
<li><strong>好的 Prompt</strong>：“扮演一位物理学教授，向高中生用简单易懂的语言解释牛顿第一运动定律。请先给出定义，再举一个生活中的例子。输出不超过200字。”</li>
</ul>
<hr>
<h3 id="2-RAG-工程（Retrieval-Augmented-Generation，检索增强生成）"><a href="#2-RAG-工程（Retrieval-Augmented-Generation，检索增强生成）" class="headerlink" title="2. RAG 工程（Retrieval-Augmented Generation，检索增强生成）"></a>2. RAG 工程（Retrieval-Augmented Generation，检索增强生成）</h3><h4 id="什么是-RAG-工程？"><a href="#什么是-RAG-工程？" class="headerlink" title="什么是 RAG 工程？"></a>什么是 RAG 工程？</h4><p>RAG 是一种将<strong>信息检索（Information Retrieval）系统</strong>与<strong>大语言模型（LLM）</strong> 相结合的技术架构。它首先从外部知识源（如公司文档、数据库、网页等）检索出与问题相关的信息，然后将这些信息作为上下文（Context）与用户问题一起组成 Prompt，发送给 LLM 来生成答案。</p>
<p><strong>核心思想：</strong> 弥补 LLM 的固有缺陷（知识可能过时、存在幻觉、无法获取私有数据）。</p>
<h4 id="工作流程（三步走）："><a href="#工作流程（三步走）：" class="headerlink" title="工作流程（三步走）："></a>工作流程（三步走）：</h4><ol>
<li><p><strong>检索（Retrieval）</strong>：</p>
<ul>
<li>用户提出问题（Query）。</li>
<li>系统使用该问题去搜索专用的知识库（之前已处理并存入向量数据库的文档）。</li>
<li>找出知识库中与问题最相关的若干文档片段（Chunks）。</li>
</ul>
</li>
<li><p><strong>增强（Augmentation）</strong>：</p>
<ul>
<li>将检索到的相关文档片段（作为上下文）和用户的原始问题拼接在一起，形成一个增强后的、信息丰富的 Prompt。</li>
</ul>
</li>
<li><p><strong>生成（Generation）</strong>：</p>
<ul>
<li>将这个增强后的 Prompt 发送给 LLM。</li>
<li>LLM 基于提供的<strong>上下文</strong>（而不仅仅是其内部训练知识）来生成更准确、更可靠的答案。</li>
</ul>
</li>
</ol>
<h4 id="核心目标：-1"><a href="#核心目标：-1" class="headerlink" title="核心目标："></a>核心目标：</h4><ul>
<li><strong>知识更新</strong>：让 LLM 能够回答关于最新事件的问题（知识库可以随时更新）。</li>
<li><strong>减少幻觉</strong>：提供事实依据，让 LLM 的回答有据可查，降低编造信息的可能性。</li>
<li><strong>处理私有数据</strong>：让 LLM 能够基于公司内部的、非公开的文档（如产品手册、财务报表、代码库）进行问答。</li>
</ul>
<p><strong>例子：</strong></p>
<ul>
<li><p><strong>用户问题</strong>：“我们公司2024年的团建政策有什么新变化？”</p>
</li>
<li><p><strong>RAG 流程</strong>：</p>
<ol>
<li>系统在公司内部的《2024年度人力资源政策.pdf》中检索与“团建”最相关的段落。</li>
<li>将检索到的政策原文和用户问题组合成 Prompt：“请根据以下公司政策文档片段，回答问题：【检索到的政策原文…】。问题：我们公司2024年的团建政策有什么新变化？”</li>
<li>LLM 根据提供的政策原文生成一个摘要和解释作为回答。</li>
</ol>
</li>
</ul>
<hr>
<h3 id="对比与联系"><a href="#对比与联系" class="headerlink" title="对比与联系"></a>对比与联系</h3><table>
<thead>
<tr>
<th>特性</th>
<th>Prompt 工程</th>
<th>RAG 工程</th>
</tr>
</thead>
<tbody><tr>
<td><strong>核心焦点</strong></td>
<td><strong>优化输入指令</strong>，以更好地激发模型的内在知识。</td>
<td><strong>引入外部知识源</strong>，扩展和修正模型的知识边界。</td>
</tr>
<tr>
<td><strong>知识来源</strong></td>
<td>完全依赖于 LLM <strong>内部</strong>已有的（训练时的）知识。</td>
<td>结合 LLM 内部知识 + <strong>外部</strong>检索到的实时&#x2F;私有知识。</td>
</tr>
<tr>
<td><strong>解决痛点</strong></td>
<td>模型不听话、格式不对、答非所问。</td>
<td>模型知识陈旧、对私有领域知识一无所知、容易产生幻觉。</td>
</tr>
<tr>
<td><strong>技术复杂度</strong></td>
<td>相对较低，侧重于文本设计和实验。</td>
<td><strong>相对较高</strong>，涉及<strong>向量数据库</strong>、<strong>文本嵌入</strong>、<strong>检索器</strong>等多个组件。</td>
</tr>
<tr>
<td><strong>关系</strong></td>
<td><strong>是 RAG 的最后一环</strong>。RAG 中“生成”这一步的核心就是构建一个高质量的 Prompt（问题+上下文）。</td>
<td><strong>是一种系统架构</strong>，它严重依赖于 Prompt 工程来将检索到的信息有效地传递给 LLM。</td>
</tr>
</tbody></table>
<h3 id="总结与比喻"><a href="#总结与比喻" class="headerlink" title="总结与比喻"></a>总结与比喻</h3><ul>
<li><p><strong>Prompt 工程</strong> 就像是 <strong>学习如何向一个专家提问</strong> 的艺术。你问得越好，得到的答案就越棒。但这个专家只知道他过去学过的东西。</p>
</li>
<li><p><strong>RAG 工程</strong> 就像是 <strong>给这个专家配了一个庞大的、随时更新的档案库</strong>。当他遇到问题时，会先让助手（检索系统）去档案库里找出相关的资料，他再结合自己的知识和这些资料给你一个更准确的答案。</p>
</li>
</ul>
<p>在现代 AI 应用开发（如使用 Dify、Coze 等平台）中，<strong>两者结合使用是常态</strong>：</p>
<ol>
<li>用 <strong>RAG</strong> 来解决知识更新和准确性的问题。</li>
<li>用 <strong>Prompt 工程</strong> 来精心设计如何将检索到的上下文和用户问题组合起来，以引导模型生成最符合需求的最终答案。</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>使用astrbot搭建使用deepseek模型的QQ机器人</title>
    <url>/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/</url>
    <content><![CDATA[<ul>
<li><a href="http://8.138.20.179/2025/08/17/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E4%BD%BF%E7%94%A8astrbot%E6%90%AD%E5%BB%BA%E4%BD%BF%E7%94%A8deepseek%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/">手把手教你使用astrbot搭建使用deepseek模型的QQ机器人 | Yinjin Yao的博客</a></li>
<li><a href="https://docs.astrbot.app/">AstrBot官网</a></li>
</ul>
<h1 id="开始部署（Linux用docker部署）"><a href="#开始部署（Linux用docker部署）" class="headerlink" title="开始部署（Linux用docker部署）"></a>开始部署（Linux用docker部署）</h1><h2 id="Linux-通过-1Panel-安装-docker"><a href="#Linux-通过-1Panel-安装-docker" class="headerlink" title="Linux 通过 1Panel 安装 docker"></a>Linux 通过 1Panel 安装 docker</h2><p>使用<a href="https://1panel.cn/docs/installation/online_installation/">1Panel面板</a>进行傻瓜式自动安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash -c <span class="string">&quot;<span class="subst">$(curl -sSL https://resource.fit2cloud.com/1panel/package/v2/quick_start.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>如果遇到 Docker 安装失败等问题，可以尝试运行以下脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -sSL https://linuxmirrors.cn/docker.sh)</span><br></pre></td></tr></table></figure>

<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817144915322.png" class="">

<h3 id="更新镜像源"><a href="#更新镜像源" class="headerlink" title="更新镜像源"></a>更新镜像源</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>
<p>重新写入以下内容：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span>  </span><br><span class="line"><span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;https://docker.hpcloud.cloud&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;https://docker.m.daocloud.io&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;https://docker.unsee.tech&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;https://docker.1panel.live&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;http://mirrors.ustc.edu.cn&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;https://docker.chenby.cn&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;http://mirror.azure.cn&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;https://dockerpull.org&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;https://dockerhub.icu&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;https://hub.rat.dev&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;https://proxy.1panel.live&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;https://docker.1panel.top&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;https://docker.m.daocloud.io&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;https://docker.1ms.run&quot;</span><span class="punctuation">,</span>  </span><br><span class="line"><span class="string">&quot;https://docker.ketches.cn&quot;</span><span class="punctuation">]</span>  </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>保存文件后重启 Docker 服务，新的镜像源即可生效：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload  </span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>
<h3 id="阿里云服务器开端口"><a href="#阿里云服务器开端口" class="headerlink" title="阿里云服务器开端口"></a>阿里云服务器开端口</h3><p>控制台-云服务器ECS-安全组-管理规则-增加规则</p>
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817145320504.png" class="">

<h3 id="访问1panel"><a href="#访问1panel" class="headerlink" title="访问1panel"></a>访问1panel</h3><p>IP:端口&#x2F;安全入口</p>
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817145651169.png" class="">

<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817145856498.png" class="">

<h2 id="docker-部署-astrbot"><a href="#docker-部署-astrbot" class="headerlink" title="docker 部署 astrbot"></a>docker 部署 astrbot</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> astrbot  </span><br><span class="line"><span class="built_in">cd</span> astrbot  </span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> docker run -itd \  </span><br><span class="line">-p 6180-6200:6180-6200 \  </span><br><span class="line">-p 11451:11451 \  </span><br><span class="line">-v <span class="variable">$PWD</span>/data:/AstrBot/data \  </span><br><span class="line">--name astrbot soulter/astrbot:latest</span><br></pre></td></tr></table></figure>

<p>通过以下命令查看 AstrBot 的日志：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> docker logs -f astrbot</span><br></pre></td></tr></table></figure>

<p>如果一切顺利，你会看到 AstrBot 打印出的日志。</p>
<p>如果没有报错，你会看到一条日志显示类似 🌈 管理面板已启动，可访问 并附带了几条链接。打开其中一个链接即可访问 AstrBot 管理面板。如下图  </p>
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817151716139.png" class="">
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817151803179.png" class="">

<blockquote>
<p>注意：如果使用云服务器部署的记得打开防火墙，端口<code>6185</code><br>同上步骤打开端口（控制台-云服务器ECS-安全组-管理规则-增加规则）</p>
</blockquote>
<p>打开astrbot面板（IP:端口）（端口默认6185）</p>
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817152110333.png" class="">

<p>登录进去后  </p>
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817152204525.png" class="">

<h2 id="通过-docker-部署-NapCat"><a href="#通过-docker-部署-NapCat" class="headerlink" title="通过 docker 部署 NapCat"></a>通过 docker 部署 NapCat</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \  </span><br><span class="line">-e NAPCAT_GID=$(<span class="built_in">id</span> -g) \  </span><br><span class="line">-e NAPCAT_UID=$(<span class="built_in">id</span> -u) \  </span><br><span class="line">-p 3000:3000 \  </span><br><span class="line">-p 3001:3001 \  </span><br><span class="line">-p 6099:6099 \  </span><br><span class="line">--name napcat \  </span><br><span class="line">--restart=always \  </span><br><span class="line">mlikiowa/napcat-docker:latest</span><br></pre></td></tr></table></figure>

<p>执行成功后，需要查看日志以得到登录二维码和管理面板的 URL。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker logs napcat</span><br></pre></td></tr></table></figure>

<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817153429371.png" class="">

<p>请复制管理面板的 URL，然后在浏览器中打开备用。<br>然后使用你要登录的 QQ 扫描出现的二维码，即可登录。<br>如果登录阶段没有出现问题，即成功部署。</p>
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817153827269.png" class="">

<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817153956575.png" class="">

<h2 id="NapCat-连接到-AstrBot"><a href="#NapCat-连接到-AstrBot" class="headerlink" title="NapCat 连接到 AstrBot"></a>NapCat 连接到 AstrBot</h2><h3 id="配置-aiocqhttp"><a href="#配置-aiocqhttp" class="headerlink" title="配置 aiocqhttp"></a>配置 aiocqhttp</h3><p>在 AstrBot 的管理面板中，选择左边栏的 <strong>消息平台</strong> 选项卡。点击”+号新增适配器”，选择 <strong>aiocqhttp</strong>，会出现 <strong>aiocqhttp</strong> 的相关配置项，如下图所示</p>
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817155438382.png" class="">
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817155625478.png" class="">

<h3 id="配置项填写："><a href="#配置项填写：" class="headerlink" title="配置项填写："></a>配置项填写：</h3><p>ID：随意填写，用于区分不同的消息平台实例。系统会自动填充。<br>启用(enable): 勾选。<br>反向 WebSocket 主机地址：请填写你的机器的 IP 地址。如 0.0.0.0<br>反向 WebSocket 端口：填写一个端口11451。<br><code>这个端口是通过上面docker部署的时候就定下来了，跟到这一步别改成其他的</code></p>
<h3 id="保存配置"><a href="#保存配置" class="headerlink" title="保存配置"></a>保存配置</h3><p>切记点击右下角 <strong>保存</strong>，AstrBot 重启并会应用配置。</p>
<h3 id="在-NapCatQQ-中添加-WebSocket-客户端"><a href="#在-NapCatQQ-中添加-WebSocket-客户端" class="headerlink" title="在 NapCatQQ 中添加 WebSocket 客户端"></a>在 NapCatQQ 中添加 WebSocket 客户端</h3><p>切换回 NapCatQQ 的管理面板:<br><strong>网络配置-&gt;添加网络配置-&gt;WebSocket 客户端</strong></p>
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817160548345.png" class="">

<p>在新弹出的窗口中：</p>
<ul>
<li>勾选 启用。</li>
<li>URL 填写 ws:&#x2F;&#x2F;&lt;宿主机IP&gt;:&lt;在 AstrBot中填写的端口&gt;&#x2F;ws。如 ws:&#x2F;&#x2F;172.17.0.3:11451&#x2F;ws。</li>
</ul>
<p>因为这里是通过docker部署的，要查看容器ip，不是你实际的物理机的ip地址,用以下命令查看astrBot分到的虚拟IP地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> docker inspect -f <span class="string">&#x27;&#123;&#123;range.NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span> astrbot</span><br></pre></td></tr></table></figure>

<p> 如果不出意外的话，他就会返回docker分配给astrBot的虚拟IP地址了，在napcat里填ws:&#x2F;&#x2F;获取到的IP:11451&#x2F;ws 就可以了</p>
<ul>
<li>消息格式：Array</li>
</ul>
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817155812536.png" class="">
<p><strong>保存</strong></p>
<h3 id="🎉-大功告成！"><a href="#🎉-大功告成！" class="headerlink" title="🎉 大功告成！"></a>🎉 大功告成！</h3><p>此时，你的 AstrBot 和 NapCatQQ 应该已经连接成功。使用 私聊 的方式在 QQ 对机器人发送 &#x2F;help 以检查是否连接成功。  </p>
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817155830280.png" class="">

<h1 id="给机器人配置AI大模型"><a href="#给机器人配置AI大模型" class="headerlink" title="给机器人配置AI大模型"></a>给机器人配置AI大模型</h1><h2 id="获取API"><a href="#获取API" class="headerlink" title="获取API"></a>获取API</h2><p><a href="https://cloud.siliconflow.cn/i/9CjNJ52l">硅基流动</a></p>
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817161229295.png" class="">

<p>也可以从其他AI官网或平台获取API密钥<br><a href="https://cloud.siliconflow.cn/i/9CjNJ52l">硅基流动</a><br><a href="https://platform.deepseek.com/api_keys">DeepSeek 开放平台</a><br><a href="https://bailian.console.aliyun.com/?tab=model#/api-key">大模型服务平台百炼控制台</a><br><a href="https://www.coze.cn/open/playground">Coze - 扣子</a><br><a href="https://aistudio.google.com/app/apikey">Google AI Studio</a></p>
<h2 id="配置API"><a href="#配置API" class="headerlink" title="配置API"></a>配置API</h2><p>复制API秘钥回到下面的Astrbot界面选择<strong>服务提供商-&gt;点击+号新增服务提供商-&gt;选择硅基流动</strong>，填到api key处，最后右下角点击<strong>保存。</strong></p>
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817162636215.png" class="">

<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817162658758.png" class="">

<h1 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h1><img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817163523301.png" class="">
<img src="/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/AI%E5%A4%A7%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8AstrBot%E6%90%AD%E5%BB%BA%E8%B0%83%E7%94%A8AI%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%9A%84QQ%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250817163438440.png" class="">
<blockquote>
<p>[!tips]<br>如果过于频繁使用（同一时间发送消息次数过多），可能会导致更高的风控风险，请注意使用频率。</p>
</blockquote>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>Python基础</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/5.28%E6%80%BB%E7%BB%93%EF%BC%9APython%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="VSCode操作"><a href="#VSCode操作" class="headerlink" title="VSCode操作"></a>VSCode操作</h1><p>ctrl + &#x2F;  注释<br>tab  缩进<br>shift + tab  往回缩进<br>ctrl + f  查找<br>ctrl + `  打开终端</p>
<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>数字型：bool int float<br>非数字型：str list tuple set dict<br>日期型：time datetime<br>type(n) 查看变量n的类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name=<span class="string">&quot;hello&quot;</span> </span><br><span class="line">age=<span class="number">10.5</span> </span><br><span class="line">xb=<span class="literal">False</span> <span class="comment">#区分大小写</span></span><br><span class="line"><span class="built_in">print</span>(name,end=<span class="string">&quot;&quot;</span>) </span><br><span class="line"><span class="comment">#小明学号为00001，年龄为18岁，身高为1.79米 </span></span><br><span class="line">sno=<span class="number">1</span> </span><br><span class="line">age=<span class="number">18</span> </span><br><span class="line">sname=<span class="string">&quot;小明&quot;</span> </span><br><span class="line">high=<span class="number">1.786</span> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name)) <span class="comment">#查看name的数据类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#print打印时，字符数据类型可以使用+与&quot;&quot;连接</span></span><br><span class="line"><span class="comment">#其他类型则最好使用f&quot;&#123;变量&#125;其他内容&quot;</span></span><br><span class="line"><span class="built_in">print</span>(sname+<span class="string">&quot;你好&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(sname,<span class="string">&quot;你好&quot;</span>) <span class="comment">#以空格分隔</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;sname&#125;</span>学号为<span class="subst">&#123;sno&#125;</span>,年龄为<span class="subst">&#123;age&#125;</span>岁,身高为<span class="subst">&#123;high&#125;</span>米&quot;</span>) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;sname&#125;</span>学号为<span class="subst">&#123;sno:05d&#125;</span>，年龄为<span class="subst">&#123;age&#125;</span>岁，身高为<span class="subst">&#123;high:<span class="number">.2</span>f&#125;</span>米&quot;</span>)</span><br><span class="line"><span class="comment">#05d：数字宽度为5位，不足补零（`d`表示十进制整数）</span></span><br><span class="line"><span class="comment">#浮点数保留2位小数（`f`表示浮点数，`.2`控制小数位数）</span></span><br></pre></td></tr></table></figure>

<h1 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h1><p>使⽤ input 函数来接收⽤⼾从键盘输⼊，input输⼊的内容是字符串型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pwd=<span class="built_in">input</span>(<span class="string">&quot;请输⼊密码：&quot;</span>) </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(pwd))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(pwd)+<span class="number">5</span>)</span><br></pre></td></tr></table></figure>
<p> 使⽤ int() 、 float() 、 str() 等对变量进行数据类型的转换</p>
<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>算数： + - * &#x2F; %( 取余 ) **( 幂 ) &#x2F;&#x2F;( 取商 )<br>⽐较： &#x3D;&#x3D; !&#x3D; &gt; &gt;&#x3D; &lt; &lt;&#x3D;<br>赋值： &#x3D; +&#x3D; -&#x3D; *&#x3D; &#x2F;&#x3D; **&#x3D; &#x2F;&#x2F;&#x3D;<br>逻辑： and or not</p>
<h1 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h1><h2 id="if-选择结构"><a href="#if-选择结构" class="headerlink" title="if 选择结构"></a>if 选择结构</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sex=<span class="string">&quot;女&quot;</span> </span><br><span class="line"><span class="keyword">if</span> sex==<span class="string">&quot;男&quot;</span>: </span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;打游戏&quot;</span>) </span><br><span class="line"><span class="keyword">elif</span> sex==<span class="string">&quot;女&quot;</span>: </span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;去逛街&quot;</span>) </span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;其他&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>1 、每个条件后⾯要使⽤冒号  : ，表⽰接下来是满⾜条件后要执⾏的语句块。<br>2 、使⽤缩进来划分语句块，缩进采⽤ Tab 键或者 4 个空格，相同缩进组成⼀个语句块。<br>3 、在 Python 中没有 case 语句。</p>
<h2 id="while-for-循环结构"><a href="#while-for-循环结构" class="headerlink" title="while for 循环结构"></a>while for 循环结构</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 输出1-10数字 </span></span><br><span class="line">i= <span class="number">1</span> </span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">10</span>: </span><br><span class="line">	<span class="built_in">print</span>(i) </span><br><span class="line">	i+=<span class="number">1</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串可以直接循环输出里面的字符 </span></span><br><span class="line">names=<span class="string">&quot;hello world*你好&quot;</span> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> names: <span class="comment">#i逐个字符遍历</span></span><br><span class="line">	<span class="built_in">print</span>(i) </span><br><span class="line">	</span><br><span class="line"><span class="comment">#range序列，从0开始，左闭右开</span></span><br><span class="line"><span class="comment">#range(1,10,2) 1开始数字，10结束数字（不包含），步长2</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>) <span class="comment">#1,2,3...9</span></span><br><span class="line">	<span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure>

<h1 id="索引切片"><a href="#索引切片" class="headerlink" title="索引切片"></a>索引切片</h1><p>字符串的索引截取，变量名 [ 头下标 : 尾下标 ]<br>索引值以 0 为开始值，-1 为从末尾的开始位置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#索引切片 </span></span><br><span class="line"><span class="comment">#abcdef</span></span><br><span class="line"><span class="comment">#012345</span></span><br><span class="line">s=<span class="string">&quot;abcdef&quot;</span> </span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">2</span>]) <span class="comment">#取下标为2的字符，即c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#做切片的时候，是左闭右开的，也就是不包括右边数字对应的下标索引 </span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">0</span>:<span class="number">4</span>]) <span class="comment">#取下标0-4的字符（取不到4），即abcd </span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">2</span>:]) <span class="comment">#取下标为2开始直到结束的字符，即cdef</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">0</span>:<span class="number">5</span>:<span class="number">2</span>]) <span class="comment">#步长为2（即中间隔一个），即ace</span></span><br></pre></td></tr></table></figure>

<h1 id="字符串相关操作"><a href="#字符串相关操作" class="headerlink" title="字符串相关操作"></a>字符串相关操作</h1><p>+拼接 *复制 “””保留格式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#len() 获取字符串长度</span></span><br><span class="line"><span class="built_in">str</span>=<span class="string">&quot;today&quot;</span> </span><br><span class="line">l=<span class="built_in">len</span>(<span class="built_in">str</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">#str.find() 字符查找 ,找到返回索引，没找到返回-1 </span></span><br><span class="line">name = <span class="string">&quot;LionelLionel&quot;</span> </span><br><span class="line">name.find(<span class="string">&quot;i&quot;</span>) <span class="comment">#返回1</span></span><br><span class="line"><span class="built_in">print</span>(name.find(<span class="string">&quot;i&quot;</span>)) <span class="comment">#显示还需使用print</span></span><br><span class="line">name.find(<span class="string">&quot;i&quot;</span>,<span class="number">3</span>) <span class="comment">#开始索引，从下标3的字符开始找</span></span><br><span class="line">name.find(<span class="string">&quot;i&quot;</span>,<span class="number">1</span>,<span class="number">2</span>) <span class="comment">#代表开始索引和结束索引 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#str.rfind() 从右侧开始查找 </span></span><br><span class="line">name.rfind(<span class="string">&quot;i&quot;</span>) <span class="comment">#返回7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#str.isdigit() </span></span><br><span class="line"><span class="comment">#判断字符串str是否为数字</span></span><br><span class="line"><span class="comment">#全是数字返回True，存在其他字符返回False</span></span><br><span class="line">sname=<span class="string">&quot;he54ll999&quot;</span> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sname: </span><br><span class="line">	<span class="keyword">if</span> i.isdigit(): </span><br><span class="line">		<span class="built_in">print</span>(i) </span><br><span class="line"></span><br><span class="line">i=<span class="built_in">input</span>(<span class="string">&quot;输入字符：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> i.isdigit(): </span><br><span class="line">	<span class="built_in">print</span>(i+<span class="string">&quot;是数字&quot;</span>) <span class="comment">#123</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">	<span class="built_in">print</span>(i+<span class="string">&quot;不是数字&quot;</span>) <span class="comment">#hao123</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#str.count() 统计字符串里某个字符或子字符串出现的次数 </span></span><br><span class="line"><span class="built_in">print</span>(sname.count(<span class="string">&quot;l&quot;</span>))</span><br></pre></td></tr></table></figure>

<h1 id="list-列表"><a href="#list-列表" class="headerlink" title="list 列表"></a>list 列表</h1><p><strong>list</strong> （列表） 是 Python 中使⽤最频繁的数据类型，专⻔⽤于存储⼀串数据，可以完成⼤多数集合类的数据结构实现<br>存储的数据称为<strong>元素</strong>，元素之间⽤逗号分隔<br>列表中元素的类型可以不相同，它⽀持数字，字符串甚⾄可以包含列表（所谓嵌套）<br>列表和字符串⼀样，索引从 0 开始，列表同样可以被索引和截取，列表被截取后返回⼀个包含所需元素的新列表<br>list 可以使⽤ + 操作符进⾏拼接<br>⽤星号  *  可以将列表中的元素解包为独立的元素，常用于函数传参或合并列表<br>创建空列表： 变量名&#x3D;[]</p>
<h2 id="列表常用操作"><a href="#列表常用操作" class="headerlink" title="列表常用操作"></a>列表常用操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line"><span class="built_in">print</span>(*list1)  <span class="comment">#输出列表的所有元素，默认以空格隔开</span></span><br><span class="line"><span class="built_in">print</span>(*list1,sep=<span class="string">&quot;\n&quot;</span>) <span class="comment">#可使用sep设置分割符</span></span><br><span class="line"><span class="comment">#一个列表可以同时对多个变量赋值，前提是变量数与列表的元素个数一致</span></span><br><span class="line">s1,s2,s3=[ni,hao,hello]</span><br><span class="line"><span class="built_in">print</span>(s1)</span><br><span class="line"><span class="built_in">print</span>(s2)</span><br><span class="line"><span class="built_in">print</span>(s3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加</span></span><br><span class="line">list1.append(值)  <span class="comment">#在列表末尾追加一个元素</span></span><br><span class="line">list1.extend([值<span class="number">1</span>,值<span class="number">2</span>])  <span class="comment">#在列表末尾追加多个元素</span></span><br><span class="line">list1.insert(下标,值)  <span class="comment">#将一个元素插入到列表指定位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">list1.remove(值)  <span class="comment">#从列表中删除第一次出现在列表中的值</span></span><br><span class="line">list1.pop(下标)  <span class="comment">#删除索引对应的元素，如果不加索引，默认删除最后元素，同时返回删除后列表的最后一个元素</span></span><br><span class="line"><span class="keyword">del</span> list1[下标<span class="number">1</span>:下标<span class="number">2</span>:步长]  <span class="comment">#按照切片指定索引删除列表元素</span></span><br><span class="line">list1.clear()  <span class="comment">#清空列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line">list1[下标]=值  <span class="comment">#修改指定索引的元素，元素不存在会报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询</span></span><br><span class="line">list1[下标]  <span class="comment">#根据索引取值，索引不存在会报错</span></span><br><span class="line">list1.count(值)  <span class="comment">#返回列表中包含某个值的个数</span></span><br><span class="line">list1.sort()  <span class="comment">#将列表中的元素进行排序（升序）</span></span><br><span class="line">list1.sort(reverse=<span class="literal">True</span>) <span class="comment">#降序排序</span></span><br><span class="line">list1.reverse()  <span class="comment">#列表反转排序</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">len</span>(list1)  <span class="comment">#返回列表长度（元素个数）</span></span><br><span class="line"><span class="built_in">max</span>(list1)  <span class="comment">#返回列表元素最大值</span></span><br><span class="line"><span class="built_in">min</span>(list1)  <span class="comment">#返回列表元素最小值</span></span><br><span class="line"><span class="built_in">sum</span>(list1)  <span class="comment">#返回列表元素的总和</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 索引和元素同时显示</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(list1)):</span><br><span class="line">    <span class="built_in">print</span>(i,list1[i])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断某个元素是否在列表中</span></span><br><span class="line"><span class="keyword">if</span> <span class="number">100</span> <span class="keyword">in</span> list1:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;在&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不在&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表嵌套列表（多维数组）</span></span><br><span class="line">list1=[<span class="number">45</span>,<span class="number">60</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="string">&quot;hello&quot;</span>,<span class="literal">False</span>,<span class="number">4.5</span>,[<span class="number">365</span>,<span class="number">648</span>,<span class="string">&quot;hello&quot;</span>]]</span><br><span class="line"><span class="built_in">print</span>(list1[-<span class="number">1</span>][-<span class="number">1</span>][<span class="number">0</span>])  <span class="comment">#取出h</span></span><br></pre></td></tr></table></figure>

<h2 id="字符串与列表转换"><a href="#字符串与列表转换" class="headerlink" title="字符串与列表转换"></a>字符串与列表转换</h2><h3 id="split-分割字符串为列表"><a href="#split-分割字符串为列表" class="headerlink" title="split 分割字符串为列表"></a>split 分割字符串为列表</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1=<span class="string">&quot;hello world test&quot;</span></span><br><span class="line"><span class="comment"># 将字符串以空格分割存入列表</span></span><br><span class="line">list1=str1.split(<span class="string">&quot; &quot;</span>)  <span class="comment">#在&quot;&quot;内设置分割符</span></span><br><span class="line">list1=str1.split()  <span class="comment">#默认处理连续空格</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以使用split拆分后赋值给多个</span></span><br><span class="line">str2=<span class="string">&quot;nihao 你好 123&quot;</span></span><br><span class="line">list2=str2.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">s1,s2,s3=str2.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="comment"># 等效于s1,s2,s3=list2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s1) <span class="comment">#nihao</span></span><br><span class="line"><span class="built_in">print</span>(s2) <span class="comment">#你好</span></span><br><span class="line"><span class="built_in">print</span>(s3) <span class="comment">#123</span></span><br></pre></td></tr></table></figure>
<h3 id="join-拼接列表为字符串"><a href="#join-拼接列表为字符串" class="headerlink" title="join 拼接列表为字符串"></a>join 拼接列表为字符串</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1=[<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;world&quot;</span>,<span class="string">&quot;test&quot;</span>]</span><br><span class="line"><span class="comment"># 将列表元素以_拼接</span></span><br><span class="line">str2=<span class="string">&quot;_&quot;</span>.join(list1)  <span class="comment">#在&quot;&quot;内设置拼接符</span></span><br></pre></td></tr></table></figure>

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.定⼀个浮点型，将其转成int类型，观察取整后截断情况</span></span><br><span class="line">n=<span class="built_in">int</span>(<span class="number">3.14</span>)</span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.定义⼀个整型，将其转成float，再计算其平⽅</span></span><br><span class="line">n=<span class="built_in">float</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(n**<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.不换⾏输出两个字符串（print⽅法的end参数）我喜欢 编程</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我喜欢&quot;</span>, end=<span class="string">&quot;编程&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.输⼊⼀个数字，判断是奇数还是偶数</span></span><br><span class="line">n=<span class="built_in">input</span>(<span class="string">&quot;请输入一个数字&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> n.isdigit():</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">int</span>(n)%<span class="number">2</span>==<span class="number">0</span> :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;n&#125;</span>是偶数&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;n&#125;</span>是奇数&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入的不是数字！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.输出8到88的偶数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>,<span class="number">89</span>,<span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.已知字符串，s=&quot;哈佛在等我呢&quot;</span></span><br><span class="line">s=<span class="string">&quot;哈佛在等我呢&quot;</span></span><br><span class="line"><span class="comment"># 获取第4⾄第5个字符</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">3</span>:<span class="number">5</span>])</span><br><span class="line"><span class="comment"># 获取左起第3个起所有的字符</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">2</span>:])</span><br><span class="line"><span class="comment"># 字符串做*运算，拷⻉字符串5次</span></span><br><span class="line"><span class="built_in">print</span>(s*<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.从键盘接收⼀个字符串，查找它在 s=&quot;aforsadvj happy so thank&quot; 中是否存在，如果存在 就打印 &quot; 找到你了 &quot; ，并且显⽰出现的次数，不存在就打印 &quot; 怎么没有你 &quot;</span></span><br><span class="line">s=<span class="string">&quot;aforsadvj happy so thank&quot;</span></span><br><span class="line">fs=<span class="built_in">input</span>(<span class="string">&quot;请输入要查找的字符串: &quot;</span>)</span><br><span class="line">count=s.count(fs)</span><br><span class="line"><span class="keyword">if</span> count&gt;<span class="number">0</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;找到你了&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;出现次数: <span class="subst">&#123;count&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;怎么没有你&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.从键盘接收⼀个字符串，取出字符串中的数字，并且统计字符串的总⻓度及所有数字出现的个数。</span></span><br><span class="line">s=<span class="built_in">input</span>(<span class="string">&quot;请输入字符串：&quot;</span>)</span><br><span class="line">cd=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    <span class="keyword">if</span> i.isdigit():</span><br><span class="line">        cd+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;总长度：<span class="subst">&#123;<span class="built_in">len</span>(s)&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;所有数字数量：<span class="subst">&#123;cd&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 9.根据完整路径从路径中取出⽂件路径，⽂件扩展名py </span></span><br><span class="line">str2=<span class="string">&quot;D:\ 软件 \python\python39\Tools\scripts\mitype.py&quot;</span></span><br><span class="line">n1=str2.rfind(<span class="string">&quot;\\&quot;</span>)</span><br><span class="line">n2=str2.rfind(<span class="string">&quot;.&quot;</span>)+<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(str2[<span class="number">0</span>:n1])</span><br><span class="line"><span class="built_in">print</span>(str2[n2:])</span><br><span class="line"><span class="comment"># 输出结果为：</span></span><br><span class="line"><span class="comment"># D:\ 软件 \python\python39\Tools\scripts </span></span><br><span class="line"><span class="comment"># py</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.请将列表 l1=[&quot;hello&quot;,&quot;world&quot;,&quot;test&quot;] 中的每个元素通过 &quot;_&quot; 链接起来。 输出结果： hello_world_test</span></span><br><span class="line">l1=[<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;world&quot;</span>,<span class="string">&quot;test&quot;</span>]</span><br><span class="line">str1=<span class="string">&quot;_&quot;</span>.join(l1)</span><br><span class="line"><span class="built_in">print</span>(str1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.有如下两个列表 </span></span><br><span class="line">list1 = [<span class="string">&quot;M&quot;</span>, <span class="string">&quot;na&quot;</span>, <span class="string">&quot;i&quot;</span>, <span class="string">&quot;Ke&quot;</span>] </span><br><span class="line">list2 = [<span class="string">&quot;y&quot;</span>, <span class="string">&quot;me&quot;</span>, <span class="string">&quot;s&quot;</span>, <span class="string">&quot;lly&quot;</span>] </span><br><span class="line"><span class="comment">#处理后保存到新列表中</span></span><br><span class="line">list3 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(list1)):</span><br><span class="line">    s=list1[i]+list2[i]</span><br><span class="line">    list3.append(s)</span><br><span class="line"><span class="built_in">print</span>(list3)</span><br><span class="line"><span class="comment">#输出结果： [&#x27;My&#x27;, &#x27;name&#x27;, &#x27;is&#x27;, &#x27;Kelly&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.⽣成 100 个卡号 , 存储到列表中打印输出；卡号以 6102009 开头 , 后⾯ 3 位依次是 （ 001,002,003,...,100 ）</span></span><br><span class="line">list1=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">    n=<span class="string">f&quot;6102009<span class="subst">&#123;i:03d&#125;</span>&quot;</span></span><br><span class="line">    list1.append(n)</span><br><span class="line"><span class="built_in">print</span>(*list1,sep=<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#直接赋值写法(推导式)</span></span><br><span class="line">list1 = [</span><br><span class="line">    <span class="string">f&quot;6102009<span class="subst">&#123;i:03d&#125;</span>&quot;</span>  <span class="comment">#:03d表示3位整数，不足补0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>)</span><br><span class="line">]</span><br><span class="line"><span class="built_in">print</span>(*list1,sep=<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">	</span><br><span class="line"><span class="comment"># 4.已知字符串 </span></span><br><span class="line">str1=<span class="string">&quot;hello c sharp&quot;</span></span><br><span class="line"><span class="comment">#将其中的单词以反序输出 </span></span><br><span class="line">list1=str1.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">list1.reverse()</span><br><span class="line"><span class="built_in">print</span>(*list1)</span><br><span class="line"><span class="comment"># str2=&quot; &quot;.join(list1)</span></span><br><span class="line"><span class="comment"># print(str2)</span></span><br><span class="line"><span class="comment">#输出结果：sharp c hello</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.给定⼀个列表,将每⼀位数字变成它的平⽅ </span></span><br><span class="line">alist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>] </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(alist)):</span><br><span class="line">    alist[i]**=<span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(alist)</span><br><span class="line"><span class="comment">#输出结果： [1, 4, 9, 16, 25, 36, 49]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.重新使⽤split和join的⽅法做1.9题:根据完整路径从路径中取出⽂件路径，⽂件扩展名py</span></span><br><span class="line">str2=<span class="string">&quot;D:\ 软件 \python\python39\Tools\scripts\mitype.py&quot;</span></span><br><span class="line">list2=str2.split(<span class="string">&quot;\\&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(list2)</span><br><span class="line">list3=list2[-<span class="number">1</span>].split(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">list2.pop()</span><br><span class="line">str3=<span class="string">&quot;\\&quot;</span>.join(list2)</span><br><span class="line"><span class="built_in">print</span>(str3)</span><br><span class="line"><span class="built_in">print</span>(list3[-<span class="number">1</span>])</span><br><span class="line"><span class="comment"># 输出结果为：</span></span><br><span class="line"><span class="comment"># D:\ 软件 \python\python39\Tools\scripts </span></span><br><span class="line"><span class="comment"># py</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.把下⾯的列表⾥⾯的数字提取出来⽣成⼀个新的列表</span></span><br><span class="line">list1 = [<span class="number">13</span>, <span class="number">2</span>, <span class="number">55</span>, [<span class="number">11</span>, <span class="number">32</span>, <span class="string">&quot;eee&quot;</span>], [<span class="string">&quot;ssd&quot;</span>, <span class="number">55</span>, <span class="string">&quot;ggg&quot;</span>]]</span><br><span class="line">list2 = []</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">l</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>(i) == <span class="built_in">int</span>:</span><br><span class="line">            list2.append(i)</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">type</span>(i) == <span class="built_in">list</span>:</span><br><span class="line">            func(i)</span><br><span class="line">            </span><br><span class="line">func(list1)</span><br><span class="line"><span class="built_in">print</span>(list2) </span><br><span class="line"><span class="comment"># 输出: [13, 2, 55, 11, 32, 55]</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>5.30总结：函数</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/5.30%E6%80%BB%E7%BB%93%EF%BC%9A%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="命名法"><a href="#命名法" class="headerlink" title="命名法"></a>命名法</h1><p>驼峰命名法：首字母小写，后面的首字母大写  helloWorld<br>帕斯卡命名法：每个首字母都大写（常用于类名）  HelloWorld<br>系统命名法：单词都小写，以下划线_划分  hello_world </p>
<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>函数代码块以  def  关键词开头 return [ 表达式 ]  结束函数并返回⼀个或多个值给调⽤⽅，不带表达式的 return 相 当于返回 None ，多个值为元组</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 声明 </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sayHello</span>(): </span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;你好&quot;</span>) </span><br><span class="line"><span class="comment"># 调用 </span></span><br><span class="line">	sayHello()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据两个数求和 </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSum</span>(<span class="params">n1,n2=<span class="number">18</span></span>): <span class="comment"># n2设置默认值，有默认值的参数必须写在最后</span></span><br><span class="line">	he=n1+n2 </span><br><span class="line">	<span class="keyword">return</span> he </span><br><span class="line">	</span><br><span class="line">res=getSum(<span class="number">5</span>,<span class="number">3</span>) </span><br><span class="line">res=getSum(<span class="number">5</span>) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;结果是：<span class="subst">&#123;result&#125;</span>&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据两个数求和和差和积 </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getJiSuan</span>(<span class="params">n1,n2</span>): </span><br><span class="line">	he=n1+n2 </span><br><span class="line">	cha=n1-n2 </span><br><span class="line">	ji=n1*n2 </span><br><span class="line">	<span class="keyword">return</span> he,cha,ji  <span class="comment">#可以返回多个结果，用逗号隔开，以元组形式输出</span></span><br><span class="line">	</span><br><span class="line">res=getJiSuan(<span class="number">5</span>,<span class="number">2</span>) </span><br><span class="line"><span class="built_in">print</span>(res) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;和是：<span class="subst">&#123;res[<span class="number">0</span>]&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="不定长参数"><a href="#不定长参数" class="headerlink" title="不定长参数"></a>不定长参数</h2><p>加了星号  *  的参数会以元组 (tuple) 的形式导⼊，存放所有未命名的变量参数。加了两个 星号  **  的参数会以字典的形式导⼊</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getNumTuple</span>(<span class="params">n1,*n</span>): </span><br><span class="line">	<span class="built_in">print</span>(n1) </span><br><span class="line">	<span class="built_in">print</span>(n) </span><br><span class="line">getNumTuple(<span class="number">8</span>,<span class="number">9</span>,<span class="number">90</span>,<span class="number">100</span>,<span class="string">&quot;hello&quot;</span>,<span class="literal">True</span>,<span class="number">3.5</span>) </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getNumDict</span>(<span class="params">n1,**n</span>): </span><br><span class="line">	<span class="built_in">print</span>(n1) </span><br><span class="line">	<span class="built_in">print</span>(n) </span><br><span class="line">	</span><br><span class="line">getNumDict(<span class="number">8</span>,age=<span class="number">40</span>,name=<span class="string">&quot;周杰伦&quot;</span>)</span><br></pre></td></tr></table></figure>

<h1 id="值传递与引用传递"><a href="#值传递与引用传递" class="headerlink" title="值传递与引用传递"></a>值传递与引用传递</h1><p>值传递：传递的是数值，适⽤于实参类型为不可变类型（int,float,bool,str,tuple）<br>引⽤传递：传递的是地址，适⽤于实参类型为可变类型（list,set,dict,class）</p>
<h1 id="main函数"><a href="#main函数" class="headerlink" title="main函数"></a>main函数</h1><p>一个规范的代码项目结构如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局变量</span></span><br><span class="line">n=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun1</span>():</span><br><span class="line">	<span class="keyword">global</span> n  <span class="comment">#函数中修改全局变量需要使用global声明</span></span><br><span class="line">	n += <span class="number">1</span></span><br><span class="line">	<span class="built_in">print</span>(n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;欢迎&quot;</span>)</span><br><span class="line">	fun1()</span><br><span class="line">	</span><br><span class="line"><span class="comment"># 入口</span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>: </span><br><span class="line">	main()</span><br></pre></td></tr></table></figure>

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.写函数 , 输⼊⼀个数字，传递到函数中，输出从 1 到此数 </span></span><br><span class="line">num=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入一个数字：&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func1</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">func1(num)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.写函数 , 接收 n 个数字 , 返回这些数字的和、最⼩值、最⼤值 </span></span><br><span class="line">num=<span class="built_in">input</span>(<span class="string">&quot;输入任意个数字(以空格隔开):&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func2</span>(<span class="params">num</span>):</span><br><span class="line">    lst = [<span class="built_in">float</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> str1.split()]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(lst),<span class="built_in">min</span>(lst),<span class="built_in">max</span>(lst)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(*func2(num))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.写函数，接收⼀个不定⻓参数，为多个字符串，判断每个字符串的⻓度是否为⼤于 5 ，如： isLen5(&quot;hello&quot;,&quot;worldd&quot;,&quot;test&quot;) 返回 [False,True,False] 注：使⽤推导式 </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isLen5</span>(<span class="params">*s</span>):</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">len</span>(s)&gt;<span class="number">5</span> <span class="keyword">for</span> i <span class="keyword">in</span> s]</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(isLen5(<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;worldd&quot;</span>,<span class="string">&quot;test&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.写函数，传⼊两个列表参数 , 返回⼀个扑克牌列表 , ⾥⾯有52项,每⼀项都是⼀个 tuple  </span></span><br><span class="line"><span class="comment"># 结果输出如 :[(&#x27;红⼼&#x27;,&#x27;A&#x27;),(&#x27;梅花&#x27;,&#x27;A&#x27;)…(&#x27;⿊桃&#x27;,&#x27;k&#x27;)] </span></span><br><span class="line"><span class="comment"># 注：使⽤推导式</span></span><br><span class="line">list1=[<span class="string">&quot;红⼼&quot;</span>,<span class="string">&quot;梅花&quot;</span>,<span class="string">&quot;⽅块&quot;</span>,<span class="string">&quot;⿊桃&quot;</span>]</span><br><span class="line">list2=[<span class="string">&quot;A&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>,<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;7&quot;</span>,<span class="string">&quot;8&quot;</span>,<span class="string">&quot;9&quot;</span>,<span class="string">&quot;10&quot;</span>,<span class="string">&quot;j&quot;</span>,<span class="string">&quot;q&quot;</span>,<span class="string">&quot;k&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func4</span>(<span class="params">l1,l2</span>):</span><br><span class="line">    <span class="keyword">return</span> [(j,i) <span class="keyword">for</span> i <span class="keyword">in</span> l2 <span class="keyword">for</span> j <span class="keyword">in</span> l1]</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(func4(list1,list2))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.编写printstar(x)函数，(x是⼤于1的奇数数字)，忽略边框</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printstar</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="comment"># 上半</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(x//<span class="number">2</span>, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;* &quot;</span>*i + <span class="string">&quot;  &quot;</span>*(x-<span class="number">2</span>*i) + <span class="string">&quot;* &quot;</span>*i)</span><br><span class="line">    <span class="comment"># 中间</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*x)</span><br><span class="line">    <span class="comment"># 下半</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, x//<span class="number">2</span> + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;* &quot;</span>*i + <span class="string">&quot;  &quot;</span>*(x-<span class="number">2</span>*i) + <span class="string">&quot;* &quot;</span>*i)</span><br><span class="line">        </span><br><span class="line">x=<span class="built_in">input</span>(<span class="string">&quot;请输入一个大于1的奇数数字:&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> x.isdigit() <span class="keyword">and</span> <span class="built_in">int</span>(x)&gt;<span class="number">1</span> <span class="keyword">and</span> <span class="built_in">int</span>(x)%<span class="number">2</span>==<span class="number">1</span> :</span><br><span class="line">    x=<span class="built_in">int</span>(x)</span><br><span class="line">    printstar(x)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入不合法！&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩展题：输入s1和s2两个字符串，用于判断s1是否是s2经过删除一些（也可以不删除）字符而不改变剩余字符相对位置形成的新字符串。  </span></span><br><span class="line"><span class="comment"># 3.输入s1和s2两个字符串，用于判断s1是否是s2经过删除一些（也可以不删除）字符而不改变剩余字符相对位置形成的新字符串。  </span></span><br><span class="line">str3=<span class="built_in">input</span>(<span class="string">&quot;请输入两个字符串（以空格隔开）：&quot;</span>)</span><br><span class="line">str1,str2=str3.split()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sCheck</span>(<span class="params">s1,s2</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s1:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> s2:</span><br><span class="line">            <span class="keyword">if</span> i == j :</span><br><span class="line">                <span class="keyword">if</span> i == s1[-<span class="number">1</span>]:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">                s2=<span class="string">&quot;&quot;</span>.join(s2.split(j,<span class="number">1</span>)[<span class="number">1</span>:])</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="built_in">print</span>(sCheck(str1,str2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ATM机</span></span><br><span class="line">data=[&#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;1001&#x27;</span>,<span class="string">&#x27;passwd&#x27;</span>:<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;bat&#x27;</span>:<span class="string">&#x27;1000&#x27;</span>&#125;,</span><br><span class="line"> &#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;1002&#x27;</span>,<span class="string">&#x27;passwd&#x27;</span>:<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;bat&#x27;</span>:<span class="string">&#x27;2000&#x27;</span>&#125;,</span><br><span class="line"> &#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;1003&#x27;</span>,<span class="string">&#x27;passwd&#x27;</span>:<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;bat&#x27;</span>:<span class="string">&#x27;3000&#x27;</span>&#125;,</span><br><span class="line"> &#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;1004&#x27;</span>,<span class="string">&#x27;passwd&#x27;</span>:<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;bat&#x27;</span>:<span class="string">&#x27;4000&#x27;</span>&#125;]</span><br><span class="line">userdata=&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CaoZuoYeMian</span>():</span><br><span class="line">    menu=<span class="string">&quot;&quot;&quot;----------操作⻚⾯----------</span></span><br><span class="line"><span class="string">1.存款</span></span><br><span class="line"><span class="string">2.取款</span></span><br><span class="line"><span class="string">3.查询余额</span></span><br><span class="line"><span class="string">4.转账</span></span><br><span class="line"><span class="string">5.退出</span></span><br><span class="line"><span class="string">----------------------------&quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(menu)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        ctrl = <span class="built_in">input</span>(<span class="string">&quot;请输入操作选项:&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> ctrl == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            CunKuan()</span><br><span class="line">        <span class="keyword">elif</span> ctrl == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            QuKuan()</span><br><span class="line">        <span class="keyword">elif</span> ctrl == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            ChaXun()</span><br><span class="line">        <span class="keyword">elif</span> ctrl == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            ZhuanZhang()</span><br><span class="line">        <span class="keyword">elif</span> ctrl == <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">            TuiChu()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;无效的操作选项，请重新输入！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CunKuan</span>():</span><br><span class="line">    <span class="keyword">global</span> userdata</span><br><span class="line">    money=<span class="built_in">input</span>(<span class="string">&quot;请输入存款金额:&quot;</span>)</span><br><span class="line">    money=checkMoney(money)</span><br><span class="line">    userdata[<span class="string">&quot;bat&quot;</span>]=<span class="built_in">str</span>(<span class="built_in">float</span>(userdata[<span class="string">&quot;bat&quot;</span>])+money)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;您已成功存款<span class="subst">&#123;money&#125;</span>，您当前的余额为：<span class="subst">&#123;userdata[<span class="string">&#x27;bat&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">    inputToReturn()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">QuKuan</span>():</span><br><span class="line">    <span class="keyword">global</span> userdata</span><br><span class="line">    money=<span class="built_in">input</span>(<span class="string">&quot;请输入取款金额:&quot;</span>)</span><br><span class="line">    money=checkMoney(money)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">float</span>(userdata[<span class="string">&quot;bat&quot;</span>]) &gt;= money:</span><br><span class="line">        userdata[<span class="string">&quot;bat&quot;</span>]=<span class="built_in">str</span>(<span class="built_in">float</span>(userdata[<span class="string">&quot;bat&quot;</span>])-money)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;您已成功取款<span class="subst">&#123;money&#125;</span>，您当前的余额为：<span class="subst">&#123;userdata[<span class="string">&#x27;bat&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">        inputToReturn()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;您的余额不足！&quot;</span>)</span><br><span class="line">        inputToReturn()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ChaXun</span>():</span><br><span class="line">    <span class="keyword">global</span> userdata</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;您当前的余额为：<span class="subst">&#123;userdata[<span class="string">&#x27;bat&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">    inputToReturn()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ZhuanZhang</span>():</span><br><span class="line">    <span class="keyword">global</span> userdata</span><br><span class="line">    skzh=<span class="built_in">input</span>(<span class="string">&quot;请输入收款账号:&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> skzh==userdata[<span class="string">&#x27;id&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;收款账号不能是自己！&quot;</span>)</span><br><span class="line">        inputToReturn()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">if</span> i[<span class="string">&#x27;id&#x27;</span>]==skzh:</span><br><span class="line">            money=<span class="built_in">input</span>(<span class="string">&quot;请输入转帐金额：&quot;</span>)</span><br><span class="line">            money=checkMoney(money)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">float</span>(userdata[<span class="string">&quot;bat&quot;</span>]) &gt; money:</span><br><span class="line">                userdata[<span class="string">&quot;bat&quot;</span>]=<span class="built_in">str</span>(<span class="built_in">float</span>(userdata[<span class="string">&quot;bat&quot;</span>])-money)</span><br><span class="line">                <span class="comment"># i[&quot;bat&quot;]=str(float(i[&quot;bat&quot;])+money)</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;您已成功转帐<span class="subst">&#123;money&#125;</span>，您当前的余额为：<span class="subst">&#123;userdata[<span class="string">&#x27;bat&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">                inputToReturn()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;您的余额不足！&quot;</span>)</span><br><span class="line">                inputToReturn()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;收款账号不存在！&quot;</span>)</span><br><span class="line">    inputToReturn()</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">TuiChu</span>():</span><br><span class="line">    <span class="keyword">global</span> userdata</span><br><span class="line">    esc=<span class="built_in">input</span>(<span class="string">&quot;请问是否退出? y/n:&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> esc.lower() == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> esc.lower() == <span class="string">&#x27;yes&#x27;</span>:</span><br><span class="line">        <span class="comment"># for i in data:</span></span><br><span class="line">        <span class="comment">#     if i[&#x27;id&#x27;]==userdata[&#x27;id&#x27;]:</span></span><br><span class="line">        <span class="comment">#         i=userdata</span></span><br><span class="line">        <span class="comment">#         break</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;已成功退出，请取回您的银行卡&quot;</span>)</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        CaoZuoYeMian()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">checkMoney</span>(<span class="params">m</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        m=<span class="built_in">float</span>(m)</span><br><span class="line">        <span class="keyword">if</span> m &lt;=<span class="number">0</span> :</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;金额必须大于0!&quot;</span>)</span><br><span class="line">            inputToReturn()</span><br><span class="line">        <span class="keyword">return</span> m</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;输入不合法！&quot;</span>)</span><br><span class="line">        inputToReturn()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inputToReturn</span>():</span><br><span class="line">    <span class="built_in">input</span>(<span class="string">&quot;输入任意键返回主菜单..&quot;</span>)</span><br><span class="line">    CaoZuoYeMian()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">global</span> userdata</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;----------欢迎使用ATM机----------&quot;</span>)</span><br><span class="line">        userid=<span class="built_in">input</span>(<span class="string">&quot;请输入账号:&quot;</span>)</span><br><span class="line">        pwd=<span class="built_in">input</span>(<span class="string">&quot;请输入密码:&quot;</span>)</span><br><span class="line">        isLogin=<span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">            <span class="keyword">if</span> i[<span class="string">&#x27;id&#x27;</span>]==userid <span class="keyword">and</span> i[<span class="string">&#x27;passwd&#x27;</span>]==pwd:</span><br><span class="line">                isLogin=<span class="literal">True</span></span><br><span class="line">                userdata=i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> isLogin==<span class="literal">True</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;登录成功，请进⾏下列操作：&quot;</span>)</span><br><span class="line">            CaoZuoYeMian()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;账号或密码错误！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>6.3总结：文件读写、封装、继承、多态</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.3%E6%80%BB%E7%BB%93%EF%BC%9A%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E3%80%81%E5%B0%81%E8%A3%85%E3%80%81%E7%BB%A7%E6%89%BF%E3%80%81%E5%A4%9A%E6%80%81/</url>
    <content><![CDATA[<h1 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h1><h2 id="文本文件写"><a href="#文本文件写" class="headerlink" title="文本文件写"></a>文本文件写</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 写文件时若路径没有该文件会新建文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;D:\\wtest.txt&quot;</span>, mode=<span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f : </span><br><span class="line">	f.write(<span class="string">&quot;ccccccccccccccc\n&quot;</span>)  <span class="comment">#不会自动换行，需要自行加\n换行</span></span><br><span class="line">	f.write(<span class="string">&quot;ccccccccccccccc\n&quot;</span>) </span><br><span class="line"><span class="comment"># with语句会自动管理文件的生命周期，在代码块结束后自动关闭文件，无需手动调用f.close()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果直接通过open()打开文件且不使用with语句，必须手动调用f.close()关闭文件</span></span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&quot;file.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) </span><br><span class="line">f.write(<span class="string">&quot;Hello, World!&quot;</span>) </span><br><span class="line">f.close() <span class="comment"># 必须手动关闭</span></span><br></pre></td></tr></table></figure>
<h2 id="文本文件读"><a href="#文本文件读" class="headerlink" title="文本文件读"></a>文本文件读</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/test.txt&quot;</span>, mode=<span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f: </span><br><span class="line">	res1 = f.read()  <span class="comment">#将文件的全部内容读取为一个字符串</span></span><br><span class="line">	res2 = f.readlines()  <span class="comment">#每行作为一个元素返回列表</span></span><br><span class="line">	<span class="built_in">print</span>(res1) </span><br></pre></td></tr></table></figure>

<p><code>mode</code><br>w 覆盖写<br>a 追加写<br>r 读</p>
<h1 id="python-库"><a href="#python-库" class="headerlink" title="python 库"></a>python 库</h1><p>标准库，扩展库，自定义库<br>⽤  import  或者  from … import  来导⼊相应的库</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> csv  <span class="comment"># 导入CSV处理模块，用于读写CSV格式文件</span></span><br><span class="line"></span><br><span class="line">data = [&#123;<span class="string">&quot;id&quot;</span>: <span class="number">1</span>, <span class="string">&quot;passwd&quot;</span>: <span class="string">&quot;123456&quot;</span>, <span class="string">&quot;bat&quot;</span>: <span class="number">1000</span>&#125;,  <span class="comment"># 示例数据：包含两个用户信息的字典列表</span></span><br><span class="line">        &#123;<span class="string">&quot;id&quot;</span>: <span class="number">2</span>, <span class="string">&quot;passwd&quot;</span>: <span class="string">&quot;abcdef&quot;</span>, <span class="string">&quot;bat&quot;</span>: <span class="number">2000</span>&#125;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入CSV文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/user.csv&quot;</span>, mode=<span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="comment"># 创建DictWriter对象，指定表头字段顺序</span></span><br><span class="line">    writer = csv.DictWriter(f, fieldnames=[<span class="string">&quot;id&quot;</span>, <span class="string">&quot;passwd&quot;</span>, <span class="string">&quot;bat&quot;</span>])</span><br><span class="line">    writer.writeheader()  <span class="comment"># 写入表头行（id,passwd,bat）</span></span><br><span class="line">    writer.writerows(data)  <span class="comment"># 将data中的所有字典按表头格式写入文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取CSV文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/user.csv&quot;</span>, mode=<span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    reader = csv.DictReader(f)  <span class="comment"># 创建DictReader对象，自动将首行作为表头</span></span><br><span class="line">    <span class="comment"># 因为文件是字典列表的格式，因此需要遍历文件中的每一行以取出其中的每一个字典</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> reader:  </span><br><span class="line">        <span class="built_in">print</span>(i)  <span class="comment"># 输出每一个字典,可通过键名访问字段值：i[&#x27;id&#x27;] 返回 &#x27;1&#x27;</span></span><br><span class="line">        data.append(i)  <span class="comment"># 将字典逐个添加到列表中给之后使用</span></span><br><span class="line">        <span class="comment"># 若data有原始数据需要覆盖写可于遍历前先清空：data.clear()</span></span><br></pre></td></tr></table></figure>

<h1 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>: </span><br><span class="line">    x = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数字: &quot;</span>)) </span><br><span class="line">    z=<span class="number">100</span>/x </span><br><span class="line">    <span class="keyword">if</span> x&lt;<span class="number">0</span> :  </span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&quot;x不能小于0&quot;</span>)  <span class="comment"># 自定义异常</span></span><br><span class="line">    <span class="keyword">if</span> x&gt;<span class="number">100</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&quot;x不能大于100&quot;</span>)  <span class="comment"># 可设置多个异常情况，后面的e会根据情况输出信息</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ok&quot;</span>)</span><br><span class="line">      </span><br><span class="line"><span class="keyword">except</span> ValueError: </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您输入的不是数字,请再次尝试输入！&quot;</span>) </span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError: </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;除数不能为零&quot;</span>) </span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e: </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;其他错误:&quot;</span>,e)  <span class="comment"># e显示为异常信息</span></span><br></pre></td></tr></table></figure>


<h1 id="封装、继承、多态"><a href="#封装、继承、多态" class="headerlink" title="封装、继承、多态"></a>封装、继承、多态</h1><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>类及对象包含属性和⽅法<br>属性：静态特征 全局变量 成员<br>⽅法：动态特征 函数 功能<br>魔法⽅法：不需要调⽤就可以⾃动执⾏。<br>作⽤：初始化对象的成员 ( 给对象添加属性 )</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#类定义 </span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>: </span><br><span class="line">	name=<span class="string">&quot;&quot;</span> </span><br><span class="line">	age=<span class="number">0</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,xingming,nianling</span>): </span><br><span class="line">		<span class="variable language_">self</span>.name=xingming </span><br><span class="line">		<span class="variable language_">self</span>.age=nianling </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>): </span><br><span class="line">		<span class="built_in">print</span>(<span class="string">f&quot;姓名是<span class="subst">&#123;self.name&#125;</span>,年龄是<span class="subst">&#123;self.age&#125;</span>&quot;</span>) </span><br><span class="line">		</span><br><span class="line"><span class="comment">#调用 </span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>: </span><br><span class="line">	ldh=People(<span class="string">&quot;刘德华&quot;</span>,<span class="number">50</span>) </span><br><span class="line">	ldh.show()</span><br></pre></td></tr></table></figure>

<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>class ⼦类名 ( ⽗类名 ):<br>⼦类直接具备⽗类的属性和⽅法<br>解决代码重⽤问题，提⾼开发效率</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">People</span>): </span><br><span class="line">	grade=<span class="string">&quot;&quot;</span> </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, xingming, nianling,nianji</span>): </span><br><span class="line">		<span class="built_in">super</span>().__init__(xingming,nianling) </span><br><span class="line">		<span class="variable language_">self</span>.grade=nianji </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">self</span>): </span><br><span class="line">		<span class="built_in">print</span>(<span class="string">f&quot;年级是<span class="subst">&#123;self.grade&#125;</span>&quot;</span>) </span><br><span class="line">		</span><br><span class="line">	<span class="comment"># 方法重写 </span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>): </span><br><span class="line">		<span class="built_in">print</span>(<span class="string">f&quot;姓名是<span class="subst">&#123;self.name&#125;</span>,年龄是<span class="subst">&#123;self.age&#125;</span>,年级是<span class="subst">&#123;self.grade&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p>多态从字⾯上理解就是⼀个事物可以呈现多种状态。<br>没有继承就没有多态。<br>多态是能⾃⼰进⾏判断该去执⾏什么 , 创建⼀个列表来体现 , ⾯向对象的列表。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1=[ldh,zjl] </span><br><span class="line"><span class="comment"># 通过遍历以一个触发使用各子类重写方法的过程就称作多态</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l1: </span><br><span class="line">	<span class="built_in">print</span>(i.name) </span><br><span class="line">	i.show()</span><br></pre></td></tr></table></figure>

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.将内容 “ 诚挚邀请您来参加本次宴会 ” 追加到 “ 邀请函 .txt” ⽂件末尾。 </span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/邀请函.txt&quot;</span>,mode=<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f : </span><br><span class="line">	f.write(<span class="string">&quot;诚挚邀请您来参加本次宴会&quot;</span>)  </span><br><span class="line">	<span class="comment"># f.close()</span></span><br><span class="line">	</span><br><span class="line"><span class="comment"># 2.读取邀请函的内容。</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/邀请函.txt&quot;</span>,mode=<span class="string">&quot;r&quot;</span>,encoding=<span class="string">&quot;UTF-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    result=f.read()</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="comment"># f.close()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.修改 atm 取款机数据为持久化永久存储， csv 读取实现（分别使⽤函数实现读和取） , 使⽤异常处理 atm 取款机读取 csv 时判断⽂件是否存在，如果⽂件不存在提⽰ &quot; 没有⽂件使⽤原数据 &quot;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/user.csv&quot;</span>,mode=<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            result=csv.DictReader(f)</span><br><span class="line">            data.clear()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">                data.append(i)</span><br><span class="line">            <span class="comment"># f.close()</span></span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;没有文件使用原数据&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.使⽤异常在 atm 取款机的项⽬中存款函数中： 如果输⼊的存款⾦额不是整数则提⽰：请输⼊整数； 如果输⼊的存款⾦额不是 100 的倍数或者是负数则提⽰：请输⼊ 100 的倍数的正整数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 存款</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CunKuan</span>(<span class="params">userdata</span>):</span><br><span class="line">    money=<span class="built_in">input</span>(<span class="string">&quot;请输入存款金额:&quot;</span>)</span><br><span class="line">    money=checkMoney(money)</span><br><span class="line">    userdata[<span class="string">&quot;bat&quot;</span>]=<span class="built_in">str</span>(<span class="built_in">float</span>(userdata[<span class="string">&quot;bat&quot;</span>])+money)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;您已成功存款<span class="subst">&#123;money&#125;</span>，您当前的余额为：<span class="subst">&#123;userdata[<span class="string">&#x27;bat&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">    inputToReturn()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测金额输入</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">checkMoney</span>(<span class="params">m</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        m=<span class="built_in">float</span>(m)</span><br><span class="line">        <span class="keyword">if</span> m &lt;=<span class="number">0</span> <span class="keyword">or</span> m%<span class="number">100</span>!=<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;金额必须为100倍数的正整数!&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> m</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;请输入整数！&quot;</span>)</span><br><span class="line">        inputToReturn()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        inputToReturn()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.定义⼀个⽔果类，定义属性（名称和颜⾊），使⽤魔法⽅法，然后通过⽔果类，创建苹果对象、橘⼦对象、西⽠对象并分别添加上颜⾊属性，定义⼀个⽅法分别输出如： </span></span><br><span class="line"><span class="comment">#红⾊的苹果真好吃 </span></span><br><span class="line"><span class="comment">#橙⾊的橘⼦真好吃 </span></span><br><span class="line"><span class="comment">#绿⾊的西⽠真好吃 </span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Fruit</span>: </span><br><span class="line">	name=<span class="string">&quot;&quot;</span> </span><br><span class="line">	color=<span class="string">&quot;&quot;</span> </span><br><span class="line">	</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,color</span>): </span><br><span class="line">		<span class="variable language_">self</span>.name=name</span><br><span class="line">		<span class="variable language_">self</span>.color=color</span><br><span class="line">		 </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>): </span><br><span class="line">		<span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.color&#125;</span>的<span class="subst">&#123;self.name&#125;</span>真好吃&quot;</span>) </span><br><span class="line">				</span><br><span class="line">    <span class="comment">#调用 </span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>: </span><br><span class="line">	apple=Fruit(<span class="string">&quot;苹果&quot;</span>,<span class="string">&quot;红色&quot;</span>)</span><br><span class="line">	orange=Fruit(<span class="string">&quot;橘子&quot;</span>,<span class="string">&quot;橙色&quot;</span>)</span><br><span class="line">	watermelon=Fruit(<span class="string">&quot;西瓜&quot;</span>,<span class="string">&quot;绿色&quot;</span>)</span><br><span class="line">	apple.show()</span><br><span class="line">	orange.show()</span><br><span class="line">	watermelon.show()</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"><span class="comment"># 猫类Cat。属性:⽑的颜⾊color，品种breed，亲和度love。⽅法:吃饭eat() </span></span><br><span class="line"><span class="comment"># 狗类Dog。属性:⽑的颜⾊color，品种breed，忠诚度loyal。⽅法:吃饭eat() </span></span><br><span class="line"><span class="comment"># 要求 : 使⽤封装、继承和多态，根据以上要求抽取⽗类为Animal，重写eat⽅法，输出打印如下： </span></span><br><span class="line"><span class="comment"># 有⼀只亲和度是10级的花⾊的波斯猫正在吃⻥.....</span></span><br><span class="line"><span class="comment"># 有⼀只忠诚度是9级的⿊⾊的藏獒正在啃⻣头..... </span></span><br><span class="line"><span class="comment"># 有⼀只亲和度是8级的⽩⾊的加菲猫正在吃⻥..... </span></span><br><span class="line"><span class="comment"># 有⼀只忠诚度是 6 级的棕⾊的茶杯⽝正在啃⻣头.....</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>: </span><br><span class="line">	color=<span class="string">&quot;&quot;</span></span><br><span class="line">	breed=<span class="string">&quot;&quot;</span> </span><br><span class="line">	</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,color,breed</span>): </span><br><span class="line">		<span class="variable language_">self</span>.color=color</span><br><span class="line">		<span class="variable language_">self</span>.breed=breed</span><br><span class="line">		 </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>): </span><br><span class="line">		<span class="built_in">print</span>(<span class="string">f&quot;有一只<span class="subst">&#123;self.color&#125;</span>的<span class="subst">&#123;self.breed&#125;</span>正在吃饭....&quot;</span>)</span><br><span class="line">		</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    love=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, color, breed,love</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(color, breed)</span><br><span class="line">        <span class="variable language_">self</span>.love=love</span><br><span class="line">		</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>): </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;有一只亲和度是<span class="subst">&#123;self.love&#125;</span>级<span class="subst">&#123;self.color&#125;</span>的<span class="subst">&#123;self.breed&#125;</span>正在吃鱼....&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    loyal=<span class="string">&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, color, breed,loyal</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(color, breed)</span><br><span class="line">        <span class="variable language_">self</span>.loyal=loyal</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>): </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;有一只忠诚度是<span class="subst">&#123;self.loyal&#125;</span>级<span class="subst">&#123;self.color&#125;</span>的<span class="subst">&#123;self.breed&#125;</span>正在啃骨头&quot;</span>)</span><br><span class="line">				</span><br><span class="line"><span class="comment">#调用 </span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>: </span><br><span class="line">    cat1=Cat(<span class="string">&quot;花色&quot;</span>,<span class="string">&quot;波斯猫&quot;</span>,<span class="string">&quot;10&quot;</span>)</span><br><span class="line">    dog1=Dog(<span class="string">&quot;黑色&quot;</span>,<span class="string">&quot;藏獒&quot;</span>,<span class="string">&quot;9&quot;</span>)</span><br><span class="line">    cat2=Cat(<span class="string">&quot;白色&quot;</span>,<span class="string">&quot;加菲猫&quot;</span>,<span class="string">&quot;8&quot;</span>)</span><br><span class="line">    dog2=Dog(<span class="string">&quot;棕色&quot;</span>,<span class="string">&quot;茶杯犬&quot;</span>,<span class="string">&quot;6&quot;</span>)</span><br><span class="line">    list1=[cat1,dog1,cat2,dog2]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> list1:</span><br><span class="line">         i.eat()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>5.29总结：元组、集合、字典、推导式</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/5.29%E6%80%BB%E7%BB%93%EF%BC%9A%E5%85%83%E7%BB%84%E3%80%81%E9%9B%86%E5%90%88%E3%80%81%E5%AD%97%E5%85%B8%E3%80%81%E6%8E%A8%E5%AF%BC%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="tuple-（元组）只读的列表"><a href="#tuple-（元组）只读的列表" class="headerlink" title="tuple （元组）只读的列表"></a>tuple （元组）只读的列表</h1><p>元组（<strong>tuple</strong>）是 Python 中一种不可变的序列类型，用于存储<strong>有序、可重复</strong>的元素。它与列表（list）类似，但关键区别在于 <strong>元组一旦创建，内容不可修改</strong>（不可变性）。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tuple1 = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">34</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="comment">#元组定义</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(tuple1)) <span class="comment">#类型为tuple</span></span><br><span class="line"><span class="built_in">print</span>(tuple1[<span class="number">3</span>]) <span class="comment">#访问元素</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tuple1: <span class="comment">#遍历元组</span></span><br><span class="line">	<span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"><span class="comment">#想对元组操作，需要将其转为列表</span></span><br><span class="line">list1=<span class="built_in">list</span>(tupe1)</span><br></pre></td></tr></table></figure>

<h1 id="set-（集合）无序，去掉重复数据"><a href="#set-（集合）无序，去掉重复数据" class="headerlink" title="set （集合）无序，去掉重复数据"></a>set （集合）无序，去掉重复数据</h1><p>集合（<strong>set</strong>）是 Python 中一种<strong>无序、不重复</strong>的容器类型，基于哈希表实现，常用于快速成员检测、去重和数学集合运算（如并集、交集）。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">set1 = <span class="built_in">set</span>()  <span class="comment">#创建空集合，必须使用set(),使用&#123;&#125;会创建一个空字典</span></span><br><span class="line">set1 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>&#125;  <span class="comment">#集合定义</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(set1)) <span class="comment">#类型为set</span></span><br><span class="line"><span class="built_in">print</span>(set1)  <span class="comment">#只有&#123;1,2,3,4,5&#125;</span></span><br><span class="line">set1.add(<span class="number">666</span>)  <span class="comment">#添加元素</span></span><br><span class="line">set1.remove(<span class="number">55</span>)  <span class="comment">#删除元素</span></span><br><span class="line">set1.pop()  <span class="comment">#随机删除一个元素</span></span><br><span class="line"><span class="comment">#不能使用下标访问set，所以修改操作一般为remove操作 + add操作</span></span><br></pre></td></tr></table></figure>

<h1 id="dict-（字典）"><a href="#dict-（字典）" class="headerlink" title="dict （字典）"></a>dict （字典）</h1><p>字典是 键 (key) : 值 (value)  的集合<br>在同⼀个字典中，键 (key) 必须是唯⼀的<br>创建空字典使⽤  { } </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建字典</span></span><br><span class="line">dict1 = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Alice&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">30</span>, <span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;New York&#x27;</span>&#125;  <span class="comment"># 直接创建</span></span><br><span class="line">dict2 = <span class="built_in">dict</span>([(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>), (<span class="string">&#x27;age&#x27;</span>, <span class="number">25</span>)])  <span class="comment"># 使用 dict() 函数从元组列表创建</span></span><br><span class="line">dict3 = <span class="built_in">dict</span>(name=<span class="string">&#x27;Charlie&#x27;</span>, age=<span class="number">35</span>)  <span class="comment"># 使用关键字参数创建</span></span><br><span class="line">empty_dict = &#123;&#125;  <span class="comment"># 创建空字典</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问元素</span></span><br><span class="line"><span class="built_in">print</span>(dict1[<span class="string">&#x27;name&#x27;</span>])  <span class="comment"># 通过键获取值，键不存在会报错</span></span><br><span class="line"><span class="built_in">print</span>(dict1.get(<span class="string">&#x27;age&#x27;</span>))  <span class="comment"># 通过 get() 方法获取值，键不存在返回 None</span></span><br><span class="line"><span class="built_in">print</span>(dict1.get(<span class="string">&#x27;gender&#x27;</span>, <span class="string">&#x27;Unknown&#x27;</span>))  <span class="comment"># 可设置默认值，键不存在时返回</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加/修改元素</span></span><br><span class="line">dict1[<span class="string">&#x27;job&#x27;</span>] = <span class="string">&#x27;Engineer&#x27;</span>  <span class="comment"># 若键不存在，会添加新键值对</span></span><br><span class="line">dict1[<span class="string">&#x27;age&#x27;</span>] = <span class="number">31</span>  <span class="comment"># 若键存在，则修改键对应的值</span></span><br><span class="line">dict1.update(&#123;<span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Los Angeles&#x27;</span>, <span class="string">&#x27;hobby&#x27;</span>: <span class="string">&#x27;Reading&#x27;</span>&#125;)  <span class="comment"># 批量添加/更新</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除元素</span></span><br><span class="line"><span class="keyword">del</span> dict1[<span class="string">&#x27;city&#x27;</span>]  <span class="comment"># 删除指定键的键值对</span></span><br><span class="line">age = dict1.pop(<span class="string">&#x27;age&#x27;</span>)  <span class="comment"># 删除指定键的键值对，并返回对应的值</span></span><br><span class="line">last_item = dict1.popitem()  <span class="comment"># 删除并返回字典的最后一个键值对（Python 3.7+ 有序）</span></span><br><span class="line">dict1.clear()  <span class="comment"># 清空字典</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历字典</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> dict1:  <span class="comment"># 遍历键</span></span><br><span class="line">    <span class="built_in">print</span>(key,dict1[key])</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> dict1.values():  <span class="comment"># 遍历值</span></span><br><span class="line">    <span class="built_in">print</span>(value)</span><br><span class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> dict1.items():  <span class="comment"># 遍历键值对</span></span><br><span class="line">    <span class="built_in">print</span>(key,value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他常用操作</span></span><br><span class="line"><span class="built_in">len</span>(dict1)  <span class="comment"># 返回字典中键值对的数量</span></span><br><span class="line"><span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> dict1  <span class="comment"># 检查键是否存在</span></span><br><span class="line"><span class="built_in">list</span>(dict1.keys())  <span class="comment"># 获取所有键的列表</span></span><br><span class="line"><span class="built_in">list</span>(dict1.values())  <span class="comment"># 获取所有值的列表</span></span><br><span class="line"><span class="built_in">list</span>(dict1.items())  <span class="comment"># 获取所有键值对的列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字典复制</span></span><br><span class="line">dict_copy = dict1.copy()  <span class="comment"># 浅复制</span></span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line">deep_copy = copy.deepcopy(dict1)  <span class="comment"># 深复制</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字典合并（Python 3.9+）</span></span><br><span class="line">merged_dict = dict1 | dict2  <span class="comment"># 使用 | 运算符合并两个字典</span></span><br><span class="line">dict1 |= dict2  <span class="comment"># 原地合并（更新 dict1）</span></span><br></pre></td></tr></table></figure>

<h1 id="推导式"><a href="#推导式" class="headerlink" title="推导式"></a>推导式</h1><p>输⼊源： range list tuple set dict<br>输出源： list tuple set dict<br>推导式格式为：表达式 for 变量 in 输⼊源 if 条件<br>推导式格式为：表达式 for 变量 in 输⼊源 if 条件 for 变量 in 输⼊源 if 条件</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 给定一个列表,将每一位数字变成它的平方 </span></span><br><span class="line"><span class="comment"># alist = [1, 2, 3, 4, 5, 6, 7] </span></span><br><span class="line"><span class="comment"># 输出结果：[1, 4, 9, 16, 25, 36, 49] </span></span><br><span class="line">alist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>] </span><br><span class="line"><span class="built_in">print</span>([i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> alist]) </span><br><span class="line"><span class="built_in">print</span>([i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> alist <span class="keyword">if</span> i+<span class="number">2</span>&gt;<span class="number">5</span>]) </span><br><span class="line"><span class="built_in">print</span>(&#123;i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> alist&#125;) </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>((i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> alist))) </span><br><span class="line"><span class="built_in">print</span>(&#123;i**<span class="number">2</span>:<span class="string">f&quot;test<span class="subst">&#123;i&#125;</span>&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> alist&#125;) </span><br><span class="line"><span class="comment">#推导 30 以内可以被 3 整除的整数为列表： </span></span><br><span class="line"><span class="built_in">print</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>) <span class="keyword">if</span> i % <span class="number">3</span> == <span class="number">0</span>])</span><br></pre></td></tr></table></figure>

<h2 id="数据源使用字典"><a href="#数据源使用字典" class="headerlink" title="数据源使用字典"></a>数据源使用字典</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">d1=&#123;<span class="string">&quot;张三&quot;</span>:<span class="number">20</span>,<span class="string">&quot;李四&quot;</span>:<span class="number">30</span>,<span class="string">&quot;王五&quot;</span>:<span class="number">40</span>&#125; </span><br><span class="line"><span class="comment"># 推导列表 </span></span><br><span class="line"><span class="built_in">print</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> d1.values()]) </span><br><span class="line"><span class="comment"># 推导字典 </span></span><br><span class="line"><span class="built_in">print</span>(&#123;i:i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> d1.values() <span class="keyword">if</span> i&gt;<span class="number">20</span>&#125;) </span><br><span class="line"><span class="comment"># 推导集合 </span></span><br><span class="line"><span class="built_in">print</span>(&#123;i <span class="keyword">for</span> i <span class="keyword">in</span> d1.values() <span class="keyword">if</span> i&gt;<span class="number">20</span>&#125;) </span><br><span class="line"><span class="comment"># 推导元组 </span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>((i <span class="keyword">for</span> i <span class="keyword">in</span> d1.values() <span class="keyword">if</span> i&gt;<span class="number">20</span>))) </span><br><span class="line"><span class="comment"># 二重循环 提取数字为列表[45,67,45,34,65,78] </span></span><br><span class="line">l1=[[<span class="number">45</span>,<span class="number">67</span>,<span class="number">45</span>,<span class="string">&quot;hhh&quot;</span>],[<span class="number">34</span>,<span class="number">65</span>,<span class="number">78</span>,<span class="string">&quot;test&quot;</span>]] </span><br><span class="line"><span class="built_in">print</span>([j <span class="keyword">for</span> i <span class="keyword">in</span> l1 <span class="keyword">for</span> j <span class="keyword">in</span> i <span class="keyword">if</span> <span class="built_in">type</span>(j)==<span class="built_in">int</span>])</span><br></pre></td></tr></table></figure>
<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1. 获取字典中的值：获取下列字典键为 &#x27;history&#x27; 的值 </span></span><br><span class="line">sampleDict = &#123;<span class="string">&quot;class&quot;</span>:&#123;<span class="string">&quot;student&quot;</span>:&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Mike&quot;</span>,<span class="string">&quot;marks&quot;</span>:&#123;<span class="string">&quot;physics&quot;</span>:<span class="number">70</span>,<span class="string">&quot;history&quot;</span>:<span class="number">80</span>&#125;&#125;&#125;&#125; </span><br><span class="line"><span class="built_in">print</span>(sampleDict[<span class="string">&quot;class&quot;</span>][<span class="string">&quot;student&quot;</span>][<span class="string">&quot;marks&quot;</span>][<span class="string">&quot;history&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.请将元组 v1 = (11,22,33) 中的所有元素追加到列表 v2 = [44,55,66] 中 </span></span><br><span class="line">v1 = (<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>)</span><br><span class="line">v2 = [<span class="number">44</span>,<span class="number">55</span>,<span class="number">66</span>]</span><br><span class="line"><span class="comment"># v2=v2+list(v1)</span></span><br><span class="line">v2+=v1</span><br><span class="line"><span class="built_in">print</span>(v2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.已知列表： </span></span><br><span class="line">list1 = [<span class="string">&#x27;life&#x27;</span>,<span class="string">&#x27;is&#x27;</span>,<span class="string">&#x27;short&#x27;</span>] </span><br><span class="line">list2 = [<span class="string">&#x27;you&#x27;</span>,<span class="string">&#x27;need&#x27;</span>,<span class="string">&#x27;python&#x27;</span>] </span><br><span class="line">list3 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>] </span><br><span class="line"><span class="comment">#完成以下操作： </span></span><br><span class="line"><span class="comment"># （1）把上述三个列表构造为⼀个集合 set1 </span></span><br><span class="line">set1 = <span class="built_in">set</span>(list1+list2+list3)</span><br><span class="line"><span class="built_in">print</span>(set1)</span><br><span class="line"><span class="comment"># （2）输出集合的⻓度 </span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(set1))</span><br><span class="line"><span class="comment"># （3）把 python 从集合中移除</span></span><br><span class="line">set1.remove(<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(set1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.已知列表 </span></span><br><span class="line">li = [<span class="number">11</span>,<span class="number">22</span>,<span class="number">100</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">66</span>,<span class="number">55</span>,<span class="number">77</span>,<span class="number">88</span>,<span class="number">99</span>,<span class="number">90</span>]</span><br><span class="line"><span class="comment"># 将所有⼤于66的值保存⾄字典的第⼀个key对应的列表中，将⼩于66的值保存⾄第⼆个key对应的列表中。 </span></span><br><span class="line">d1 = &#123;<span class="string">&#x27;key1&#x27;</span>:[],<span class="string">&#x27;key2&#x27;</span>:[]&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> li:</span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">66</span> :</span><br><span class="line">        d1[<span class="string">&#x27;key1&#x27;</span>].append(i)</span><br><span class="line">    <span class="keyword">elif</span> i &lt; <span class="number">66</span> :</span><br><span class="line">        d1[<span class="string">&#x27;key2&#x27;</span>].append(i)</span><br><span class="line"><span class="built_in">print</span>(d1)</span><br><span class="line"><span class="comment"># 输出结果： &#123;&#x27;key1&#x27;:[100,77,88,99,90],&#x27;key2&#x27;:[11,22,33,44,55]&#125; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.已知列表 </span></span><br><span class="line">list1 = [<span class="number">11</span>,<span class="number">22</span>,<span class="number">11</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span>,<span class="number">66</span>,<span class="number">55</span>,<span class="number">66</span>] </span><br><span class="line"><span class="comment">#统计列表中每个元素出现的次数，⽣成⼀个字典 输出结果： &#123;11:2,22:1.....&#125; 注：顺序不要求 </span></span><br><span class="line">d1 = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list1:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> d1:</span><br><span class="line">        d1[i]=<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        d1[i]+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(d1) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.已知字典 </span></span><br><span class="line">d1=&#123;<span class="string">&quot;subjects&quot;</span>:[&#123;<span class="string">&quot;rate&quot;</span>:<span class="string">&quot;7.4&quot;</span>,<span class="string">&quot;cover_x&quot;</span>:<span class="number">640</span>&#125;,&#123;<span class="string">&quot;rate&quot;</span>:<span class="string">&quot;6.0&quot;</span>,<span class="string">&quot;cover_x&quot;</span>:<span class="number">1080</span>&#125;]&#125; </span><br><span class="line"><span class="comment"># 处理显⽰成如下格式输出： 7.4 640 6.0 1080</span></span><br><span class="line">l1=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d1.values():</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> i:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> j.values():</span><br><span class="line">            l1.append(k)</span><br><span class="line"><span class="built_in">print</span>(*l1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.已知如下数据 </span></span><br><span class="line">d1 = &#123; <span class="string">&#x27;192.168.1.1&#x27;</span>:&#123;<span class="string">&#x27;cpu&#x27;</span>:<span class="string">&#x27;0.23&#x27;</span>,<span class="string">&#x27;内存&#x27;</span>:<span class="string">&#x27;16&#x27;</span>,<span class="string">&#x27;硬盘&#x27;</span>:<span class="string">&#x27;500&#x27;</span>&#125;,</span><br><span class="line">       <span class="string">&#x27;192.168.1.2&#x27;</span>:&#123;<span class="string">&#x27;cpu&#x27;</span>:<span class="string">&#x27;3.22&#x27;</span>,<span class="string">&#x27;内存&#x27;</span>:<span class="string">&#x27;64&#x27;</span>,<span class="string">&#x27;硬盘&#x27;</span>:<span class="string">&#x27;700&#x27;</span>&#125;,</span><br><span class="line">       <span class="string">&#x27;192.168.1.3&#x27;</span>:&#123;<span class="string">&#x27;cpu&#x27;</span>:<span class="string">&#x27;1.99&#x27;</span>,<span class="string">&#x27;内存&#x27;</span>:<span class="string">&#x27;32&#x27;</span>,<span class="string">&#x27;硬盘&#x27;</span>:<span class="string">&#x27;800&#x27;</span>&#125; &#125; </span><br><span class="line"><span class="comment">#处理显⽰成如下格式输出： </span></span><br><span class="line"><span class="comment"># 192.168.1.1: cpu 0.23 内存 16 硬盘 500 </span></span><br><span class="line"><span class="comment"># 192.168.1.2: cpu 3.22 内存 64 硬盘 700 </span></span><br><span class="line"><span class="comment"># 192.168.1.3: cpu 1.99 内存 32 硬盘 800 </span></span><br><span class="line"><span class="keyword">for</span> i,j <span class="keyword">in</span> d1.items():</span><br><span class="line">    str1=<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>: &quot;</span></span><br><span class="line">    <span class="keyword">for</span> n,m <span class="keyword">in</span> j.items():</span><br><span class="line">        str1+=<span class="string">f&quot;<span class="subst">&#123;n&#125;</span> <span class="subst">&#123;m&#125;</span>&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(str1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.有字符串 &quot;k: 1|k1:2|k2:3 |k3 :4&quot; 处理成字典 &#123;&#x27;k&#x27;:1,&#x27;k1&#x27;:2,&#x27;k3&#x27;:4&#125; </span></span><br><span class="line"><span class="comment"># 注：字符串替换使⽤ replace 函数</span></span><br><span class="line">str1 = <span class="string">&quot;k: 1|k1:2|k2:3 |k3 :4&quot;</span></span><br><span class="line">str1 = str1.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">list1 = str1.split(<span class="string">&quot;|&quot;</span>)</span><br><span class="line">dict1 = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list1:</span><br><span class="line">    key,value = i.split(<span class="string">&quot;:&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> key != <span class="string">&quot;k2&quot;</span>:</span><br><span class="line">        dict1[key] = <span class="built_in">int</span>(value)</span><br><span class="line"><span class="built_in">print</span>(dict1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.⽣成⼀个存放 1-100 之间个位数为 3 的数据列表</span></span><br><span class="line"><span class="built_in">print</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>) <span class="keyword">if</span> (i)%<span class="number">10</span>==<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.利⽤列表推导式将已知列表中的整数提取出来 [17, 98, 34, 21] </span></span><br><span class="line">list_two = [<span class="literal">True</span>, <span class="number">17</span>, <span class="string">&quot;hello&quot;</span>, <span class="string">&quot;bye&quot;</span>, <span class="number">98</span>, <span class="number">34</span>, <span class="number">21</span>] </span><br><span class="line"><span class="built_in">print</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> list_two <span class="keyword">if</span> <span class="built_in">type</span>(i)==<span class="built_in">int</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.根据列表利⽤推导式存放指定列表中 字符串的⻓度如下 </span></span><br><span class="line"><span class="comment"># &#123;&#x27;good&#x27;:4, &#x27;nice&#x27;:4, &#x27;see you&#x27;:7, &#x27;bye&#x27;:3&#125; </span></span><br><span class="line">list_three=[<span class="string">&quot;good&quot;</span>, <span class="string">&quot;nice&quot;</span>, <span class="string">&quot;see you&quot;</span>, <span class="string">&quot;bye&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(&#123;i:<span class="built_in">len</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> list_three&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.⽣成⼀个列表，其中的元素为 &#x27;0-1&#x27;，&#x27;1-2&#x27;，&#x27;2-3&#x27;，&#x27;3-4&#x27;，&#x27;4-5&#x27; </span></span><br><span class="line"><span class="built_in">print</span>([<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>-<span class="subst">&#123;i+<span class="number">1</span>&#125;</span>&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.已知数据 </span></span><br><span class="line">t1=((<span class="number">1</span>,<span class="number">100</span>),(<span class="number">2</span>,<span class="number">30</span>),(<span class="number">3</span>,<span class="number">80</span>),(<span class="number">4</span>,<span class="number">234</span>)) </span><br><span class="line"><span class="comment"># 推导成列表 [100,30,80,234] </span></span><br><span class="line"><span class="built_in">print</span>([i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> t1])</span><br><span class="line"><span class="comment"># 推导成字典 &#123;1: 100, 2: 30, 3: 80, 4: 234&#125; </span></span><br><span class="line"><span class="built_in">print</span>(&#123;i[<span class="number">0</span>]:i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> t1&#125;)</span><br><span class="line"><span class="comment"># 推导成列表 [&#123;&#x27;name&#x27;:1, &#x27;value&#x27;:100&#125;,&#123;&#x27;name&#x27;:2,&#x27;value&#x27;:30&#125;,&#123;&#x27;name&#x27;:3,&#x27;value&#x27;:80&#125;,&#123;&#x27;name&#x27;:4,&#x27;value&#x27;:234&#125;]</span></span><br><span class="line"><span class="built_in">print</span>([&#123;<span class="string">&#x27;name&#x27;</span>:i[<span class="number">0</span>],<span class="string">&#x27;value&#x27;</span>:i[<span class="number">1</span>]&#125; <span class="keyword">for</span> i <span class="keyword">in</span> t1])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.已知如下列表 students ，在列表中保存了 6 个学⽣的信息，根据要求完成下⾯的题⽬ </span></span><br><span class="line">students = [ </span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;⼩花&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">19</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">90</span>,<span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;⼥&#x27;</span>,<span class="string">&#x27;tel&#x27;</span>:<span class="string">&#x27;15300022839&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;明明&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">20</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">40</span>,<span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;tel&#x27;</span>:<span class="string">&#x27;15300022838&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;华仔&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">18</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">100</span>,<span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;⼥&#x27;</span>,<span class="string">&#x27;tel&#x27;</span>:<span class="string">&#x27;15300022839&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;静静&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">16</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">90</span>,<span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;不明&#x27;</span>,<span class="string">&#x27;tel&#x27;</span>:<span class="string">&#x27;15300022428&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">17</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">59</span>,<span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;不明&#x27;</span>,<span class="string">&#x27;tel&#x27;</span>:<span class="string">&#x27;15300022839&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;Bob&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">18</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">90</span>,<span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;tel&#x27;</span>:<span class="string">&#x27;15300022839&#x27;</span>&#125; ] </span><br><span class="line"></span><br><span class="line"><span class="comment">#打印学⽣分数列表 </span></span><br><span class="line"><span class="built_in">print</span>([i[<span class="string">&#x27;score&#x27;</span>] <span class="keyword">for</span> i <span class="keyword">in</span> students])</span><br><span class="line"><span class="comment">#打印⼿机尾号是 8 的学⽣的名字列表 </span></span><br><span class="line"><span class="built_in">print</span>([i[<span class="string">&#x27;name&#x27;</span>] <span class="keyword">for</span> i <span class="keyword">in</span> students <span class="keyword">if</span> i[<span class="string">&#x27;tel&#x27;</span>][-<span class="number">1</span>]==<span class="string">&#x27;8&#x27;</span>])</span><br><span class="line"><span class="comment">#打印不及格的同学的所有信息列表，效果如下： </span></span><br><span class="line"><span class="built_in">print</span>([j <span class="keyword">for</span> i <span class="keyword">in</span> students <span class="keyword">if</span> i[<span class="string">&#x27;score&#x27;</span>]&lt;<span class="number">60</span> <span class="keyword">for</span> j <span class="keyword">in</span> i.values()])</span><br><span class="line"><span class="comment">#[&#x27;明明&#x27;,20,40,&#x27;男&#x27;,&#x27;15300022838&#x27;,&#x27;Tom&#x27;,17,59,&#x27;不明&#x27;,&#x27;15300022839&#x27;]</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>6.4总结：连接MySQL、三层架构</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.4%E6%80%BB%E7%BB%93%EF%BC%9A%E8%BF%9E%E6%8E%A5MySQL%E3%80%81%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<h1 id="time-datetime-库"><a href="#time-datetime-库" class="headerlink" title="time &amp; datetime 库"></a>time &amp; datetime 库</h1><p>Python 中处理时间的标准库<br>提供获取系统时间并格式化输出功能<br>提供系统级精确计时功能，⽤于程序性能分析</p>
<h2 id="time库包含三类函数"><a href="#time库包含三类函数" class="headerlink" title="time库包含三类函数"></a>time库包含三类函数</h2><p>时间获取： localtime()<br>时间格式化： strftime()   strptime()<br>程序计时： sleep()   perf_counter()</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time </span><br><span class="line"><span class="comment"># 日期类型与字符串直接互相转化 </span></span><br><span class="line"><span class="comment"># 日期转字符串</span></span><br><span class="line">t1= time.localtime() </span><br><span class="line"><span class="built_in">print</span>(time.strftime(<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>,t1)) </span><br><span class="line"><span class="comment"># 字符串转日期</span></span><br><span class="line">timeStr = <span class="string">&#x27;2018-01-26 12:55:20&#x27;</span> </span><br><span class="line">t2=time.strptime(timeStr, <span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">#测试程序执行时间差 </span></span><br><span class="line">t_start = time.perf_counter()  <span class="comment"># 程序从开始到这条代码的运行时间</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;测试&quot;</span>) </span><br><span class="line"><span class="comment">#开始休眠 </span></span><br><span class="line">time.sleep(<span class="number">5</span>) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;休眠完毕&quot;</span>) </span><br><span class="line">t_end = time.perf_counter() </span><br><span class="line"><span class="built_in">print</span>( t_end-t_start ) </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> datetime </span><br><span class="line">t = datetime.datetime.now() </span><br><span class="line"><span class="built_in">print</span>(datetime.datetime.strftime(t,<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)) </span><br><span class="line"><span class="built_in">print</span>(datetime.datetime.strptime(<span class="string">&quot;20230211&quot;</span>,<span class="string">&quot;%Y%m%d&quot;</span>))</span><br></pre></td></tr></table></figure>

<h1 id="连接MySQL操作"><a href="#连接MySQL操作" class="headerlink" title="连接MySQL操作"></a>连接MySQL操作</h1><p>pymysql 是在 Python3.x 版本中⽤于连接 MySQL 服务器的⼀个库<br>在 vscode 终端下⾯直接运⾏ pip3 install pymysql 安装即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql </span><br><span class="line"><span class="comment"># 连接database </span></span><br><span class="line">conn = pymysql.connect( </span><br><span class="line">	host=<span class="string">&quot;127.0.0.1&quot;</span>, </span><br><span class="line">	user=<span class="string">&quot;root&quot;</span>,</span><br><span class="line">	password=<span class="string">&quot;root123456&quot;</span>, </span><br><span class="line">	database=<span class="string">&quot;test&quot;</span>, </span><br><span class="line">	charset=<span class="string">&quot;utf8&quot;</span>) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;打开数据库&quot;</span>) </span><br><span class="line"><span class="comment">#关闭数据库 </span></span><br><span class="line">conn.close() </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;关闭数据库&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="结构操作"><a href="#结构操作" class="headerlink" title="结构操作"></a>结构操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用预处理语句创建表 </span></span><br><span class="line">sql1 = <span class="string">&quot;&quot;&quot;create table if not exists MovieType( </span></span><br><span class="line"><span class="string">	tid int primary key, </span></span><br><span class="line"><span class="string">	tname varchar(20), </span></span><br><span class="line"><span class="string">	tcontent varchar(500), </span></span><br><span class="line"><span class="string">	tdate datetime )&quot;&quot;&quot;</span> </span><br><span class="line">	</span><br><span class="line">baoma.execute(sql1) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;操作成功&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="execute-sql-的返回值"><a href="#execute-sql-的返回值" class="headerlink" title=".execute(sql)的返回值"></a>.execute(sql)的返回值</h3><p>pymysql中，<code>cursor.execute(sql)</code> 的返回值是一个整数，表示：</p>
<ul>
<li>对于<code>INSERT</code>、<code>UPDATE</code>、<code>DELETE</code>语句：返回受影响的行数（即成功插入、更新或删除的行数）。</li>
<li>对于<code>SELECT</code>语句：返回结果集的行数（即查询返回的总行数）。</li>
</ul>
<h2 id="数据增删改操作"><a href="#数据增删改操作" class="headerlink" title="数据增删改操作"></a>数据增删改操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c=<span class="string">&quot;insert into MovieType values(1,&#x27;喜剧&#x27;,&#x27;这是一种搞笑的视频&#x27;,now())&quot;</span> </span><br><span class="line">result=baoma.execute(c) </span><br><span class="line">conn.commit() <span class="comment">#需要提交才到数据库，有错则rollback </span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;插入成功&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="数据查询操作"><a href="#数据查询操作" class="headerlink" title="数据查询操作"></a>数据查询操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql sql = <span class="string">&quot;select * from MovieType order by tdate desc&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#读一行</span></span><br><span class="line">baoma.execute(sql) </span><br><span class="line">data = baoma.fetchone()  <span class="comment">#执⾏完毕返回的结果集默认以元组显⽰</span></span><br><span class="line"><span class="built_in">print</span>(data) </span><br><span class="line"></span><br><span class="line"><span class="comment">#读所有 </span></span><br><span class="line">data = baoma.fetchall() <span class="comment">#元组的元组</span></span><br><span class="line"><span class="built_in">print</span>(data) </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data: </span><br><span class="line">	<span class="built_in">print</span>(i[<span class="number">0</span>],i[<span class="number">1</span>])</span><br></pre></td></tr></table></figure>

<h1 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h1><p>表示层（前端UI）<br>业务逻辑层（BLL）(Business Logic Layer)<br>数据访问层（DAL）(Data Access Layer)</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.4%E6%80%BB%E7%BB%93%EF%BC%9A%E8%BF%9E%E6%8E%A5MySQL%E3%80%81%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/file-20250717160518015.png" class="">

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.灵活使⽤ pymyql 来完成创建表、添加数据、查询数据</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dbconnect</span>():</span><br><span class="line">    <span class="comment"># 连接database</span></span><br><span class="line">    conn = pymysql.connect(</span><br><span class="line">        host=<span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">        user=<span class="string">&quot;root&quot;</span>,</span><br><span class="line">        password=<span class="string">&quot;root123456&quot;</span>,</span><br><span class="line">        database=<span class="string">&quot;test&quot;</span>,</span><br><span class="line">        port=<span class="number">3306</span>,</span><br><span class="line">        charset=<span class="string">&quot;utf8&quot;</span></span><br><span class="line">    )</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;连接数据库成功&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> conn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">jiegou</span>():</span><br><span class="line">    sql=<span class="string">&quot;&quot;&quot;create table if not exists MovieType(</span></span><br><span class="line"><span class="string">    tid int primary key,</span></span><br><span class="line"><span class="string">    tname varchar(20),</span></span><br><span class="line"><span class="string">    tcontent varchar(200),</span></span><br><span class="line"><span class="string">    tdate datetime</span></span><br><span class="line"><span class="string">    )&quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 连接database</span></span><br><span class="line">    conn = dbconnect()</span><br><span class="line">    jianbiao=conn.cursor()</span><br><span class="line">    jianbiao.execute(sql)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;MovieType表创建完成&quot;</span>)</span><br><span class="line">    jianbiao.close()</span><br><span class="line">    conn.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;关闭数据库成功&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">edit</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;示例: 1,喜剧,这是一个搞笑的电影&quot;</span>)</span><br><span class="line">    data=<span class="built_in">input</span>(<span class="string">&quot;请输入要插入的数据（逗号隔开）:&quot;</span>).split(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">    tid=<span class="built_in">int</span>(data[<span class="number">0</span>])</span><br><span class="line">    tname=data[<span class="number">1</span>]</span><br><span class="line">    tcontent=data[<span class="number">2</span>]</span><br><span class="line">    sql=<span class="string">f&quot;insert into MovieType values(<span class="subst">&#123;tid&#125;</span>,&#x27;<span class="subst">&#123;tname&#125;</span>&#x27;,&#x27;<span class="subst">&#123;tcontent&#125;</span>&#x27;,now())&quot;</span></span><br><span class="line">    conn = dbconnect()</span><br><span class="line">    inserdata=conn.cursor()</span><br><span class="line">    res=inserdata.execute(sql)</span><br><span class="line">    <span class="keyword">if</span> res&gt;<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;添加成功&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;添加失败&quot;</span>)</span><br><span class="line">    conn.commit()</span><br><span class="line">    inserdata.close()</span><br><span class="line">    conn.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;关闭数据库成功&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.查询数据时⽇期处理成如下格式： </span></span><br><span class="line"><span class="comment"># 1 喜剧 这是⼀个搞笑的电影 2023 年 08 ⽉ 21 ⽇ </span></span><br><span class="line"><span class="comment"># 2 动作 这是⼀个打⽃的电影 2023 年 08 ⽉ 21 ⽇</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cha</span>():</span><br><span class="line">    sql=<span class="string">&quot;select * from MovieType&quot;</span></span><br><span class="line">    conn=dbconnect()</span><br><span class="line">    show=conn.cursor()</span><br><span class="line">    show.execute(sql)</span><br><span class="line">    res=show.fetchall()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">        <span class="built_in">print</span>(i[<span class="number">0</span>],i[<span class="number">1</span>],i[<span class="number">2</span>],datetime.datetime.strftime(i[<span class="number">3</span>],<span class="string">&quot;%Y年%m月%d日&quot;</span>))</span><br><span class="line">    show.close()</span><br><span class="line">    conn.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;关闭数据库成功&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># jiegou()</span></span><br><span class="line">    <span class="comment"># edit()</span></span><br><span class="line">    cha()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 三层架构开发豆瓣网</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模型层 Model.py</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MovieType</span>:</span><br><span class="line">    <span class="comment">#属性</span></span><br><span class="line">    tid=<span class="number">0</span></span><br><span class="line">    tname=<span class="string">&quot;&quot;</span></span><br><span class="line">    tcontent=<span class="string">&quot;&quot;</span></span><br><span class="line">    tdate=datetime.datetime.now()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,tid1,tname1,tcontent1</span>):</span><br><span class="line">        <span class="variable language_">self</span>.tid=tid1</span><br><span class="line">        <span class="variable language_">self</span>.tname=tname1</span><br><span class="line">        <span class="variable language_">self</span>.tcontent=tcontent1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据层 DAL.py</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DBHelper</span>:</span><br><span class="line">    <span class="comment">#打开数据库</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">openDB</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment">#把局部变量变成全局变量</span></span><br><span class="line">        <span class="keyword">global</span> conn</span><br><span class="line">        conn=pymysql.connect(host=<span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">                             user=<span class="string">&quot;root&quot;</span>,</span><br><span class="line">                             password=<span class="string">&quot;root123456&quot;</span>,</span><br><span class="line">                            database=<span class="string">&quot;test&quot;</span>,</span><br><span class="line">                            port=<span class="number">3306</span>,charset=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">        <span class="keyword">global</span> baoma</span><br><span class="line">        baoma=conn.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#关闭数据库</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">closeDB</span>(<span class="params">self</span>):</span><br><span class="line">        baoma.close()</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">edit</span>(<span class="params">self,sql</span>):</span><br><span class="line">        <span class="variable language_">self</span>.openDB()</span><br><span class="line">        result=baoma.execute(sql)</span><br><span class="line">        conn.commit()</span><br><span class="line">        <span class="variable language_">self</span>.closeDB()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chaOne</span>(<span class="params">self,sql</span>):</span><br><span class="line">        <span class="variable language_">self</span>.openDB()</span><br><span class="line">        baoma.execute(sql)</span><br><span class="line">        result=baoma.fetchone()</span><br><span class="line">        <span class="variable language_">self</span>.closeDB()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chaAll</span>(<span class="params">self,sql</span>):</span><br><span class="line">        <span class="variable language_">self</span>.openDB()</span><br><span class="line">        baoma.execute(sql)</span><br><span class="line">        result=baoma.fetchall()</span><br><span class="line">        <span class="variable language_">self</span>.closeDB()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">     </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MovieTypeDAL</span>(<span class="title class_ inherited__">DBHelper</span>):</span><br><span class="line">    <span class="comment"># 1.录⼊电影类型信息</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">insert</span>(<span class="params">self,mt</span>):</span><br><span class="line">        sql=<span class="string">f&quot;insert into MovieType values(<span class="subst">&#123;mt.tid&#125;</span>,&#x27;<span class="subst">&#123;mt.tname&#125;</span>&#x27;,&#x27;<span class="subst">&#123;mt.tcontent&#125;</span>&#x27;,now())&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.edit(sql)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 2.1 显示tid的数据内容</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">showformtid</span>(<span class="params">self,tid</span>):</span><br><span class="line">        sql=<span class="string">f&quot;select * from MovieType where tid=&#x27;<span class="subst">&#123;tid&#125;</span>&#x27;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.chaOne(sql)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 2.2修改电影类型信息</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self,mt</span>):</span><br><span class="line">        edtname=<span class="number">0</span></span><br><span class="line">        edtcontent=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span>(mt.tname!=<span class="string">&quot;&quot;</span>):</span><br><span class="line">            sql1=<span class="string">f&quot;update MovieType set tname=&#x27;<span class="subst">&#123;mt.tname&#125;</span>&#x27; where tid=<span class="subst">&#123;mt.tid&#125;</span>&quot;</span></span><br><span class="line">            edtname=<span class="variable language_">self</span>.edit(sql1)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(mt.tcontent!=<span class="string">&quot;&quot;</span>):</span><br><span class="line">            sql2=<span class="string">f&quot;update MovieType set tcontent=&#x27;<span class="subst">&#123;mt.tcontent&#125;</span>&#x27; where tid=<span class="subst">&#123;mt.tid&#125;</span>&quot;</span></span><br><span class="line">            edtcontent=<span class="variable language_">self</span>.edit(sql2)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> edtname,edtcontent</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 3.删除电影类型信息</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">delet</span>(<span class="params">self,tid</span>):</span><br><span class="line">        sql=<span class="string">f&quot;delete from MovieType where tid=<span class="subst">&#123;tid&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.edit(sql)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4.显示所有电影类型信息</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">showall</span>(<span class="params">self</span>):</span><br><span class="line">        sql=<span class="string">&quot;select * from MovieType&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.chaAll(sql)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 业务逻辑层 BLL.py</span></span><br><span class="line"><span class="keyword">from</span> Model <span class="keyword">import</span> MovieType</span><br><span class="line"><span class="keyword">from</span> DAL <span class="keyword">import</span> MovieTypeDAL</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">mtdal=MovieTypeDAL()</span><br><span class="line">menu=<span class="string">&quot;&quot;&quot;\n-------------⾖瓣⽹管理系统-----------------</span></span><br><span class="line"><span class="string">===========功能菜单===========</span></span><br><span class="line"><span class="string">1 录⼊电影类型信息</span></span><br><span class="line"><span class="string">2 修改电影类型信息</span></span><br><span class="line"><span class="string">3 删除电影类型信息</span></span><br><span class="line"><span class="string">4 显⽰所有电影类型信息</span></span><br><span class="line"><span class="string">0 退出系统</span></span><br><span class="line"><span class="string">=============================&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.录⼊电影类型信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">option1</span>():</span><br><span class="line">    tid=<span class="built_in">input</span>(<span class="string">&quot;请输⼊编号：&quot;</span>)</span><br><span class="line">    res=mtdal.showformtid(tid)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> res:</span><br><span class="line">        tname=<span class="built_in">input</span>(<span class="string">&quot;请输⼊名称：&quot;</span>)</span><br><span class="line">        tcontent=<span class="built_in">input</span>(<span class="string">&quot;请输⼊内容：&quot;</span>)</span><br><span class="line">        mt=MovieType(tid,tname,tcontent)</span><br><span class="line">        res= mtdal.insert(mt)</span><br><span class="line">        <span class="keyword">if</span> res&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;录入成功&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;录入失败&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;编号已存在！&quot;</span>)</span><br><span class="line">    <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改电影类型信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">option2</span>():</span><br><span class="line">    tid=<span class="built_in">input</span>(<span class="string">&quot;请输入修改编号：&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n编号 名称 内容 创建⽇期&quot;</span>)</span><br><span class="line">    res=mtdal.showformtid(tid)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> res:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;此电影类型不存在！&quot;</span>)</span><br><span class="line">        <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="built_in">print</span>(res[<span class="number">0</span>],res[<span class="number">1</span>],res[<span class="number">2</span>],datetime.datetime.strftime(res[<span class="number">3</span>],<span class="string">&quot;%Y年%m月%d日\n&quot;</span>))</span><br><span class="line"></span><br><span class="line">    tname=<span class="built_in">input</span>(<span class="string">&quot;请输入修改名称（若不修改则直接回车）：&quot;</span>)</span><br><span class="line">    tcontent=<span class="built_in">input</span>(<span class="string">&quot;请输⼊修改内容（若不修改则直接回车）：&quot;</span>)</span><br><span class="line">    mt=MovieType(tid,tname,tcontent)</span><br><span class="line">    res=mtdal.update(mt)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;res[<span class="number">0</span>]&#125;</span>个名称被修改，<span class="subst">&#123;res[<span class="number">1</span>]&#125;</span>个内容被修改&quot;</span>)</span><br><span class="line">    <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.删除电影类型信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">option3</span>():</span><br><span class="line">    tid=<span class="built_in">input</span>(<span class="string">&quot;请输入删除编号：&quot;</span>)</span><br><span class="line">    res1=mtdal.showformtid(tid)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> res1:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;此电影类型不存在！&quot;</span>)</span><br><span class="line">        <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n编号 名称 内容 创建⽇期&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(res1[<span class="number">0</span>],res1[<span class="number">1</span>],res1[<span class="number">2</span>],datetime.datetime.strftime(res1[<span class="number">3</span>],<span class="string">&quot;%Y年%m月%d日\n&quot;</span>))</span><br><span class="line">    esc=<span class="built_in">input</span>(<span class="string">&quot;确认要删除吗? y/n:&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> esc.lower() == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> esc.lower() == <span class="string">&#x27;yes&#x27;</span>:</span><br><span class="line">        res2=mtdal.delet(tid)</span><br><span class="line">        <span class="keyword">if</span> res2&gt;<span class="number">0</span> :</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;删除成功&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;删除失败&quot;</span>)</span><br><span class="line">    <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.显示所有电影类型信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">option4</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n编号 名称 内容 创建⽇期&quot;</span>)</span><br><span class="line">    res=mtdal.showall()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">        <span class="built_in">print</span>(i[<span class="number">0</span>],i[<span class="number">1</span>],i[<span class="number">2</span>],datetime.datetime.strftime(i[<span class="number">3</span>],<span class="string">&quot;%Y年%m月%d日&quot;</span>))</span><br><span class="line">    <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 0.退出系统</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">option0</span>():</span><br><span class="line">    esc=<span class="built_in">input</span>(<span class="string">&quot;请问是否退出? y/n:&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> esc.lower() == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> esc.lower() == <span class="string">&#x27;yes&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;已成功退出&quot;</span>)</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(menu)</span><br><span class="line">        option=<span class="built_in">input</span>(<span class="string">&quot;请输⼊操作选项：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> option==<span class="string">&quot;1&quot;</span>:</span><br><span class="line">            option1()</span><br><span class="line">        <span class="keyword">elif</span> option==<span class="string">&quot;2&quot;</span>:</span><br><span class="line">            option2()</span><br><span class="line">        <span class="keyword">elif</span> option==<span class="string">&quot;3&quot;</span>:</span><br><span class="line">            option3()</span><br><span class="line">        <span class="keyword">elif</span> option==<span class="string">&quot;4&quot;</span>:</span><br><span class="line">            option4()</span><br><span class="line">        <span class="keyword">elif</span> option==<span class="string">&quot;0&quot;</span>:</span><br><span class="line">            option0()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;无效操作，请重新输入！&quot;</span>)</span><br><span class="line">            <span class="built_in">input</span>(<span class="string">&quot;按下回车键继续..&quot;</span>)</span><br><span class="line">        </span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>6.5总结：html语言、前后端结合 app.py</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.5%E6%80%BB%E7%BB%93%EF%BC%9Ahtml%E8%AF%AD%E8%A8%80%E3%80%81%E5%89%8D%E5%90%8E%E7%AB%AF%E7%BB%93%E5%90%88%20app.py/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span>  #根标签</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span>  #头标签</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span>  #头标题标签，在<span class="tag">&lt;<span class="name">head</span>&gt;</span>标签⾥设置</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span>  #常⽤于指定⻚⾯编码，在<span class="tag">&lt;<span class="name">head</span>&gt;</span>标签内</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span>  #⻚⾯的内容基本上写在此标签内</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span> h1...h6  #标题标签</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>  #段落标签</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  #超级链接标签</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span>  #表格标签</span><br><span class="line">表单标签：<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span><span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span>表单元素控件<span class="tag">&lt;/<span class="name">form</span>&gt;</span>  #表单标签</span><br><span class="line"></span><br><span class="line">#表单元素控件  <span class="tag">&lt;<span class="name">input</span>&gt;</span> </span><br><span class="line">文本显示: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;动漫&quot;</span> <span class="attr">readonly</span>&gt;</span></span><br><span class="line">类型: number(step 0.1) date password</span><br><span class="line">提示功能: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span><span class="attr">placeholder</span>=<span class="string">&quot;请输入电影名称&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 下拉框标签  <span class="tag">&lt;<span class="name">select</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;tid&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>喜剧<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">selected</span>&gt;</span>动画<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 图片标签</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;static/p11.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 样式标签 style</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"> </span></span><br><span class="line"><span class="language-css">	<span class="selector-tag">body</span>&#123; <span class="attribute">margin</span>: <span class="number">0</span> auto; <span class="attribute">width</span>: <span class="number">800px</span>; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">&quot;static/bg.jpg&quot;</span>);</span></span><br><span class="line"><span class="language-css">		<span class="attribute">background-repeat</span>:no-repeat;</span></span><br><span class="line"><span class="language-css">		<span class="attribute">background-size</span>: cover;</span></span><br><span class="line"><span class="language-css">	&#125;</span></span><br><span class="line"><span class="language-css">	<span class="selector-tag">h1</span>&#123; <span class="attribute">color</span>: <span class="number">#258dcd</span>&#125;</span></span><br><span class="line"><span class="language-css">	<span class="selector-tag">a</span>&#123; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">background-color</span>: <span class="number">#258dcd</span>; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">color</span>: white; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">		<span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">		<span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">		<span class="comment">/*半透明*/</span></span></span><br><span class="line"><span class="language-css">		<span class="comment">/*background-color:rgba(55,55,55,0.5)*/</span></span></span><br><span class="line"><span class="language-css">	&#125;</span></span><br><span class="line"><span class="language-css">	<span class="selector-tag">table</span>,<span class="selector-tag">tr</span>,<span class="selector-tag">td</span>&#123; <span class="attribute">border</span>: <span class="number">2px</span> solid black; <span class="attribute">border-collapse</span>: collapse;&#125;</span></span><br><span class="line"><span class="language-css">	<span class="selector-tag">table</span>&#123; <span class="attribute">width</span>: <span class="number">100%</span> &#125;</span></span><br><span class="line"><span class="language-css">	<span class="selector-tag">td</span>&#123; <span class="attribute">text-align</span>: center; <span class="attribute">padding</span>: <span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="language-css">	<span class="selector-class">.tou</span>&#123; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">background-color</span>: <span class="number">#258dcd</span>; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">color</span>: white; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">font-size</span>: <span class="number">18px</span>; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">	&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><p>1.制作列表⻚： list.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>豆瓣网列表页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 全局样式设置 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置页面字体 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Segoe UI&#x27;</span>, Tahoma, Geneva, Verdana, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景图片路径 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-image: url(&quot;static/pbg1.jpg&quot;); */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-size</span>: cover;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景图片覆盖整个页面 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景图片居中显示 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 使用 Flexbox 布局 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 垂直排列子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 水平居中对齐子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: flex-start;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 垂直顶部对齐子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 最小高度为视口高度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 清除默认边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 盒模型包含内边距和边框 */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 标题颜色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加文字阴影 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">4px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 导航链接容器样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-links</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 使用 Flexbox 布局 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 水平居中对齐链接 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 链接之间的间距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">gap</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 小屏幕下自动换行 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 导航链接样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-links</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 文字颜色 - 白色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 去除下划线 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: background-color <span class="number">0.3s</span> ease;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色过渡动画 */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 悬停时背景色变深 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 导航链接悬停效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-links</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#1a6fa3</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 列表容器样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.movie-list</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 半透明白色背景 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加阴影效果 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 宽度为父容器的100% */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 最大宽度限制 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">max-width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 盒模型包含内边距和边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 表格样式优化 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">table</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 宽度为父容器的100% */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 合并边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-collapse</span>: collapse;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">th</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 单元格内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 文本居中对齐 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">th</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 表头背景色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 表头文字颜色 - 白色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 表头文字粗细 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">600</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 行悬停时背景色变浅 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">tr</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 操作按钮样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.action-btn</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 行内块元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 文字颜色 - 白色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 去除下划线 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色过渡动画 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: background-color <span class="number">0.3s</span> ease;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 悬停时背景色变深 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.action-btn</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#1a6fa3</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 响应式设计 - 小屏幕设备 */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.nav-links</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 缩小链接间距 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">gap</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.nav-links</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 减小链接内边距 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 减小链接文字大小 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">th</span>,</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 减小单元格内边距 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 减小文字大小 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.action-btn</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 减小按钮内边距 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">3px</span> <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 减小按钮文字大小 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 页面标题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎使用豆瓣网<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 导航链接区域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav-links&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/list&quot;</span>&gt;</span>电影类型列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/add&quot;</span>&gt;</span>添加电影类型<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/addMovie&quot;</span>&gt;</span>添加电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/zhu&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>查看柱状图<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;bing&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>查看饼状图<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 电影列表容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;movie-list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>创建日期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;% for i in info %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;i[0]&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;i[1]&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;i[2]&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;i[4]&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/update/&#123;&#123;i[0]&#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;action-btn&quot;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/delete/&#123;&#123;i[0]&#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;action-btn&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;action-btn&quot;</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.制作添加⻚： add.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>豆瓣网添加页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 全局样式设置 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置页面字体 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Segoe UI&#x27;</span>, Tahoma, Geneva, Verdana, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景图片路径 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-image: url(&quot;static/pbg1.jpg&quot;); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景图片覆盖整个页面 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-size</span>: cover;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景图片居中显示 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 使用 Flexbox 布局 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 垂直排列子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 水平居中对齐子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 垂直顶部对齐子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: flex-start;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 最小高度为视口高度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 清除默认边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 盒模型包含内边距和边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 页面标题样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 标题颜色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加文字阴影 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">4px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 导航链接容器样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-links</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 使用 Flexbox 布局 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 水平居中对齐链接 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 链接之间的间距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">gap</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 导航链接样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-links</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 文字颜色 - 白色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 去除下划线 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色过渡动画 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: background-color <span class="number">0.3s</span> ease;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 导航链接悬停效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-links</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 悬停时背景色变深 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#1a6fa3</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 图片样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 图片宽度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 最大宽度为父容器的90% */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">max-width</span>: <span class="number">90%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加阴影效果 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 表单容器样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 半透明白色背景 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加阴影效果 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 宽度为父容器的100% */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 最大宽度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">max-width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 表单内段落样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 使用 Flexbox 布局 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 垂直排列子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 表单标签样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> <span class="selector-tag">label</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 字体粗细 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">600</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 文字颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 文本输入框样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 边框样式 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 字体大小 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 提交按钮样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 文字颜色 - 白色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 无边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 鼠标指针样式 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 字体大小 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色过渡动画 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: background-color <span class="number">0.3s</span> ease;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 提交按钮悬停效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 悬停时背景色变深 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#1a6fa3</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 响应式设计 - 小屏幕设备 */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 添加内边距防止内容溢出 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.nav-links</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 链接换行显示 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 页面标题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎使用豆瓣网<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 导航链接区域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav-links&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/list&quot;</span>&gt;</span>电影类型列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/add&quot;</span>&gt;</span>添加电影类型<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/addMovie&quot;</span>&gt;</span>添加电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/zhu&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>查看柱状图<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;bing&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>查看饼状图<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 装饰图片 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;static/py11.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 添加电影类型表单 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/addSubmit&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;id&quot;</span>&gt;</span>编号：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tid&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span>名称：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tname&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;content&quot;</span>&gt;</span>内容：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tcontent&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;添加&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="使⽤-python-flask-mysql-html-三层架构开发⾖瓣⽹"><a href="#使⽤-python-flask-mysql-html-三层架构开发⾖瓣⽹" class="headerlink" title="使⽤ python+flask+mysql+html 三层架构开发⾖瓣⽹"></a>使⽤ python+flask+mysql+html 三层架构开发⾖瓣⽹</h2><p>电影类型列表页面</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.5%E6%80%BB%E7%BB%93%EF%BC%9Ahtml%E8%AF%AD%E8%A8%80%E3%80%81%E5%89%8D%E5%90%8E%E7%AB%AF%E7%BB%93%E5%90%88%20app.py/file-20250717190222930.png" class="">

<p>添加电影类型页面</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.5%E6%80%BB%E7%BB%93%EF%BC%9Ahtml%E8%AF%AD%E8%A8%80%E3%80%81%E5%89%8D%E5%90%8E%E7%AB%AF%E7%BB%93%E5%90%88%20app.py/file-20250717190233394.png" class="">

<p>添加成功</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.5%E6%80%BB%E7%BB%93%EF%BC%9Ahtml%E8%AF%AD%E8%A8%80%E3%80%81%E5%89%8D%E5%90%8E%E7%AB%AF%E7%BB%93%E5%90%88%20app.py/file-20250717190244689.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.5%E6%80%BB%E7%BB%93%EF%BC%9Ahtml%E8%AF%AD%E8%A8%80%E3%80%81%E5%89%8D%E5%90%8E%E7%AB%AF%E7%BB%93%E5%90%88%20app.py/file-20250717190302019.png" class="">

<p>修改页面</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.5%E6%80%BB%E7%BB%93%EF%BC%9Ahtml%E8%AF%AD%E8%A8%80%E3%80%81%E5%89%8D%E5%90%8E%E7%AB%AF%E7%BB%93%E5%90%88%20app.py/file-20250717190313571.png" class="">


<p>修改成功（测试仅修改内容，不修改名称）</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.5%E6%80%BB%E7%BB%93%EF%BC%9Ahtml%E8%AF%AD%E8%A8%80%E3%80%81%E5%89%8D%E5%90%8E%E7%AB%AF%E7%BB%93%E5%90%88%20app.py/file-20250717190324580.png" class="">

<p>删除操作（测试删除 3 功夫）</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.5%E6%80%BB%E7%BB%93%EF%BC%9Ahtml%E8%AF%AD%E8%A8%80%E3%80%81%E5%89%8D%E5%90%8E%E7%AB%AF%E7%BB%93%E5%90%88%20app.py/file-20250717190356349.png" class="">
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>6.9总结：Pandas、爬虫</title>
    <url>/2025/06/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.9%E6%80%BB%E7%BB%93%EF%BC%9APandas%E3%80%81%E7%88%AC%E8%99%AB/</url>
    <content><![CDATA[<h1 id="Python-API-接⼝开发⽤法介绍"><a href="#Python-API-接⼝开发⽤法介绍" class="headerlink" title="Python API 接⼝开发⽤法介绍"></a>Python API 接⼝开发⽤法介绍</h1><p>API （ Application Programming Interface ）是应⽤程序接⼝的简称</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义一个API接口</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&lt;a href=&#x27;/list&#x27;&gt;&lt;img src=&#x27;/static/py11.png&#x27;&gt;&lt;/a&gt;&quot;</span></span><br><span class="line"> <span class="comment"># 定义一个API接口</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/addSubmit&quot;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">addSubmit</span>():</span><br><span class="line">    tid = request.form.get(<span class="string">&quot;tid&quot;</span>)</span><br><span class="line">    tname = request.form.get(<span class="string">&quot;tname&quot;</span>)</span><br><span class="line">    tcontent=request.form.get(<span class="string">&quot;tcontent&quot;</span>)</span><br><span class="line">    leixing=MovieType(tid,tname,tcontent)</span><br><span class="line">    result=mtdal.insert(leixing)</span><br><span class="line">    <span class="keyword">if</span> result&gt;<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;插入成功 &lt;a href=&#x27;/list&#x27;&gt;刷新&lt;/a&gt;&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;插入失败 &lt;a href=&#x27;/list&#x27;&gt;刷新&lt;/a&gt;&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h1><p>Pandas 是 Python 语⾔的⼀个扩展程序库，⽤于数据分析。<br>Pandas 名字衍⽣⾃术语 “panel data” （⾯板数据）<br>Pandas 可以从各种⽂件格式⽐如 CSV 、 JSON 、 Excel </p>
<p>python 终端输⼊安装： </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple pandas</span><br></pre></td></tr></table></figure>

<h2 id="Pandas-数据结构-DataFrame"><a href="#Pandas-数据结构-DataFrame" class="headerlink" title="Pandas 数据结构  DataFrame"></a>Pandas 数据结构  DataFrame</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = &#123;<span class="string">&quot;Site&quot;</span>:[<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;Runoob&quot;</span>, <span class="string">&quot;Wiki&quot;</span>], <span class="string">&quot;Age&quot;</span>:[<span class="number">10</span>, <span class="number">12</span>, <span class="number">13</span>],<span class="string">&quot;sss&quot;</span>:[<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>]&#125;</span><br><span class="line">df = pd.DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(df.loc[<span class="number">1</span>]) <span class="comment">#一行</span></span><br><span class="line"><span class="built_in">print</span>(df.loc[[<span class="number">0</span>,<span class="number">1</span>]]) <span class="comment">#多行</span></span><br><span class="line"><span class="built_in">print</span>(df[<span class="string">&quot;Age&quot;</span>]) <span class="comment">#一列</span></span><br><span class="line"><span class="built_in">print</span>(df[[<span class="string">&quot;Age&quot;</span>,<span class="string">&quot;Site&quot;</span>]]) <span class="comment">#多列</span></span><br><span class="line"><span class="built_in">print</span>(df[<span class="string">&quot;Age&quot;</span>][<span class="number">1</span>]) <span class="comment"># 一个值</span></span><br><span class="line"><span class="built_in">print</span>(df[(df.Age&gt;<span class="number">11</span>) &amp; (df.sss&gt;<span class="number">35</span>)]) <span class="comment">#带条件筛选</span></span><br><span class="line"><span class="built_in">print</span>(df[(df.Age&gt;<span class="number">11</span>) &amp; (df.sss&gt;<span class="number">35</span>)][<span class="string">&quot;Age&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(df[(df.Age.astype(<span class="built_in">int</span>)&gt;<span class="number">11</span>) &amp; (df.sss&gt;<span class="number">35</span>)]) <span class="comment">#如果需要转换数据类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改值-查出来后，右侧给左侧赋值即可，不存在的列即为添加</span></span><br><span class="line">df[<span class="string">&quot;Age&quot;</span>]=<span class="number">100</span></span><br><span class="line">df[<span class="string">&quot;Age&quot;</span>][<span class="number">1</span>]=<span class="number">99</span></span><br><span class="line"> <span class="comment">#添加列</span></span><br><span class="line">df[<span class="string">&quot;tid&quot;</span>]=<span class="number">2</span></span><br><span class="line">df[<span class="string">&quot;Score&quot;</span>]=[<span class="number">90</span>,<span class="number">40</span>,<span class="number">99</span>]</span><br><span class="line">df.insert(<span class="number">1</span>,<span class="string">&quot;Sex&quot;</span>,[<span class="string">&quot;男&quot;</span>,<span class="string">&quot;女&quot;</span>,<span class="string">&quot;男&quot;</span>])</span><br><span class="line"> <span class="comment"># 1代表列 0代表行</span></span><br><span class="line">df.drop(<span class="number">1</span>,axis=<span class="number">0</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">df.drop([<span class="number">0</span>,<span class="number">1</span>],axis=<span class="number">0</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">df.drop(<span class="string">&quot;Age&quot;</span>,axis=<span class="number">1</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">df.drop(df[df.Age&gt;<span class="number">10</span>].index,axis=<span class="number">0</span>,inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

<h2 id="Pandas-处理-CSV-⽂件"><a href="#Pandas-处理-CSV-⽂件" class="headerlink" title="Pandas 处理 CSV ⽂件"></a>Pandas 处理 CSV ⽂件</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&quot;/root/shell/douban.csv&quot;</span>) </span><br><span class="line">df = df[[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;title&quot;</span>,<span class="string">&quot;rate&quot;</span>]] </span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/db.csv&quot;</span>,index=<span class="literal">False</span>) </span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/db.csv&quot;</span>,mode=<span class="string">&quot;a&quot;</span>, header=<span class="literal">False</span>, index=<span class="literal">False</span>) <span class="comment">#追加</span></span><br></pre></td></tr></table></figure>

<h2 id="Pandas-处理-JSON"><a href="#Pandas-处理-JSON" class="headerlink" title="Pandas 处理 JSON"></a>Pandas 处理 JSON</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd </span><br><span class="line">d2 = [ </span><br><span class="line">&#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;Year 1&quot;</span>, <span class="string">&quot;student number&quot;</span>: <span class="number">20</span>, <span class="string">&quot;room&quot;</span>: <span class="string">&quot;Yellow&quot;</span>&#125;, </span><br><span class="line">&#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;Year 2&quot;</span>, <span class="string">&quot;student number&quot;</span>: <span class="number">25</span>, <span class="string">&quot;room&quot;</span>: <span class="string">&quot;Blue&quot;</span>&#125; ] </span><br><span class="line">df = pd.DataFrame(d2) </span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure>

<h2 id="douban-txt-的文件处理"><a href="#douban-txt-的文件处理" class="headerlink" title="douban.txt 的文件处理"></a>douban.txt 的文件处理</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#内嵌的方法 </span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd </span><br><span class="line"><span class="keyword">import</span> json </span><br><span class="line">dict1=<span class="literal">None</span> </span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;douban.txt&quot;</span>,mode=<span class="string">&quot;r&quot;</span>,encoding=<span class="string">&quot;UTF-8&quot;</span>) <span class="keyword">as</span> f: </span><br><span class="line">	dict1 = json.loads(</span><br><span class="line">	f.read()) <span class="comment">#可以从文件读取过来 </span></span><br><span class="line">	f.close() </span><br><span class="line">df = pd.DataFrame(dict1[<span class="string">&quot;subjects&quot;</span>]) </span><br><span class="line">df=df[[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;rate&quot;</span>]] <span class="comment">#改变顺序和列数 </span></span><br><span class="line"><span class="built_in">print</span>(df) </span><br><span class="line">df.to_csv(<span class="string">&quot;doubanout1.csv&quot;</span>,index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<h2 id="Pandas-处理-excel-⽂件"><a href="#Pandas-处理-excel-⽂件" class="headerlink" title="Pandas 处理 excel ⽂件"></a>Pandas 处理 excel ⽂件</h2><p>sheet_name 指定了读取 excel ⾥⾯的哪⼀个 sheet<br>usecols 指定了读取哪些列<br>nrows 指定了总共读取多少⾏<br>header 指定了列名在第⼏⾏，并且只读取这⼀⾏往下的数据<br>index_col 指定了 index 在第⼏列<br>engine&#x3D;”openpyxl” 指定了使⽤什么引擎来读取 excel ⽂件</p>
<p>安装命令：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd </span><br><span class="line">df = pd.read_excel(<span class="string">&quot;student.xlsx&quot;</span>,sheet_name=<span class="string">&quot;Sheet1&quot;</span>,header=<span class="number">1</span>) </span><br><span class="line"><span class="built_in">print</span>(df) </span><br><span class="line">df.to_excel(<span class="string">&quot;student1.xlsx&quot;</span>,sheet_name=<span class="string">&quot;xs&quot;</span>,index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<h1 id="爬虫（requests）"><a href="#爬虫（requests）" class="headerlink" title="爬虫（requests）"></a>爬虫（requests）</h1><p>安装</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple requests </span><br><span class="line">pip3 install urllib3==<span class="number">1.26</span><span class="number">.15</span></span><br></pre></td></tr></table></figure>

<p>爬取一条数据<br>数据包的 headers ⾥⾯有我们需要的所有数据<br>数据包的 response ⾥⾯有我们要传递的 json 数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">headers=&#123;<span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.71 Safari/537.36&quot;</span>&#125; </span><br><span class="line">url=<span class="string">&quot;https://movie.douban.com/j/chart/top_list&quot;</span> </span><br><span class="line">params=&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;25&quot;</span>,<span class="string">&quot;interval_id&quot;</span>:<span class="string">&quot;100:90&quot;</span>,<span class="string">&quot;action&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;start&quot;</span>:<span class="string">&quot;0&quot;</span>,<span class="string">&quot;limit&quot;</span>:<span class="string">&quot;1&quot;</span>&#125; </span><br><span class="line">ck=&#123;<span class="string">&quot;Cookie&quot;</span>:<span class="string">&#x27;自己浏览器的&#x27;</span>&#125; </span><br><span class="line">response=requests.get(url=url,headers=headers,params=params,cookies=ck) </span><br><span class="line"><span class="built_in">print</span>(response.json())</span><br></pre></td></tr></table></figure>

<p>爬取所有数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">url1=<span class="string">&quot;https://movie.douban.com/j/chart/top_list&quot;</span></span><br><span class="line">params1=&#123;<span class="string">&quot;type&quot;</span>:<span class="number">20</span>,<span class="string">&quot;interval_id&quot;</span>:<span class="string">&quot;100:90&quot;</span>,<span class="string">&quot;action&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;start&quot;</span>:<span class="number">0</span>,<span class="string">&quot;limit&quot;</span>:<span class="number">400</span>&#125;</span><br><span class="line">header1=&#123;<span class="string">&quot;user-agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0&quot;</span>&#125;</span><br><span class="line">res=requests.get(url=url1,params=params1,headers=header1)</span><br><span class="line">content=res.json()</span><br><span class="line">df=pd.DataFrame(content)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure>

<h2 id="pandas-分析处理数据"><a href="#pandas-分析处理数据" class="headerlink" title="pandas 分析处理数据"></a>pandas 分析处理数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">content=response.json()</span><br><span class="line">df=pd.DataFrame(content)</span><br><span class="line">df=df[[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;title&quot;</span>,<span class="string">&quot;release_date&quot;</span>,<span class="string">&quot;score&quot;</span>]]</span><br><span class="line">df[<span class="string">&quot;tid&quot;</span>]=<span class="number">1</span></span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/movie.csv&quot;</span>,mode=<span class="string">&quot;a&quot;</span>,header=<span class="literal">False</span>,index=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去掉重复数据 去掉后面的</span></span><br><span class="line">df=pd.read_csv(<span class="string">&quot;/root/python/movie.csv&quot;</span>)</span><br><span class="line">df=df.drop_duplicates(subset=[<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;title&#x27;</span>,<span class="string">&#x27;release_date&#x27;</span>,<span class="string">&#x27;score&#x27;</span>])</span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/movie1.csv&quot;</span>,index=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改mysqlcsv.sh 导入到mysql数据库</span></span><br><span class="line">os.system(<span class="string">&quot;cp /root/python/movie1.csv /usr/local/mysql/data/movie1.csv&quot;</span>)</span><br><span class="line"> </span><br><span class="line">os.system(<span class="string">&quot;/root/shell/mysqlcsv.sh Movie /usr/local/mysql/data/movie1.csv&quot;</span>)</span><br></pre></td></tr></table></figure>

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>1.安装 postman ，测试添加电影类型接⼝是否正确 </p>
<ul>
<li>地址栏<a href="http://127.0.0.1:5000/addSubmit">http://127.0.0.1:5000/addSubmit</a></li>
<li>设置POST传递方式</li>
<li>设置Body中的x-www-form-urlencoded</li>
<li>填写数据后点击send提交</li>
</ul>
<img src="/2025/06/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.9%E6%80%BB%E7%BB%93%EF%BC%9APandas%E3%80%81%E7%88%AC%E8%99%AB/file-20250729195550673.png" class="">

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 2.创建以⽇期时间为名字的⽇志⽂件，格式如 20230303102030.log </span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">current_time = datetime.datetime.now()</span><br><span class="line">filename = current_time.strftime(<span class="string">&quot;%Y%m%d%H%M%S.log&quot;</span>)</span><br><span class="line">os.system(<span class="string">f&quot;touch /root/python/<span class="subst">&#123;filename&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.列表 [[&quot;Google&quot;,10],[&quot;Runoob&quot;,12],[&quot;Wiki&quot;,13]], 转成 DataFrame 数据打印 </span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data=[[<span class="string">&quot;Google&quot;</span>,<span class="number">10</span>],[<span class="string">&quot;Runoob&quot;</span>,<span class="number">12</span>],[<span class="string">&quot;Wiki&quot;</span>,<span class="number">13</span>]]</span><br><span class="line">df=pd.DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.将 [&#123;&quot;a&quot;: 1, &quot;b&quot;: 2&#125;,&#123;&quot;a&quot;: 5, &quot;b&quot;: 10, &quot;c&quot;: 20&#125;] 转成 DataFrame 数据，提取第 2 ⾏ a 那⼀列的数据 </span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data=[&#123;<span class="string">&quot;a&quot;</span>: <span class="number">1</span>, <span class="string">&quot;b&quot;</span>: <span class="number">2</span>&#125;,&#123;<span class="string">&quot;a&quot;</span>: <span class="number">5</span>, <span class="string">&quot;b&quot;</span>: <span class="number">10</span>, <span class="string">&quot;c&quot;</span>: <span class="number">20</span>&#125;]</span><br><span class="line">df=pd.DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(df.loc[<span class="number">1</span>,<span class="string">&quot;a&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.将 data = &#123;&quot;chinese&quot;: [89,97,68,56,88,77],&quot;math&quot;: [99,67,100,78,89,66],&quot;english&quot;: [73,57,89,90,82,55]&#125; 转成 DataFrame 数据 , 提取三科分数都及格的数据 </span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = &#123;<span class="string">&quot;chinese&quot;</span>: [<span class="number">89</span>,<span class="number">97</span>,<span class="number">68</span>,<span class="number">56</span>,<span class="number">88</span>,<span class="number">77</span>],</span><br><span class="line">        <span class="string">&quot;math&quot;</span>: [<span class="number">99</span>,<span class="number">67</span>,<span class="number">100</span>,<span class="number">78</span>,<span class="number">89</span>,<span class="number">66</span>],</span><br><span class="line">        <span class="string">&quot;english&quot;</span>: [<span class="number">73</span>,<span class="number">57</span>,<span class="number">89</span>,<span class="number">90</span>,<span class="number">82</span>,<span class="number">55</span>]</span><br><span class="line">&#125;</span><br><span class="line">df=pd.DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(df[(df.chinese&gt;<span class="number">60</span>) &amp; (df.math&gt;<span class="number">60</span>) &amp; (df.english&gt;<span class="number">60</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.使⽤ pandas 处理 douban.txt ，提取列 id,title,rate, 并且提取 rate ⼤于 7.5 的⾏导出 douban1.csv</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">dict1=<span class="literal">None</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/douban.txt&quot;</span>, mode=<span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    dict1 = json.loads(f.read())</span><br><span class="line"></span><br><span class="line">df=pd.DataFrame(dict1[<span class="string">&quot;subjects&quot;</span>])</span><br><span class="line">df=df[df.rate.astype(<span class="built_in">float</span>)&gt;<span class="number">7.5</span>][[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;title&quot;</span>,<span class="string">&quot;rate&quot;</span>]]</span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/douban1.csv&quot;</span>,index=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.把 order.xlsx 使⽤ mobox 传⼊到 /root/python 中，根据⽂档做如下操作 </span></span><br><span class="line"><span class="comment"># 把⽂档数据（从列名开始）转换为 dataframe 输出 </span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df=pd.read_excel(<span class="string">&quot;/root/python/order.xlsx&quot;</span>,sheet_name=<span class="string">&quot;Sheet1&quot;</span>,header=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"><span class="comment"># 在产品后⾯增加⼀列采购⼈，内容为 [&quot;坤坤&quot;,&quot;杰杰&quot;,&quot;坤坤&quot;,&quot;丽丽&quot;,&quot;丽丽&quot;,&quot;坤坤&quot;] </span></span><br><span class="line">df.insert(<span class="number">2</span>,<span class="string">&quot;采购人&quot;</span>,[<span class="string">&quot;坤坤&quot;</span>,<span class="string">&quot;杰杰&quot;</span>,<span class="string">&quot;坤坤&quot;</span>,<span class="string">&quot;丽丽&quot;</span>,<span class="string">&quot;丽丽&quot;</span>,<span class="string">&quot;坤坤&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看⾦额⼤于 100 的坤坤的订单列表 </span></span><br><span class="line"><span class="built_in">print</span>(df[(df.金额&gt;<span class="number">100</span>) &amp; (df.采购人==<span class="string">&quot;坤坤&quot;</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看⾦额⼤于 100 的坤坤的订单列表的产品及⾦额列 </span></span><br><span class="line">df=df[(df.金额&gt;<span class="number">100</span>) &amp; (df.采购人==<span class="string">&quot;坤坤&quot;</span>)][[<span class="string">&quot;产品&quot;</span>,<span class="string">&quot;金额&quot;</span>]]</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把上⼀步的结果另存为 order_kunkun.xlsx ，表单名称为坤坤，不显⽰索引，如下： </span></span><br><span class="line"><span class="comment"># 产品 ⾦额 </span></span><br><span class="line"><span class="comment"># 投影仪 2000 </span></span><br><span class="line"><span class="comment"># 打印机 298</span></span><br><span class="line">df.to_excel(<span class="string">&quot;/root/python/order_kunkun.xlsx&quot;</span>,sheet_name=<span class="string">&quot;坤坤&quot;</span>,index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>


<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 爬取⾄少五种电影类型（动画、科幻、恐怖）的电影追加到 csv ⽂件中</span></span><br><span class="line"><span class="comment"># 每次更换类型进行爬取需要修改params1的&quot;type&quot;:20中的数字（豆瓣网的），以及df[&quot;tid&quot;]=6的数字（自己网站对应类型的编号）</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">url1=<span class="string">&quot;https://movie.douban.com/j/chart/top_list&quot;</span></span><br><span class="line">params1=&#123;<span class="string">&quot;type&quot;</span>:<span class="number">20</span>,<span class="string">&quot;interval_id&quot;</span>:<span class="string">&quot;100:90&quot;</span>,<span class="string">&quot;action&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;start&quot;</span>:<span class="number">0</span>,<span class="string">&quot;limit&quot;</span>:<span class="number">400</span>&#125;</span><br><span class="line">header1=&#123;<span class="string">&quot;user-agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0&quot;</span>&#125;</span><br><span class="line">res=requests.get(url=url1,params=params1,headers=header1)</span><br><span class="line">content=res.json()</span><br><span class="line">df=pd.DataFrame(content)</span><br><span class="line">df=df[[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;title&quot;</span>,<span class="string">&quot;release_date&quot;</span>,<span class="string">&quot;score&quot;</span>]]</span><br><span class="line">df[<span class="string">&quot;tid&quot;</span>]=<span class="number">6</span></span><br><span class="line"><span class="comment"># df.to_csv(&quot;/root/python/getdouban.csv&quot;,index=False)  # 第一次执行,覆盖写</span></span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/getdouban.csv&quot;</span>,index=<span class="literal">False</span>,mode=<span class="string">&quot;a&quot;</span>,header=<span class="literal">False</span>)  <span class="comment">#添加数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把csv⾥⾯重复的数据去掉，导⼊到 mysql 数据库的 Movie 表中</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">df=pd.read_csv(<span class="string">&quot;/root/python/getdouban.csv&quot;</span>)</span><br><span class="line">df=df.drop_duplicates(subset=[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;title&quot;</span>,<span class="string">&quot;release_date&quot;</span>,<span class="string">&quot;score&quot;</span>])</span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/getdouban.csv&quot;</span>,index=<span class="literal">False</span>)</span><br><span class="line">os.system(<span class="string">&quot;cp /root/python/getdouban.csv /usr/local/mysql/data/getdouban.csv&quot;</span>)</span><br><span class="line">os.system(<span class="string">&quot;/root/python/mysqlcsv.sh Movie /usr/local/mysql/data/getdouban.csv&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># mysqlcsv.sh内容：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置mysql连接参数</span></span><br><span class="line">dbhost=<span class="string">&quot;127.0.0.1&quot;</span>  <span class="comment">#主机名</span></span><br><span class="line">dbprot=<span class="number">3306</span>  <span class="comment">#端口</span></span><br><span class="line">dbuser=<span class="string">&quot;root&quot;</span>  <span class="comment">#用户名</span></span><br><span class="line">dbpass=<span class="string">&quot;root123456&quot;</span>  <span class="comment">#密码</span></span><br><span class="line">db=<span class="string">&quot;test&quot;</span>  <span class="comment">#表空间</span></span><br><span class="line"><span class="comment">#导入数据</span></span><br><span class="line">sql3=<span class="string">&quot;&quot;&quot;LOAD DATA INFILE &#x27;$2&#x27; INTO TABLE $1</span></span><br><span class="line"><span class="string">CHARACTER SET utf8</span></span><br><span class="line"><span class="string">FIELDS TERMINATED BY &#x27;,&#x27;</span></span><br><span class="line"><span class="string">LINES TERMINATED BY &#x27;\n&#x27;</span></span><br><span class="line"><span class="string">IGNORE 1 LINES&quot;&quot;&quot;</span></span><br><span class="line">mysql -h$dbhost -P$dbprot -u$dbuser -p$dbpass $db -e  <span class="string">&quot;$sql3&quot;</span></span><br><span class="line">echo <span class="string">&quot;导入完成&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="其他Python库"><a href="#其他Python库" class="headerlink" title="其他Python库"></a>其他Python库</h1><h3 id="1-NumPy-Numerical-Python"><a href="#1-NumPy-Numerical-Python" class="headerlink" title="1. NumPy (Numerical Python)"></a><strong>1. NumPy (Numerical Python)</strong></h3><ul>
<li><strong>核心功能</strong>：提供多维数组对象（<code>ndarray</code>）、高效的数学函数、线性代数运算和随机数生成。</li>
<li><strong>应用场景</strong>：科学计算、数据分析、机器学习（如 TensorFlow 依赖 NumPy 数组）。</li>
<li><strong>优势</strong>：底层用 C 实现，运算速度极快，是众多科学库的基础。<strong>示例</strong>：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])  <span class="comment"># 创建一维数组</span></span><br><span class="line"><span class="built_in">print</span>(a.mean())  <span class="comment"># 计算平均值</span></span><br></pre></td></tr></table></figure>
<h3 id="2-Matplotlib"><a href="#2-Matplotlib" class="headerlink" title="2. Matplotlib"></a><strong>2. Matplotlib</strong></h3><ul>
<li><strong>核心功能</strong>：2D 绘图库，支持线图、散点图、柱状图、饼图等多种可视化类型。</li>
<li><strong>应用场景</strong>：数据可视化、论文图表、交互式绘图。</li>
<li><strong>搭配工具</strong>：常与<code>pandas</code>（数据处理）和<code>seaborn</code>（高级可视化）结合使用。</li>
<li><strong>示例</strong>：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">y = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">plt.plot(x, y)  <span class="comment"># 绘制线图</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<h3 id="3-unittest"><a href="#3-unittest" class="headerlink" title="3. unittest"></a><strong>3. unittest</strong></h3><ul>
<li><strong>核心功能</strong>：Python 内置的单元测试框架，支持测试用例、测试套件、断言等。</li>
<li><strong>应用场景</strong>：软件开发中的测试驱动开发（TDD）、代码质量保障。</li>
<li><strong>对比工具</strong>：类似<code>pytest</code>，但<code>unittest</code>更适合初学者和小型项目。</li>
<li><strong>示例</strong>：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">a, b</span>):</span><br><span class="line">	<span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestAdd</span>(unittest.TestCase):</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">test_add</span>(<span class="params">self</span>):</span><br><span class="line">		<span class="variable language_">self</span>.assertEqual(add(<span class="number">1</span>, <span class="number">2</span>), <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">	unittest.main()</span><br></pre></td></tr></table></figure>

<h3 id="4-Setuptools"><a href="#4-Setuptools" class="headerlink" title="4. Setuptools"></a><strong>4. Setuptools</strong></h3><ul>
<li><strong>核心功能</strong>：Python 包开发工具，用于打包、分发和安装 Python 项目。</li>
<li><strong>关键文件</strong>：<code>setup.py</code>（定义包元信息）、<code>requirements.txt</code>（依赖列表）。</li>
<li><strong>应用场景</strong>：发布开源库到 PyPI（Python Package Index）或内部使用。</li>
<li><strong>示例</strong>：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># setup.py</span></span><br><span class="line"><span class="keyword">from</span> setuptools <span class="keyword">import</span> setup, find_package</span><br><span class="line">	setup(</span><br><span class="line">		name=<span class="string">&#x27;mypackage&#x27;</span>,</span><br><span class="line">		version=<span class="string">&#x27;1.0.0&#x27;</span>,</span><br><span class="line">		packages=find_packages(),</span><br><span class="line">	)</span><br></pre></td></tr></table></figure>
<h3 id="5-Jupyter-Notebook"><a href="#5-Jupyter-Notebook" class="headerlink" title="5. Jupyter Notebook"></a><strong>5. Jupyter Notebook</strong></h3><ul>
<li><strong>核心功能</strong>：交互式计算环境，支持代码、Markdown 文本、公式和可视化混排。</li>
<li><strong>应用场景</strong>：数据分析、机器学习实验、学术论文写作（如 Jupyter Lab）。</li>
<li><strong>优势</strong>：实时运行代码，便于分享和演示，支持多种编程语言（通过内核）。</li>
<li><strong>启动命令</strong>：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jupyter notebook  <span class="comment"># 启动传统界面</span></span><br><span class="line">jupyter lab     <span class="comment"># 启动更现代化的Jupyter Lab</span></span><br></pre></td></tr></table></figure>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><table>
<thead>
<tr>
<th>库名</th>
<th>主要用途</th>
<th>典型场景</th>
</tr>
</thead>
<tbody><tr>
<td>NumPy</td>
<td>高性能数组计算</td>
<td>科学计算、AI 框架基础</td>
</tr>
<tr>
<td>Matplotlib</td>
<td>数据可视化</td>
<td>论文图表、交互式绘图</td>
</tr>
<tr>
<td>unittest</td>
<td>单元测试</td>
<td>代码质量保障</td>
</tr>
<tr>
<td>Setuptools</td>
<td>包打包与分发</td>
<td>发布 Python 库到 PyPI</td>
</tr>
<tr>
<td>Jupyter</td>
<td>交互式计算与文档</td>
<td>数据分析、学术研究</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>爬虫</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>6.6总结：电影表增删改查、模糊搜索</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/</url>
    <content><![CDATA[<p>查看不同电影类型的电影列表 </p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/file-20250717190721328.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/file-20250717190732808.png" class="">

<p>实现电影的添加 </p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/file-20250717190744377.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/file-20250717190755968.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/file-20250717190804970.png" class="">

<p>实现电影的修改</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/file-20250717190814810.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/file-20250717190824131.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/file-20250717190832812.png" class="">

<p>删除</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/file-20250717190840980.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/file-20250717190849970.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/file-20250717190858052.png" class="">

<p>电影类型列表⻚添加模糊搜索电影功能</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/file-20250717190907813.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/file-20250717190916110.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>4.28总结：安装环境、sql基础</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/4.28%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E3%80%81sql%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h1><p>PLSQL Developer 又称 sqlpuls<br>用户名：scott<br>密码：oracle</p>
<h2 id="虚拟机环境："><a href="#虚拟机环境：" class="headerlink" title="虚拟机环境："></a>虚拟机环境：</h2><p>打开虚拟机Windows7 x64.vmx<br>运行（win+r） cmd 输入 ipconfig 查看本机IP（IPv4）：192.168.48.128<br>开始菜单 Net Manager 修改 本地-服务器命名-orcl 和 监听程序- LISTENER 的 主机名 为本机IP （192.168.48.128）<br>进入 C:\oraclient\client64\bin\network\admin 以及 C:\oraclient\client64\network\admin 修改 listener.ora 和 tnsnames.ora 的 HOST（127.0.0.1）为本机IP</p>
<h2 id="本机环境："><a href="#本机环境：" class="headerlink" title="本机环境："></a>本机环境：</h2><p>安装sqlplus及汉化包<br>帮助-注册-输入许可证信息<br>将 instantclient_21_3 解压到D盘根目录<br>进入 D:\instantclient_21_3\network\admin 修改 tnsnames.ora 的 HOST 为虚拟机本机IP（192.168.48.128）<br>添加环境变量 变量名：TNS_ADMIN 变量值：D:\instantclient_21_3\network\admin<br>sqlplus-工具-首选项-连接<br>Oracle主目录：D:\instantclient_21_3<br>OCI库：D:\instantclient_21_3\oci.dll</p>
<h1 id="数据库相关术语"><a href="#数据库相关术语" class="headerlink" title="数据库相关术语"></a>数据库相关术语</h1><p>数据库（Database，DB）<br>数据库管理系统（Batabase Management System，DBMS）<br>结构化查询语言（Structured Query Language，SQL）<br>关系型数据库（Relational Database，RDB）：目前应用最广泛的数据库。<br>常见的五种关系型数据库管理系统：<br>① Oracle Database：甲骨文公司 （用得最多）<br>② SQL Server：微软公司<br>③ DB2：IBM 公司（巨贵）<br>④ PostgreSQL：开源<br>⑤ MySQL：开源</p>
<p>服务器：用于接收并处理其它程序发出的请求的程序（软件），或者是安装此类程 序的设备（计算机）。<br>客户端：向服务器发出请求的程序（软件），或者是安装此类程序的设备（计算 机）。<br>表（table）：类似 Excel，由行和列组成的二维表。行（Row）和列（Column） 字段：表中的列（垂直方向），叫做一个字段。<br>记录：表的行（水平方向），叫做一条记录。【注意】关系数据库必须以行为单位进行数据读写。<br>单元格：行列交汇处。【注意】与 Excel 不同，一个单元格只能输入一个数据。</p>
<h1 id="SQL相关"><a href="#SQL相关" class="headerlink" title="SQL相关"></a>SQL相关</h1><h2 id="SQL是什么？"><a href="#SQL是什么？" class="headerlink" title="SQL是什么？"></a>SQL是什么？</h2><p>结构化查询语言(Structured Query Language)，是数据库编程的核心语言。<br>SQL 语句：用关键字、表名和列名等组合而成的一条语句。</p>
<h3 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h3><ol>
<li>DQL（Data Query Language，数据查询语言）:一种用于从数据库中检索数据的语 言,代表关键字为select。 </li>
<li>DDL（Data Definition Language，数据定义语言）:用来创建数据库中的各种对象， 创建、删除、修改表的结构，代表关键字为create、drop、alter。 </li>
<li>DML（Data Manipulation Language，数据操作语言）:用于数据库中对数据的操 纵，代表关键字为insert、delete 、update。 </li>
<li>DCL（Data Control Language，数据控制语言）:用来授予或回收访问数据库的某种 特权。代表关键字为grant、revoke。 </li>
<li>TCL（Trasactional Control Languag, 事务控制语言）：用于维护数据的一致性，包 括commit、rollback和savepoint三条语句。</li>
</ol>
<h2 id="emp员工表列名"><a href="#emp员工表列名" class="headerlink" title="emp员工表列名"></a>emp员工表列名</h2><p>empno 员工编号<br>ename 员工姓名<br>job 员工工作<br>mgr 领导编号<br>hiredate 聘用日期<br>sal 工资<br>comm 奖金<br>deptno 部门编号<br>![[image 1.png]]</p>
<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>三击即可选中某一条sql代码（或使用home将光标移动到本行开始，再使用shift+end选中本行）<br>快捷键F8即可运行选中的代码</p>
<p>单行注释：–注释文字<br>多行注释：&#x2F;* 注释文字*&#x2F;</p>
<p>select查询语句显示的结果称为结果集（result set）</p>
<p>关键字、表名不区分大小写<br>selelct 后跟 列（字段），可选多个列，用逗号隔开，对列进行筛选；*代表所有列<br>from 后跟 表；表名加点可显示列名：emp.ename<br>where 后跟 条件判断式 ，对行进行筛选</p>
<p>单引号转义自己时输入两个单引号可显示一个单引号，且任一边的单引号数量须为奇数</p>
<h3 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h3><p>为查询显示的每个输出字段或表达式取一个别名，以增加结果集的可读性，易于理解列 的含义！相当于起个外号一样，别名的效果范围仅在该SQL语句范围内，别名并不会改 变本名（列：空格 或 as；表：空格）<br>select ename 姓名，sal as 工资 from emp e<br>ename列名起名为姓名，sal列名起名为工资，emp表名起为e</p>
<h3 id="去重-distinct"><a href="#去重-distinct" class="headerlink" title="去重 distinct"></a>去重 distinct</h3><p>加在列名前，单列完全去重（多列只会去完全相同的记录，因此列数越多去重效果越差）</p>
<h3 id="连接符"><a href="#连接符" class="headerlink" title="连接符 ||"></a>连接符 ||</h3><p>可将两个字段的字符串连接在一起，还可以在结果集中加入字符串（使用前提左边有值右边也有值）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> ename <span class="operator">||</span> <span class="string">&#x27;的工资是&#x27;</span> <span class="operator">||</span> sal <span class="operator">||</span> <span class="string">&#x27;元&#x27;</span> 工资信息 <span class="keyword">from</span> emp</span><br><span class="line"><span class="operator">!</span>[[image <span class="number">4.</span>png]]</span><br></pre></td></tr></table></figure>

<h3 id="虚拟表-dual-（做测试，看系统日期）"><a href="#虚拟表-dual-（做测试，看系统日期）" class="headerlink" title="虚拟表 dual （做测试，看系统日期）"></a>虚拟表 dual （做测试，看系统日期）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sysdate <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>

<h3 id="伪列-rownum"><a href="#伪列-rownum" class="headerlink" title="伪列 rownum"></a>伪列 rownum</h3><p>只能从1开始（rownum只能小于任何数和等于1）根据查询结果集生成的一个列，在物理上不真实存在</p>
<h3 id="rowid"><a href="#rowid" class="headerlink" title="rowid"></a>rowid</h3><p>在数据插入到在数据插入到表里的时候就生成的，真实一直存在，有点类似身份证，用于区分数据的唯一性</p>
<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">--1. 查询emp表中员工的名字和工资</span></span><br><span class="line"><span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--2. 查询emp表中员工的编号,名字,奖金</span></span><br><span class="line"><span class="keyword">select</span> empno, ename, comm <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--3. 查询部门编号和部门名称</span></span><br><span class="line"><span class="keyword">select</span> deptno, dname <span class="keyword">from</span> dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">--4. 查询员工名字和入职日期(列名中文显示 名字, 入职日期)</span></span><br><span class="line"><span class="keyword">select</span> ename 名字, hiredate 入职日期 <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--5. 查询员工编号，名字，经理编号</span></span><br><span class="line"><span class="keyword">select</span> empno,  ename, mgr <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--6. 查询公司里的所有部门的部门编号（去重）</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> deptno <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--7. 查询员工的姓名和工资，按这种格式显示：simth的工资是800块</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="operator">||</span> <span class="string">&#x27;的工资是&#x27;</span> <span class="operator">||</span> sal <span class="operator">||</span> <span class="string">&#x27;块&#x27;</span>  工资信息 <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--8. 使用虚拟表来查看系统日期</span></span><br><span class="line"><span class="keyword">select</span> sysdate <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="comment">--9. 查看员工表的前五条数据</span></span><br><span class="line"><span class="keyword">select</span> emp.<span class="operator">*</span>, rownum <span class="keyword">from</span> emp <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--10. 查看员工表的rowid</span></span><br><span class="line"><span class="keyword">select</span> emp.<span class="operator">*</span>,rowid <span class="keyword">from</span> emp;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>4.30总结：增删改查、操作符</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/4.30%E6%80%BB%E7%BB%93%EF%BC%9A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%93%8D%E4%BD%9C%E7%AC%A6/</url>
    <content><![CDATA[<h1 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h1><p>结构：增create 删drop 改alter 查select<br>数据：增insert 删delete 改update 查select</p>
<h2 id="alter-table-能够实现的功能"><a href="#alter-table-能够实现的功能" class="headerlink" title="alter table 能够实现的功能"></a>alter table 能够实现的功能</h2><p>alter都是基于表去修改</p>
<p>1.新增列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 <span class="keyword">add</span> 列名 类型(长度)[约束<span class="operator">&amp;</span>默认值]; </span><br><span class="line"><span class="keyword">alter table</span> student <span class="keyword">add</span> City varchar2(<span class="number">20</span>) <span class="keyword">not null</span>;</span><br></pre></td></tr></table></figure>
<p>2.修改列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 modify 列名 类型 [约束 默认值]; <span class="comment">--修改表中的列 </span></span><br><span class="line"><span class="keyword">alter table</span> student modify City <span class="type">varchar</span>(<span class="number">300</span>) <span class="keyword">unique</span> <span class="keyword">not null</span>; </span><br><span class="line"><span class="keyword">alter table</span> 表名 modify 列名 类型 <span class="keyword">null</span>; <span class="comment">--去掉列的非空约束 </span></span><br><span class="line"><span class="keyword">alter table</span> 表名 modify 列名 类型 <span class="keyword">not null</span>; <span class="comment">--给列添加非空约束 </span></span><br><span class="line"><span class="keyword">alter table</span> cjb modify xingming <span class="keyword">null</span></span><br></pre></td></tr></table></figure>
<p>3.删除列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 <span class="keyword">drop</span> <span class="keyword">column</span> 列名; <span class="comment">--删除表中的列 </span></span><br><span class="line"><span class="keyword">alter table</span> student <span class="keyword">drop</span> <span class="keyword">column</span> sname </span><br></pre></td></tr></table></figure>
<p>4.新的列定义默认值 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> student modify city <span class="keyword">default</span> <span class="string">&#x27;北京&#x27;</span>; </span><br></pre></td></tr></table></figure>
<p>5.重命名列 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 rename <span class="keyword">column</span> 旧列名 <span class="keyword">to</span> 新列名; </span><br></pre></td></tr></table></figure>
<p>6.将表更改为只读状态</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 READ <span class="keyword">ONLY</span>; <span class="comment">--改为只读状态</span></span><br><span class="line"><span class="keyword">alter table</span> 表名 READ WRITE; <span class="comment">--改回可编辑模式</span></span><br></pre></td></tr></table></figure>
<p>7.添加约束 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 <span class="keyword">add</span> 表级约束语法; <span class="comment">--给表添加表级约束 </span></span><br><span class="line"><span class="comment">--alter table 表名 add constraint 约束名 约束类型(列名)</span></span><br><span class="line"><span class="keyword">alter table</span> bm2 <span class="keyword">add constraint</span> bm2_zjys <span class="keyword">primary key</span>(deptno);</span><br><span class="line"><span class="keyword">alter table</span> emp <span class="keyword">add constraint</span> FK_DEPTNO <span class="keyword">foreign key</span> (deptno) <span class="keyword">references</span> DEPT (DEPTNO); </span><br><span class="line"><span class="keyword">alter table</span> emp <span class="keyword">add constraint</span> CK_sal <span class="keyword">check</span> sal (sal<span class="operator">&gt;</span><span class="number">800</span>) </span><br><span class="line"><span class="comment">--因非空约束不能使用表级约束语法，故添加非空约束需使用modify：</span></span><br><span class="line"><span class="keyword">alter table</span> bm2 modify loc varchar2(<span class="number">20</span>) <span class="keyword">not null</span>;</span><br></pre></td></tr></table></figure>
<p>8.删除约束 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 <span class="keyword">drop</span> <span class="keyword">constraint</span> 约束名; <span class="comment">--删除一个约束</span></span><br><span class="line"><span class="keyword">alter table</span> bm2 <span class="keyword">drop</span> <span class="keyword">constraint</span> BM2_ZJYS</span><br></pre></td></tr></table></figure>

<h2 id="insert-数据插入"><a href="#insert-数据插入" class="headerlink" title="insert 数据插入"></a>insert 数据插入</h2><ul>
<li>格式一：指定列插入数据，使用前提是不被插入的列可为空</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert into</span> bm3(deptno,loc) <span class="keyword">values</span>(<span class="number">50</span>,<span class="string">&#x27;七星区&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> bm3(deptno,dname,loc) <span class="keyword">values</span>(<span class="number">60</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;a&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>格式二：不指定列插入，默认所有列都需要值，如遇到不插入数据的列则用null值填充</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert into</span> bm3 <span class="keyword">values</span>(<span class="number">70</span>,<span class="string">&#x27;t&#x27;</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure>
<ul>
<li>格式三：只插入select查询结果集的数据,注意查询的结果集结构要保证和表结构一致</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert into</span> bm3(deptno,dname) <span class="keyword">select</span> deptno,dname <span class="keyword">from</span> scott.dept</span><br><span class="line"><span class="keyword">insert into</span> bm3 <span class="keyword">select</span> <span class="number">20</span>,<span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;z&#x27;</span> <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">insert into</span> bm3 <span class="keyword">select</span> deptno,ename,job <span class="keyword">from</span> scott.emp</span><br></pre></td></tr></table></figure>

<h2 id="update-修改"><a href="#update-修改" class="headerlink" title="update 修改"></a>update 修改</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> bm3 <span class="keyword">set</span> deptno<span class="operator">=</span><span class="number">80</span> <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">60</span></span><br><span class="line"><span class="keyword">update</span> bm3 <span class="keyword">set</span> dname<span class="operator">=</span><span class="string">&#x27;销售部门&#x27;</span>,loc<span class="operator">=</span><span class="string">&#x27;八星区&#x27;</span> <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">80</span> <span class="comment">--修改多项数据，逗号隔开</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--把WARD的工资改成和SMITH一样</span></span><br><span class="line"><span class="keyword">update</span> yg2 <span class="keyword">set</span> sal<span class="operator">=</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> yg2 <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;SMITH&#x27;</span>) <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;WARD&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="delete-删除的是数据"><a href="#delete-删除的是数据" class="headerlink" title="delete 删除的是数据"></a>delete 删除的是数据</h2><p>delete、insert只能以行为单位进行操作</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> yg2 <span class="keyword">where</span> empno<span class="operator">=</span><span class="number">7369</span></span><br><span class="line"><span class="keyword">alter table</span> yg2 <span class="keyword">drop</span> <span class="keyword">column</span> deptno</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> yg2 <span class="keyword">where</span> sal<span class="operator">&gt;</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> yg2 <span class="keyword">where</span> empno<span class="operator">=</span><span class="number">7499</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--删除表数据 DDL结构上的不能回滚 DML数据上的能回滚</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> yg2<span class="comment">--删除结构和数据，不能回滚</span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> yg2<span class="comment">--删除数据,不能回滚</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> yg2 <span class="comment">--删除数据，能回滚</span></span><br></pre></td></tr></table></figure>
<p>速度：drop&gt;truncate&gt;delete</p>
<h2 id="merge-融合"><a href="#merge-融合" class="headerlink" title="merge 融合"></a>merge 融合</h2><p>备份还原（仅一张表）<br>根据与源表联接的结果，对目标表执行插入、更新或删除操作。例如，根据在另一个表中找到的差异在一个表中插入、更新或删除行，可以对两个表进行同步。<br>merge也是数据上的属于DML</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">merge</span> <span class="keyword">into</span> 目标表</span><br><span class="line"><span class="keyword">Using</span> 备份表（源表）</span><br><span class="line"><span class="keyword">On</span> (<span class="keyword">values</span><span class="operator">=</span><span class="keyword">values</span>) </span><br><span class="line"><span class="keyword">When</span> matched <span class="keyword">then</span> <span class="keyword">update</span> 和 <span class="keyword">delete</span> </span><br><span class="line"><span class="keyword">When</span> <span class="keyword">not</span> matched <span class="keyword">then</span> <span class="keyword">insert</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--用源表sc1对目标表sc进行更新 </span></span><br><span class="line"><span class="keyword">merge</span> <span class="keyword">into</span> sc <span class="comment">--目标表（需要更新的表）</span></span><br><span class="line"><span class="keyword">using</span> sc1 <span class="comment">--源表（备份表）</span></span><br><span class="line"><span class="keyword">on</span>(sc.sno<span class="operator">=</span>sc1.sno <span class="keyword">and</span> sc.cno<span class="operator">=</span>sc1.cno)</span><br><span class="line"><span class="keyword">when</span> matched <span class="keyword">then</span> </span><br><span class="line"><span class="keyword">update</span> <span class="keyword">set</span> sc.score<span class="operator">=</span>sc1.score<span class="comment">--有值的时候去做更新</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">not</span> matched <span class="keyword">then</span> </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">values</span>(sc1.sno,sc1.cno,sc1.score)<span class="comment">--没值的时候直接插入</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">merge</span> <span class="keyword">into</span> table1</span><br><span class="line"><span class="keyword">using</span> table2</span><br><span class="line"><span class="keyword">on</span>(table1.id<span class="operator">=</span>table2.id)</span><br><span class="line"><span class="keyword">when</span> matched <span class="keyword">then</span> </span><br><span class="line"><span class="keyword">update</span> <span class="keyword">set</span> table1.setup_date<span class="operator">=</span>table2.setup_date</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">set</span> table1.mature_date<span class="operator">=</span>table2.mature_date</span><br><span class="line"><span class="keyword">when</span> <span class="keyword">not</span> matched <span class="keyword">then</span> </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">values</span>(table2.setup_date,table2.mature_date)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>update和delete同时带有where时，delete相当于继承上面的where条件再执行delete后面的条件</p>
<h1 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h1><ul>
<li>算术操作符：+ - * &#x2F; （加减乘除）<br>一般用与数字类型的运算，和日期加减运算</li>
<li>连接操作符: || (把多个列合并成一个列)</li>
<li>逻辑操作符: and、or、not (与、或、非)<br>一般用于多个条件判断式的连接<br>优先级：not&gt;and&gt;or (可用小括号改变优先级)</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--not 取反离自己最近的那个条件判断式</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">not</span> sal<span class="operator">&gt;</span><span class="number">2000</span> <span class="keyword">or</span> deptno<span class="operator">=</span><span class="number">20</span> <span class="keyword">and</span> job<span class="operator">=</span><span class="string">&#x27;MANAGER&#x27;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>比较操作符：&gt;、 &gt;&#x3D;、 &lt;、 &lt;&#x3D;、 &#x3D;、 !&#x3D; 、 &lt;&gt; 、any、all、between..and..、like、in、is null<br>（都是放在where后面做条件比较）</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span><span class="number">3000</span><span class="comment">--数字的大于不包含本身</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename<span class="operator">&gt;</span><span class="string">&#x27;C&#x27;</span><span class="comment">--字符的大于包含本身（比的是数据的首字母A..Z）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--any：只需满足与括号内任一内容比较的条件（大于最小值，小于最大值）</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span><span class="keyword">any</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span>) <span class="comment">--求工资大于20号部门任一工资的员工数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--all：必须满足与括号内所有内容比较的条件（大于最大值，小于最小值）</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span><span class="keyword">all</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span>) <span class="comment">--求工资大于所有20号部门的工资的员工数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--in：筛选出括号内的内容，功能相当于 =any</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sno <span class="keyword">in</span>(<span class="string">&#x27;s001&#x27;</span>,<span class="string">&#x27;s002&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--is null:判断为空值 </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">not null</span> <span class="comment">--非空</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--between..and..包含边界值，边界值得从小到大</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">950</span> <span class="keyword">and</span> <span class="number">3000</span></span><br></pre></td></tr></table></figure>
<p><strong>like</strong> 模糊搜索<br>在where子句中使用like关键字查询数据的方式也称为<strong>字符串模式匹配</strong>或<strong>字符串模糊查询</strong>，like关键字需要使用通配符在字符串内查找指定的模式，所以要了解常用的通配符。<br>Like关键字可以使用以下两个通配符：</p>
<ul>
<li>%：代表0或者多个字符 </li>
<li>_：代表一个且只能是一个字符<br>例如：<br>“k%”代表以k开头的任意长度的字符串；<br>“%k”代表以k结尾的任意长度的字符串；<br>“%k%”代表含有k字母的任意长度的字符串；<br>“_kk”代表3个字符长度且后面2个字符是kk的字符串<br>要查询的字符串中含有“%”或“”时，可以使用转义（escape）关键字实现：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> EMP <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%\_%&#x27;</span> <span class="keyword">escape</span> <span class="string">&#x27;\&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>上述查询语句中使用了”\”为转义字符，即在“\”之后的“_<em>”字符已不是通配符，而是他本来的含义，即下划线。因此该查询的结果为：含有“_</em>”，任意长度字符的字符串。<br>以上规则可复合使用（见练习17-20）</p>
<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--学生管理系统</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--1.将c002课程的成绩增加5分</span></span><br><span class="line"><span class="keyword">update</span> sc <span class="keyword">set</span> score<span class="operator">=</span>score<span class="operator">+</span><span class="number">5</span> <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c002&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--2.将c001课程成绩小于80分的同学的成绩增加10分</span></span><br><span class="line"><span class="keyword">update</span> sc <span class="keyword">set</span> score<span class="operator">=</span>score<span class="operator">+</span><span class="number">10</span> <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span> <span class="keyword">and</span> score<span class="operator">&lt;</span><span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.增加一个学生:学号&#x27;s013&#x27;，姓名：&#x27;王麻子&#x27;，年龄：28，性别：男</span></span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s013&#x27;</span>,<span class="string">&#x27;王麻子&#x27;</span>,<span class="number">28</span>,<span class="string">&#x27;男&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.创建一张和sc表相同的表，并将s001和s002学生的选课信息插入新表中</span></span><br><span class="line"><span class="keyword">create table</span> sc1 <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sno<span class="operator">=</span><span class="string">&#x27;s001&#x27;</span> <span class="keyword">or</span> sno<span class="operator">=</span><span class="string">&#x27;s002&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--5.将所有c001课程成绩不及格的同学的分数改为60分</span></span><br><span class="line"><span class="keyword">update</span> sc <span class="keyword">set</span> score<span class="operator">=</span><span class="number">60</span> <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span> <span class="keyword">and</span> score<span class="operator">&lt;</span><span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--6.删除“s002”同学的“c001”课程的信息记录</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sno<span class="operator">=</span><span class="string">&#x27;s002&#x27;</span> <span class="keyword">and</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span></span><br><span class="line"><span class="comment">--重新插入“s002”同学的“c001”课程的信息记录</span></span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s002&#x27;</span>,<span class="string">&#x27;c001&#x27;</span>,<span class="number">80.90</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.用sc1去更新sc，当学生和选修课程相同的时候，把sc1的分数更新到sc，不同的时候就插入到sc</span></span><br><span class="line"> <span class="keyword">merge</span> <span class="keyword">into</span> sc</span><br><span class="line"> <span class="keyword">using</span> sc1</span><br><span class="line"> <span class="keyword">on</span>(sc.sno<span class="operator">=</span>sc1.sno <span class="keyword">and</span> sc.cno<span class="operator">=</span>sc1.cno)</span><br><span class="line"> <span class="keyword">when</span> matched <span class="keyword">then</span></span><br><span class="line"> <span class="keyword">update</span> <span class="keyword">set</span> sc.score<span class="operator">=</span>sc1.score</span><br><span class="line"> <span class="keyword">when</span> <span class="keyword">not</span> matched <span class="keyword">then</span></span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">values</span>(sc1.sno,sc1.cno,sc1.score)</span><br><span class="line"> </span><br><span class="line"> <span class="comment">--操作符练习</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--1.查询名字是BLAKE的人的编号,名字,工资</span></span><br><span class="line"><span class="keyword">select</span> empno,ename,sal <span class="keyword">from</span> emp <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;BLAKE&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.查询编号是7782的员工的编号,名字,工资,奖金</span></span><br><span class="line"><span class="keyword">select</span> empno,ename,sal,comm <span class="keyword">from</span> emp <span class="keyword">where</span> empno<span class="operator">=</span><span class="number">7782</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.查询职位是销售(SALESMAN)的人的名字,职位,入职日期</span></span><br><span class="line"><span class="keyword">select</span> ename,job,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;SALESMAN&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--4.查询部门是10的人的编号,名字,部门编号</span></span><br><span class="line"><span class="keyword">select</span> empno,ename,deptno <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">10</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--5.查询工资大于1500,并且小于2500的人的编号,名字,工资</span></span><br><span class="line"><span class="keyword">select</span> empno,ename,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span><span class="number">1500</span> <span class="keyword">and</span> sal<span class="operator">&lt;</span><span class="number">2500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--6.查询工资小于2000的人的名字,工资,奖金</span></span><br><span class="line"><span class="keyword">select</span> ename,sal,comm <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&lt;</span><span class="number">2000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--7.求工作是CLERK的或者工资小于2000员工姓名,工作,工资</span></span><br><span class="line"><span class="keyword">select</span> ename,job,sal <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">or</span> sal<span class="operator">&lt;</span><span class="number">2000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--8.求工资小于800或者大于1500的员工姓名,工作,工资</span></span><br><span class="line"><span class="keyword">select</span> ename,job,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&lt;</span><span class="number">800</span> <span class="keyword">or</span> sal<span class="operator">&gt;</span><span class="number">1500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--9.求工作是CLERK,并且工资小于950或者大于1500的员工姓名,工作,工资</span></span><br><span class="line"><span class="keyword">select</span> ename,job,sal <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">and</span> (sal<span class="operator">&lt;</span><span class="number">950</span> <span class="keyword">or</span> sal<span class="operator">&gt;</span><span class="number">1500</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--10.求10号部门工资大于1000和20号部门工资大于1500的员工姓名</span></span><br><span class="line"> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">10</span> <span class="keyword">and</span> sal<span class="operator">&gt;</span><span class="number">1000</span> <span class="keyword">or</span> deptno<span class="operator">=</span><span class="number">20</span> <span class="keyword">and</span> sal<span class="operator">&gt;</span><span class="number">1500</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--11.求工资在1500到2000之间的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">1500</span> <span class="keyword">and</span> <span class="number">2000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--12.求部门编号是10号，20号，30号中任意一个部门的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span>(<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--13.求姓名中包含&#x27;M&#x27;的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%M%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--14.求员工姓名第二位是&#x27;M&#x27;的员工姓名</span></span><br><span class="line"> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;_M%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--15.求姓名中包含A和L的姓名</span></span><br><span class="line"> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%A%&#x27;</span> <span class="keyword">and</span> ename <span class="keyword">like</span> <span class="string">&#x27;%L%&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--16.求姓名是五位的员工信息</span></span><br><span class="line"><span class="keyword">select</span>  <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;_____&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--17.求姓名中第3位是%的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;__\%%&#x27;</span> <span class="keyword">escape</span> <span class="string">&#x27;\\&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--18.求第一位是_,倒数第二位也是_的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;\_%&#x27;</span> <span class="keyword">and</span> ename <span class="keyword">like</span> <span class="string">&#x27;%\__&#x27;</span> <span class="keyword">escape</span> <span class="string">&#x27;\ &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--19.求以_开头,第三位也是下划线_,第六位是%的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;\__\___\%%&#x27;</span> <span class="keyword">escape</span> <span class="string">&#x27;\ &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--20.求名字中不包含M的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">&#x27;%M%&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>4.29总结：数据类型、建表</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/4.29%E6%80%BB%E7%BB%93%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E5%BB%BA%E8%A1%A8/</url>
    <content><![CDATA[<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/4.29%E6%80%BB%E7%BB%93%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E5%BB%BA%E8%A1%A8/file-20250729193857062.png" class="">

<p><strong>字符类型</strong><br>char：用于存储 固定长度 的字符串。最大长度为2000个字节。<br>varchar2：用于存储字符串数据。会根据实际数据的长度自动调整，因此在大多数情况下都会使用varchar2类型。最大长度是4000个字节。<br><em>中文（包括符号）占两个字节，英文占一个</em></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> length(<span class="string">&#x27;字符串a，&#x27;</span>) <span class="keyword">from</span> dual <span class="comment">--结果5（不区分中文）</span></span><br><span class="line"><span class="keyword">select</span> lengthb(<span class="string">&#x27;字符串a，&#x27;</span>) <span class="keyword">from</span> dual <span class="comment">--结果9（区分中文）</span></span><br></pre></td></tr></table></figure>

<p>**数值类型 **<br>number：具有精度和范围两个参数。精度指定所有数字位的个数，范围指定小数的位数。 如number（7,2）总位数7位，其中2位是小数，小数点前有5位整数，小数位数不能超过总位数。字符类型原理上不能用于运算，因此需要运算的数据需要使用number类型</p>
<p>**日期时间类型 **<br>date：可以存储日期和时间的组合数据。结合oracle提供的日期时间函数便地处理数据。日期可直接加减，不能乘除，加的是日期</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sysdate<span class="operator">+</span><span class="number">365</span> <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>
<p>timestamp：时间戳类型,可存放世纪、纪元、年、月、日、时、分、秒还可以存放秒后6 位。 一般只有对时间要求比较严格的业务（如话费计费）才用</p>
<p><strong>CLOB&#x2F;BLOB</strong><br>CLOB：大文本文件类型，可存放word,excel等文档。<br>BLOB：二进制文件类型，可存放视频、音频等。</p>
<h2 id="三大范式-（面试会问）"><a href="#三大范式-（面试会问）" class="headerlink" title="三大范式 （面试会问）"></a>三大范式 （面试会问）</h2><ul>
<li><strong>第一范式</strong>：原子性的，不可分。 （列尽可能细分）所谓第一范式（1NF）是指数据库表的每一列都是不可分割的基本数据项，同一列中不能有多个值，即实体中的某个属性不能有多个值或者不能有重复的属性。 </li>
<li><strong>第二范式</strong>：要求实体的属性完全依赖于主关键字。<em>（一张表只做一件事）</em> 所谓完全依赖是指不能存在仅依赖主关键字一部分的属性，如果存在，那么这个属性和主关键字的这一部分应该分离出来形成一个新的实体，新实体与原实体之间是一对多的关系。为实现区分通常需要为表加上一个列，以存储各个实例的唯一标识。 </li>
<li><strong>第三范式</strong> ：属性不依赖于其它非主属性。<em>（关系近）</em> 第三范式（3NF）要求一个数据库表中不包含已在其它表中已包含的非主关键字信息。 满足第三范式（3NF）必须先满足第二范式（2NF）。</li>
</ul>
<h2 id="数据存储方式"><a href="#数据存储方式" class="headerlink" title="数据存储方式"></a>数据存储方式</h2><p>oracle数据库的存储结构可以分为逻辑存储结构和物理存储结构,对于这两种存储结构， oracle是分别进行管理的。</p>
<p><strong>逻辑存储结构</strong>：oracle内部的组织和管理数据的方式。<br>oracle在逻辑上将保存的数据划分为一个个小单元来进行存储和维护，更高一级的逻辑存储结构都是由这些基本的小单元组成的。 逻辑结构类型按照尺寸从小到大分可分为：块(block)–&gt;区(extent)–&gt;段(segment)–&gt;表空间(tablespace）</p>
<p><strong>物理存储结构</strong>：oracle外部（操作系统）组织和管理数据的方式。<br>Oracle数据库逻辑上由一个或多个表空间组成，每个表空间在物理上由一个或多个数据 文件组成，而每个数据文件是有数据块构成的。所以，逻辑上数据存放在表空间中，而物理上存储在表空间所对应的数据文件中。<br>构成数据库物的物理文件主要有三种： </p>
<ul>
<li>数据文件：存放数据库数据。 </li>
<li>控制文件：存放数据库的基本信息，告诉数据库到哪里找到数据文件和重做日志文件等。对数据库的成功启动和正常运行是很重要的。 </li>
<li>重做日志文件：存放对数据的改变。至少两组，Oracle以循环方式来使用它们。</li>
</ul>
<h1 id="表和表空间的关系"><a href="#表和表空间的关系" class="headerlink" title="表和表空间的关系"></a>表和表空间的关系</h1><p>表空间是由若干个数据段组成，存放表，视图，索引等。一个表只能属于一个表空间， 一个表空间可以放任意多个表，一个表空间至少有一个存储文件（.dbf结尾的文件），可以有多个，而且这多个数据文件可以在不同位置，一个用户有一个默认的表空间，一个用户可以在默认表空间外的其它表空间建表。</p>
<h2 id="创建表空间"><a href="#创建表空间" class="headerlink" title="创建表空间"></a>创建表空间</h2><p>create tablespace 表空间名 datafile ‘数据文件路径’ size 初始大小（2G） autoextend on next 每次扩展的大小(100M) maxsize 最大容量（unlimited）;</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> tablespace huangwenzhe429 <span class="comment">--真的表空间名</span></span><br><span class="line">datafile <span class="string">&#x27;C:\workspace\sql\huangwenzhe429.dbf&#x27;</span> <span class="comment">--生成的文件名，可以不同，但建议与表空间名一样，数据库所在系统（虚拟机环境）应有对应路径</span></span><br><span class="line">size <span class="number">100</span>M autoextend <span class="keyword">on</span> next <span class="number">50</span>M maxsize unlimited;</span><br><span class="line"><span class="comment">--起始空间100M，用完后自动分配50M,最大空间无限</span></span><br></pre></td></tr></table></figure>
<p>登录system管理员给用户权限（管理员用户名：system）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--grant 权限 to 用户名;</span></span><br><span class="line"><span class="keyword">grant</span> dba <span class="keyword">to</span> scott <span class="comment">--给scott用户管理员权限</span></span><br><span class="line"><span class="keyword">grant</span> resource,<span class="keyword">connect</span> <span class="keyword">to</span> scott; <span class="comment">--连接权限和资源权限 </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">any</span> <span class="keyword">table</span> <span class="keyword">to</span> scott; <span class="comment">--建表权限 </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">any</span> tablespace <span class="keyword">to</span> scott; <span class="comment">--建表空间权限 </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">any</span> <span class="keyword">table</span> <span class="keyword">to</span> scott; <span class="comment">--只读权限 </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">any</span> <span class="keyword">view</span> <span class="keyword">to</span> scott; <span class="comment">--创建视图权限 </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">any</span> <span class="keyword">table</span> <span class="keyword">to</span> scott; <span class="comment">--预编译表的权限</span></span><br><span class="line"><span class="comment">--查看角色权限信息 </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> role_sys_privs; </span><br></pre></td></tr></table></figure>
<p>用户权限对比表： <a href="https://blog.csdn.net/weixin_36470210/article/details/116318174">https://blog.csdn.net/weixin_36470210/article/details/116318174</a></p>
<h2 id="创建临时表空间"><a href="#创建临时表空间" class="headerlink" title="创建临时表空间"></a>创建临时表空间</h2><p><em>一般存放select查询出来的虚拟表</em></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> temporary tablespace huangwenzheTemp429 </span><br><span class="line">tempfile <span class="string">&#x27;C:\workspace\sql\huangwenzheTemp429.dbf&#x27;</span> </span><br><span class="line">size <span class="number">100</span>M autoextend <span class="keyword">on</span> next <span class="number">50</span>M maxsize unlimited;</span><br></pre></td></tr></table></figure>
<h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><p>create user 用户名 identified by 密码 default tablespace 表空间名 temporary tablespace 临时表空间名;<br><em>default后面的语句是为用户指定默认表空间和临时表空间，如果不指定，默认的表空间 是users表空间，临时表空间是temp</em></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> huangwenzhe <span class="comment">--用户名</span></span><br><span class="line">identified <span class="keyword">by</span> oracle <span class="comment">--密码</span></span><br><span class="line"><span class="keyword">default</span> tablespace huangwenzhe429 <span class="comment">--表空间名</span></span><br><span class="line">temporary tablespace huangwenzheTemp429;  <span class="comment">--临时表空间名</span></span><br></pre></td></tr></table></figure>
<h2 id="删除表空间"><a href="#删除表空间" class="headerlink" title="删除表空间"></a>删除表空间</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> tablespace huangwenzhe including contents;</span><br></pre></td></tr></table></figure>
<p><em>including contents选项用于删除表空间时包含其内容。如果不使用这个选项，表空间会 被删除，但数据文件仍然存在，磁盘空间不会被释放。使用这个选项可以确保表空间及 其内容被完全删除，从而释放磁盘空间</em></p>
<h2 id="命令窗口登陆数据库"><a href="#命令窗口登陆数据库" class="headerlink" title="命令窗口登陆数据库"></a>命令窗口登陆数据库</h2><p>sqlplus 用户名&#x2F;密码@数据库<br>sqlplus scott&#x2F;oracle@orcl<br><em>（此处不需要分号，但命令窗口写sql语句结束一定要加分号）</em><br>![[Pasted image 20250429122129.png]]<br><em>命令窗口操作数据库应在数据库所在系统（虚拟机环境）中进行</em></p>
<h2 id="扩容表空间"><a href="#扩容表空间" class="headerlink" title="扩容表空间"></a>扩容表空间</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> tablespace huangwenzhe429 </span><br><span class="line"><span class="keyword">add</span> datafile <span class="string">&#x27;C:\workspace\sql\huangwenzhe429.dbf&#x27;</span> </span><br><span class="line">size <span class="number">100</span>m autoextend <span class="keyword">on</span> next <span class="number">10</span>m maxsize unlimited;</span><br></pre></td></tr></table></figure>

<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>system登录报错： ORA-01017（用户名&#x2F;口令无效; 登录被拒绝）<br>打开cmd命令窗，输入sqlplus &#x2F; as sysdba<br>1.修改密码：alter user 用户名 identified by 密码;<br>2.用户被锁定，解锁：alter user 用户名 account unlock;</p>
<h1 id="建表相关"><a href="#建表相关" class="headerlink" title="建表相关"></a>建表相关</h1><p>三大数据类型：number  varchar2  date</p>
<p><strong>六大约束</strong></p>
<ul>
<li>not null 非空约束  </li>
<li>unique 唯一约束  </li>
<li>primary key 主键约束（非空&amp;唯一）</li>
<li>default 默认约束</li>
<li>check 检查约束（唯一带条件判断的约束）</li>
<li>references 外键约束</li>
</ul>
<p>有外键约束的表为从表，没有的为主表，建表先主后从，删表先从后主</p>
<p>重复数据 &#x3D; 冗余数据<br>null &#x3D; 空<br>列名不应使用会高亮的关键字</p>
<h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create table</span> bm(  <span class="comment">--表名为bm</span></span><br><span class="line">	bmno number(<span class="number">4</span>) <span class="keyword">primary key</span>,</span><br><span class="line">	bmmc varchar2(<span class="number">20</span>) <span class="keyword">unique</span>,</span><br><span class="line">	bmdz varchar2(<span class="number">20</span>) <span class="keyword">not null</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--列级约束</span></span><br><span class="line"><span class="keyword">create table</span> yg( <span class="comment">--表名为yg</span></span><br><span class="line">	ygno number(<span class="number">6</span>) <span class="keyword">primary key</span>, <span class="comment">--主键约束</span></span><br><span class="line">	ygxm varchar2(<span class="number">20</span>) <span class="keyword">not null</span>, <span class="comment">--非空约束</span></span><br><span class="line">	job varchar2(<span class="number">20</span>) <span class="keyword">not null</span>, <span class="comment">--not null无法使用表级约束</span></span><br><span class="line">	rzrq <span class="type">date</span> <span class="keyword">default</span> sysdate, <span class="comment">--默认约束，默认为当前日期</span></span><br><span class="line">	gz number(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">check</span>(gz<span class="operator">&gt;=</span><span class="number">1500</span>), <span class="comment">--唯一一个带条件判断的约束</span></span><br><span class="line">	bmno number(<span class="number">4</span>) <span class="keyword">references</span> bm(bmno), <span class="comment">--外键约束</span></span><br><span class="line">	<span class="keyword">constraint</span> zjys <span class="keyword">primary key</span>(ygno), <span class="comment">--表级约束</span></span><br><span class="line">	<span class="keyword">constraint</span> wjys <span class="keyword">foreign key</span>(bmno) <span class="keyword">references</span> bm(bmno)</span><br><span class="line">	<span class="comment">--表级约束语法</span></span><br><span class="line">	<span class="comment">--constraint 约束名 约束类型(列名)</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--复合主键必须用表级约束</span></span><br><span class="line"><span class="keyword">create table</span> cj(</span><br><span class="line">	sno number(<span class="number">5</span>),</span><br><span class="line">	course varchar2(<span class="number">20</span>),</span><br><span class="line">	score number(<span class="number">6</span>,<span class="number">3</span>),</span><br><span class="line">	<span class="keyword">constraint</span> fhzj <span class="keyword">primary key</span>(sno,course)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建一个和select查询语句查询结果一样的表（包括结构和数据）</span></span><br><span class="line"><span class="keyword">create table</span> bm3 <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.dept</span><br></pre></td></tr></table></figure>

<h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert into</span> bm <span class="keyword">values</span>(<span class="number">10</span>,<span class="string">&#x27;销售部门&#x27;</span>,<span class="string">&#x27;桂林市&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> bm</span><br></pre></td></tr></table></figure>

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><h2 id="表空间"><a href="#表空间" class="headerlink" title="表空间"></a>表空间</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--创建表空间</span></span><br><span class="line"><span class="keyword">create</span> tablespace huangwenzhe429 </span><br><span class="line">datafile <span class="string">&#x27;C:\workspace\sql\huangwenzhe429.dbf&#x27;</span> </span><br><span class="line">size <span class="number">100</span>M autoextend <span class="keyword">on</span> next <span class="number">50</span>M maxsize unlimited;</span><br><span class="line"></span><br><span class="line"><span class="comment">--给予管理员权限</span></span><br><span class="line"><span class="keyword">grant</span> dba <span class="keyword">to</span> scott;</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建临时表空间</span></span><br><span class="line"><span class="keyword">create</span> temporary tablespace huangwenzheTemp429 </span><br><span class="line">tempfile <span class="string">&#x27;C:\workspace\sql\huangwenzheTemp429.dbf&#x27;</span> </span><br><span class="line">size <span class="number">100</span>M autoextend <span class="keyword">on</span> next <span class="number">50</span>M maxsize unlimited;</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建用户</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> huangwenzhe</span><br><span class="line">identified <span class="keyword">by</span> oracle </span><br><span class="line"><span class="keyword">default</span> tablespace huangwenzhe429 </span><br><span class="line">temporary tablespace huangwenzheTemp429;</span><br><span class="line"></span><br><span class="line"><span class="comment">--给予用户管理员权限</span></span><br><span class="line"><span class="keyword">grant</span> dba <span class="keyword">to</span> huangwenzhe;</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看别的用户的表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.emp;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">--删除表空间</span></span><br><span class="line"><span class="keyword">drop</span> tablespace huangwenzhe429 including contents;</span><br></pre></td></tr></table></figure>

<h2 id="学生管理系统"><a href="#学生管理系统" class="headerlink" title="学生管理系统"></a>学生管理系统</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--创建teacher表</span></span><br><span class="line"><span class="keyword">create table</span> teacher(</span><br><span class="line">       TNO varchar2(<span class="number">10</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       TNAME varchar2(<span class="number">20</span>) <span class="keyword">not null</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入teacher数据</span></span><br><span class="line"><span class="keyword">insert into</span> teacher <span class="keyword">values</span>(<span class="string">&#x27;t001&#x27;</span>,<span class="string">&#x27;刘阳&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> teacher <span class="keyword">values</span>(<span class="string">&#x27;t002&#x27;</span>,<span class="string">&#x27;谌燕&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> teacher <span class="keyword">values</span>(<span class="string">&#x27;t003&#x27;</span>,<span class="string">&#x27;胡明星&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看/删除teacher表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> teacher</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> teacher</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建student表</span></span><br><span class="line"><span class="keyword">create table</span> student(</span><br><span class="line">       SNO varchar2(<span class="number">20</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       SNAME varchar2(<span class="number">30</span>),</span><br><span class="line">       SAGE number(<span class="number">2</span>) <span class="keyword">check</span>(SAGE <span class="keyword">between</span> <span class="number">6</span> <span class="keyword">and</span> <span class="number">40</span>),</span><br><span class="line">       SSEX varchar2(<span class="number">5</span>) <span class="keyword">default</span> <span class="string">&#x27;男&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入student数据</span></span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s001&#x27;</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">23</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s002&#x27;</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">23</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s003&#x27;</span>,<span class="string">&#x27;吴鹏&#x27;</span>,<span class="number">25</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s004&#x27;</span>,<span class="string">&#x27;琴沁&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s005&#x27;</span>,<span class="string">&#x27;王丽&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s006&#x27;</span>,<span class="string">&#x27;李波&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s007&#x27;</span>,<span class="string">&#x27;刘玉&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s008&#x27;</span>,<span class="string">&#x27;萧蓉&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s009&#x27;</span>,<span class="string">&#x27;陈萧晓&#x27;</span>,<span class="number">23</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s010&#x27;</span>,<span class="string">&#x27;陈美&#x27;</span>,<span class="number">22</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s12&#x27;</span>,<span class="string">&#x27;谢丰琴&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s13&#x27;</span>,<span class="string">&#x27;谢中菊&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;谢一才&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看/删除student表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> student</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建course表</span></span><br><span class="line"><span class="keyword">create table</span> course(</span><br><span class="line">       CNO varchar2(<span class="number">10</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       CNAME varchar2(<span class="number">30</span>),</span><br><span class="line">       TNO varchar2(<span class="number">20</span>) <span class="keyword">references</span> teacher(tno)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入course数据</span></span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c001&#x27;</span>,<span class="string">&#x27;J2SE&#x27;</span>,<span class="string">&#x27;t002&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c002&#x27;</span>,<span class="string">&#x27;Java Web&#x27;</span>,<span class="string">&#x27;t002&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c003&#x27;</span>,<span class="string">&#x27;SSH&#x27;</span>,<span class="string">&#x27;t001&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c004&#x27;</span>,<span class="string">&#x27;Oracle&#x27;</span>,<span class="string">&#x27;t001&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c005&#x27;</span>,<span class="string">&#x27;SQL SERVER 2005&#x27;</span>,<span class="string">&#x27;t003&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c006&#x27;</span>,<span class="string">&#x27;C#&#x27;</span>,<span class="string">&#x27;t003&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c007&#x27;</span>,<span class="string">&#x27;JavaScript&#x27;</span>,<span class="string">&#x27;t002&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c008&#x27;</span>,<span class="string">&#x27;DIV+CSS&#x27;</span>,<span class="string">&#x27;t001&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c009&#x27;</span>,<span class="string">&#x27;PHP&#x27;</span>,<span class="string">&#x27;t003&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c010&#x27;</span>,<span class="string">&#x27;EJB3.0&#x27;</span>,<span class="string">&#x27;t002&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看/删除course表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> course</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> course</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建sc表</span></span><br><span class="line"><span class="keyword">create table</span> sc(</span><br><span class="line">       SNO varchar2(<span class="number">10</span>) <span class="keyword">references</span> student(sno),</span><br><span class="line">       CNO varchar2(<span class="number">10</span>) <span class="keyword">references</span> course(cno),</span><br><span class="line">       SCORE number(<span class="number">5</span>,<span class="number">2</span>) <span class="keyword">check</span>(SCORE <span class="keyword">between</span> <span class="number">0</span> <span class="keyword">and</span> <span class="number">100</span>),</span><br><span class="line">       <span class="keyword">constraint</span> fhzj <span class="keyword">primary key</span>(sno,cno)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入sc数据</span></span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s001&#x27;</span>,<span class="string">&#x27;c001&#x27;</span>,<span class="number">78.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s002&#x27;</span>,<span class="string">&#x27;c001&#x27;</span>,<span class="number">80.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s003&#x27;</span>,<span class="string">&#x27;c001&#x27;</span>,<span class="number">81.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s004&#x27;</span>,<span class="string">&#x27;c001&#x27;</span>,<span class="number">60.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s001&#x27;</span>,<span class="string">&#x27;c002&#x27;</span>,<span class="number">82.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s002&#x27;</span>,<span class="string">&#x27;c002&#x27;</span>,<span class="number">72.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s003&#x27;</span>,<span class="string">&#x27;c002&#x27;</span>,<span class="number">81.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s001&#x27;</span>,<span class="string">&#x27;c003&#x27;</span>,<span class="number">59.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s12&#x27;</span>,<span class="string">&#x27;c005&#x27;</span>,<span class="number">89.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s13&#x27;</span>,<span class="string">&#x27;c008&#x27;</span>,<span class="number">87.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s13&#x27;</span>,<span class="string">&#x27;c007&#x27;</span>,<span class="number">65.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s13&#x27;</span>,<span class="string">&#x27;c010&#x27;</span>,<span class="number">85.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;c007&#x27;</span>,<span class="number">100.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;c005&#x27;</span>,<span class="number">60.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;c006&#x27;</span>,<span class="number">92.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;c008&#x27;</span>,<span class="number">95.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;c010&#x27;</span>,<span class="number">91.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;c004&#x27;</span>,<span class="number">57.00</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看/删除sc表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> sc</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.10总结：删除重复数据</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.10%E6%80%BB%E7%BB%93%EF%BC%9A%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="删除重复数据"><a href="#删除重复数据" class="headerlink" title="删除重复数据"></a>删除重复数据</h1><p>删除的是全字段重复的数据（见练习18题）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create table</span> dept1 <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.dept; </span><br><span class="line"><span class="keyword">insert into</span> dept1 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.dept; </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept1</span><br><span class="line"></span><br><span class="line"><span class="comment">--方法一 </span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> dept1 <span class="keyword">where</span> rowid <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="built_in">max</span>(rowid) <span class="keyword">from</span> dept1 <span class="keyword">group</span> <span class="keyword">by</span> deptno)</span><br><span class="line"></span><br><span class="line"><span class="comment">--方法二 </span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> dept1 <span class="keyword">where</span> rowid <span class="keyword">not</span> <span class="keyword">in</span> ( </span><br><span class="line">	<span class="keyword">select</span> rowid <span class="keyword">from</span> ( </span><br><span class="line">		<span class="keyword">select</span> dept1.<span class="operator">*</span>,rowid,<span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> deptno) r <span class="keyword">from</span> dept1 </span><br><span class="line">		)<span class="keyword">where</span> r<span class="operator">=</span><span class="number">1</span> </span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1、检索“c001”课程分数小于80，按分数降序排列的同学学号</span></span><br><span class="line"><span class="keyword">select</span> sno,score <span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span> <span class="keyword">and</span> score<span class="operator">&lt;</span><span class="number">80</span> <span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2、查询各个课程及相应的选修人数</span></span><br><span class="line"><span class="keyword">select</span> c.cno,c.cname,<span class="built_in">count</span>(sc.sno) 选修人数</span><br><span class="line"><span class="keyword">from</span> course c <span class="keyword">left</span> <span class="keyword">join</span> sc <span class="keyword">on</span> c.cno<span class="operator">=</span>sc.cno </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> c.cno,c.cname <span class="keyword">order</span> <span class="keyword">by</span> c.cno</span><br><span class="line"></span><br><span class="line"><span class="comment">--3、按照不同老师编号分类显示课程列表，课程之间用逗号隔开</span></span><br><span class="line"><span class="keyword">select</span> tno,<span class="built_in">listagg</span>(cname,<span class="string">&#x27;，&#x27;</span>)<span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> cno) <span class="keyword">from</span> course <span class="keyword">group</span> <span class="keyword">by</span> tno</span><br><span class="line"></span><br><span class="line"><span class="comment">--4、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分</span></span><br><span class="line"><span class="keyword">select</span> cno 课程ID, <span class="built_in">max</span>(score) 最高分, <span class="built_in">min</span>(score) 最低分 <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> cno <span class="keyword">order</span> <span class="keyword">by</span> cno</span><br><span class="line"></span><br><span class="line"><span class="comment">--5、查看成绩表信息，多加一列标注是否及格</span></span><br><span class="line"><span class="keyword">select</span> sc.<span class="operator">*</span>,<span class="keyword">case</span></span><br><span class="line">       <span class="keyword">when</span> score<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">then</span> <span class="string">&#x27;是&#x27;</span></span><br><span class="line">       <span class="keyword">else</span> <span class="string">&#x27;否&#x27;</span></span><br><span class="line">       <span class="keyword">end</span> 是否及格</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"></span><br><span class="line"><span class="comment">--6、查询出只选修了一门课程的全部学生的学号和姓名</span></span><br><span class="line"><span class="keyword">select</span> sno,sname <span class="keyword">from</span> student s <span class="keyword">where</span> </span><br><span class="line">       (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sc  <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno)<span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> s.sno</span><br><span class="line"></span><br><span class="line"><span class="comment">--7、查询平均成绩大于85的所有学生的学号、姓名和平均成绩</span></span><br><span class="line"><span class="keyword">select</span> s.sno,s.sname,<span class="built_in">avg</span>(score) </span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> sc <span class="keyword">on</span>(s.sno<span class="operator">=</span>sc.sno) </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sno,s.sname <span class="keyword">having</span> <span class="built_in">avg</span>(score)<span class="operator">&gt;</span><span class="number">85</span> <span class="keyword">order</span> <span class="keyword">by</span> s.sno</span><br><span class="line"></span><br><span class="line"><span class="comment">--8、统计各科成绩,各分数段人数:分数段为[100-85] a,[84-70] b,[69-60] c,[ &lt;60] d</span></span><br><span class="line"><span class="keyword">select</span> c.cno, c.cname,</span><br><span class="line">    <span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score <span class="keyword">between</span> <span class="number">85</span> <span class="keyword">and</span> <span class="number">100</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">end</span>) a,</span><br><span class="line">    <span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score <span class="keyword">between</span> <span class="number">70</span> <span class="keyword">and</span> <span class="number">84</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">end</span>) b,</span><br><span class="line">    <span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score <span class="keyword">between</span> <span class="number">60</span> <span class="keyword">and</span> <span class="number">69</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">end</span>) c,</span><br><span class="line">    <span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score <span class="operator">&lt;</span> <span class="number">60</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">end</span>) <span class="keyword">as</span> d</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">join</span> course c <span class="keyword">on</span> sc.cno<span class="operator">=</span>c.cno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> c.cno, c.cname</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> c.cno</span><br><span class="line"></span><br><span class="line"><span class="comment">--9、查询课程名称为“Oracle”，且分数低于60 的学生姓名和分数</span></span><br><span class="line"><span class="keyword">select</span> s.sname, sc.score </span><br><span class="line"><span class="keyword">from</span> student s </span><br><span class="line"><span class="keyword">join</span> sc <span class="keyword">on</span> sc.sno<span class="operator">=</span>s.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno<span class="operator">=</span>sc.cno</span><br><span class="line"><span class="keyword">where</span> c.cname<span class="operator">=</span><span class="string">&#x27;Oracle&#x27;</span> <span class="keyword">and</span> sc.score<span class="operator">&lt;</span><span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--10、查询所有学生的选课情况，选了多少门课程；</span></span><br><span class="line"><span class="keyword">select</span> s.sno,s.sname,</span><br><span class="line"><span class="built_in">listagg</span>(c.cname,<span class="string">&#x27;、&#x27;</span>)<span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> sc.cno) 选课,</span><br><span class="line"><span class="built_in">count</span>(sc.cno) 合计</span><br><span class="line"><span class="keyword">from</span> student s </span><br><span class="line"><span class="keyword">join</span> sc <span class="keyword">on</span> sc.sno<span class="operator">=</span>s.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno<span class="operator">=</span>sc.cno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sno,s.sname</span><br><span class="line"></span><br><span class="line"><span class="comment">--11、统计每门课程的学生选修人数（超过1人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列</span></span><br><span class="line"><span class="keyword">select</span> cno,<span class="built_in">count</span>(sno) 选修人数 <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> cno <span class="keyword">order</span> <span class="keyword">by</span> 选修人数 <span class="keyword">desc</span>, cno </span><br><span class="line"></span><br><span class="line"><span class="comment">--12.向SC表中插入一些记录，这些记录要求符合以下条件：没有上过编号“c002”课程的同学学号、“c002”号课的平均成绩；</span></span><br><span class="line"><span class="keyword">insert into</span> sc(sno,cno,score)</span><br><span class="line"><span class="keyword">select</span> s.sno,<span class="string">&#x27;c002&#x27;</span>,(<span class="keyword">select</span> <span class="built_in">avg</span>(score) <span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c002&#x27;</span>)</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">where</span> s.sno <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">      <span class="keyword">select</span> sno <span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c002&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--13、查询全部学生都选修的课程的课程号和课程名</span></span><br><span class="line"><span class="keyword">select</span> c.cno,c.cname <span class="keyword">from</span> course c</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">--不存在未选修某一门课</span></span><br><span class="line">      <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> student s <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(  <span class="comment">--未选修某一门课</span></span><br><span class="line">             <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> sc.cno<span class="operator">=</span>c.cno <span class="comment">--选修了某一门课</span></span><br><span class="line">      )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--14、查询没有学全所有课的同学的学号、姓名；</span></span><br><span class="line"><span class="keyword">select</span> sno,sname <span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line">      <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> course c <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(  <span class="comment">--未选修某一门课</span></span><br><span class="line">             <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> sc.cno<span class="operator">=</span>c.cno <span class="comment">--选修了某一门课</span></span><br><span class="line">      )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--15、查询“c001”课程比“c002”课程成绩高的所有学生的学号；</span></span><br><span class="line"><span class="keyword">select</span> sc1.sno,sc1.score,sc2.score <span class="keyword">from</span> sc sc1 </span><br><span class="line"><span class="keyword">join</span> sc sc2 <span class="keyword">on</span> sc1.sno<span class="operator">=</span>sc2.sno</span><br><span class="line"><span class="keyword">where</span> sc1.cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span> <span class="keyword">and</span> sc2.cno<span class="operator">=</span><span class="string">&#x27;c002&#x27;</span> <span class="keyword">and</span> sc1.score<span class="operator">&gt;</span>sc2.score</span><br><span class="line"></span><br><span class="line"><span class="comment">--16.将所有c001课程成绩低于平均成绩的同学的分数改为60分</span></span><br><span class="line"><span class="keyword">update</span>  sc <span class="keyword">set</span> score <span class="operator">=</span> <span class="number">60</span> <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span> <span class="keyword">and</span> score<span class="operator">&lt;</span>(</span><br><span class="line">        <span class="keyword">select</span> <span class="built_in">avg</span>(score) <span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--17.删除学习“谌燕”老师课的SC 表记录；</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sc <span class="keyword">where</span> cno <span class="keyword">in</span>(</span><br><span class="line">       <span class="keyword">select</span> c.cno <span class="keyword">from</span> course c <span class="keyword">join</span> teacher t <span class="keyword">on</span> c.tno<span class="operator">=</span>t.tno <span class="keyword">where</span> t.tname<span class="operator">=</span><span class="string">&#x27;谌燕&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--18.创建dept1表获取scott.dept表数据，再使用insert...select插入一次scott.dept表数据到detp1表，再使用删除语句删除重复数据</span></span><br><span class="line"><span class="keyword">create table</span> dept1 <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.dept; <span class="comment">--建表</span></span><br><span class="line"><span class="keyword">insert into</span> dept1 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.dept; <span class="comment">--插入</span></span><br><span class="line"><span class="comment">--删除重复数据</span></span><br><span class="line"><span class="comment">--方法一</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> dept1 <span class="keyword">where</span> rowid <span class="keyword">not</span> <span class="keyword">in</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="built_in">max</span>(rowid) <span class="keyword">from</span> dept1 <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line">)</span><br><span class="line"><span class="comment">--方法二</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> dept1 <span class="keyword">where</span> rowid <span class="keyword">not</span> <span class="keyword">in</span>(</span><br><span class="line">       <span class="keyword">select</span> rowid <span class="keyword">from</span>(</span><br><span class="line">              <span class="keyword">select</span> dept1.<span class="operator">*</span>,rowid,<span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> deptno) r <span class="keyword">from</span> dept1</span><br><span class="line">       ) <span class="keyword">where</span> r<span class="operator">=</span><span class="number">1</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--19、查询没学过“谌燕”老师课的同学的学号、姓名；</span></span><br><span class="line"><span class="keyword">select</span> sno,sname <span class="keyword">from</span> student s <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc </span><br><span class="line">       <span class="keyword">join</span> course c <span class="keyword">on</span> sc.cno<span class="operator">=</span>c.cno</span><br><span class="line">       <span class="keyword">join</span> teacher t <span class="keyword">on</span> c.tno<span class="operator">=</span>t.tno</span><br><span class="line">       <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> t.tname<span class="operator">=</span><span class="string">&#x27;谌燕&#x27;</span> </span><br><span class="line">) <span class="keyword">order</span> <span class="keyword">by</span> s.sno</span><br><span class="line"></span><br><span class="line"><span class="comment">--20、查询学过“c001”并且也学过编号“c002”课程的同学的学号、姓名；</span></span><br><span class="line"><span class="keyword">select</span> sno,sname <span class="keyword">from</span> student s <span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span></span><br><span class="line">) <span class="keyword">and</span> <span class="keyword">exists</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> cno<span class="operator">=</span><span class="string">&#x27;c002&#x27;</span></span><br><span class="line">) <span class="keyword">order</span> <span class="keyword">by</span> s.sno</span><br><span class="line"></span><br><span class="line"><span class="comment">--21、查询出每个学科排名第一名的学生姓名列表,包括课程编号，学生姓名，学生成绩</span></span><br><span class="line"><span class="comment">--子查询</span></span><br><span class="line"><span class="keyword">select</span> sc.cno,s.sname,sc.score <span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">join</span> student s <span class="keyword">on</span> s.sno<span class="operator">=</span>sc.sno</span><br><span class="line"><span class="keyword">where</span> sc.score<span class="operator">=</span>(</span><br><span class="line">      <span class="keyword">select</span> <span class="built_in">max</span>(score) <span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span>sc.cno</span><br><span class="line">) <span class="keyword">order</span> <span class="keyword">by</span> sc.cno</span><br><span class="line"><span class="comment">--窗口函数</span></span><br><span class="line"><span class="keyword">with</span> rnk <span class="keyword">as</span>(</span><br><span class="line">     <span class="keyword">select</span> sc.cno 课程编号, s.sname 学生姓名, sc.score 学生成绩,</span><br><span class="line">     <span class="built_in">dense_rank</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> sc.cno <span class="keyword">order</span> <span class="keyword">by</span> sc.score <span class="keyword">desc</span>) 排名</span><br><span class="line">     <span class="keyword">from</span> sc <span class="keyword">join</span> student s <span class="keyword">on</span> s.sno<span class="operator">=</span>sc.sno</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> 课程编号,学生姓名,学生成绩 <span class="keyword">from</span> rnk <span class="keyword">where</span> 排名<span class="operator">=</span><span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> 课程编号</span><br><span class="line"></span><br><span class="line"><span class="comment">--22、查询选修“谌燕”老师所授课程的学生中，成绩最高的学生姓名及其成绩</span></span><br><span class="line"><span class="keyword">with</span> cy_c <span class="keyword">as</span>( <span class="comment">-- 获取谌燕老师教授的所有课程</span></span><br><span class="line">     <span class="keyword">select</span> c.cno <span class="keyword">from</span> course c </span><br><span class="line">     <span class="keyword">join</span> teacher t <span class="keyword">on</span> t.tno<span class="operator">=</span>c.tno</span><br><span class="line">     <span class="keyword">where</span> t.tname<span class="operator">=</span><span class="string">&#x27;谌燕&#x27;</span> </span><br><span class="line">),</span><br><span class="line">top_s <span class="keyword">as</span>( <span class="comment">-- 找出这些课程中成绩最高的学生</span></span><br><span class="line">      <span class="keyword">select</span> sname 学生姓名, score 成绩 ,<span class="built_in">dense_rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sc.score <span class="keyword">desc</span>) 排名</span><br><span class="line">      <span class="keyword">from</span> sc <span class="keyword">join</span> student s <span class="keyword">on</span> s.sno<span class="operator">=</span>sc.sno</span><br><span class="line">      <span class="keyword">where</span> sc.cno <span class="keyword">in</span>(<span class="keyword">select</span> cno <span class="keyword">from</span> cy_c)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> 学生姓名,成绩 <span class="keyword">from</span> top_s <span class="keyword">where</span> 排名<span class="operator">=</span><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--23、查询学过“谌燕”老师所教的所有课的同学的学号、姓名；</span></span><br><span class="line"><span class="keyword">with</span> cy_c <span class="keyword">as</span>( <span class="comment">-- 获取谌燕老师教授的所有课程</span></span><br><span class="line">     <span class="keyword">select</span> c.cno <span class="keyword">from</span> course c </span><br><span class="line">     <span class="keyword">join</span> teacher t <span class="keyword">on</span> t.tno<span class="operator">=</span>c.tno</span><br><span class="line">     <span class="keyword">where</span> t.tname<span class="operator">=</span><span class="string">&#x27;谌燕&#x27;</span> </span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> s.sno 学号, s.sname 姓名</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">-- 不存在没选修的课程-&gt;选修了全部课程</span></span><br><span class="line">     <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> cy_c <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">--没选修谌燕老师某一课程</span></span><br><span class="line">            <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> sc.cno<span class="operator">=</span>cy_c.cno <span class="comment">--选修了谌燕老师某一课程</span></span><br><span class="line">     )</span><br><span class="line">) <span class="keyword">order</span> <span class="keyword">by</span> 学号</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--24、查询至少有一门课与学号为“s001”的同学所学相同的同学的学号和姓名</span></span><br><span class="line"><span class="keyword">with</span> s1_c <span class="keyword">as</span>( <span class="comment">-- 获取s001同学的所有课程</span></span><br><span class="line">     <span class="keyword">select</span> cno <span class="keyword">from</span> sc <span class="keyword">where</span> sno<span class="operator">=</span><span class="string">&#x27;s001&#x27;</span> </span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> s.sno,s.sname <span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">join</span> sc <span class="keyword">on</span> sc.sno<span class="operator">=</span>s.sno</span><br><span class="line"><span class="keyword">where</span> sc.cno <span class="keyword">in</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> s1_c)</span><br><span class="line"></span><br><span class="line"><span class="comment">--25、查询和“s001”号的同学学习的课程完全相同的其他同学学号和姓名</span></span><br><span class="line"><span class="keyword">with</span> s1_c <span class="keyword">as</span>( <span class="comment">-- 获取s1同学的所有课程</span></span><br><span class="line">     <span class="keyword">select</span> cno <span class="keyword">from</span> sc <span class="keyword">where</span> sno<span class="operator">=</span><span class="string">&#x27;s001&#x27;</span> </span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> s.sno 学号, s.sname 姓名 <span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">join</span> sc <span class="keyword">on</span> sc.sno<span class="operator">=</span>s.sno </span><br><span class="line"><span class="keyword">where</span> s.sno<span class="operator">!=</span><span class="string">&#x27;s001&#x27;</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">--不存在</span></span><br><span class="line">      <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> s1_c <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">--sc1没选</span></span><br><span class="line">             <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> sc.cno<span class="operator">=</span>s1_c.cno <span class="comment">--但sc选了</span></span><br><span class="line">      )</span><br><span class="line">) <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">--不存在</span></span><br><span class="line">      <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">---sc没选</span></span><br><span class="line">             <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> s1_c <span class="keyword">where</span> s1_c.cno<span class="operator">=</span>sc.cno <span class="comment">--但s1选了</span></span><br><span class="line">      )</span><br><span class="line">) <span class="keyword">order</span> <span class="keyword">by</span> s.sno</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>request和selenium（Python爬虫）</title>
    <url>/2025/08/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/Python/request%E5%92%8Cselenium%EF%BC%88Python%E7%88%AC%E8%99%AB%EF%BC%89/</url>
    <content><![CDATA[<p><code>requests</code> 和 <code>selenium</code> 是 Python 中两个常用的用于网络数据获取的工具，但它们的设计目标、使用场景和底层机制有显著不同。</p>
<p><a href="https://www.selenium.dev/zh-cn/documentation/webdriver/getting_started/">入门指南 | Selenium</a></p>
<h3 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1. 基本概念"></a>1. 基本概念</h3><table>
<thead>
<tr>
<th>项目</th>
<th>requests</th>
<th>selenium</th>
</tr>
</thead>
<tbody><tr>
<td>类型</td>
<td>HTTP 库</td>
<td>浏览器自动化工具</td>
</tr>
<tr>
<td>功能</td>
<td>发送 HTTP 请求，获取响应</td>
<td>控制真实或虚拟浏览器进行页面操作</td>
</tr>
<tr>
<td>依赖</td>
<td>不依赖浏览器</td>
<td>依赖浏览器（如 Chrome、Firefox）或无头浏览器</td>
</tr>
</tbody></table>
<hr>
<h3 id="2-工作原理"><a href="#2-工作原理" class="headerlink" title="2. 工作原理"></a>2. 工作原理</h3><ul>
<li><p><strong>requests</strong>：</p>
<ul>
<li>直接与服务器进行 HTTP 通信。</li>
<li>只能获取服务器返回的原始 HTML 或 JSON 数据。</li>
<li>无法执行 JavaScript，无法与动态内容交互。</li>
</ul>
</li>
<li><p><strong>selenium</strong>：</p>
<ul>
<li>启动一个真实的浏览器（或无头浏览器）。</li>
<li>完整加载页面，包括执行 JavaScript、加载 AJAX 内容、处理动态元素。</li>
<li>可模拟用户操作：点击、输入、滚动、等待等。</li>
</ul>
</li>
</ul>
<hr>
<h3 id="3-使用场景对比"><a href="#3-使用场景对比" class="headerlink" title="3. 使用场景对比"></a>3. 使用场景对比</h3><table>
<thead>
<tr>
<th>场景</th>
<th>推荐工具</th>
<th>原因</th>
</tr>
</thead>
<tbody><tr>
<td>爬取静态网页（HTML 源码即所需内容）</td>
<td>✅ requests</td>
<td>快速、轻量、高效</td>
</tr>
<tr>
<td>爬取动态网页（内容由 JS 渲染）</td>
<td>✅ selenium</td>
<td>能执行 JS，获取渲染后内容</td>
</tr>
<tr>
<td>需要登录、点击按钮、填写表单</td>
<td>✅ selenium</td>
<td>可模拟用户交互</td>
</tr>
<tr>
<td>接口调用、获取 JSON 数据</td>
<td>✅ requests</td>
<td>直接请求 API 接口更高效</td>
</tr>
<tr>
<td>高并发、大规模爬取</td>
<td>✅ requests</td>
<td>资源消耗小，速度快</td>
</tr>
<tr>
<td>需要截图、测试前端功能</td>
<td>✅ selenium</td>
<td>支持截图、模拟真实用户行为</td>
</tr>
</tbody></table>
<hr>
<h3 id="4-代码示例对比"><a href="#4-代码示例对比" class="headerlink" title="4. 代码示例对比"></a>4. 代码示例对比</h3><h4 id="使用-requests-获取网页内容："><a href="#使用-requests-获取网页内容：" class="headerlink" title="使用 requests 获取网页内容："></a>使用 <code>requests</code> 获取网页内容：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://httpbin.org/html&quot;</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line">soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.title.text)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>优点：简单、快速。<br>缺点：无法获取 JS 动态生成的内容。</p>
</blockquote>
<hr>
<h4 id="使用-selenium-获取渲染后的网页内容："><a href="#使用-selenium-获取渲染后的网页内容：" class="headerlink" title="使用 selenium 获取渲染后的网页内容："></a>使用 <code>selenium</code> 获取渲染后的网页内容：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 Chrome 浏览器（需安装 chromedriver）</span></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">&quot;https://example.com&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取页面标题（JS 渲染后的）</span></span><br><span class="line"><span class="built_in">print</span>(driver.title)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找元素并交互</span></span><br><span class="line">element = driver.find_element(By.TAG_NAME, <span class="string">&quot;h1&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(element.text)</span><br><span class="line"></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure>

<blockquote>
<p>优点：能处理复杂动态页面。<br>缺点：启动慢、资源占用高、配置复杂。</p>
</blockquote>
<hr>
<h3 id="5-性能与资源消耗"><a href="#5-性能与资源消耗" class="headerlink" title="5. 性能与资源消耗"></a>5. 性能与资源消耗</h3><table>
<thead>
<tr>
<th>指标</th>
<th>requests</th>
<th>selenium</th>
</tr>
</thead>
<tbody><tr>
<td>速度</td>
<td>⚡ 极快</td>
<td>🐢 较慢（需启动浏览器）</td>
</tr>
<tr>
<td>内存占用</td>
<td>低</td>
<td>高（每个浏览器实例消耗大）</td>
</tr>
<tr>
<td>并发能力</td>
<td>高（可配合 asyncio）</td>
<td>低（浏览器实例难并发）</td>
</tr>
<tr>
<td>易用性</td>
<td>简单直观</td>
<td>需要配置驱动、处理等待等</td>
</tr>
</tbody></table>
<hr>
<h3 id="6-常见搭配"><a href="#6-常见搭配" class="headerlink" title="6. 常见搭配"></a>6. 常见搭配</h3><ul>
<li><strong>requests + BeautifulSoup</strong>：适用于静态网页解析。</li>
<li><strong>selenium + WebDriverWait</strong>：适用于动态网页等待和交互。</li>
<li><strong>requests + selenium 结合使用</strong>：<ul>
<li>用 selenium 登录获取 cookies，</li>
<li>再用 requests 携带 cookies 高效请求数据。</li>
</ul>
</li>
</ul>
<hr>
<h3 id="7-安全与反爬"><a href="#7-安全与反爬" class="headerlink" title="7. 安全与反爬"></a>7. 安全与反爬</h3><table>
<thead>
<tr>
<th>工具</th>
<th>易被反爬</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>requests</td>
<td>✅ 容易（User-Agent、IP 限制）</td>
<td>可通过 headers、代理缓解</td>
</tr>
<tr>
<td>selenium</td>
<td>❌ 相对难（但非免疫）</td>
<td>浏览器行为更像真人，但仍可能被检测（如 webdriver 特征）</td>
</tr>
</tbody></table>
<blockquote>
<p>注意：现代反爬虫技术（如 Cloudflare）也能检测 selenium，需配合 <code>undetected-chromedriver</code> 等工具绕过。</p>
</blockquote>
<hr>
<h3 id="总结：如何选择？"><a href="#总结：如何选择？" class="headerlink" title="总结：如何选择？"></a>总结：如何选择？</h3><table>
<thead>
<tr>
<th>选择标准</th>
<th>使用 requests</th>
<th>使用 selenium</th>
</tr>
</thead>
<tbody><tr>
<td>页面是静态的</td>
<td>✅</td>
<td>❌（杀鸡用牛刀）</td>
</tr>
<tr>
<td>内容由 JS 动态加载</td>
<td>❌</td>
<td>✅</td>
</tr>
<tr>
<td>需要模拟用户操作</td>
<td>❌</td>
<td>✅</td>
</tr>
<tr>
<td>追求速度和效率</td>
<td>✅</td>
<td>❌</td>
</tr>
<tr>
<td>做自动化测试或 UI 验证</td>
<td>❌</td>
<td>✅</td>
</tr>
</tbody></table>
<p>✅ <strong>简单总结</strong>：</p>
<blockquote>
<p><code>requests</code> 是“打电话问数据”<br><code>selenium</code> 是“亲自打开浏览器看网页”</p>
</blockquote>
<hr>
<h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><ul>
<li>如果目标网站提供 API 接口，优先用 <code>requests</code> 直接调用。</li>
<li>对于单页应用（SPA），如 React&#x2F;Vue 项目，通常需要 <code>selenium</code>。</li>
<li>可考虑使用 <code>playwright</code> 或 <code>puppeteer</code>（Node.js）作为 selenium 的现代替代品，性能更好、API 更简洁。</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>5.14 视图、序列</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.14%20%E8%A7%86%E5%9B%BE%E3%80%81%E5%BA%8F%E5%88%97/</url>
    <content><![CDATA[<h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><p>视图实际上是一个或多个表的预定义查询，视图的使用方法和表一样。<br>视图用于查看表的数据，不真实存储数据，只访问基表中的行。<br>一般视图都最好加只读（with read only）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--创建视图</span></span><br><span class="line"><span class="comment">--or replace 可写可不写，不写的话不可创建已有的视图名</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> 视图名 <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名 <span class="keyword">with</span> read <span class="keyword">only</span> <span class="comment">--附加只读状态，可写可不写</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--查看视图</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 视图名</span><br><span class="line"></span><br><span class="line"><span class="comment">--删除视图</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> 视图名； </span><br><span class="line"></span><br><span class="line"><span class="comment">--scott账号要使用system账号赋予权限才能创建视图 </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">any</span> <span class="keyword">view</span> <span class="keyword">to</span> scott</span><br><span class="line"></span><br><span class="line"><span class="comment">/*当视图表结构和原表结构不一致的前提下，</span></span><br><span class="line"><span class="comment">原表插入数据的字段可为空，也可以通过对应视图表插入数据*/</span></span><br><span class="line"><span class="comment">--综合以上情况只要是视图表都最好加只读</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> v_dept <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept </span><br><span class="line"><span class="keyword">insert into</span> v_dept <span class="keyword">values</span>(<span class="number">60</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;a&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h1 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h1><p>序列是一个数据库项，用于生成一个整数序列，生成的序列用来填充数字型主键列。<br>数据库的对象之一，和表之间没有关联关系，用于数字型的主键列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--创建序列</span></span><br><span class="line"><span class="keyword">create</span> sequence 序列名</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> 开始数字 </span><br><span class="line">increment <span class="keyword">by</span> 增量数</span><br><span class="line">maxvalue 最大z值 <span class="comment">--可写可不写</span></span><br><span class="line">minvalue 最小值 <span class="comment">--可写可不写</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--例：创建一个序列，从1开始，每次增长1</span></span><br><span class="line"><span class="keyword">create</span> sequence seq_dept</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">1</span></span><br><span class="line">increment <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--调用序列</span></span><br><span class="line"><span class="keyword">select</span> seq_dept.nextval <span class="keyword">from</span> dual<span class="comment">--序列的下一个值，nextval第一次执行相当于激活序列</span></span><br><span class="line"><span class="keyword">select</span> seq_dept.currval <span class="keyword">from</span> dual<span class="comment">--查看序列的当前值</span></span><br><span class="line"><span class="keyword">insert into</span> dept <span class="keyword">values</span>(seq_dept.nextval,<span class="string">&#x27;销售部门&#x27;</span>,<span class="string">&#x27;桂林市&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--修改序列（只能修改增长值）</span></span><br><span class="line"><span class="keyword">alter</span> sequence seq_dept increment <span class="keyword">by</span> <span class="number">100</span></span><br><span class="line"><span class="comment">---没激活的序列直接修改增长值，那么该序列的初始值变成增长值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--删除序列</span></span><br><span class="line"><span class="keyword">drop</span> sequence seq_dept</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="循环序列"><a href="#循环序列" class="headerlink" title="循环序列"></a>循环序列</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> sequence seq_aa</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">5</span></span><br><span class="line">minvalue <span class="number">1</span></span><br><span class="line">maxvalue <span class="number">30</span></span><br><span class="line">increment <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> sequence seq_aa</span><br><span class="line"><span class="keyword">select</span> seq_aa.nextval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">alter</span> sequence seq_aa <span class="keyword">cycle</span></span><br></pre></td></tr></table></figure>

<h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><p>它是数据库在执行一系列操作时，保证所有的操作都正确完成，要么都执行，要 么都不执行，保证数据的完整性<br>事务产生于会话的第一条DML语句（insert、delete 、update）</p>
<p>必须具备以下四个属性，简称 <strong>ACID</strong> 属性： </p>
<ul>
<li>A：原子性（Atomicity）：事务是一个完整的操作。事务的各步操作是不可分的（原子的）；要么都执行，要么都不执行。 </li>
<li>C：一致性（Consistency）：一个查询的结果必须与数据库在查询开始时的状态保持一致 （读不等待写，写不等待读）。 </li>
<li>I：隔离性（Isolation）：数据库中每一个用户的操作都是互不影响的，对于其他会话来 说，未完成的（也就是未提交的）事务必须不可见。 </li>
<li>D：持久性（Durability）：事务一旦提交完成后，数据库就不可以丢失这个事务的结果， 数据就永久的保存到数据库中。</li>
</ul>
<p>事务采用隐性的方式，起始于session（会话窗口）的第一条DML语句， 事务结束于：<br>1）COMMIT（提交）或ROLLBACK（回滚）<br>2）DDL语句被执行（提交）<br>3）DCL语句被执行（提交）<br>4）用户退出SQLPLUS（正常退出是提交，非正常退出是回滚）<br>5）服务器故障或系统崩溃（回滚）<br>6）shutdowm immediate(回滚）<br>在一个事务里如果某个DML语句失败，之前其他任何DML语句将保持完好，而且不会提交！</p>
<h1 id="锁表解锁"><a href="#锁表解锁" class="headerlink" title="锁表解锁"></a>锁表解锁</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1.查看被锁的表 </span></span><br><span class="line"><span class="keyword">select</span> b.owner,b.object_name,a.session_id,a.locked_mode </span><br><span class="line"><span class="keyword">from</span> v$locked_object a,dba_objects b <span class="keyword">where</span> b.object_id <span class="operator">=</span> a.object_id;</span><br><span class="line"><span class="comment">--2.查看那个用户那个进程造成死锁 </span></span><br><span class="line"><span class="keyword">select</span> s.sid, q.sql_text </span><br><span class="line"><span class="keyword">from</span> v$sqltext q, v$session s <span class="keyword">where</span> q.address <span class="operator">=</span> s.sql_address <span class="keyword">and</span> s.sid <span class="operator">=</span> <span class="operator">&amp;</span>sid <span class="comment">-- 这个&amp;sid是第一步查询出来的 </span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> piece;<span class="comment">--查看导致锁死的SQL </span></span><br><span class="line"><span class="keyword">select</span> b.username,b.sid,b.serial#,logon_time </span><br><span class="line"><span class="keyword">from</span> v$locked_object a,v$session b <span class="keyword">where</span> a.session_id <span class="operator">=</span> b.sid <span class="keyword">order</span> <span class="keyword">by</span> b.logon_time;</span><br><span class="line"><span class="comment">--3.杀掉进程 </span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;alter system kill session &#x27;&#x27;&#x27;</span> <span class="operator">||</span> sid <span class="operator">||</span> <span class="string">&#x27;,&#x27;</span> <span class="operator">||</span> serial# <span class="operator">||</span> <span class="string">&#x27;&#x27;&#x27;;&#x27;</span> &quot;Deadlock&quot; <span class="keyword">from</span> v$session <span class="keyword">where</span> sid <span class="keyword">in</span> (<span class="keyword">select</span> sid <span class="keyword">from</span> v$lock <span class="keyword">where</span> block <span class="operator">=</span> <span class="number">1</span>);</span><br></pre></td></tr></table></figure>

<h2 id="模拟死锁"><a href="#模拟死锁" class="headerlink" title="模拟死锁"></a>模拟死锁</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--T1时刻</span></span><br><span class="line"><span class="comment">--事务1：session1执行 </span></span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> sal<span class="operator">=</span>sal1<span class="number">.1</span> <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">10</span>;</span><br><span class="line"><span class="comment">--事务2：session2执行 </span></span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> sal<span class="operator">=</span><span class="number">3000</span> <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span></span><br><span class="line"><span class="comment">--T2时刻</span></span><br><span class="line"><span class="comment">--事务1：session1执行 </span></span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> sal<span class="operator">=</span><span class="number">3000</span> <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span></span><br><span class="line"><span class="comment">--事务2：session2执行 </span></span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> sal<span class="operator">=</span>sal1<span class="number">.1</span> <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">10</span>;</span><br><span class="line"><span class="comment">--session3:system操作同上等待死锁</span></span><br></pre></td></tr></table></figure>

<h1 id="数据导入导出"><a href="#数据导入导出" class="headerlink" title="数据导入导出"></a>数据导入导出</h1><p>数据的迁移和备份，导入导出，虚拟机cmd进行操作<br>exp 账号&#x2F;密码@数据库名 file&#x3D;文件存放路径及文件名 full&#x3D;y –全库导出<br>命令行语句，不需要登录数据，只需要在命令行运行</p>
<p>按用户导出：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">exp scott<span class="operator">/</span>oracle<span class="variable">@orcl</span> file<span class="operator">=</span>c:\test\exp_0514_scott.bak owner<span class="operator">=</span>scott </span><br></pre></td></tr></table></figure>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.14%20%E8%A7%86%E5%9B%BE%E3%80%81%E5%BA%8F%E5%88%97/file-20250729195105298.png" class="">

<p>导入</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">imp scott<span class="operator">/</span>oracle<span class="variable">@orcl</span> file<span class="operator">=</span>c:\test\exp_0514_scott.bak <span class="keyword">full</span><span class="operator">=</span>y</span><br></pre></td></tr></table></figure>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.14%20%E8%A7%86%E5%9B%BE%E3%80%81%E5%BA%8F%E5%88%97/file-20250729195114666.png" class="">
<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1.创建一个视图，查询出来emp表的所有数据，并用insert into 给这个插入一条数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> v_emp <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">insert into</span> v_emp <span class="keyword">values</span>(<span class="number">1111</span>,<span class="string">&#x27;HWZ&#x27;</span>,<span class="string">&#x27;CLERK&#x27;</span>,<span class="keyword">null</span>,trunc(sysdate),<span class="number">888</span>,<span class="keyword">null</span>,<span class="number">40</span>)</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> emp <span class="keyword">where</span> empno<span class="operator">=</span><span class="number">1111</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.创建一个查询emp表所有部门平均工资的视图，并试图去修改这个视图的数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> v_emp_avgsal <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">avg</span>(sal) 平均工资 <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v_emp_avgsal</span><br><span class="line"><span class="keyword">update</span> v_emp_avgsal <span class="keyword">set</span> 平均工资<span class="operator">=</span>round(平均工资) <span class="comment">--非法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.创建一个只读视图，查询学生的平均成绩，并试图去修改数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> v_avg <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> sno,<span class="built_in">avg</span>(score) 平均成绩 <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> sno <span class="keyword">order</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">with</span> read <span class="keyword">only</span></span><br><span class="line"><span class="keyword">update</span> v_avg <span class="keyword">set</span> 平均成绩<span class="operator">=</span>round(平均成绩) <span class="comment">--非法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--4.创建一个序列，从1开始，每次增长1</span></span><br><span class="line"><span class="keyword">create</span> sequence seq_emp</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">1</span></span><br><span class="line">increment <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--5.使用序列，把序列是8的插入到emp表中作为主键</span></span><br><span class="line"><span class="keyword">select</span> seq_emp.nextval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">select</span> seq_emp.currval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">insert into</span> emp <span class="keyword">values</span>(seq_emp.currval,<span class="string">&#x27;hwz&#x27;</span>,<span class="string">&#x27;CLERK&#x27;</span>,<span class="number">1111</span>,trunc(sysdate),<span class="number">888</span>,<span class="keyword">null</span>,<span class="number">40</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.修改序列增长值为10，把序列是38的插入到emp表中作为主键</span></span><br><span class="line"><span class="keyword">alter</span> sequence seq_emp increment <span class="keyword">by</span> <span class="number">10</span></span><br><span class="line"><span class="keyword">select</span> seq_emp.nextval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">insert into</span> emp <span class="keyword">values</span>(seq_emp.currval,<span class="string">&#x27;hwz2&#x27;</span>,<span class="string">&#x27;CLERK&#x27;</span>,<span class="number">1111</span>,trunc(sysdate),<span class="number">666</span>,<span class="keyword">null</span>,<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建字典表 t_dic</span></span><br><span class="line"><span class="keyword">create table</span> t_dic(</span><br><span class="line">       type varchar2(<span class="number">10</span>),</span><br><span class="line">       name varchar2(<span class="number">20</span>),</span><br><span class="line">       key varchar2(<span class="number">10</span>) <span class="keyword">unique</span>,</span><br><span class="line">       <span class="keyword">value</span> varchar2(<span class="number">20</span>) <span class="keyword">not null</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">--批量插入数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_dic <span class="keyword">for</span> <span class="keyword">update</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建货物表 goods</span></span><br><span class="line"><span class="keyword">create table</span> goods(</span><br><span class="line">       id varchar2(<span class="number">32</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       type varchar2(<span class="number">10</span>) <span class="keyword">references</span> t_dic(key),</span><br><span class="line">       name varchar2(<span class="number">100</span>),</span><br><span class="line">       inprice number(<span class="number">10</span>,<span class="number">2</span>), </span><br><span class="line">       outprice number(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">       tjdw varchar2(<span class="number">10</span>) <span class="keyword">references</span> t_dic(key),</span><br><span class="line">       qualitydate number(<span class="number">4</span>) <span class="keyword">check</span>(qualitydate<span class="operator">&gt;</span><span class="number">0</span>) </span><br><span class="line">);</span><br><span class="line"><span class="comment">--批量插入数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> goods <span class="keyword">for</span> <span class="keyword">update</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建货物库存表 stock</span></span><br><span class="line"><span class="keyword">create table</span> stock(</span><br><span class="line">       id varchar2(<span class="number">32</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       goodsid varchar2(<span class="number">32</span>) <span class="keyword">references</span> goods(id),</span><br><span class="line">       sl number(<span class="number">4</span>),</span><br><span class="line">       intime <span class="type">date</span> <span class="keyword">default</span> sysdate,</span><br><span class="line">       productime <span class="type">date</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建进帐表 income</span></span><br><span class="line"><span class="keyword">create table</span> income(</span><br><span class="line">       id varchar2(<span class="number">32</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       goodsid varchar2(<span class="number">32</span>) <span class="keyword">references</span> goods(id),</span><br><span class="line">       stockid varchar2(<span class="number">32</span>) <span class="keyword">references</span> stock(id),</span><br><span class="line">       sl number(<span class="number">4</span>) <span class="keyword">check</span>(sl<span class="operator">&gt;</span><span class="number">0</span>),</span><br><span class="line">       discount number(<span class="number">4</span>,<span class="number">1</span>),</span><br><span class="line">       allprice number(<span class="number">8</span>,<span class="number">1</span>),</span><br><span class="line">       outtime <span class="type">date</span> <span class="keyword">default</span> sysdate</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建出帐表 outcome</span></span><br><span class="line"><span class="keyword">create table</span> outcome(</span><br><span class="line">       id varchar2(<span class="number">32</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       goodsid varchar2(<span class="number">32</span>) <span class="keyword">references</span> goods(id),</span><br><span class="line">       stockid varchar2(<span class="number">32</span>) <span class="keyword">references</span> stock(id),</span><br><span class="line">       sl number(<span class="number">4</span>,<span class="number">1</span>) <span class="keyword">check</span>(sl<span class="operator">&gt;</span><span class="number">0</span>),</span><br><span class="line">       allprice number(<span class="number">8</span>,<span class="number">1</span>),</span><br><span class="line">       intime <span class="type">date</span> <span class="keyword">default</span> sysdate</span><br><span class="line">);</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> outcome</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_dic <span class="comment">--字典表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> goods <span class="comment">--货物表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stock  <span class="comment">--库存表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> income <span class="comment">--进帐表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> outcome <span class="comment">--出帐表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--1. 在货物库存表stock的goodsid建立索引</span></span><br><span class="line"><span class="keyword">create</span> index idx_stock_goodsid <span class="keyword">on</span> stock(goodsid)</span><br><span class="line"></span><br><span class="line"><span class="comment">--2. 在货物类型表goods的货物名称列添加唯一约束</span></span><br><span class="line"><span class="keyword">alter table</span> goods <span class="keyword">add constraint</span> wyys <span class="keyword">unique</span>(name)</span><br><span class="line"></span><br><span class="line"><span class="comment">--3. 将货物类型表的各种物品，在库存表插入一条记录，要求每个字段都填写完整，保证数量都在100以上。</span></span><br><span class="line"><span class="keyword">insert into</span> stock(id,goodsid,sl,intime,productime)</span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">    g.id id,</span><br><span class="line">    g.id goodsid,</span><br><span class="line">    <span class="built_in">floor</span>(dbms_random.value(<span class="number">100</span>, <span class="number">300</span>))  sl,  <span class="comment">-- 随机生成100-300的数量</span></span><br><span class="line">    trunc(sysdate) <span class="operator">-</span> <span class="number">30</span>  intime,  <span class="comment">-- 进货日期（一个月前）</span></span><br><span class="line">    trunc(sysdate <span class="operator">-</span> dbms_random.value(<span class="number">30</span>,<span class="number">90</span>))  productime  <span class="comment">-- 生产日期（1-3个月前）</span></span><br><span class="line"><span class="keyword">from</span> goods g <span class="keyword">order</span> <span class="keyword">by</span> g.id</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> stock <span class="comment">--删除数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--4. 查询出货物表中过期的所有物品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> goods g <span class="keyword">join</span> stock s <span class="keyword">on</span> s.id<span class="operator">=</span>g.id <span class="keyword">where</span> productime<span class="operator">+</span>qualitydate<span class="operator">&lt;</span>sysdate</span><br><span class="line"></span><br><span class="line"><span class="comment">--5. 查询货物表中10天之内过期的所有物品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> goods g <span class="keyword">join</span> stock s <span class="keyword">on</span> s.id<span class="operator">=</span>g.id <span class="keyword">where</span> productime<span class="operator">+</span>qualitydate<span class="operator">+</span><span class="number">10</span><span class="operator">&lt;</span>sysdate</span><br><span class="line"></span><br><span class="line"><span class="comment">--6. 于当前时间新进货脉动50瓶，可口可乐50瓶，在出账表outcome和库存表stock插入相应记录</span></span><br><span class="line"><span class="keyword">create</span> sequence seq_stock <span class="comment">--库存序列</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">12</span></span><br><span class="line">increment <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> sequence seq_stock </span><br><span class="line"><span class="keyword">select</span> seq_stock.nextval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">select</span> seq_stock.currval <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> sequence seq_outcome <span class="comment">--出账序列</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">1</span></span><br><span class="line">increment <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> sequence seq_outcome</span><br><span class="line"><span class="keyword">select</span> seq_outcome.nextval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">select</span> seq_outcome.currval <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">--库存表插入</span></span><br><span class="line"><span class="keyword">insert into</span> stock</span><br><span class="line"><span class="keyword">select</span> seq_stock.nextval,id,<span class="number">50</span>,trunc(sysdate),trunc(sysdate)<span class="number">-20</span></span><br><span class="line"><span class="keyword">from</span> goods <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> goods <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;脉动&#x27;</span> <span class="keyword">or</span> name<span class="operator">=</span><span class="string">&#x27;可口可乐&#x27;</span>)</span><br><span class="line">       </span><br><span class="line"><span class="comment">--出账插入</span></span><br><span class="line"><span class="keyword">insert into</span> outcome <span class="comment">--脉动</span></span><br><span class="line"><span class="keyword">select</span> seq_outcome.nextval,id,seq_outcome.nextval,<span class="number">50</span>,inprice<span class="operator">*</span><span class="number">50</span>,trunc(sysdate) </span><br><span class="line"><span class="keyword">from</span> goods <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> goods <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;脉动&#x27;</span> <span class="keyword">or</span> name<span class="operator">=</span><span class="string">&#x27;可口可乐&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> outcome</span><br><span class="line"></span><br><span class="line"><span class="comment">--7. 于当前时间卖出泰山一包，在进账表插入相应记录，在库存表修改相应记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> income <span class="comment">--进帐表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> sequence seq_intcome <span class="comment">--出账序列</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">1</span></span><br><span class="line">increment <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> sequence seq_income</span><br><span class="line"><span class="keyword">select</span> seq_income.nextval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">select</span> seq_income.currval <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">--进帐插入</span></span><br><span class="line"><span class="keyword">insert into</span> income(id, goodsid, stockid, sl, discount, allprice, outtime) </span><br><span class="line"><span class="keyword">values</span>(</span><br><span class="line">    seq_income.nextval, <span class="comment">-- id</span></span><br><span class="line">    (<span class="keyword">select</span> id <span class="keyword">from</span> goods <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;泰山&#x27;</span>), <span class="comment">-- 商品id</span></span><br><span class="line">    (<span class="keyword">select</span> s.id <span class="keyword">from</span> stock s <span class="keyword">join</span> goods g <span class="keyword">on</span> s.goodsid <span class="operator">=</span> g.id <span class="keyword">where</span> g.name <span class="operator">=</span> <span class="string">&#x27;泰山&#x27;</span>), <span class="comment">-- 库存id</span></span><br><span class="line">    <span class="number">1</span>, <span class="comment">-- 销售数量1包</span></span><br><span class="line">    <span class="number">1</span>, <span class="comment">-- 不打折</span></span><br><span class="line">    (<span class="keyword">select</span> outprice <span class="keyword">from</span> goods <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;泰山&#x27;</span>)<span class="operator">*</span><span class="number">1</span>, <span class="comment">-- 总价</span></span><br><span class="line">    sysdate <span class="comment">-- 销售时间</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">--更新库存</span></span><br><span class="line"><span class="keyword">update</span> stock <span class="keyword">set</span> sl <span class="operator">=</span> sl <span class="operator">-</span> <span class="number">1</span> <span class="keyword">where</span> goodsid <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> goods <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;泰山&#x27;</span>) <span class="keyword">and</span> sl <span class="operator">&gt;</span> <span class="number">0</span>; <span class="comment">-- 确保库存充足</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--8. 查询库存内所有物品的总价，进货价计算</span></span><br><span class="line"><span class="keyword">select</span> s.<span class="operator">*</span>, outprice<span class="operator">*</span>sl 总价, inprice<span class="operator">*</span>sl 进货价 <span class="keyword">from</span> stock s <span class="keyword">join</span> goods g <span class="keyword">on</span> g.id<span class="operator">=</span>s.id </span><br><span class="line"></span><br><span class="line"><span class="comment">--9. 查询酒水类物品的仓库保有量最大的物品id和总价</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> g.id, g.outprice <span class="operator">*</span> <span class="built_in">sum</span>(s.sl) 总价</span><br><span class="line">    <span class="keyword">from</span> stock s</span><br><span class="line">    <span class="keyword">join</span> goods g <span class="keyword">on</span> s.goodsid <span class="operator">=</span> g.id</span><br><span class="line">    <span class="keyword">where</span> g.type <span class="operator">=</span> <span class="string">&#x27;g02&#x27;</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> g.id, g.outprice</span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">sum</span>(s.sl) <span class="keyword">desc</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">where</span> rownum <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--10. 查询价格大于5元低于10元的所有物品名称</span></span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span> goods <span class="keyword">where</span> outprice <span class="keyword">between</span> <span class="number">5</span> <span class="keyword">and</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--11. 查询名称中有山字的所有物品</span></span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span> goods <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%山%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--12. 查询进货日期是今天的所有进货记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> outcome <span class="keyword">where</span> intime <span class="operator">=</span> trunc(sysdate)</span><br><span class="line"></span><br><span class="line"><span class="comment">--13. 查询名称长度最大的物品名称</span></span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span>(</span><br><span class="line">    <span class="keyword">select</span> name <span class="keyword">from</span> goods <span class="keyword">order</span> <span class="keyword">by</span> length(name) <span class="keyword">desc</span></span><br><span class="line">) <span class="keyword">where</span> rownum <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--14. 汇总各类型物品的库存，其中烟和酒水单独统计，其他物品展示为其他</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span></span><br><span class="line">       g.type <span class="keyword">in</span>(<span class="string">&#x27;g01&#x27;</span>,<span class="string">&#x27;g02&#x27;</span>) <span class="keyword">then</span> (g.name)</span><br><span class="line">       <span class="keyword">else</span> <span class="string">&#x27;其他&#x27;</span> <span class="keyword">end</span> 名称, <span class="built_in">sum</span>(s.sl) 库存</span><br><span class="line"><span class="keyword">from</span> stock s <span class="keyword">join</span> goods g <span class="keyword">on</span> g.id<span class="operator">=</span>s.goodsid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">case</span> <span class="keyword">when</span></span><br><span class="line">       g.type <span class="keyword">in</span>(<span class="string">&#x27;g01&#x27;</span>,<span class="string">&#x27;g02&#x27;</span>) <span class="keyword">then</span> (g.name)</span><br><span class="line">       <span class="keyword">else</span> <span class="string">&#x27;其他&#x27;</span> <span class="keyword">end</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 库存</span><br><span class="line"></span><br><span class="line"><span class="comment">--15. 更新可比克薯片的名称，将名称改为可比克薯片（袋装）</span></span><br><span class="line"><span class="keyword">update</span> goods <span class="keyword">set</span> name<span class="operator">=</span><span class="string">&#x27;可比克薯片（袋装）&#x27;</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;可比克薯片&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--16. 将各类物品根据价格倒序排列展示</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> goods <span class="keyword">order</span> <span class="keyword">by</span> outprice <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--17. 查询出今天的销售额，毛利润</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(allprice) 销售额, <span class="built_in">sum</span>(allprice<span class="operator">-</span>inprice<span class="operator">*</span>sl) 毛利润</span><br><span class="line"><span class="keyword">from</span> income i <span class="keyword">join</span> goods g <span class="keyword">on</span> g.id<span class="operator">=</span>i.goodsid</span><br><span class="line"></span><br><span class="line"><span class="comment">--18. 根据每种物品类型（类型包括很多物品）昨天销售的累计数量，求出最大的数量的类型名称及总数量</span></span><br><span class="line"><span class="keyword">with</span> 昨日销售 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> g.type <span class="keyword">as</span> 类型代码,<span class="built_in">sum</span>(i.sl) <span class="keyword">as</span> 销售总量</span><br><span class="line">    <span class="keyword">from</span> income i <span class="keyword">join</span> goods g <span class="keyword">on</span> i.goodsid <span class="operator">=</span> g.id</span><br><span class="line">    <span class="keyword">where</span> trunc(i.outtime) <span class="operator">=</span> trunc(sysdate) <span class="operator">-</span> <span class="number">1</span>  <span class="comment">-- 昨天的销售记录</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> g.type</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> d.name 类型名称, y.销售总量</span><br><span class="line"><span class="keyword">from</span> 昨日销售 y <span class="keyword">join</span> t_dic d <span class="keyword">on</span> y.类型代码 <span class="operator">=</span> d.key</span><br><span class="line"><span class="keyword">where</span> y.销售总量 <span class="operator">=</span> (<span class="keyword">select</span> <span class="built_in">max</span>(销售总量) <span class="keyword">from</span> 昨日销售);</span><br><span class="line"></span><br><span class="line"><span class="number">19.</span> 查询出烟类，近<span class="number">10</span>天的销售情况，展示出物品名称，卖出数量，总价格，毛利润</span><br><span class="line"><span class="number">20.</span> 根据天数分组，汇总近<span class="number">10</span>天每天的销售情况，毛利润和总价格</span><br><span class="line"><span class="number">21.</span> 创建视图，展示当月销售物品中，分类统计各类物品的销售数量，总进价，总卖出价，毛利润</span><br><span class="line"><span class="number">22.</span> 在物品表里查出利润率最大的物品</span><br><span class="line"><span class="number">23.</span> 因为某人讲价，于当前时间，以<span class="number">8</span>折卖出馒头<span class="number">50</span>个，在进账表和库存表做出相应修改</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.13总结 索引</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.13%E6%80%BB%E7%BB%93%20%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<p>索引的目的是加速查询的速度：原则上一个列最多只能建两个索引<br>索引建完自动生效，不改变语法书写格式<br>索引会影响增删改效率，且有些情况下不必要（如全查），所以索引不是越多越好</p>
<h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><h2 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> (<span class="keyword">unique</span><span class="operator">/</span>BITMAP) index 索引名称 <span class="keyword">on</span> 表名(列名) tablespace 表空间名； <span class="comment">--unique 用于指定是否强制要求索引列为唯一性数据，表空间可选择是否指定，不指定则用默认表空间。出于性能考虑索引表空间和表的表空间要分开。</span></span><br></pre></td></tr></table></figure>
<h2 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h2><h3 id="一、按存储形式分类"><a href="#一、按存储形式分类" class="headerlink" title="一、按存储形式分类"></a>一、按存储形式分类</h3><ul>
<li>b_tree索引</li>
<li>位图索引</li>
<li>基于函数索引</li>
<li>方向键索引</li>
</ul>
<h4 id="B-TREE索引"><a href="#B-TREE索引" class="headerlink" title="B-TREE索引"></a>B-TREE索引</h4><p>适用场景：列基数比较大的时候使用（行业、身高）<br>列基数：该列不重复数据的个数 count(distinct col)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> index ind_name <span class="keyword">on</span> tb_name(col_name)</span><br></pre></td></tr></table></figure>

<h4 id="位图索引"><a href="#位图索引" class="headerlink" title="位图索引"></a>位图索引</h4><p>说明：位图索引在创建时，会扫描整张表，为索引列的每个取值建立一个不重复的位图 （BITMAP）来描述该取值<br>适用场景：列基数比较小的时候使用（性别、婚姻状况）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> bitmap index ind_name <span class="keyword">on</span> tb_name(col_name); </span><br><span class="line"><span class="keyword">create</span> bitmap index ind_student54_sex <span class="keyword">on</span> student_54_new(sex)</span><br></pre></td></tr></table></figure>
<h4 id="反向键索引"><a href="#反向键索引" class="headerlink" title="反向键索引"></a>反向键索引</h4><p>说明：可以视作一种特殊的B-TREE索引，存储索引列的反向值<br>背景：为防止B-TREE索引在某叶上数据量占比过高而使用的一种索引<br>适用场景：原始数据分支不明显但反向数据分支明显的列（身高：集中在一米七一米八）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> index ind_name <span class="keyword">on</span> tb_name(col_name) reverse</span><br></pre></td></tr></table></figure>
<h4 id="基于函数的索引"><a href="#基于函数的索引" class="headerlink" title="基于函数的索引"></a>基于函数的索引</h4><p>说明：可以视作一种特殊的B-TREE索引，存储函数处理后的数据<br>背景：在某个字段上以原值建立了索引，但是在筛选时在该字段上经常加函数，导致索引无法生效<br>适用场景：对某列进行筛选时经常需要配合函数使用（例如查找姓名中的首字母）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> index ind_name <span class="keyword">on</span> tb_name(<span class="keyword">function</span>(col_name));</span><br></pre></td></tr></table></figure>

<h3 id="二、按唯一性分类"><a href="#二、按唯一性分类" class="headerlink" title="二、按唯一性分类"></a>二、按唯一性分类</h3><h4 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h4><p>索引列中不可能出现重复值</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index ind_name <span class="keyword">on</span> tb_name(col_name)</span><br></pre></td></tr></table></figure>
<ul>
<li>B-TREE索引可以建立唯一索引，位图索引不能建立唯一索引</li>
<li>如果在某列上建立了唯一约束或主键约束，ORACLE会自动在该列上建立一个同名的唯一索引</li>
</ul>
<h4 id="非唯一索引"><a href="#非唯一索引" class="headerlink" title="非唯一索引"></a>非唯一索引</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> index ind_name <span class="keyword">on</span> tb_name(col_name);</span><br></pre></td></tr></table></figure>

<h3 id="三、按列的个数分类（索引覆盖的列的个数）"><a href="#三、按列的个数分类（索引覆盖的列的个数）" class="headerlink" title="三、按列的个数分类（索引覆盖的列的个数）"></a>三、按列的个数分类（索引覆盖的列的个数）</h3><h4 id="单列索引"><a href="#单列索引" class="headerlink" title="单列索引"></a>单列索引</h4><p>基于一个列建立的索引</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> index ind_name <span class="keyword">on</span> tb_name(col_name)</span><br></pre></td></tr></table></figure>
<h4 id="复合索引（联合索引）"><a href="#复合索引（联合索引）" class="headerlink" title="复合索引（联合索引）"></a>复合索引（联合索引）</h4><p>基于两个或两个以上列建立的索引</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--写在前面的字段（ename）且叫为主键列，触发索引需要用到主键列，与主键列的位置没有关系</span></span><br><span class="line"><span class="keyword">create</span> index ind_emp_enamejob <span class="keyword">on</span> emp(ename,job)</span><br></pre></td></tr></table></figure>

<h2 id="修改索引名称"><a href="#修改索引名称" class="headerlink" title="修改索引名称"></a>修改索引名称</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> index 索引名 rename <span class="keyword">to</span> 新索引名；</span><br></pre></td></tr></table></figure>

<h2 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h2><p>通过drop index 索引名</p>
<h2 id="索引建立或使用的规则与建议"><a href="#索引建立或使用的规则与建议" class="headerlink" title="索引建立或使用的规则与建议"></a>索引建立或使用的规则与建议</h2><p>1.如果对某大表进行筛选时，某列或某几列频繁出现在WHERE子句中，并且检索出的数 据低于总行数的15%（50%），应考虑在这些列上建立索引。<br>2.如果对某大表进行排序时，某列或某几列频繁出现在ORDER BY子句中，应考虑在这些 列上建立索引。<br>3.小表不要建立索引。<br>4.对于含有空值的列，如果经常在查询时查询非空值，建议在该列上建立索引；如果经 常在查询时查询空值，建议在该列上建立基于函数的索引。<br>5.为了提高表连接的性能，应在连接列上建立索引（建立一般普通的索引即可）<br>6.索引是数据库的一种实体对象，级别类似于表，会占用内存空间，ORACLE会自动进行 索引维护，表和索引可以建立在不同的表空间。<br>7.通过索引可以提升数据的查询速度，但是会相对地降低DML语句的操作速度，尤其是 插和改的速度，ORACLE会花费时间在索引维护上，所以说要把握好索引的数量<br>8.对于列基数比较大的列，适合B-TREE索引，列基数比较小的列，适合位图索引。<br>9.对于复合索引，至少要引用到索引列中的第一个列才会使用该索引。<br>10.某列可以出现在多个索引中，但相同的某列或某几列无法多次建立索引。 –就是可以 有多个组合，但不能有重复组合，不同顺序的相同几列视为不同组合<br>11.索引建立后并不一定会被引用，ORACLE会分析整个SQL后做出最优的执行方式。<br>12.ORACLE会自动在主键约束和唯一约束列上建立唯一索引。<br>13.对于一般的B-TREE索引，通配符出现在搜索词的首位时不会引用索引<br>14.在索引列上使用&lt;&gt; !&#x3D;号时，或对空值进行判断时，索引不会生效<br>15.rebiuld重建索引，减少碎片，提高效率。</p>
<h2 id="索引的优缺点"><a href="#索引的优缺点" class="headerlink" title="索引的优缺点"></a>索引的优缺点</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>1.大大加快数据的检索速度;<br>2.创建唯一性索引，保证数据库表中每一行数据的唯一性;<br>3.加速表和表之间的连接;<br>4.在使用分组和排序子句进行数据检索时，可以显著减少查询中分组和排序的时间。</p>
<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>1.索引需要占物理空间。<br>2.当对表中的数据进行增加、删除和修改的时候，索引也要动态的维护，降低了数据的 维护速度。</p>
<h1 id="SQL性能优化问题"><a href="#SQL性能优化问题" class="headerlink" title="SQL性能优化问题"></a>SQL性能优化问题</h1><p>SQL执行顺序from—where—group by—having—select—order by From后面的表执行顺序从右往左，从后往前<br>1、 如果结果集没有影响的关联，将小的表放在后面<br>2、 Where条件顺序，将过滤条数大的放在后面，过滤条数小的放在前面<br>3、 尽量减少对表的重复查询<br>4、 使用exists代替in：in后面用子查询，用exists代替in（看exists子查询中where条件， 结果返回true或者fasle），如果in后面是具体的值，还是用in，用in的SQL语句总是多了 一种转换过程<br>5、 Distict,查询效率低，要先排序，再去重<br>6、 索引正确使用，不能使用聚合函数，不能使用not<br>7、 大于等于效率要高于大于，用&gt;&#x3D;替代&gt;，前提是整数相比较<br>8、 Like效率低，使用instr代替instr(name,’n’)&gt;&#x3D;1可以代替like‘%c%’<br>9、 Where 是过滤行，having对分组的过滤<br>10、 要查看执行计划(F5, EXPLAIN )<br>11、 对 WHERE + ORDER BY 组合的优化, 在where 进行限制后 在进行 order BY<br>12、 尽量少排序 ORDER BY<br>13、 任何地方都不要使用select * from表，用具体的字段列表代替“*”，不要返回用不到 的任何字段<br>14、 尽量用 JOIN 替换子查询<br>15、 尽量少使用 OR ,索引失效<br>16、 尽量避免 UNION 使用 UNION ALL 然后再 GROUP BY 去重<br>17、 尽早过滤数据, WHERE 过滤 使用 join时 先过滤再 JOIN<br>18、 尽量避免一条 UPDATE 更新多条记录, 用 MERGE INTO , 效率比 UPDATE 高</p>
<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1.给emp表的ename列创建一个索引，建立索引前后时间对比</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;S%&#x27;</span></span><br><span class="line"><span class="keyword">create</span> index idx_emp_ename <span class="keyword">on</span> emp(ename);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;S%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.创建job和sal的复合索引，查询工资大于2000的MANAGER员工信息</span></span><br><span class="line"><span class="keyword">create</span> index idx_emp_jobsal <span class="keyword">on</span> emp(job,sal)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span><span class="number">2000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.查询所有人选修c002课程及格的情况,自己判断如何创建索引</span></span><br><span class="line"><span class="comment">--在sc表的cno和score字段上创建复合索引</span></span><br><span class="line"><span class="keyword">create</span> index idx_sc_sccno <span class="keyword">on</span> sc(cno,score)</span><br><span class="line"><span class="keyword">select</span> sc.<span class="operator">*</span>,<span class="keyword">case</span> <span class="keyword">when</span> score<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">then</span> <span class="string">&#x27;及格&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不及格&#x27;</span> <span class="keyword">end</span> 及格情况 </span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c002&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--4.使用小写函数来创建索引，查询带有m的员工信息</span></span><br><span class="line"><span class="keyword">create</span> index idx_emp_ename <span class="keyword">on</span> emp(<span class="built_in">lower</span>(ename))</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;m%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--5.修改删除一个索引</span></span><br><span class="line"><span class="keyword">alter</span> index idx_emp_ename rename <span class="keyword">to</span> ind_emp_ename1；<span class="comment">--修改</span></span><br><span class="line"><span class="keyword">drop</span> index ind_emp_ename1 <span class="comment">--删除</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.12总结：批量插入</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.12%E6%80%BB%E7%BB%93%EF%BC%9A%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5/</url>
    <content><![CDATA[<h2 id="两种批量插入方式"><a href="#两种批量插入方式" class="headerlink" title="两种批量插入方式"></a>两种批量插入方式</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>执行以下语句-&gt;复制需要插入的数据-&gt;点击编辑数据（开锁）-&gt;移动鼠标位置使其图标变为向右–按住鼠标左键拉动-&gt;粘贴</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表 <span class="keyword">for</span> <span class="keyword">update</span></span><br></pre></td></tr></table></figure>

<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.12%E6%80%BB%E7%BB%93%EF%BC%9A%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5/file-20250729194931414.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.12%E6%80%BB%E7%BB%93%EF%BC%9A%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5/file-20250729194945285.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.12%E6%80%BB%E7%BB%93%EF%BC%9A%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5/file-20250729194956758.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.12%E6%80%BB%E7%BB%93%EF%BC%9A%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5/file-20250729195008926.png" class="">

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create table</span> t(tno varchar2(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">insert into</span> t <span class="keyword">values</span>(<span class="string">&#x27;1,2,3&#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t</span><br><span class="line"><span class="comment">--1.求tno这个字段的累计总和</span></span><br><span class="line"><span class="keyword">select</span> substr(tno,<span class="number">1</span>,<span class="number">1</span>)<span class="operator">+</span>substr(tno,<span class="number">3</span>,<span class="number">1</span>)<span class="operator">+</span>substr(tno,<span class="number">5</span>,<span class="number">1</span>)  <span class="keyword">from</span> t</span><br><span class="line"></span><br><span class="line"><span class="comment">--建表shuiguo</span></span><br><span class="line"><span class="keyword">create table</span> shuiguo(tdate varchar2(<span class="number">30</span>),tname varchar2(<span class="number">20</span>),saleamount number(<span class="number">10</span>))</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> shuiguo</span><br><span class="line"><span class="comment">--2.查询语句，结果按梨、葡萄、西瓜、橘子、柠檬、苹果、香蕉的顺序排序，同种水果按销量降序排序   </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> shuiguo <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">case</span> tname</span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;梨&#x27;</span> <span class="keyword">then</span> <span class="number">1</span></span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;葡萄&#x27;</span> <span class="keyword">then</span> <span class="number">2</span></span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;西瓜&#x27;</span> <span class="keyword">then</span> <span class="number">3</span></span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;橘子&#x27;</span> <span class="keyword">then</span> <span class="number">4</span></span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;柠檬&#x27;</span> <span class="keyword">then</span> <span class="number">5</span></span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;苹果&#x27;</span> <span class="keyword">then</span> <span class="number">6</span></span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;香蕉&#x27;</span> <span class="keyword">then</span> <span class="number">7</span></span><br><span class="line">       <span class="keyword">else</span> <span class="number">8</span> <span class="keyword">end</span>, </span><br><span class="line">       saleamount <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--建表emp2</span></span><br><span class="line"><span class="keyword">create table</span> emp2(empno number(<span class="number">10</span>), ename varchar2(<span class="number">20</span>), dname varchar2(<span class="number">20</span>), sal number(<span class="number">10</span>), e_date <span class="type">date</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp2</span><br><span class="line"><span class="comment">--3.查询出每个部门中，连续三个月工资都增长的员工信息，包括员工姓名、部门名称和连续增长的月份。 要求查询的结果格式：部门名称，员工姓名，连续增长月份</span></span><br><span class="line"><span class="keyword">with</span> tmp <span class="keyword">as</span>(</span><br><span class="line">     <span class="keyword">select</span> dname 部门名称, ename 员工姓名, <span class="built_in">count</span>(<span class="operator">*</span>) 连续增长月份 <span class="keyword">from</span>( <span class="comment">--连续增长的月份</span></span><br><span class="line">         <span class="keyword">select</span> tmp1.<span class="operator">*</span>,<span class="built_in">lag</span>(row_num,<span class="number">1</span>,row_num<span class="number">-1</span>)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> ename <span class="keyword">order</span> <span class="keyword">by</span> ename,e_date,e_date) last_row_num <span class="keyword">from</span>( <span class="comment">--增长的月份</span></span><br><span class="line">                <span class="keyword">select</span> emp2.<span class="operator">*</span>, <span class="comment">-- 偏移、编号</span></span><br><span class="line">                       <span class="built_in">lag</span>(sal,<span class="number">1</span>,<span class="keyword">null</span>)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> ename <span class="keyword">order</span> <span class="keyword">by</span> ename,e_date) last_sal,</span><br><span class="line">                       <span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> ename <span class="keyword">order</span> <span class="keyword">by</span> ename) row_num</span><br><span class="line">                <span class="keyword">from</span> emp2</span><br><span class="line">         ) tmp1 <span class="keyword">where</span> sal<span class="operator">-</span>last_sal<span class="operator">&gt;</span><span class="number">0</span></span><br><span class="line">     ) <span class="keyword">where</span> row_num<span class="operator">-</span>last_row_num<span class="operator">=</span><span class="number">1</span> <span class="keyword">group</span> <span class="keyword">by</span> dname,ename</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tmp <span class="keyword">where</span> 连续增长月份<span class="operator">&gt;=</span><span class="number">3</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.6总结：排序、分组</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.6%E6%80%BB%E7%BB%93%EF%BC%9A%E6%8E%92%E5%BA%8F%E3%80%81%E5%88%86%E7%BB%84/</url>
    <content><![CDATA[<h1 id="关键词相关"><a href="#关键词相关" class="headerlink" title="关键词相关"></a>关键词相关</h1><p>关键词一共6个，一条查询语句最少要有2个关键词，最多6个关键词，每个关键词只能出现一次</p>
<ul>
<li>select 选列</li>
<li>from 选表</li>
<li>where 选行</li>
<li>group by 分组</li>
<li>having 选分组后的行</li>
<li>order by 排序</li>
</ul>
<p><strong>书写顺序</strong>：select — from — where — group by — having — order by<br><strong>执行顺序</strong>：from — where — group by — having — select — order by</p>
<h1 id="排序-order-by"><a href="#排序-order-by" class="headerlink" title="排序 order by"></a>排序 order by</h1><p>asc 升序（从小到大），默认，可写可不写；<br>desc 降序（从大到小），需在列名后标注</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="comment">--升序</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> <span class="comment">--降序</span></span><br></pre></td></tr></table></figure>

<p>order by 是唯一一个可以使用别名的关键词 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sal 工资, deptno 部门 <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> 工资 <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>

<p>排序后空值最大（升序排序时空值在最下面）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> comm <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>

<p>desc不共用（每列默认升序，需逐个设置）<br>多个列进行排序时，先全按照左边的列进行排序，在左边列排完的基础上，再排右边列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--先按部门升序排序，再按工资降序排序</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> deptno, sal <span class="keyword">desc</span></span><br><span class="line"><span class="comment">--两者都需降序排序时需要都写出desc</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">desc</span>, sal <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>

<p>数字指代能用但不常用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno,ename,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">1</span>,<span class="number">3</span> <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>

<h1 id="分组-group-by"><a href="#分组-group-by" class="headerlink" title="分组 group by"></a>分组 group by</h1><p>单独使用时效果相当于去重，一般只搭配聚合函数一起使用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--两者结果一样</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> deptno <span class="keyword">from</span> emp <span class="comment">--去重</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno  <span class="comment">--分组</span></span><br></pre></td></tr></table></figure>
<p><strong>分组后select后面只能跟分了组的列和聚合函数</strong></p>
<h2 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h2><p>多行聚合成一行的函数，如：<br>最大值max() 最小值min() 求和sum() 平均值avg() 计数count()</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(sal),<span class="built_in">min</span>(sal),<span class="built_in">sum</span>(sal),<span class="built_in">avg</span>(sal),<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure>
<p>count求的就是结果集里面有多少条有效数据（空值不计），可使用count(1)或者count(*)来求所有数据的计数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--求每个部门的最高工资</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"><span class="comment">--每个部门有几个工作为MANAGER的员工</span></span><br><span class="line"><span class="keyword">select</span>  deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"><span class="comment">--可进行多项分组</span></span><br><span class="line"><span class="keyword">select</span> deptno,job,<span class="built_in">avg</span>(sal),<span class="built_in">count</span>(<span class="number">1</span>),<span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno,job</span><br></pre></td></tr></table></figure>
<p>有分组的查询语句，那么聚合函数则在分组后产生</p>
<h2 id="having"><a href="#having" class="headerlink" title="having"></a>having</h2><p>功能等同where：专门用于筛选聚合函数<br>与where的区别：</p>
<ul>
<li>where是用来过滤行的，having是用来过滤分组的 </li>
<li>having一般跟在group by子句后</li>
<li>where是在分组前进行过滤，而having是在分组后进行过滤</li>
<li>where后面不可以加聚合函数过滤条件，having可以</li>
<li>where效率比having高，因此只有出现聚合函数作为过滤条件时用having，其余所有情况都用where</li>
</ul>
<p><strong>where条件里为什么不能有聚合函数</strong>：聚合函数是对行组进行计算，而执行顺序上是先where对单个行进行过滤，才分组，两者有个先后关系。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--求人数大于4的部门的名称和人数</span></span><br><span class="line"><span class="keyword">select</span>  deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp  <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">count</span>(<span class="number">1</span>)<span class="operator">&gt;</span><span class="number">4</span> </span><br></pre></td></tr></table></figure>

<p>having 只能筛选聚合函数和分组后的列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--求各部门工作是销售的员工人数</span></span><br><span class="line"><span class="comment">--错误写法：没有对job进行分组，having无法对job进行筛选</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> job<span class="operator">=</span><span class="string">&#x27;SALESMAN&#x27;</span></span><br><span class="line"><span class="comment">--正确写法：使用where进行筛选</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;SALESMAN&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br></pre></td></tr></table></figure>

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1.查询员工姓名、工资，按照工资的正序排列</span></span><br><span class="line"><span class="keyword">select</span> enmae,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.查询员工信息，先按照部门编号降序排列，再按照工资的正序排列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">desc</span>, sal</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.查询员工信息，先按照工资降序排列，再按照部门降序排列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>, deptno <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--4.求每个部门有多少员工</span></span><br><span class="line"><span class="keyword">select</span> deptno, <span class="built_in">count</span>(<span class="number">1</span>)  <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.求每个部门里的最高工资</span></span><br><span class="line"><span class="keyword">select</span> deptno, <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.参加每种工作的人数</span></span><br><span class="line"><span class="keyword">select</span> job, <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> job</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.求员工里面的最高工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--8.求公司有多少个部门</span></span><br><span class="line"><span class="comment">--使用dept表</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> dept</span><br><span class="line"><span class="comment">--使用emp表进行子查询，缺点：若emp表中没有某部门数据，则会少算这一部门，可能计数不全</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> deptno <span class="keyword">from</span> emp)</span><br><span class="line"></span><br><span class="line"><span class="comment">--9.求部门平均工资大于1600的部门编号</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;</span><span class="number">1600</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--10.求部门平均工资大于1600,并且不是20号部门的部门编号</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">!=</span><span class="number">20</span> <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;</span><span class="number">1600</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--11.列出最低薪金大于1500的各种工作</span></span><br><span class="line"><span class="keyword">select</span> job <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> job <span class="keyword">having</span> <span class="built_in">min</span>(sal)<span class="operator">&gt;</span><span class="number">1500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--12.列出在每个部门工作的员工数量、平均工资</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>), <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--13.列出各个部门的MANAGER（经理）的最低薪金</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">min</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--14.查询每个部门每个岗位的工资总和。</span></span><br><span class="line"><span class="keyword">select</span> deptno, job, <span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno, job <span class="keyword">order</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--15.查询部门人数大于2的部门编号，最低工资、最高工资,部门人数。</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">min</span>(sal),<span class="built_in">max</span>(sal),<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">count</span>(<span class="number">1</span>)<span class="operator">&gt;</span><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--16.查询部门平均工资大于2000，且人数大于2的 部门编号、部门人数、部门平均工资 ，并按照部门人数升序排序。</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>),<span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;</span><span class="number">2000</span> <span class="keyword">and</span> <span class="built_in">count</span>(<span class="number">1</span>)<span class="operator">&gt;</span><span class="number">2</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">count</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--17.查询员工岗位中不是以“SA”开头并且平均工资在2500元以上的岗位及平均工资，并按平均工资降序排序</span></span><br><span class="line"><span class="keyword">select</span> job,<span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> job <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">&#x27;SA%&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> job <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;</span><span class="number">2500</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">avg</span>(sal) <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--18.查询岗位不为SALESMAN，工资和大于等于2500的岗位及 每种岗位的工资和</span></span><br><span class="line"><span class="keyword">select</span> job,<span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">!=</span><span class="string">&#x27;SALESMAN&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> job <span class="keyword">having</span> <span class="built_in">sum</span>(sal)<span class="operator">&gt;=</span><span class="number">2500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--19.写一个查询，显示每个部门最高工资和最低工资的差额</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">max</span>(sal)<span class="operator">-</span><span class="built_in">min</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.9总结：子查询</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.9%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AD%90%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h1 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h1><p>什么是子查询？简单理解，子查询就是嵌套在查询中的查询。<br>为什么要使用子查询？很多时候，我们对数据的查询处理不是一个查询语句就可以完成的； 不能完成的原因，可能是查询条件比较复杂，也可能是受困于SQL自身语法的限制； 这时候，子查询作为查询条件的重要组成部分，用在WHERE子句以及HAVING子句中， 可以帮助我们快速灵活的完成查询操作……</p>
<h2 id="单行子查询"><a href="#单行子查询" class="headerlink" title="单行子查询"></a>单行子查询</h2><p>单行子查询是指返回一行数据的子查询语句。<br>当where子句引用单行子查询时，可以使用 比较运算符（&#x3D;、&gt;、&lt;等）。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询工资大于平均工资的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp; <span class="comment">--单行单列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp); </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询部门平均工资大于整个公司平均工资的各部门平均工资</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 子查询可用于select中</span></span><br><span class="line"><span class="keyword">select</span> ename,sal,(<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 子查询可用于from中，其中起的别名可用于外层语句</span></span><br><span class="line"><span class="keyword">select</span> pjf <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) pjf <span class="keyword">from</span> emp)</span><br></pre></td></tr></table></figure>
<h2 id="多行子查询"><a href="#多行子查询" class="headerlink" title="多行子查询"></a>多行子查询</h2><p>单行子查询是指返回多行数据的子查询语句。当where子句引用多行子查询时，必须使用 多行比较符（in、any、all、exist等）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询部门编号&gt;10的员工信息</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> dept <span class="keyword">where</span> deptno<span class="operator">&gt;</span><span class="number">10</span>; <span class="comment">--多行单列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> dept <span class="keyword">where</span> deptno<span class="operator">&gt;</span><span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 多条件查询，大多数可以使用开窗代替</span></span><br><span class="line"><span class="comment">-- 例子：查看每个部门工资最高的员工姓名和他的工资</span></span><br><span class="line"><span class="comment">-- 开窗的做法 </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ( </span><br><span class="line">	<span class="keyword">select</span> ename,sal,deptno,<span class="built_in">rank</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) r <span class="keyword">from</span> emp</span><br><span class="line">) <span class="keyword">where</span> r<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 多条件多行操作 </span></span><br><span class="line"><span class="keyword">select</span> ename,sal,deptno <span class="keyword">from</span> emp <span class="keyword">where</span> (deptno,sal) <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> deptno,<span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 多行多列 单行多列 一个表 </span></span><br><span class="line"><span class="keyword">select</span> ename,sal,<span class="built_in">rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ( </span><br><span class="line">	<span class="keyword">select</span> ename,sal,<span class="built_in">rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) paiming <span class="keyword">from</span> emp </span><br><span class="line">) <span class="keyword">where</span> paiming<span class="operator">&lt;=</span><span class="number">3</span></span><br></pre></td></tr></table></figure>

<h1 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h1><p>SQL联合查询主要是涉及两个表或者多个表（自身表多次）的查询。 主要分为<strong>连接查询</strong>和<strong>集合查询</strong>两大类，其中：</p>
<p><strong>连接查询</strong> 列拼（保证行一致）<br>• 内连接（inner Join 或 Join）<br>• 左外连接（left outer Join 或 left Join）<br>• 右外连接（right outer Join 或 right Join）<br>• 全外连接（full outer Join 或 full Join） </p>
<p><strong>集合查询</strong> 行拼（保证列一致）<br>• minus（差集）<br>• intersect（交集）<br>• union、union all（并集）</p>
<h2 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h2><h3 id="交叉连接（笛卡尔连接）-cross-join"><a href="#交叉连接（笛卡尔连接）-cross-join" class="headerlink" title="交叉连接（笛卡尔连接） cross join"></a>交叉连接（笛卡尔连接） cross join</h3><p>把笛卡尔积所有的结果给显示出来了 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">A <span class="keyword">cross</span> <span class="keyword">join</span> B </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">cross</span> <span class="keyword">join</span> dept; </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp,dept;</span><br><span class="line"><span class="comment">-- 应用举例，两个球队之间交叉比赛，循环赛 </span></span><br></pre></td></tr></table></figure>

<h3 id="自然连接-natural-join"><a href="#自然连接-natural-join" class="headerlink" title="自然连接 natural join"></a>自然连接 natural join</h3><p>一种特殊的内连接 没有链接条件on，如果两个表里面有一列相等， 系统默认把这一列作为链接条件，并且把这两列合成一列放到表的最前面, 适用于知道表里面有这样一列，并且要用这一列的时候</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">natural</span> <span class="keyword">join</span> dept</span><br></pre></td></tr></table></figure>
<p>等于内连接结果集，一般不用</p>
<h3 id="using"><a href="#using" class="headerlink" title="using"></a>using</h3><p>跟自然连接作用相同，不同在于当有多个列相同时，可以指定用哪一列来做链接 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">join</span> dept <span class="keyword">using</span>(deptno)</span><br></pre></td></tr></table></figure>

<h3 id="内连接-inner-join"><a href="#内连接-inner-join" class="headerlink" title="内连接 inner join"></a>内连接 inner join</h3><p>inner可不写，只写join默认相当于inner join</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 等值连接：只返回两个表中连接字段相等的行。</span></span><br><span class="line"><span class="comment">-- 连接emp表和dept表，匹配deptno</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp,dept <span class="keyword">where</span> emp.deptno<span class="operator">=</span>dept.deptno </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">inner</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 不等值连接：过滤条件的符号不是等号</span></span><br><span class="line"><span class="comment">-- 查询员工的工资级别：连接emp表和salgrade表，根据emp表的sal和salgrade表的losal和hisal匹配其他内容</span></span><br><span class="line"><span class="keyword">select</span> ename,sal,grade <span class="keyword">from</span> emp <span class="keyword">inner</span> <span class="keyword">join</span> salgrade <span class="keyword">on</span> emp.sal <span class="keyword">between</span> losal <span class="keyword">and</span> hisal</span><br></pre></td></tr></table></figure>
<h4 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询出每个员工的上级领导(查询内容：员工编号、员工姓名、领导编号、领导姓名) </span></span><br><span class="line"><span class="keyword">select</span> yg.empno,yg.ename,ld.empno,ld.ename <span class="keyword">from</span> emp yg <span class="keyword">inner</span> <span class="keyword">join</span> emp ld <span class="keyword">on</span> yg.mgr<span class="operator">=</span>ld.empno </span><br></pre></td></tr></table></figure>
<h4 id="多表连接"><a href="#多表连接" class="headerlink" title="多表连接"></a>多表连接</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> yg.empno,yg.ename,ld.empno,ld.ename,dname <span class="keyword">from</span> emp yg <span class="keyword">inner</span> <span class="keyword">join</span> emp ld <span class="keyword">on</span> yg.mgr<span class="operator">=</span>ld.empno <span class="keyword">inner</span> <span class="keyword">join</span> dept <span class="keyword">on</span> ld.deptno<span class="operator">=</span>dept.deptno</span><br></pre></td></tr></table></figure>

<h3 id="外连接-outer-join"><a href="#外连接-outer-join" class="headerlink" title="外连接 outer join"></a>外连接 outer join</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">left</span> <span class="keyword">join</span>（左连接，左外连接）：返回包括左表中的所有记录和右表中连接字段相等的记录，如果没有匹配上，以<span class="keyword">null</span>值代表右边表的列。</span><br><span class="line"><span class="comment">-- 左表（from的表）为主表，全显示，右表（join的表）为子表，显示满足on匹配条件的数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> emp <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno</span><br><span class="line"></span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span>（右连接，右外连接）：返回包括右表中的所有记录和左表中连接字段相等的记录，如果没有匹配，以<span class="keyword">null</span>值代表左边表的列 </span><br><span class="line"><span class="comment">-- 右表（join的表）为主表，全显示，左表（from的表）为子表，显示满足on匹配条件的数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept <span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> emp <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno </span><br><span class="line"> </span><br><span class="line"><span class="keyword">full</span> <span class="keyword">join</span>（全外连接）：返回左右表中所有的记录和左右表中连接字段相等的记录，没有匹配上，以<span class="keyword">null</span>值代表左右边表的列。</span><br><span class="line"><span class="comment">-- 左右表都显示，满足条件的显示，不满足条件的留空</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">full</span> <span class="keyword">outer</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 筛选出来emp表中不满足条件的数据 </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">left</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> d.deptno <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line"><span class="comment">-- 筛选出dept表中不满足条件数据 </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">right</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> e.deptno <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line"><span class="comment">-- 筛选出emp和dept表中不满足条件的数据 </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">full</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> d.deptno <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">or</span> e.deptno <span class="keyword">is</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure>

<h2 id="集合查询"><a href="#集合查询" class="headerlink" title="集合查询"></a>集合查询</h2><p>关键词之间没有优先级，需要用括号使程序优先执行<br>集合查询要保证列的个数一致，当字段没值时用Null值填充</p>
<h3 id="union-并集（去重且排序，效率低）"><a href="#union-并集（去重且排序，效率低）" class="headerlink" title="union 并集（去重且排序，效率低）"></a>union 并集（去重且排序，效率低）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--对应字段的数据类型要保证一致</span></span><br><span class="line"><span class="keyword">select</span> empno,ename <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="keyword">null</span> <span class="keyword">from</span> dept</span><br><span class="line"></span><br><span class="line"><span class="comment">---行拼+列拼</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">inner</span> <span class="keyword">join</span>(</span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> dept) t</span><br><span class="line"><span class="keyword">on</span> t.deptno<span class="operator">=</span>emp.deptno</span><br></pre></td></tr></table></figure>
<h3 id="union-all-并集（不去重不排序，效率高）"><a href="#union-all-并集（不去重不排序，效率高）" class="headerlink" title="union all 并集（不去重不排序，效率高）"></a>union all 并集（不去重不排序，效率高）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> </span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> dept</span><br><span class="line"></span><br><span class="line"><span class="comment">--union all 并集全部显示（列名可以不一样，类型一样就可以了） </span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> </span><br><span class="line"><span class="keyword">select</span> sal <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure>
<h3 id="intersect-交集"><a href="#intersect-交集" class="headerlink" title="intersect 交集"></a>intersect 交集</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">intersect</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> dept </span><br></pre></td></tr></table></figure>
<h3 id="minus-差集"><a href="#minus-差集" class="headerlink" title="minus 差集"></a>minus 差集</h3><p>union&#x2F;union all&#x2F;intersect 没有上下关系，minus有（永远是上减下）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> dept</span><br><span class="line">minus</span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp </span><br></pre></td></tr></table></figure>

<h2 id="with-表名-as-子查询"><a href="#with-表名-as-子查询" class="headerlink" title="with 表名 as(子查询)"></a>with 表名 as(子查询)</h2><p>在 SQL 里，<code>WITH AS</code> 也被叫做公共表表达式（CTE），它能让你定义临时的命名结果集，这些结果集可在后续查询里引用（好用，多用）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> cte_name (column1, column2, ...) <span class="keyword">as</span> ( </span><br><span class="line">	<span class="comment">-- 这里是 CTE 查询定义 </span></span><br><span class="line">) </span><br><span class="line"><span class="comment">-- 主查询，使用上面定义的 CTE </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> cte_name;</span><br></pre></td></tr></table></figure>

<h2 id="exists"><a href="#exists" class="headerlink" title="exists"></a>exists</h2><p>用于检查子查询是否返回任何行<br>判断结果集是否为真，为真则返回前面的查询语句的结果集，为假则不执行前面的语句<br>它是一个非常重要的高级查询工具，特别适合处理存在性检查的复杂查询场景</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 列 <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">exists</span>(子查询);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询有下属的领导</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp ld <span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line">    <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp yg <span class="keyword">where</span> yg.mgr <span class="operator">=</span> ld.empno</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询emp表中有2个以上直接下属的领导人员信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp ld <span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp <span class="keyword">where</span> mgr<span class="operator">=</span>ld.empno  <span class="keyword">group</span> <span class="keyword">by</span> mgr <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">=</span><span class="number">2</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<ol>
<li><p><strong>执行过程</strong>：</p>
<ul>
<li>对外部查询的每一行，执行一次子查询</li>
<li>如果子查询返回至少一行，返回<code>TRUE</code></li>
<li>如果子查询返回空结果，返回<code>FALSE</code></li>
</ul>
</li>
<li><p><strong>关键特点</strong>：</p>
<ul>
<li>不关心子查询返回的具体数据，只关心是否有数据返回</li>
<li>子查询通常使用<code>select 1</code>或<code>select *</code>，因为返回的内容不重要</li>
<li>当找到第一个匹配项时就会停止搜索，因此性能通常较好</li>
</ul>
</li>
</ol>
<p>在 in 和 exists 中 子查询结果集大优先考虑用 exists<br>外表大内表小 用 in<br>外表小内表大 用 exists<br>在 not in 和 not exists 中无脑选 not exists</p>
<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1.查询工资比20号部门工资都大的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.查询工资比20号部门工资任意一个大的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="built_in">min</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.求最高工资员工的姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">=</span>(<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp)</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.查询员工工资和工作都和20号部门同时一样的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (sal,job) <span class="keyword">in</span>(<span class="keyword">select</span> sal,job <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.查询部门平均工资大于整个公司平均工资的部门</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp)</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.求工资前五名的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (</span><br><span class="line">       <span class="keyword">select</span> emp.<span class="operator">*</span>,<span class="built_in">dense_rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) rnk <span class="keyword">from</span> emp</span><br><span class="line">) <span class="keyword">where</span> rnk<span class="operator">&lt;=</span><span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--7.查询emp表中所有数据的第2条到第5条</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(</span><br><span class="line">       <span class="keyword">select</span> emp.<span class="operator">*</span>,<span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> rownum <span class="keyword">desc</span>) rnk <span class="keyword">from</span> emp</span><br><span class="line">) <span class="keyword">where</span> rnk <span class="keyword">between</span> <span class="number">2</span> <span class="keyword">and</span> <span class="number">5</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--8.求每个部门工资最高的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (deptno,sal) <span class="keyword">in</span>(</span><br><span class="line">       <span class="keyword">select</span> deptno,<span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--1.查询所有员工的名字和部门名称</span></span><br><span class="line"><span class="keyword">select</span> ename,dname <span class="keyword">from</span> emp,dept <span class="keyword">where</span> emp.deptno<span class="operator">=</span>dept.deptno</span><br><span class="line"><span class="keyword">select</span> ename,dname <span class="keyword">from</span> emp <span class="keyword">inner</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.查询所有部门名称及部门的所有员工列表</span></span><br><span class="line"><span class="keyword">select</span> d.deptno,wm_concat(ename)</span><br><span class="line"><span class="keyword">from</span> dept d <span class="keyword">left</span> <span class="keyword">join</span> emp e <span class="keyword">on</span> d.deptno <span class="operator">=</span> e.deptno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> d.deptno,d.dname</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> d.deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.求所有员工姓名,工资和其领导的姓名,工资</span></span><br><span class="line"><span class="keyword">select</span> yg.ename,yg.sal,ld.ename,ld.sal </span><br><span class="line"><span class="keyword">from</span> emp yg <span class="keyword">inner</span> <span class="keyword">join</span> emp ld <span class="keyword">on</span> yg.mgr<span class="operator">=</span>ld.empno</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.求所有员工工资大于其领导工资的员工姓名和其上级领导姓名，上级领导工资及员工工资</span></span><br><span class="line"><span class="keyword">select</span> yg.ename,yg.sal,ld.ename,ld.sal </span><br><span class="line"><span class="keyword">from</span> emp yg <span class="keyword">inner</span> <span class="keyword">join</span> emp ld <span class="keyword">on</span> yg.mgr<span class="operator">=</span>ld.empno </span><br><span class="line"><span class="keyword">where</span> yg.sal<span class="operator">&gt;</span>ld.sal</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.在上题的基础上查询员工所对应的部门</span></span><br><span class="line"><span class="keyword">select</span> yg.deptno,dname,yg.ename,yg.sal,ld.ename,ld.sal </span><br><span class="line"><span class="keyword">from</span> emp yg <span class="keyword">inner</span> <span class="keyword">join</span> emp ld <span class="keyword">on</span> yg.mgr<span class="operator">=</span>ld.empno</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> dept <span class="keyword">on</span> yg.deptno<span class="operator">=</span>dept.deptno</span><br><span class="line"><span class="keyword">where</span> yg.sal<span class="operator">&gt;</span>ld.sal</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.查询出不是领导的员工</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> empno <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> mgr <span class="keyword">from</span> emp <span class="keyword">where</span> mgr <span class="keyword">is</span> <span class="keyword">not null</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.查询出每个员工编号，姓名，部门名称，工资等级和他的上级领导的姓名，工资等级</span></span><br><span class="line"><span class="keyword">select</span> yg.empno,yg.ename,dname,yg_sg.grade,ld.ename,ld_sg.grade</span><br><span class="line"><span class="keyword">from</span>  emp yg </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> yg.deptno<span class="operator">=</span>d.deptno</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> emp ld <span class="keyword">on</span> yg.mgr<span class="operator">=</span>ld.empno</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> salgrade yg_sg <span class="keyword">on</span> yg.sal <span class="keyword">between</span> yg_sg.losal <span class="keyword">and</span> yg_sg.hisal</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> salgrade ld_sg <span class="keyword">on</span> ld.sal <span class="keyword">between</span> ld_sg.losal <span class="keyword">and</span> ld_sg.hisal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--1.10号部门的部门名称和7369的员工姓名进行行拼显示，使用union all实现</span></span><br><span class="line"><span class="keyword">select</span> dname <span class="keyword">from</span> dept <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">10</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> empno<span class="operator">=</span><span class="number">7369</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.查看不是领导的员工编号和员工姓名，使用minus和子查询实现</span></span><br><span class="line"><span class="keyword">select</span> empno,ename <span class="keyword">from</span> emp</span><br><span class="line">minus</span><br><span class="line"><span class="keyword">select</span> empno,ename <span class="keyword">from</span> emp <span class="keyword">where</span> empno <span class="keyword">in</span> (<span class="keyword">select</span> mgr <span class="keyword">from</span> emp <span class="keyword">where</span> mgr <span class="keyword">is</span> <span class="keyword">not null</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--1.查询比三个部门平均工资都高的员工编号，员工姓名，工种和收入</span></span><br><span class="line"><span class="keyword">select</span> empno,ename,job,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span><span class="keyword">all</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.显示部门名称为RESEARCH的员工姓名，工资</span></span><br><span class="line"><span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp e</span><br><span class="line"><span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno</span><br><span class="line"><span class="keyword">where</span> dname<span class="operator">=</span><span class="string">&#x27;RESEARCH&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.如果部门名称中含有字母T，则查询该部门所有员工信息，两种方法实现</span></span><br><span class="line"><span class="comment">--join</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e</span><br><span class="line"><span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno</span><br><span class="line"><span class="keyword">where</span> dname <span class="keyword">like</span> <span class="string">&#x27;%T%&#x27;</span></span><br><span class="line"><span class="comment">--子查询</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span>(</span><br><span class="line">       <span class="keyword">select</span> deptno <span class="keyword">from</span> dept <span class="keyword">where</span> dname <span class="keyword">like</span> <span class="string">&#x27;%T%&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.如果有平均工资不小于1500的部门信息则查询相应的部门信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept <span class="keyword">where</span> deptno <span class="keyword">in</span>(</span><br><span class="line">       <span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;=</span><span class="number">1500</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.查询出Emp表中比所有销售员(“SALESMAN”)工资低的员工姓名、工作、工资</span></span><br><span class="line"><span class="keyword">select</span> ename,job,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&lt;</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="built_in">min</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;SALESMAN&#x27;</span> </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.显示比工资最高的员工参加工作时间晚的员工姓名，参加工作时间</span></span><br><span class="line"><span class="keyword">select</span> ename,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> hiredate<span class="operator">&gt;</span><span class="keyword">all</span>(</span><br><span class="line">       <span class="keyword">select</span> hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">=</span>(</span><br><span class="line">              <span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp</span><br><span class="line">       )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.查询emp表中有2个以上直接下属的领导人员信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp <span class="keyword">where</span> mgr<span class="operator">=</span>e.empno  <span class="keyword">group</span> <span class="keyword">by</span> mgr <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">=</span><span class="number">2</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--8.使用开窗函数求出emp表中每一个部门工资第一高的人员姓名ename和人员工资sal，以及他所在部门的最高工资</span></span><br><span class="line"><span class="keyword">with</span> rnk_emp <span class="keyword">as</span>(</span><br><span class="line">     <span class="keyword">select</span> ename,sal,deptno,</span><br><span class="line">            <span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>)  row_num,</span><br><span class="line">            <span class="built_in">max</span>(sal)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno) dept_max_sal</span><br><span class="line">     <span class="keyword">from</span> emp</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> rnk_emp <span class="keyword">where</span> row_num<span class="operator">=</span><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--9.emp表中每个部门员工入职日期最早的员工信息，多条件子查询</span></span><br><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">join</span>(</span><br><span class="line">       <span class="keyword">select</span> deptno,<span class="built_in">min</span>(hiredate) min_date <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line">) d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">and</span> e.hiredate <span class="operator">=</span> d.min_date</span><br><span class="line"></span><br><span class="line"><span class="comment">--10.实现下表功能</span></span><br><span class="line"><span class="comment">--小计</span></span><br><span class="line"><span class="keyword">select</span> e.deptno &quot;部门&quot;, d.dname &quot;部门名称&quot;, e.job &quot;工作&quot;, <span class="built_in">count</span>(<span class="operator">*</span>) &quot;小计&quot;, <span class="keyword">null</span> &quot;合计&quot;</span><br><span class="line"><span class="keyword">from</span> emp e <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno <span class="operator">=</span> d.deptno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> e.deptno, d.dname, e.job</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="comment">--合计</span></span><br><span class="line"><span class="keyword">select</span> e.deptno &quot;部门&quot;, d.dname &quot;部门名称&quot;, <span class="keyword">null</span> &quot;工作&quot;, <span class="keyword">null</span> &quot;小计&quot;, <span class="built_in">count</span>(<span class="operator">*</span>) &quot;合计&quot;</span><br><span class="line"><span class="keyword">from</span> emp e <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno <span class="operator">=</span> d.deptno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> e.deptno, d.dname</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> &quot;部门&quot;,&quot;工作&quot; <span class="keyword">nulls first</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.7总结：函数</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.7%E6%80%BB%E7%BB%93%EF%BC%9A%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>SQL 函数会对传递进来的参数进行处理，并返回一个处理结果，也就是返回一个值。通常用于返回特定的数据，可以很方便地转换和处理数据，Oracle 数据库中主要使用两种类型的函数： </p>
<ul>
<li>单行函数：对每一个函数应用在表的记录中时，只能输入一行结果，返回一个结果，有：<blockquote>
<p>字符函数：对字符串操作。<br>数字函数：对数字进行计算，返回一个数字。<br>转换函数：可以将一种数据类型转换为另外一种数据类型。<br>日期函数：对日期和时间进行处理。 </p>
</blockquote>
</li>
<li>聚合函数：聚合函数同时可以对多行数据进行操作，并返回一个结果。</li>
</ul>
<h2 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--加法计算器 输入两个数 返回一个和 </span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> getSum(n1 <span class="keyword">in</span> number,n2 <span class="keyword">in</span> number) <span class="keyword">return</span> number </span><br><span class="line"><span class="keyword">as</span> he number(<span class="number">4</span>); </span><br><span class="line"><span class="keyword">begin</span> he:<span class="operator">=</span>n1<span class="operator">+</span>n2; <span class="keyword">return</span> he; <span class="keyword">end</span>; </span><br><span class="line"><span class="keyword">select</span> getSum(<span class="number">3</span>,<span class="number">5</span>) <span class="keyword">from</span> dual <span class="number">102</span> </span><br><span class="line"><span class="keyword">select</span> empno,deptno,sal,comm,getSum(empno,deptno) <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure>

<h2 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h2><h3 id="length-计算字符串长度"><a href="#length-计算字符串长度" class="headerlink" title="length 计算字符串长度"></a>length 计算字符串长度</h3><p>length 不区分中英文<br>lengthb 区分中英文</p>
<h3 id="upper-和-lower-大-小写转换"><a href="#upper-和-lower-大-小写转换" class="headerlink" title="upper 和 lower 大&#x2F;小写转换"></a>upper 和 lower 大&#x2F;小写转换</h3><h3 id="concat-连接字符串"><a href="#concat-连接字符串" class="headerlink" title="concat 连接字符串"></a>concat 连接字符串</h3><p>只能连接两个字符</p>
<h3 id="lpad-和-rpad-左-右填充"><a href="#lpad-和-rpad-左-右填充" class="headerlink" title="lpad 和 rpad 左&#x2F;右填充"></a>lpad 和 rpad 左&#x2F;右填充</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 对原始字符串str向左填充指定字符（str_p，可不填，默认空格），直到字符串达到n个</span></span><br><span class="line">lpad(str,len,str_p)</span><br><span class="line"><span class="comment">-- 对ABC向左填充*直到变为5个字符，结果为&#x27;**ABC&#x27;</span></span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;ABC&#x27;</span>,<span class="number">5</span>,<span class="string">&#x27;*&#x27;</span>) <span class="keyword">from</span> dual</span><br><span class="line"><span class="comment">-- str_p不填时默认填充空格，结果为&#x27;  ABC&#x27;</span></span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;ABC&#x27;</span>,<span class="number">5</span>) <span class="keyword">from</span> dual</span><br><span class="line"><span class="comment">-- 若len小于原始字符，则改为保留左侧len个字符</span></span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;ABC&#x27;</span>,<span class="number">2</span>) <span class="keyword">from</span> dual <span class="comment">-- 结果为AB</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向右填充，同理</span></span><br><span class="line">rpad(str,len,str_p)</span><br><span class="line"><span class="comment">-- 对ABC向右填充o直到变为6个字符，结果为&#x27;ABCooo&#x27;</span></span><br><span class="line"><span class="keyword">select</span> rpad(<span class="string">&#x27;ABC&#x27;</span>,<span class="number">6</span>,<span class="string">&#x27;o&#x27;</span>) <span class="keyword">from</span> dual</span><br><span class="line"><span class="comment">-- 若len小于原始字符，依然改为保留左侧len个字符</span></span><br><span class="line"><span class="keyword">select</span> rpad(<span class="string">&#x27;ABC&#x27;</span>,<span class="number">2</span>) <span class="keyword">from</span> dual <span class="comment">-- 结果为AB</span></span><br></pre></td></tr></table></figure>
<h3 id="instr-找字符串出现位置"><a href="#instr-找字符串出现位置" class="headerlink" title="instr 找字符串出现位置"></a>instr 找字符串出现位置</h3><p>效率比like高</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 从字符串str1中找str2，从第start个字符开始找,找第n次出现的位</span></span><br><span class="line">instr(str1,str2,<span class="keyword">start</span>,n) <span class="comment">-- strat和n可不填，默认为1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 从头开始找第2个A出现的位置，结果为5</span></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;BABBABAB&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 当start为负时，从倒数第start位往前找</span></span><br><span class="line"><span class="comment">-- 从倒数第3位找第1个A出现的位置，结果为5</span></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;BABBABAB&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="number">-3</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 找出名字含T的的员工名字</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> instr(ename,<span class="string">&#x27;T&#x27;</span>)<span class="operator">&gt;</span><span class="number">0</span></span><br></pre></td></tr></table></figure>

<h3 id="substr-截取字符串"><a href="#substr-截取字符串" class="headerlink" title="substr 截取字符串"></a>substr 截取字符串</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 对字符串str截取，从第start个字符开始，截取len个字符，返回值是一个字符串</span></span><br><span class="line">substr(str,<span class="keyword">start</span>,len) <span class="comment">-- len可不填，默认截完</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 从第2个字符开始截取3个字符，结果为BCD</span></span><br><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;ABCDEF&#x27;</span>,<span class="number">2</span>,<span class="number">3</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>

<h3 id="trunc-截断"><a href="#trunc-截断" class="headerlink" title="trunc 截断"></a>trunc 截断</h3><h4 id="数字截断：截断数字到指定的小数位数"><a href="#数字截断：截断数字到指定的小数位数" class="headerlink" title="数字截断：截断数字到指定的小数位数"></a>数字截断：截断数字到指定的小数位数</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- num:要截断的数字； n：要保留的小数位</span></span><br><span class="line">trunc(num,n)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- n为正数时，截断到n位小数，结果为123.45</span></span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.4567</span>,<span class="number">2</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">-- n不填时默认为0，即仅保留整数部分，结果为123</span></span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.4567</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">-- n为负数时，截断将小数点左边n位置0，结果: 120</span></span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.4567</span>, <span class="number">-1</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>

<h4 id="日期截断：将时间设置为当天开始的时间（00-00-00）"><a href="#日期截断：将时间设置为当天开始的时间（00-00-00）" class="headerlink" title="日期截断：将时间设置为当天开始的时间（00:00:00）"></a>日期截断：将时间设置为当天开始的时间（00:00:00）</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 当天 2025/5/7，只显示日期，不显示时间</span></span><br><span class="line"><span class="keyword">select</span> trunc(sysdate) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 当前月份的第一天 2025/5/1</span></span><br><span class="line"><span class="keyword">select</span> trunc(sysdate,<span class="string">&#x27;month&#x27;</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 当前年份的第一天 2025/1/1</span></span><br><span class="line"><span class="keyword">select</span> trunc(sysdate,<span class="string">&#x27;year&#x27;</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>
<h3 id="replace-替换字符串"><a href="#replace-替换字符串" class="headerlink" title="replace 替换字符串"></a>replace 替换字符串</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--将字符串str中的字符s替换成字符d</span></span><br><span class="line">replace(str,s,d)</span><br><span class="line"><span class="comment">--显示所有员工的姓名，将字符&#x27;A&#x27;替换为&#x27;ai&#x27;</span></span><br><span class="line"><span class="keyword">select</span> replace(ename,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;ai&#x27;</span>) <span class="keyword">from</span> emp</span><br><span class="line"><span class="comment">--d可不填，默认为空，即相当于删除字符&#x27;A&#x27;</span></span><br><span class="line"><span class="keyword">select</span> replace(ename,<span class="string">&#x27;A&#x27;</span>) <span class="keyword">from</span> emp</span><br><span class="line"><span class="comment">--脱敏（脱除敏感数据）</span></span><br></pre></td></tr></table></figure>
<h3 id="translate-替换字符串"><a href="#translate-替换字符串" class="headerlink" title="translate 替换字符串"></a>translate 替换字符串</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 将字符串str中的from替换为to（其中from和to是逐个字符一一对应关系）</span></span><br><span class="line"><span class="built_in">translate</span>(str,<span class="keyword">from</span>,<span class="keyword">to</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 简单字符替换，结果为&#x27;a234b&#x27; (1→a, 5→b)</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">translate</span>(<span class="string">&#x27;12345&#x27;</span>,<span class="string">&#x27;15&#x27;</span>,<span class="string">&#x27;ab&#x27;</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">--字符删除,结果为&#x27;He Wrd&#x27; (l和o被删除)</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">translate</span>(<span class="string">&#x27;Hello World&#x27;</span>,<span class="string">&#x27;lo&#x27;</span>,<span class="string">&#x27;&#x27;</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">--加密转换 (字母表反向映射)</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">translate</span>(<span class="string">&#x27;SECRET&#x27;</span>,<span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>,<span class="string">&#x27;ZYXWVUTSRQPONMLKJIHGFEDCBA&#x27;</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>

<h2 id="数字函数"><a href="#数字函数" class="headerlink" title="数字函数"></a>数字函数</h2><h3 id="取整"><a href="#取整" class="headerlink" title="取整"></a>取整</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- num为要取整的数字，n为精度，可不填，默认为0，即取整数</span></span><br><span class="line"><span class="comment">-- n为正数时取小数点之后n位，为负数时则为小数点之前</span></span><br><span class="line">round(num,n) 四舍五入</span><br><span class="line"><span class="built_in">floor</span>(num,n) 向下取整</span><br><span class="line"><span class="built_in">ceil</span>(num,n) 向上取整</span><br></pre></td></tr></table></figure>

<h3 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mod</span>(num1,num2) 取num1<span class="operator">/</span>num2的余数</span><br><span class="line"><span class="built_in">power</span>(n,m) 求n的m次幂</span><br><span class="line"><span class="built_in">sqrt</span>(num) 返回num的平方根</span><br></pre></td></tr></table></figure>
<h2 id="转换函数"><a href="#转换函数" class="headerlink" title="转换函数"></a>转换函数</h2><p>隐式转换：指Oracle在执行SQL语句时自动将数据类型转换成需要的数据类型。隐式转换可能会 导致精度损失或数据不准确，因此在使用时需要谨慎。</p>
<p>显示转换：指在SQL语句中使用一些函数强制将某个数据类型转换成另一个数据类型，如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">to_number 字符转换为数字 <span class="comment">-- 正常情况下数字可以自信隐式转换，不是数字的不能使用to_number转换，结论就是一般情况不用</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> empno<span class="operator">=</span>to_number(<span class="string">&#x27;7499&#x27;</span>) <span class="comment">--数字转换的前提是看起来像数字</span></span><br><span class="line"></span><br><span class="line">to_date 字符类型按一定格式转化为日期类型 <span class="comment">-- 跟日期有关的不管是日期转字符还是字符转日期都必须带日期格式</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> hiredate<span class="operator">=</span>to_date(<span class="number">1981</span>,<span class="string">&#x27;yyyy&#x27;</span>)</span><br><span class="line"></span><br><span class="line">to_char 数字转化为字符</span><br><span class="line">to_char 日期转化为字符,必须加单引号,并且区分大小写</span><br><span class="line"></span><br><span class="line"><span class="comment">-- to_char的其他用法</span></span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;ss&#x27;</span>) <span class="keyword">from</span> dual 取当前时间秒部分</span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;mi&#x27;</span>) <span class="keyword">from</span> dual 取当前时间分钟部分 </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;HH24&#x27;</span>) <span class="keyword">from</span> dual 取当前时间小时部分 </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;DD&#x27;</span>) <span class="keyword">from</span> dual 取当前时间日期部分 </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;MM&#x27;</span>) <span class="keyword">from</span> dual 取当前时间月部分 </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;YYYY&#x27;</span>) <span class="keyword">from</span> dual 取当前时间年部分 </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">from</span> dual 取当前时间是一个月中的第几周(从<span class="number">1</span>日开始算) </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;ww&#x27;</span>) <span class="keyword">from</span> dual 取当前时间是一年中的第几周（从<span class="number">1.1</span>开始算） </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;iw&#x27;</span>) <span class="keyword">from</span> dual 取当前时间是一年中的第几周（按实际日历的） </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;d&#x27;</span>) <span class="keyword">from</span> dual 取当前时间是一周的第几天，从星期天开始，周六结束 <span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;day&#x27;</span>) <span class="keyword">from</span> dual 取当前日是星期几，和数据库设置的字符集有关，会输出<span class="string">&#x27;Tuesday&#x27;</span>或星期几 </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;ddd&#x27;</span>) <span class="keyword">from</span> dual 当前日是一年中的第几天</span><br></pre></td></tr></table></figure>

<h2 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">last_day(日期)：取当前日期月的最后一天</span><br><span class="line"></span><br><span class="line">next_day(sysdate,n)：取离自己日期最近的一个周（下周） 的第几天，假如本周还未过到这一天，那么求的就是本周对应的天数</span><br><span class="line"><span class="comment">--下下周</span></span><br><span class="line"><span class="keyword">select</span> next_day(next_day(sysdate,<span class="number">2</span>),<span class="number">2</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line">add_months(日期,月)：给一个日期加上若干个月</span><br><span class="line"><span class="comment">--加一年</span></span><br><span class="line"><span class="keyword">select</span> add_months(sysdate,<span class="number">12</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line">months_between(date1,date2)：取两个日期相差的月数</span><br></pre></td></tr></table></figure>

<h3 id="nvl-空值替换"><a href="#nvl-空值替换" class="headerlink" title="nvl 空值替换"></a>nvl 空值替换</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 若exp1为空，返回exp2，否则返回exp1（主要两者类型要一致）</span></span><br><span class="line">nvl(exp1,exp2)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 若exp1不为空，返回exp2，若exp2为空，返回exp3</span></span><br><span class="line"><span class="comment">-- exp2和exp3类型不同的话，exp3会转换为exp2的类型</span></span><br><span class="line">nvl2(exp1,exp2,exp3)</span><br></pre></td></tr></table></figure>

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1.求姓名为SMITH的员工的工作名称长度</span></span><br><span class="line"><span class="keyword">select</span> length(job) <span class="keyword">from</span> emp <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;SMITH&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.求名字长度为6的员工姓名，编号</span></span><br><span class="line"><span class="keyword">select</span> ename,empno <span class="keyword">from</span> emp <span class="keyword">where</span> length(ename)<span class="operator">=</span><span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.求员工的工资，格式如：姓名是：SMITH,工资是：800</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;姓名是：&#x27;</span> <span class="operator">||</span> ename <span class="operator">||</span> <span class="string">&#x27;，工资是：&#x27;</span> <span class="operator">||</span> sal <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.找出emp表中员工名字包含T字母的员工</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%T%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--5.找出emp表里名字第4位之后含T字母的员工</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;____%T%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--6.找出emp表里名字倒数第3位之前含M字母的员工</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%M%___&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--7.求第五位是H的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;____H%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--8.求姓名中带有三个L的姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%LLL%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--9.将员工姓名首字母大写，其余字母小写</span></span><br><span class="line"><span class="keyword">select</span> initcap(ename) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--10.将员工姓名首字母小写，其余字母大写</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(substr(ename,<span class="number">1</span>,<span class="number">1</span>)) <span class="operator">||</span> <span class="built_in">upper</span>(substr(ename,<span class="number">2</span>)) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--11.查询工资是偶数的员工</span></span><br><span class="line"><span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="built_in">mod</span>(sal,<span class="number">2</span>)<span class="operator">=</span><span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--12.求1981年2月20号入职的员工</span></span><br><span class="line"><span class="keyword">select</span> ename,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> hiredate <span class="operator">=</span> <span class="type">date</span> <span class="string">&#x27;1981-02-20&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--13.求1981年入职的员工</span></span><br><span class="line"><span class="keyword">select</span> ename,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> to_char(hiredate,<span class="string">&#x27;yyyy&#x27;</span>)<span class="operator">=</span><span class="string">&#x27;1981&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--14.求2月份入职的员工</span></span><br><span class="line"><span class="keyword">select</span> ename,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> to_char(hiredate,<span class="string">&#x27;mm&#x27;</span>)<span class="operator">=</span><span class="string">&#x27;02&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--15.取当前月倒数第5天入职的员工</span></span><br><span class="line"><span class="keyword">select</span> ename,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> </span><br><span class="line">to_char(hiredate,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>)<span class="operator">=</span> to_char(last_day(sysdate)<span class="number">-4</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--16.取每个月倒数第5天入职的员工</span></span><br><span class="line"><span class="keyword">select</span> ename,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> </span><br><span class="line">to_char(hiredate,<span class="string">&#x27;dd&#x27;</span>)<span class="operator">=</span> to_char(last_day(hiredate)<span class="number">-4</span>,<span class="string">&#x27;dd&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--17.求下下个周三的日期</span></span><br><span class="line"><span class="keyword">select</span> next_day(sysdate,<span class="number">4</span>)<span class="operator">+</span><span class="number">7</span> <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">--18.求3个月后的今天</span></span><br><span class="line"><span class="keyword">select</span> add_months(sysdate,<span class="number">3</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">--19.求每个员工的月收入</span></span><br><span class="line"><span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--20.如果comm为空就显示“No Commission”，如果不为空就显示comm的值</span></span><br><span class="line"><span class="keyword">select</span> nvl(to_char(comm),<span class="string">&#x27;No Commission&#x27;</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--21.求员工的一年的总收入（工资和佣金）</span></span><br><span class="line"><span class="keyword">select</span> sal<span class="operator">*</span><span class="number">12</span><span class="operator">+</span>nvl(comm,<span class="number">0</span>) 总薪资 <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--进阶额外40题</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--1、使用concat 函数完成 &quot;我是***,我的工作是***&quot; </span></span><br><span class="line"><span class="keyword">select</span> concat(concat(<span class="string">&#x27;我是&#x27;</span>,ename),concat(<span class="string">&#x27;我的工作是&#x27;</span>,job)) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--2、对emp  ename字段首字母进行大写</span></span><br><span class="line"><span class="keyword">select</span> initcap(ename) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--3、使用函数 求所有人员姓名的大写 首字母大写 小写 以及姓名字符长度 initcap（），upper（），lower（），length（）</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(ename),initcap(ename),<span class="built_in">lower</span>(ename),length(ename) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--3、从EMP表中获取job下所有职业名【distinct】（进阶需求：将工作名称都替换成中文case when）</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> <span class="keyword">case</span></span><br><span class="line">       <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;职员&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;SALESMAN&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;销售&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;PRESIDENT&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;董事&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;经理&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;ANALYST&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;分析&#x27;</span></span><br><span class="line">       <span class="keyword">else</span> <span class="string">&#x27;其他&#x27;</span></span><br><span class="line">       <span class="keyword">end</span> 职业</span><br><span class="line"><span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.instr()求ename字段 A字母位置 </span></span><br><span class="line"><span class="keyword">select</span> ename,instr(ename,<span class="string">&#x27;A&#x27;</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.显示所有员工的姓名，用“ai”替换所有“A”</span></span><br><span class="line"><span class="keyword">select</span> replace(ename,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;ai&#x27;</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.以首字母小写后面大写方式显示所有员工姓名。</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(substr(ename,<span class="number">1</span>,<span class="number">1</span>)) <span class="operator">||</span> <span class="built_in">upper</span>(substr(ename,<span class="number">2</span>)) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.查询员工姓名的第三个字母是A的员工姓名 </span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;__A%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--8.显示正好为5个字符的员工的姓名。</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;_____&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--9.求所有ename带‘L’的员工，并以L为界将L前的字母大写，之后的字母小写。</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(substr(ename,<span class="number">1</span>,instr(ename,<span class="string">&#x27;L&#x27;</span>)<span class="number">-1</span>)) <span class="operator">||</span> <span class="string">&#x27;L&#x27;</span> <span class="operator">||</span> <span class="built_in">lower</span>(substr(ename,instr(ename,<span class="string">&#x27;L&#x27;</span>)<span class="operator">+</span><span class="number">1</span>))</span><br><span class="line"><span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%L%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--10.对所有ename用空格进行长度补齐，左右两边的空格数大致相同，使其统一长度为15，（对该列数据进行去空格操作）。</span></span><br><span class="line"><span class="keyword">select</span> rpad(lpad(ename,length(ename)<span class="operator">+</span><span class="built_in">ceil</span>((<span class="number">15</span><span class="operator">-</span>length(ename))<span class="operator">/</span><span class="number">2</span>)),<span class="number">15</span>) 姓名 <span class="keyword">from</span> emp </span><br><span class="line"></span><br><span class="line"><span class="comment">--11.在所有的名字中间使用‘+’进行补齐至18位（奇数名使用数字函数round（）将位数取整）</span></span><br><span class="line"><span class="keyword">select</span> ename,substr(ename,<span class="number">1</span>,length(ename)<span class="operator">-</span>round(length(ename)<span class="operator">/</span><span class="number">2</span>)) <span class="operator">||</span> lpad(substr(ename,round(length(ename)<span class="operator">/</span><span class="number">2</span>)),<span class="number">18</span><span class="operator">-</span>round(length(ename)<span class="operator">/</span><span class="number">2</span>),<span class="string">&#x27;+&#x27;</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--12.将所有的ename中A开头或A结尾的记录 中的A去掉</span></span><br><span class="line"><span class="keyword">select</span> ename,replace(ename,<span class="string">&#x27;A&#x27;</span>) <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;A%&#x27;</span> <span class="keyword">or</span> ename <span class="keyword">like</span> <span class="string">&#x27;%A&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--13.求所有名字，b字母出现的个数</span></span><br><span class="line"><span class="keyword">select</span> ename,length(ename)<span class="operator">-</span>length(replace(ename,<span class="string">&#x27;b&#x27;</span>)) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--14.查找a-z字母表中a字母出现次数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--15.截取ename字段的后3位字母</span></span><br><span class="line"><span class="keyword">select</span> substr(ename,length(ename)<span class="number">-2</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--16.求所有员工的名字字符长度，并按照从高到低排列，所有员工名称小写</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(ename) 员工, length(ename) 字符长度 <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> 字符长度 <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--17.将ename和job 进行并列并在中间填充 * 使整列达到20个字符</span></span><br><span class="line"><span class="keyword">select</span> rpad(ename,<span class="number">20</span><span class="operator">-</span>length(job),<span class="string">&#x27;*&#x27;</span>) <span class="operator">||</span> job <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--18.显示员工姓名中最后一个字符是T的员工以及姓名第二个字是L 的员工 用instr这个语句实现 </span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> instr(ename,<span class="string">&#x27;T&#x27;</span>,<span class="number">-1</span>)<span class="operator">=</span>length(ename) <span class="keyword">or</span> instr(ename,<span class="string">&#x27;L&#x27;</span>,<span class="number">2</span>)<span class="operator">=</span><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--19.取所有员工日薪，精确到分，对后面的位数进行四舍五入。</span></span><br><span class="line"><span class="keyword">select</span> round(sal<span class="operator">*</span><span class="number">12</span><span class="operator">/</span><span class="number">365</span>,<span class="number">2</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--20.取所有员工日薪，精确到分，对小数位数进行截断，只保留整数部分</span></span><br><span class="line"><span class="keyword">select</span> trunc(round(sal<span class="operator">*</span><span class="number">12</span><span class="operator">/</span><span class="number">365</span>,<span class="number">2</span>)) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="number">21.</span>求所有员工日薪的最大整数并加余数 </span><br><span class="line"><span class="number">22.</span>求所有员工日薪的最大小数点后<span class="number">2</span>位有效数</span><br><span class="line"><span class="number">23.</span>求入职最早和入职最晚员工</span><br><span class="line"><span class="number">24.</span>求所有员工入职<span class="number">10</span>年后的日期</span><br><span class="line"><span class="number">25</span>求员工入职的时间时星期几</span><br><span class="line"><span class="number">26</span>求员工到目前入职了多少月多少周多少天多少年，所有日期都四舍五入</span><br><span class="line"><span class="number">27.</span>员工入职时间月底是星期几</span><br><span class="line"><span class="number">28</span>求所有员工入职的下一个月的第一个星期一</span><br><span class="line"><span class="number">29</span>求当前时间的一个月零<span class="number">12</span>天是几月几号</span><br><span class="line"><span class="number">30</span>求当前年月日时分秒数值相加之和</span><br><span class="line"><span class="number">31.</span>将<span class="number">2018</span>年<span class="number">1</span>月<span class="number">1</span>日加一年零<span class="number">2</span>个月 后是什么日期</span><br><span class="line"><span class="number">32.</span>把字符串<span class="number">2015</span><span class="number">-3</span>月<span class="number">-18</span> <span class="number">13</span>:<span class="number">13</span>:<span class="number">13</span>?转换成日期格式?转换成日期格式，并计算和系统当前时间间隔多少天。</span><br><span class="line"><span class="number">33.</span>找出各月倒数第<span class="number">2</span>天受雇的所有员工。</span><br><span class="line"><span class="number">34.</span>显示所有<span class="number">11</span>月份入职的员工</span><br><span class="line"><span class="number">35.</span>求 各个工作岗位中 工资最高的金额和最低的金额</span><br><span class="line"><span class="number">36.</span>求各个部门的工资总和，并列出工资数最高的金额，求标准差。</span><br><span class="line"><span class="number">37.</span>求各部门薪酬最大值和最小值的差值</span><br><span class="line"><span class="number">38.</span>统计 <span class="number">85</span>年前入职的员工 和<span class="number">85</span>年入职后的员工的平均工资</span><br><span class="line"><span class="number">39.</span> 将<span class="number">30</span>号部门人员都改<span class="number">40</span>号部门 人员显示</span><br><span class="line"><span class="number">40.</span>对员工工资进行评级 <span class="number">4000</span><span class="number">-5000</span> A级   <span class="number">3000</span><span class="number">-4000</span>B级 <span class="number">2</span><span class="number">-3000</span>C级 <span class="number">1</span><span class="number">-2000</span>D级 <span class="number">1000</span>以下的是F级</span><br><span class="line"><span class="number">41.</span>对各个部门各职业工资情况进行从高到低排序</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.8总结：开窗函数</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/5.8%E6%80%BB%E7%BB%93%EF%BC%9A%E5%BC%80%E7%AA%97%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="case-when-搜索"><a href="#case-when-搜索" class="headerlink" title="case when 搜索"></a>case when 搜索</h2><p>简单case函数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno,<span class="keyword">case</span> deptno </span><br><span class="line">	<span class="keyword">when</span> <span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;第一部门&#x27;</span> </span><br><span class="line">	<span class="keyword">when</span> <span class="number">20</span> <span class="keyword">then</span> <span class="string">&#x27;第二部门&#x27;</span> </span><br><span class="line">	<span class="keyword">when</span> <span class="number">30</span> <span class="keyword">then</span> <span class="string">&#x27;第三部门&#x27;</span> </span><br><span class="line">	<span class="keyword">else</span> <span class="string">&#x27;第四部门&#x27;</span> </span><br><span class="line">	<span class="keyword">end</span> <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure>

<p>case搜索函数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno,<span class="keyword">case</span> </span><br><span class="line">	<span class="keyword">when</span> deptno<span class="operator">=</span><span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;第一部门&#x27;</span> </span><br><span class="line">	<span class="keyword">when</span> deptno<span class="operator">=</span><span class="number">20</span> <span class="keyword">then</span> <span class="string">&#x27;第二部门&#x27;</span> </span><br><span class="line">	<span class="keyword">when</span> deptno<span class="operator">=</span><span class="number">30</span> <span class="keyword">then</span> <span class="string">&#x27;第三部门&#x27;</span> </span><br><span class="line">	<span class="keyword">else</span> <span class="string">&#x27;第四部门&#x27;</span> </span><br><span class="line">	<span class="keyword">end</span> <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure>

<p>case when 生成的列也可以丢到 group by 后面去分组的，where、having都可以<br>使用case表达式需注意的点：<br>各个分支&lt;表达式&gt;返回的数据类型要统一<br>case写完后不能丢了end<br>else可省略但不建议省，没有值时可写 else null<br>case when 是一个列，可以起别名，可以放在group by后</p>
<h2 id="decode-等值翻译"><a href="#decode-等值翻译" class="headerlink" title="decode 等值翻译"></a>decode 等值翻译</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 把10号部门翻译成“十号部门”，20号部门翻译成“二十号部门”，30号部门翻译成“三十号部门”，其他显示其他部门，翻译时可以对列进行处理 </span></span><br><span class="line"><span class="keyword">select</span> decode(deptno,<span class="number">10</span>,<span class="string">&#x27;十号部门&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;二十号部门&#x27;</span>,<span class="number">30</span>,<span class="string">&#x27;三十号部门&#x27;</span>,<span class="string">&#x27;其他部门&#x27;</span>) <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure>

<p>decode与case when 的比较：<br>1、decode 只有Oracle、informix才有，其它数据库不支持；<br>2、case when的用法， Oracle、SQL Server、 MySQL、 informix、都支持；<br>3、decode 只能用做相等判断，但是可以配合sign函数进行大于，小于，等于的判断，CASE when可用于&#x3D;,&gt;&#x3D;,&lt;,&lt;&#x3D;,&lt;&gt;,is null,is not null 等的判断；<br>4、decode 使用其来比较简洁，CASE 虽然复杂但更为灵活；<br>5、另外，在decode中，null和null是相等的，但在case when中，只能用is null来判断。<br>6、decode效率比case when高，Oracle环境中能用decode尽量不用case when</p>
<h2 id="行转列"><a href="#行转列" class="headerlink" title="行转列"></a>行转列</h2><h3 id="聚合case实现行转列"><a href="#聚合case实现行转列" class="headerlink" title="聚合case实现行转列"></a>聚合case实现行转列</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 求各部门的各职位的工资</span></span><br><span class="line"><span class="comment">-- 各职位（&#x27;SALESMAN&#x27;、&#x27;MANAGER&#x27;、&#x27;CLERK&#x27;）作为列名</span></span><br><span class="line"><span class="comment">-- 空格后的 salesman、manager、clerk是别名</span></span><br><span class="line"><span class="keyword">select</span> deptno, </span><br><span class="line"><span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> job<span class="operator">=</span><span class="string">&#x27;SALESMAN&#x27;</span> <span class="keyword">then</span> sal <span class="keyword">end</span>) salesman, </span><br><span class="line"><span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> job<span class="operator">=</span><span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">then</span> sal <span class="keyword">end</span>) manager, </span><br><span class="line"><span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> job<span class="operator">=</span><span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">then</span> sal <span class="keyword">end</span>) clerk </span><br><span class="line"><span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br></pre></td></tr></table></figure>

<h2 id="pivot-行转列"><a href="#pivot-行转列" class="headerlink" title="pivot 行转列"></a>pivot 行转列</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 格式</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (数据查询集) <span class="comment">--后面行转列用到的字段</span></span><br><span class="line">	pivot(</span><br><span class="line">	(行转列后列的值) <span class="keyword">for</span> 需要转的列 <span class="keyword">in</span> （转换后的列值）</span><br><span class="line">	)</span><br><span class="line"><span class="comment">-- 求各部门的各职位的工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> deptno,job,sal <span class="keyword">from</span> emp) </span><br><span class="line">	pivot (</span><br><span class="line">		<span class="built_in">max</span>(sal) <span class="keyword">for</span> job <span class="keyword">in</span> (<span class="string">&#x27;SALESMAN&#x27;</span>,<span class="string">&#x27;MANAGER&#x27;</span>,<span class="string">&#x27;CLERK&#x27;</span>)</span><br><span class="line">	)</span><br><span class="line"><span class="comment">-- 行转列后的值应是聚集函数集</span></span><br></pre></td></tr></table></figure>

<p>unpivot 列转行</p>
<h2 id="开窗函数（分析函数）"><a href="#开窗函数（分析函数）" class="headerlink" title="开窗函数（分析函数）"></a>开窗函数（分析函数）</h2><p>开窗函数只能写在select里，不能用在where里</p>
<ul>
<li>聚合函数：avg() sum() count() max() min()</li>
<li>序列函数：row_number() rank() dense_rank()</li>
<li>分析函数：listagg()</li>
<li>偏移函数：lead  lag</li>
</ul>
<h3 id="排序类开窗函数"><a href="#排序类开窗函数" class="headerlink" title="排序类开窗函数"></a>排序类开窗函数</h3><p>row_number() rank() dense_rank()<br>主要做排序，他能够：</p>
<ul>
<li>在不减少行数的情况下进行计算</li>
<li>基于与当前行相关的行集（窗口）进行计算</li>
<li>为每行返回一个值，同时保持原始表的行数不变</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 格式</span></span><br><span class="line">函数名(列名)<span class="keyword">over</span>(</span><br><span class="line">    <span class="keyword">partition</span> <span class="keyword">by</span> 列名 <span class="comment">--可选，相当于group by分组，但没有去重效果</span></span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> 列名 <span class="comment">--排序函数必带</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">其中函数名有：</span><br><span class="line">row_number：对相等的值不进行区分，相等的值对应的排名不同，序号从<span class="number">1</span>到n连续（其实就是行号）</span><br><span class="line"><span class="comment">-- 如果有两个最高分，他们排名序号仍为1和2，而不是并列第一 （1,2,3...）</span></span><br><span class="line"><span class="keyword">select</span> sal,<span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">rank：相等的值排名相同，但若有相等的值，则序号从<span class="number">1</span>到n不连续</span><br><span class="line"><span class="comment">-- 如果有两个最高分，他们序号都为1（并列第一），但下一名的序号仍为3，而不是2 （1,1,3,4...）</span></span><br><span class="line"><span class="keyword">select</span> sal,<span class="built_in">rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line">dense_rank：对相等的值排名相同，但序号从<span class="number">1</span>到n连续</span><br><span class="line"><span class="comment">-- 如果有两个最高分，则下一名的序号为2（即第三个人为第二名） （1,1,2,3）  </span></span><br><span class="line"><span class="keyword">select</span> sal,<span class="built_in">dense_rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="built_in">ntile</span>(n)：将数据分成n组</span><br></pre></td></tr></table></figure>

<h4 id="累加效果"><a href="#累加效果" class="headerlink" title="累加效果"></a>累加效果</h4><p>sum+开窗函数over(order by)<br>当值一致时，累计值会默认加到相同值的最后一个，失去累加效果</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal),deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal)<span class="keyword">over</span>() <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno) <span class="keyword">from</span> emp</span><br><span class="line"><span class="comment">--累计效果的partition by 有需要则加，没需要就不加</span></span><br><span class="line"><span class="keyword">select</span> deptno,sal,<span class="built_in">sum</span>(sal)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--partition by 可以和group by 共存,前提是group by分组后的列，才能做的排序（可以用但是很少用到）</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">desc</span>) r <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br></pre></td></tr></table></figure>


<h4 id="listagg-将多行合并成一行"><a href="#listagg-将多行合并成一行" class="headerlink" title="listagg 将多行合并成一行"></a>listagg 将多行合并成一行</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--作为普通函数，对工资进行排序，用顿号&#x27;、&#x27;进行拼接。 </span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">listagg</span>(ename,<span class="string">&#x27;、&#x27;</span>)<span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) name <span class="keyword">from</span> emp; </span><br><span class="line"><span class="comment">--作为分组函数： </span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">listagg</span>(ename,<span class="string">&#x27;、&#x27;</span>)<span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) name <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br><span class="line"><span class="comment">--作为分析函数： </span></span><br><span class="line"><span class="keyword">select</span> deptno,ename,sal,<span class="built_in">listagg</span>(ename,<span class="string">&#x27;、&#x27;</span>)<span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno)name <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">---listagg里面的order by是语法必带，搭配开窗，开窗里面的order by不用带</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">listagg</span>(ename,<span class="string">&#x27;,&#x27;</span>)<span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> ename)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> deptno ) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wm_concat(列名)：该函数可以把列值以&quot;,&quot;号分隔起来,并显示成一行</span><br><span class="line"><span class="keyword">select</span> wm_concat(ename) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure>



<h3 id="偏移开窗"><a href="#偏移开窗" class="headerlink" title="偏移开窗"></a>偏移开窗</h3><p>偏移的目的是把不同行的数据放到同一行做运算</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- field:需要查找的字段; num:往下查找的行数; defaultvalue:没有符合条件的默认值。</span></span><br><span class="line"><span class="built_in">lead</span>(field,num,defaultvalue) </span><br><span class="line"></span><br><span class="line"><span class="comment">-- lead(params,m,n) 以params为目标向下m位取数，当取不到时默认为n, </span></span><br><span class="line"><span class="keyword">select</span> sal,<span class="built_in">lead</span>(sal,<span class="number">1</span>,<span class="number">0</span>)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) lastsal <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- lag(params,m,n) 以params为目标向上m位取数，当取不到时默认为n </span></span><br><span class="line"><span class="keyword">select</span> sal,<span class="built_in">lag</span>(sal,<span class="number">1</span>,<span class="number">0</span>)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) lastsal <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 环比 = (sal-lastsal) / lastsal * 100% </span></span><br><span class="line"><span class="comment">-- 环比 =（本期数－上期数）/ 上期数 × 100%</span></span><br><span class="line"><span class="keyword">select</span> to_char(((sal<span class="operator">-</span>lastsal)<span class="operator">/</span>lastsal)<span class="operator">*</span><span class="number">100</span>,<span class="string">&#x27;990.99&#x27;</span>) <span class="operator">||</span> <span class="string">&#x27;%&#x27;</span> <span class="keyword">from</span>(</span><br><span class="line">       <span class="keyword">select</span> sal,<span class="built_in">lag</span>(sal,<span class="number">1</span>,<span class="keyword">null</span>)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) lastsal <span class="keyword">from</span> emp</span><br><span class="line">)</span><br><span class="line"><span class="comment">--to_char的占位用法，9代表一个位置，0代表把小数点之前的0补齐</span></span><br></pre></td></tr></table></figure>

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1.把10号部门翻译成“十号部门”，20号部门翻译成“二十号部门”，30号部门翻译成“三十号部门”</span></span><br><span class="line"><span class="keyword">select</span> deptno, <span class="keyword">case</span> deptno </span><br><span class="line">       <span class="keyword">when</span> <span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;十号部门&#x27;</span> </span><br><span class="line">       <span class="keyword">when</span> <span class="number">20</span> <span class="keyword">then</span> <span class="string">&#x27;二十号部门&#x27;</span> </span><br><span class="line">	     <span class="keyword">when</span> <span class="number">30</span> <span class="keyword">then</span> <span class="string">&#x27;三十号部门&#x27;</span> </span><br><span class="line">	     <span class="keyword">else</span> <span class="string">&#x27;其他部门&#x27;</span> </span><br><span class="line"><span class="keyword">end</span> 部门 <span class="keyword">from</span> emp</span><br><span class="line">  </span><br><span class="line"><span class="comment">-- 2.给所有的10号部门员工加薪10% 20号部门的员工加薪20% 30号员工加薪30% ,其他部门加薪5%</span></span><br><span class="line"><span class="keyword">select</span> ename,deptno,sal,<span class="keyword">case</span> </span><br><span class="line">       <span class="keyword">when</span> deptno<span class="operator">=</span><span class="number">10</span> <span class="keyword">then</span> sal<span class="operator">*</span><span class="number">1.1</span> </span><br><span class="line">       <span class="keyword">when</span> deptno<span class="operator">=</span><span class="number">20</span> <span class="keyword">then</span> sal<span class="operator">*</span><span class="number">1.2</span> </span><br><span class="line">	     <span class="keyword">when</span> deptno<span class="operator">=</span><span class="number">30</span> <span class="keyword">then</span> sal<span class="operator">*</span><span class="number">1.3</span> </span><br><span class="line">	     <span class="keyword">else</span> sal<span class="operator">*</span><span class="number">1.05</span> </span><br><span class="line"><span class="keyword">end</span> new_sal <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.统计工资级别相应的数量（1600以下 C级,1600-3000 B级,3000以上 A级）</span></span><br><span class="line"><span class="comment">--方法1</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">case</span></span><br><span class="line">       <span class="keyword">when</span> sal<span class="operator">&lt;</span><span class="number">1600</span> <span class="keyword">then</span> <span class="string">&#x27;C级&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> sal <span class="keyword">between</span> <span class="number">1600</span> <span class="keyword">and</span> <span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;B级&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> sal<span class="operator">&gt;</span><span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;A级&#x27;</span></span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">end</span> 工资级别, <span class="built_in">count</span>(<span class="number">1</span>) 合计 <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">case</span></span><br><span class="line">       <span class="keyword">when</span> sal<span class="operator">&lt;</span><span class="number">1600</span> <span class="keyword">then</span> <span class="string">&#x27;C级&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> sal <span class="keyword">between</span> <span class="number">1600</span> <span class="keyword">and</span> <span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;B级&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> sal<span class="operator">&gt;</span><span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;A级&#x27;</span></span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--方法2</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">	<span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sal<span class="operator">&lt;</span><span class="number">1600</span> <span class="keyword">then</span> <span class="string">&#x27;C级&#x27;</span> <span class="keyword">end</span>) C级,</span><br><span class="line">	<span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sal <span class="keyword">between</span> <span class="number">1600</span> <span class="keyword">and</span> <span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;B级&#x27;</span> <span class="keyword">end</span>) B级,</span><br><span class="line">	<span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sal<span class="operator">&gt;</span><span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;A级&#x27;</span> <span class="keyword">end</span>) A级  <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.实现两种方法的行转列</span></span><br><span class="line"><span class="comment">-- 聚合case</span></span><br><span class="line"><span class="keyword">select</span> deptno, </span><br><span class="line">       <span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> job<span class="operator">=</span><span class="string">&#x27;SALESMAN&#x27;</span> <span class="keyword">then</span> sal <span class="keyword">end</span>) salesman, </span><br><span class="line">       <span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> job<span class="operator">=</span><span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">then</span> sal <span class="keyword">end</span>) manager, </span><br><span class="line">       <span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> job<span class="operator">=</span><span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">then</span> sal <span class="keyword">end</span>) clerk </span><br><span class="line"><span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">-- pivot</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> deptno,job,sal <span class="keyword">from</span> emp) </span><br><span class="line">	     pivot (</span><br><span class="line">		         <span class="built_in">max</span>(sal) <span class="keyword">for</span> job <span class="keyword">in</span> (<span class="string">&#x27;SALESMAN&#x27;</span>,<span class="string">&#x27;MANAGER&#x27;</span>,<span class="string">&#x27;CLERK&#x27;</span>)</span><br><span class="line">	     )</span><br><span class="line"></span><br><span class="line"><span class="comment">--1.按照部门编号升序查找所有部门名称，用、隔开</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">listagg</span>(dname,<span class="string">&#x27;、&#x27;</span>) <span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> deptno) <span class="keyword">from</span> dept</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.按照工资降序查找每个部门的员工姓名，用、隔开</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">listagg</span>(ename,<span class="string">&#x27;、&#x27;</span>) <span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) </span><br><span class="line"><span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.使用工资偏移计算环比 （sal-lastsal）/sal*100%</span></span><br><span class="line"><span class="keyword">select</span> ename,sal,<span class="built_in">lag</span>(sal,<span class="number">1</span>,<span class="number">0</span>)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) lastsal,concat(</span><br><span class="line">       to_char(round((sal<span class="operator">-</span><span class="built_in">lag</span>(sal,<span class="number">1</span>,<span class="number">0</span>)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal))<span class="operator">/</span>sal<span class="operator">*</span><span class="number">100</span>,<span class="number">2</span>),<span class="string">&#x27;990.99&#x27;</span>) ,<span class="string">&#x27;%&#x27;</span></span><br><span class="line">) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.查询员工表中工资最高的前三名</span></span><br><span class="line"><span class="keyword">select</span> ename, sal <span class="keyword">from</span>(</span><br><span class="line">    <span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span></span><br><span class="line">) <span class="keyword">where</span> rownum <span class="operator">&lt;=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.查询员工表中每个部门的工资第2~3名的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(</span><br><span class="line">       <span class="keyword">select</span> emp.<span class="operator">*</span>,<span class="built_in">dense_rank</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) rnk <span class="keyword">from</span> emp</span><br><span class="line">) <span class="keyword">where</span> rnk <span class="keyword">between</span> <span class="number">2</span> <span class="keyword">and</span> <span class="number">3</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--6.查询员工姓名、部门及部门平均工资,以及部门内最高工资</span></span><br><span class="line"><span class="keyword">select</span> ename,deptno,sal,</span><br><span class="line">       round(<span class="built_in">avg</span>(sal)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno)) 部门平均工资,</span><br><span class="line">       <span class="built_in">max</span>(sal)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno) 部门最高工资</span><br><span class="line"><span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.每种工作累计求工资和</span></span><br><span class="line"><span class="keyword">select</span> job,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> job,sal</span><br><span class="line"><span class="keyword">select</span> job,<span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> job <span class="keyword">order</span> <span class="keyword">by</span> job</span><br><span class="line"><span class="keyword">select</span> job,<span class="built_in">sum</span>(sal)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> job <span class="keyword">order</span> <span class="keyword">by</span> sal,ename) <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL优化、Oracle复杂查询练习</title>
    <url>/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="SQL优化"><a href="#SQL优化" class="headerlink" title="SQL优化"></a>SQL优化</h1><h2 id="1-执行计划"><a href="#1-执行计划" class="headerlink" title="1. 执行计划"></a>1. 执行计划</h2><ol>
<li><strong>性能优化</strong>：通过查看执行计划，可以识别出哪些操作耗费了大量资源，从而有针对性地进行优化。</li>
<li><strong>索引使用情况</strong>：了解数据库是否使用了适当的索引来加速查询。</li>
<li><strong>表连接顺序</strong>：确定数据库选择的表连接顺序是否最优。</li>
<li><strong>扫描方式</strong>：判断数据库使用的是全表扫描还是索引扫描等不同类型的扫描方式</li>
</ol>
<p>mysql中使用explain命令来查看查询的执行计划，输出结果会显示每一步操作的详细信息，如表扫描方式、使用的索引等</p>
<p>Oracle使用explain plan for 语句生成执行计划</p>
<ul>
<li><code>type</code>列显示了访问类型，<code>ALL</code>表示全表扫描，<code>ref</code>表示使用索引。</li>
<li><code>key</code>列显示了使用的索引名称。</li>
<li><code>rows</code>列显示了预计需要扫描的行数。</li>
<li><code>Extra</code>列提供了额外的信息，如<code>Using where</code>表示应用了过滤条件</li>
</ul>
<h2 id="2-sql语句优化"><a href="#2-sql语句优化" class="headerlink" title="2. sql语句优化"></a>2. sql语句优化</h2><p><strong>优先排查sql代码,尽量使用执行效率高的 sql代码 ,比如:</strong></p>
<ul>
<li>不使用select * 查询表  </li>
<li>写列名的时候,所有表列都要带别名;</li>
<li>不使用 or 进行筛选条件连接 ;</li>
<li>多筛选条件时,合理排列筛选条件执行顺序,将能够缩小结果集的筛选条件,放在最后优先执行; </li>
<li>尽量在group by 之前 筛选数据, 尽量不使用having</li>
<li>in 子句尽量使用exists替换,能用join 就不用exists;</li>
<li>能用union all 就不写union 提高执行效率</li>
</ul>
<p><strong>如果还是慢 就需要通过查看执行计划 ,对慢sql的原因进行排查</strong></p>
<ul>
<li>一般通过执行计划中的操作步骤 , io  ,资源占用 来判断 慢sql原因</li>
<li>使数据扫描尽量走索引扫描 代码中防止索引失效的语句</li>
<li>对于几种join 尽量使用 内连接 以提高表连接效率</li>
</ul>
<p><strong>如果单纯是数据量 导致的慢sql</strong></p>
<ul>
<li>拆分sql 通过临时表 中间表等方式缓存sql结果</li>
<li>创建索引</li>
<li>进行分区表操作 </li>
<li>进而进行 分库分表操作</li>
<li></li>
</ul>
<h2 id="3-索引失效排查"><a href="#3-索引失效排查" class="headerlink" title="3. 索引失效排查"></a>3. 索引失效排查</h2><p>（什么情况会索引失效）</p>
<ul>
<li><strong>索引列</strong>进行计算</li>
<li><strong>索引列</strong>使用函数处理</li>
<li><strong>like语句</strong> 通配符在左 左模糊查询</li>
<li>复合索引不满足最左原则</li>
<li><strong>where筛选</strong>null值</li>
<li>where筛选 &lt;&gt; !&#x3D; not 等</li>
<li>索引列进行计算</li>
<li>索引列使用函数处理</li>
<li>like语句 通配符在左 左模糊查询</li>
<li>复合索引不满足最左原则</li>
<li>where筛选null值</li>
<li>where筛选 &lt;&gt; !&#x3D; not 等</li>
</ul>
<h1 id="Oracle复杂查询练习"><a href="#Oracle复杂查询练习" class="headerlink" title="Oracle复杂查询练习"></a>Oracle复杂查询练习</h1><h2 id="1-排序开窗"><a href="#1-排序开窗" class="headerlink" title="1. 排序开窗"></a>1. 排序开窗</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1.排序开窗</span></span><br><span class="line"><span class="comment">-- 创建客户交易表</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> customer_transactions (</span><br><span class="line">    customer_id VARCHAR2(<span class="number">10</span>),</span><br><span class="line">    tdate VARCHAR2(<span class="number">10</span>),</span><br><span class="line">    tamount NUMBER(<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入示例数据</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_transactions (customer_id, tdate, tamount) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;20210901&#x27;</span>, <span class="number">100</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_transactions (customer_id, tdate, tamount) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;20210912&#x27;</span>, <span class="number">200</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_transactions (customer_id, tdate, tamount) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;20210902&#x27;</span>, <span class="number">100</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_transactions (customer_id, tdate, tamount) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;20210901&#x27;</span>, <span class="number">101</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_transactions (customer_id, tdate, tamount) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;20210912&#x27;</span>, <span class="number">102</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_transactions (customer_id, tdate, tamount) <span class="keyword">VALUES</span> (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;20210901&#x27;</span>, <span class="number">200</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_transactions (customer_id, tdate, tamount) <span class="keyword">VALUES</span> (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;20210912&#x27;</span>, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交事务</span></span><br><span class="line"><span class="keyword">COMMIT</span>;    </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实现题目</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">dense_rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> customer_id) 序号<span class="number">1</span>, </span><br><span class="line">customer_id 客户号, </span><br><span class="line"><span class="built_in">dense_rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> tdate) 序号<span class="number">2</span>, </span><br><span class="line">tdate 交易时间, </span><br><span class="line">tamount 交易金额</span><br><span class="line"><span class="keyword">from</span> customer_transactions <span class="keyword">order</span> <span class="keyword">by</span> customer_id,tamount</span><br></pre></td></tr></table></figure>
<p>实现效果</p>
<img src="/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/file-20250709184847505.png" class="">

<h2 id="2-join"><a href="#2-join" class="headerlink" title="2. join"></a>2. join</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建表1</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> customer1 (</span><br><span class="line">    customer_id VARCHAR2(<span class="number">10</span>) <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    customer_name VARCHAR2(<span class="number">50</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">    age NUMBER(<span class="number">3</span>) <span class="keyword">NOT NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入表1数据</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> customer1 (customer_id, customer_name, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="number">20</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer1 (customer_id, customer_name, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;李四&#x27;</span>, <span class="number">21</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer1 (customer_id, customer_name, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;王五&#x27;</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建户表2</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> customer2 (</span><br><span class="line">    customer_id VARCHAR2(<span class="number">10</span>) <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    customer_name VARCHAR2(<span class="number">50</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">    age NUMBER(<span class="number">3</span>) <span class="keyword">NOT NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入表2数据</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> customer2 (customer_id, customer_name, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="number">20</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer2 (customer_id, customer_name, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;Z&#x27;</span>, <span class="string">&#x27;小李&#x27;</span>, <span class="number">23</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer2 (customer_id, customer_name, age) <span class="keyword">VALUES</span> (<span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;小王&#x27;</span>, <span class="number">24</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交事务</span></span><br><span class="line"><span class="keyword">COMMIT</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">--实现题目1</span></span><br><span class="line"><span class="keyword">select</span> customer_id 客户号, customer_name 客户名, age 年龄 <span class="keyword">from</span> customer1</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> customer_id 客户号, customer_name 客户名, age 年龄 <span class="keyword">from</span> customer2</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 年龄;  </span><br></pre></td></tr></table></figure>
<img src="/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/file-20250709191027037.png" class="">

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 实现题目2</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">    c1.customer_id 客户号,</span><br><span class="line">    c1.customer_name 客户名,</span><br><span class="line">    c1.age 年龄,</span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">when</span> c2.customer_id <span class="keyword">is</span> <span class="keyword">not null</span> <span class="keyword">then</span> <span class="string">&#x27;是&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;否&#x27;</span> <span class="keyword">end</span> 是否在表<span class="number">2</span></span><br><span class="line"><span class="keyword">from</span> customer1 c1</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> customer2 c2 <span class="keyword">on</span> c1.customer_id <span class="operator">=</span> c2.customer_id</span><br></pre></td></tr></table></figure>
<img src="/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/file-20250709191947477.png" class="">

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 实现题目3</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">    c1.customer_id 客户号<span class="number">1</span>,</span><br><span class="line">    c1.customer_name 客户名<span class="number">1</span>,</span><br><span class="line">    c1.age 年龄<span class="number">1</span>,</span><br><span class="line">    c2.customer_id 客户号<span class="number">2</span>,</span><br><span class="line">    c2.customer_name 客户名<span class="number">2</span>,</span><br><span class="line">    c2.age 年龄<span class="number">2</span></span><br><span class="line"><span class="keyword">from</span> customer2 c2</span><br><span class="line"><span class="keyword">full</span> <span class="keyword">join</span> customer1 c1 <span class="keyword">on</span> c1.customer_id <span class="operator">=</span> c2.customer_id</span><br></pre></td></tr></table></figure>
<img src="/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/file-20250709192635740.png" class="">

<h2 id="3-case-when"><a href="#3-case-when" class="headerlink" title="3. case when"></a>3. case when</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建表1</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> cd1 (</span><br><span class="line">    CD NUMBER(<span class="number">10</span>) <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    CD_DESC VARCHAR2(<span class="number">50</span>) <span class="keyword">NOT NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入表1数据</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> cd1 (CD, CD_DESC) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;普通&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> cd1 (CD, CD_DESC) <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;潜力&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> cd1 (CD, CD_DESC) <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;优质&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> cd1 (CD, CD_DESC) <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;财富&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> cd1 (CD, CD_DESC) <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="string">&#x27;私行&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表2</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> cd2 (</span><br><span class="line">    CID VARCHAR2(<span class="number">10</span>) <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    CD NUMBER(<span class="number">10</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">    <span class="keyword">FOREIGN KEY</span> (CD) <span class="keyword">REFERENCES</span> cd1(CD)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入表2数据</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> cd2 (CID, CD) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> cd2 (CID, CD) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> cd2 (CID, CD) <span class="keyword">VALUES</span> (<span class="string">&#x27;C&#x27;</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> cd2 (CID, CD) <span class="keyword">VALUES</span> (<span class="string">&#x27;D&#x27;</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> cd2 (CID, CD) <span class="keyword">VALUES</span> (<span class="string">&#x27;E&#x27;</span>, <span class="number">5</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> cd2 (CID, CD) <span class="keyword">VALUES</span> (<span class="string">&#x27;F&#x27;</span>, <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交事务</span></span><br><span class="line"><span class="keyword">COMMIT</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实现题目</span></span><br><span class="line"><span class="comment">-- 方法1：内连接</span></span><br><span class="line"><span class="keyword">select</span> cid 客户号, cd_desc <span class="keyword">from</span> cd1 <span class="keyword">join</span> cd2 <span class="keyword">on</span> cd1.cd<span class="operator">=</span>cd2.cd</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方法2：case when </span></span><br><span class="line"><span class="keyword">select</span> cid 客户号, <span class="keyword">case</span> cd </span><br><span class="line"><span class="keyword">when</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">&#x27;普通&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="number">2</span> <span class="keyword">then</span> <span class="string">&#x27;潜力&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="number">3</span> <span class="keyword">then</span> <span class="string">&#x27;优质&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="number">4</span> <span class="keyword">then</span> <span class="string">&#x27;财富&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="number">5</span> <span class="keyword">then</span> <span class="string">&#x27;私行&#x27;</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">null</span> <span class="keyword">end</span> CD_DESC <span class="keyword">from</span> cd2</span><br></pre></td></tr></table></figure>
<img src="/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/file-20250709195605021.png" class="">

<h2 id="4-listagg"><a href="#4-listagg" class="headerlink" title="4. listagg"></a>4. listagg</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 建表</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> customer_purchase (</span><br><span class="line">    cid VARCHAR2(<span class="number">10</span>),</span><br><span class="line">    product VARCHAR2(<span class="number">50</span>),</span><br><span class="line">    pdate <span class="type">DATE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;基金&#x27;</span>, TO_DATE(<span class="string">&#x27;20210901&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;理财&#x27;</span>, TO_DATE(<span class="string">&#x27;20210902&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;保险&#x27;</span>, TO_DATE(<span class="string">&#x27;20210903&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;理财2&#x27;</span>, TO_DATE(<span class="string">&#x27;20210904&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;基金2&#x27;</span>, TO_DATE(<span class="string">&#x27;20210905&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;基金2&#x27;</span>, TO_DATE(<span class="string">&#x27;20210905&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;理财&#x27;</span>, TO_DATE(<span class="string">&#x27;20210906&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;理财&#x27;</span>, TO_DATE(<span class="string">&#x27;20210907&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;理财3&#x27;</span>, TO_DATE(<span class="string">&#x27;20210908&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;国债&#x27;</span>, TO_DATE(<span class="string">&#x27;20210909&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;理财A&#x27;</span>, TO_DATE(<span class="string">&#x27;20210904&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;理财B&#x27;</span>, TO_DATE(<span class="string">&#x27;20210905&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;理财C&#x27;</span>, TO_DATE(<span class="string">&#x27;20210905&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;理财A&#x27;</span>, TO_DATE(<span class="string">&#x27;20210906&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;基金2&#x27;</span>, TO_DATE(<span class="string">&#x27;20210907&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;基金2&#x27;</span>, TO_DATE(<span class="string">&#x27;20210908&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;保险&#x27;</span>, TO_DATE(<span class="string">&#x27;20210909&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> customer_purchase (cid, product, pdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;保险&#x27;</span>, TO_DATE(<span class="string">&#x27;20210910&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交事务</span></span><br><span class="line"><span class="keyword">COMMIT</span>;    </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> customer_purchase</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实现题目   </span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">    cid <span class="keyword">as</span> 客户,</span><br><span class="line">    <span class="built_in">listagg</span>(product, <span class="string">&#x27;，&#x27;</span>) <span class="keyword">within</span> <span class="keyword">group</span> (<span class="keyword">order</span> <span class="keyword">by</span> min_pdate) <span class="keyword">as</span> 购买产品</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> cid,product,<span class="built_in">min</span>(pdate) <span class="keyword">as</span> min_pdate  <span class="comment">-- 将每个产品的日期统一为最早购买日期（方便去重并用于排序）</span></span><br><span class="line">    <span class="keyword">from</span> customer_purchase <span class="keyword">group</span> <span class="keyword">by</span> cid, product   <span class="comment">-- 按客户和产品去重</span></span><br><span class="line">) <span class="keyword">group</span> <span class="keyword">by</span> cid;</span><br></pre></td></tr></table></figure>

<h2 id="5-偏移开窗"><a href="#5-偏移开窗" class="headerlink" title="5. 偏移开窗"></a>5. 偏移开窗</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 建表</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> ct5 (</span><br><span class="line">    cid VARCHAR2(<span class="number">10</span>),</span><br><span class="line">    tdate <span class="type">DATE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> ct5 (cid, tdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, TO_DATE(<span class="string">&#x27;20210101&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> ct5 (cid, tdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, TO_DATE(<span class="string">&#x27;20210201&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> ct5 (cid, tdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, TO_DATE(<span class="string">&#x27;20210301&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> ct5 (cid, tdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, TO_DATE(<span class="string">&#x27;20210101&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> ct5 (cid, tdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, TO_DATE(<span class="string">&#x27;20210301&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> ct5 (cid, tdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;C&#x27;</span>, TO_DATE(<span class="string">&#x27;20210101&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> ct5 (cid, tdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;C&#x27;</span>, TO_DATE(<span class="string">&#x27;20210301&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> ct5 (cid, tdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;C&#x27;</span>, TO_DATE(<span class="string">&#x27;20210315&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> ct5 (cid, tdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;D&#x27;</span>, TO_DATE(<span class="string">&#x27;20210101&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> ct5 (cid, tdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;D&#x27;</span>, TO_DATE(<span class="string">&#x27;20210221&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> ct5 (cid, tdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;D&#x27;</span>, TO_DATE(<span class="string">&#x27;20210301&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"><span class="keyword">INSERT INTO</span> ct5 (cid, tdate) <span class="keyword">VALUES</span> (<span class="string">&#x27;D&#x27;</span>, TO_DATE(<span class="string">&#x27;20210315&#x27;</span>, <span class="string">&#x27;YYYYMMDD&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交事务</span></span><br><span class="line"><span class="keyword">COMMIT</span>;    </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 实现题目</span></span><br><span class="line"><span class="keyword">with</span> m <span class="keyword">as</span> (</span><br><span class="line">    <span class="comment">-- 按客户和月份统计交易，去重</span></span><br><span class="line">    <span class="keyword">select</span> cid 客户, trunc(tdate, <span class="string">&#x27;mm&#x27;</span>) 交易月份</span><br><span class="line">    <span class="keyword">from</span> ct5 <span class="keyword">group</span> <span class="keyword">by</span> cid, trunc(tdate, <span class="string">&#x27;mm&#x27;</span>)</span><br><span class="line">),</span><br><span class="line">m3 <span class="keyword">as</span> (</span><br><span class="line">    <span class="comment">-- 使用窗口函数计算每个月之前两个月的月份</span></span><br><span class="line">    <span class="keyword">select</span> 客户,交易月份,</span><br><span class="line">        <span class="built_in">lag</span>(交易月份,<span class="number">2</span>) <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> 客户 <span class="keyword">order</span> <span class="keyword">by</span> 交易月份) m1</span><br><span class="line">    <span class="keyword">from</span> m</span><br><span class="line">)</span><br><span class="line"><span class="comment">-- 查询结果，判断是否连续三个月有交易</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">    TO_CHAR(交易月份,<span class="string">&#x27;yyyymm&#x27;</span>) 日期, 客户, <span class="keyword">case</span> </span><br><span class="line">    <span class="keyword">when</span> add_months(交易月份,<span class="number">-2</span>) <span class="operator">=</span> m1 <span class="keyword">then</span> <span class="string">&#x27;是&#x27;</span> </span><br><span class="line">    <span class="keyword">else</span> <span class="string">&#x27;否&#x27;</span> <span class="keyword">end</span> 是否连续三个月交易</span><br><span class="line"><span class="keyword">from</span> m3</span><br><span class="line"><span class="keyword">where</span> 交易月份 <span class="operator">=</span> to_date(<span class="string">&#x27;202103&#x27;</span>, <span class="string">&#x27;yyyymm&#x27;</span>)</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 客户;  </span><br></pre></td></tr></table></figure>
<img src="/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/file-20250709211521883.png" class="">

<h2 id="6-同环比"><a href="#6-同环比" class="headerlink" title="6. 同环比"></a>6. 同环比</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--6. 同环比</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> table6 (</span><br><span class="line">    sdate <span class="type">DATE</span>,</span><br><span class="line">    sal NUMBER(<span class="number">20</span>,<span class="number">10</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202001&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">749.7997074</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202002&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">989.1732764</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202003&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">275.7157704</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202004&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">472.2227195</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202006&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">222.9311331</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202007&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">37.03906155</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202008&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">729.9000341</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202009&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">120.9572041</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202010&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">441.8720002</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202012&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">454.0350884</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202101&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">292.4960738</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202102&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">244.9181963</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202103&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">772.5048729</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202105&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">778.8382229</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202106&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">53.41619373</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202107&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">0</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202108&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">567.6163141</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202110&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">708.7802233</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202111&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">250.4268242</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202112&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">893.4930988</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202201&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">268.8781552</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202203&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">570.5022024</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202204&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">126.6045656</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202205&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">905.5077431</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202206&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">365.6966979</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202207&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">804.5220551</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202208&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">880.6164334</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202210&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">656.1069145</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202211&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">366.0299052</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> table6 (sdate, sal) <span class="keyword">VALUES</span> (TO_DATE(<span class="string">&#x27;202212&#x27;</span>, <span class="string">&#x27;YYYYMM&#x27;</span>), <span class="number">994.1196283</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交事务</span></span><br><span class="line"><span class="keyword">COMMIT</span>;    </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table6</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 计算同环比</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">    to_char(t1.sdate, <span class="string">&#x27;yyyymm&#x27;</span>) 月份,</span><br><span class="line">    t1.sal,</span><br><span class="line">    <span class="comment">-- 计算环比</span></span><br><span class="line">    <span class="keyword">case</span> </span><br><span class="line">        <span class="keyword">when</span> t2.sal <span class="keyword">is</span> <span class="keyword">not null</span> <span class="keyword">and</span> t2.sal <span class="operator">&lt;&gt;</span> <span class="number">0</span> </span><br><span class="line">        <span class="keyword">then</span> concat(round((t1.sal <span class="operator">-</span> t2.sal) <span class="operator">/</span> t2.sal <span class="operator">*</span> <span class="number">100</span>, <span class="number">2</span>),<span class="string">&#x27;%&#x27;</span>) </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">null</span> </span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">as</span> 环比,</span><br><span class="line">    <span class="comment">-- 计算同比</span></span><br><span class="line">    <span class="keyword">case</span> </span><br><span class="line">        <span class="keyword">when</span> t3.sal <span class="keyword">is</span> <span class="keyword">not null</span> <span class="keyword">and</span> t3.sal <span class="operator">&lt;&gt;</span> <span class="number">0</span> </span><br><span class="line">        <span class="keyword">then</span> concat(round((t1.sal <span class="operator">-</span> t3.sal) <span class="operator">/</span> t3.sal <span class="operator">*</span> <span class="number">100</span>, <span class="number">2</span>),<span class="string">&#x27;%&#x27;</span>) </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">null</span> </span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">as</span> 同比</span><br><span class="line"><span class="keyword">from</span> table6 t1</span><br><span class="line"><span class="comment">-- 获取上月数据</span></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> table6 t2 </span><br><span class="line">    <span class="keyword">on</span> t2.sdate <span class="operator">=</span> add_months(t1.sdate, <span class="number">-1</span>)</span><br><span class="line"><span class="comment">-- 获取去年同月数据</span></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> table6 t3 </span><br><span class="line">    <span class="keyword">on</span> t3.sdate <span class="operator">=</span> add_months(t1.sdate, <span class="number">-12</span>)</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> t1.sdate;</span><br></pre></td></tr></table></figure>
<img src="/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/file-20250709234217259.png" class="">

<h2 id="7-健康码"><a href="#7-健康码" class="headerlink" title="7. 健康码"></a>7. 健康码</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 原始表</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> green (</span><br><span class="line">    sno NUMBER(<span class="number">10</span>),</span><br><span class="line">    code VARCHAR2(<span class="number">10</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 黄码表</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> yellow (</span><br><span class="line">    sno NUMBER(<span class="number">10</span>),</span><br><span class="line">    code VARCHAR2(<span class="number">10</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 红码表</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> red (</span><br><span class="line">    sno NUMBER(<span class="number">10</span>),</span><br><span class="line">    code VARCHAR2(<span class="number">10</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 白名单</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> white (</span><br><span class="line">    sno NUMBER(<span class="number">10</span>),</span><br><span class="line">    code VARCHAR2(<span class="number">10</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向绿码表（green）插入数据</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">7</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">8</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">9</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">10</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">11</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">12</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">13</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">14</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> green (sno, code) <span class="keyword">VALUES</span> (<span class="number">15</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向黄码表（yellow）插入数据</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> yellow (sno, code) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;黄码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> yellow (sno, code) <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;黄码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> yellow (sno, code) <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="string">&#x27;黄码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> yellow (sno, code) <span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="string">&#x27;黄码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> yellow (sno, code) <span class="keyword">VALUES</span> (<span class="number">8</span>, <span class="string">&#x27;黄码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> yellow (sno, code) <span class="keyword">VALUES</span> (<span class="number">9</span>, <span class="string">&#x27;黄码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> yellow (sno, code) <span class="keyword">VALUES</span> (<span class="number">15</span>, <span class="string">&#x27;黄码&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向红码表（red）插入数据</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> red (sno, code) <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;红码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> red (sno, code) <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;红码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> red (sno, code) <span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="string">&#x27;红码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> red (sno, code) <span class="keyword">VALUES</span> (<span class="number">7</span>, <span class="string">&#x27;红码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> red (sno, code) <span class="keyword">VALUES</span> (<span class="number">14</span>, <span class="string">&#x27;红码&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向白名单（white）插入数据</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> white (sno, code) <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> white (sno, code) <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT INTO</span> white (sno, code) <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;绿码&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交事务</span></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 最终结果</span></span><br><span class="line"><span class="keyword">select</span> sno,</span><br><span class="line">	<span class="keyword">case</span> </span><br><span class="line">        <span class="keyword">when</span> sno <span class="keyword">in</span> (<span class="keyword">select</span> sno <span class="keyword">from</span> white) <span class="keyword">then</span> <span class="string">&#x27;绿码&#x27;</span>  <span class="comment">-- 白名单优先</span></span><br><span class="line">        <span class="keyword">when</span> sno <span class="keyword">in</span> (<span class="keyword">select</span> sno <span class="keyword">from</span> red) <span class="keyword">then</span> <span class="string">&#x27;红码&#x27;</span>    <span class="comment">-- 其次红码</span></span><br><span class="line">        <span class="keyword">when</span> sno <span class="keyword">in</span> (<span class="keyword">select</span> sno <span class="keyword">from</span> yellow) <span class="keyword">then</span> <span class="string">&#x27;黄码&#x27;</span> <span class="comment">-- 然后黄码</span></span><br><span class="line">        <span class="keyword">else</span> <span class="string">&#x27;绿码&#x27;</span>                                   <span class="comment">-- 最后绿码</span></span><br><span class="line">    <span class="keyword">end</span> 最终结果</span><br><span class="line"><span class="keyword">from</span> green</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方法2</span></span><br><span class="line"><span class="keyword">select</span> a.sno 学号, <span class="keyword">case</span> a.sno </span><br><span class="line"><span class="keyword">when</span> d.sno <span class="keyword">then</span> <span class="string">&#x27;绿码&#x27;</span></span><br><span class="line"><span class="keyword">when</span> c.sno <span class="keyword">then</span> <span class="string">&#x27;红码&#x27;</span></span><br><span class="line"><span class="keyword">when</span> b.sno <span class="keyword">then</span> <span class="string">&#x27;黄码&#x27;</span></span><br><span class="line"><span class="keyword">else</span> <span class="string">&#x27;绿码&#x27;</span> <span class="keyword">end</span> 最终结果</span><br><span class="line"><span class="keyword">from</span> green a <span class="keyword">left</span> <span class="keyword">join</span> yellow b <span class="keyword">on</span> a.sno<span class="operator">=</span>b.sno</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> red c <span class="keyword">on</span> a.sno<span class="operator">=</span>c.sno</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> white d <span class="keyword">on</span> a.sno<span class="operator">=</span>d.sno</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 学号 <span class="keyword">asc</span></span><br></pre></td></tr></table></figure>
<img src="/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/file-20250710114417529.png" class="">

<h2 id="8-聚合开窗"><a href="#8-聚合开窗" class="headerlink" title="8. 聚合开窗"></a>8. 聚合开窗</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1. 学号	姓名	年龄	性别	课程	成绩	课程数	总成绩	平均分	是否学的课程数&gt;5门	所有学员的总成绩	所有学员的平均分	平均分与所有学员的平均分比较值	同一课程所有学员的平均分	成绩与“同一课程所有学员的平均分”的比较值</span></span><br><span class="line"><span class="keyword">select</span> sc.sno 学号,s.sname 姓名,s.sage 年龄,s.ssex 性别,c.cno 课程号,c.cname 课程名称,sc.score 成绩,</span><br><span class="line"><span class="built_in">count</span>(sc.cno)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> sc.sno) 课程数,</span><br><span class="line"><span class="built_in">sum</span>(sc.score)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> sc. sno) 总成绩,</span><br><span class="line"><span class="built_in">avg</span>(sc.score)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> sc.sno) 平均分,</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">when</span> <span class="built_in">count</span>(sc.cno)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> sc.sno)<span class="operator">&gt;=</span><span class="number">5</span> <span class="keyword">then</span> <span class="string">&#x27;是&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;否&#x27;</span> <span class="keyword">end</span>  课程数是否大于<span class="number">5</span>门,</span><br><span class="line"><span class="built_in">sum</span>(sc.score)<span class="keyword">over</span>() 所有学员的总成绩,</span><br><span class="line">round(<span class="built_in">avg</span>(sc.score)<span class="keyword">over</span>(),<span class="number">2</span>)  所有学员的平均分,</span><br><span class="line">round(<span class="built_in">avg</span>(sc.score)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> sc.sno)<span class="operator">/</span><span class="built_in">avg</span>(sc.score)<span class="keyword">over</span>(),<span class="number">2</span>) 平均分比较值,</span><br><span class="line">round(<span class="built_in">avg</span>(sc.score)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> sc.cno),<span class="number">2</span>) 该课程平均分,</span><br><span class="line">round(sc.score<span class="operator">/</span><span class="built_in">avg</span>(sc.score)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> sc.cno),<span class="number">2</span>)  成绩与平均分比较值</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">join</span> student s <span class="keyword">on</span> s.sno<span class="operator">=</span>sc.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno<span class="operator">=</span>sc.cno</span><br></pre></td></tr></table></figure>
<img src="/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/file-20250710191719690.png" class="">
<img src="/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/file-20250710191755863.png" class="">
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--2. 学号	姓名	年龄	性别	科目1	科目2 ...科目10	总成绩	平均分	已学科目	未学科目	超过平均分科目数	不及格科目数 	及格科目数</span></span><br><span class="line"><span class="keyword">with</span> psc <span class="keyword">as</span> (</span><br><span class="line">    <span class="comment">-- 行转列：将科目成绩转为列</span></span><br><span class="line">    <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (</span><br><span class="line">        <span class="keyword">select</span> sno, cno, score <span class="keyword">from</span> sc</span><br><span class="line">    )</span><br><span class="line">    pivot (</span><br><span class="line">        <span class="built_in">max</span>(score)  <span class="comment">-- 取成绩（无成绩则为null）</span></span><br><span class="line">        <span class="keyword">for</span> cno <span class="keyword">in</span> (</span><br><span class="line">            <span class="string">&#x27;c001&#x27;</span> <span class="keyword">as</span> 科目<span class="number">1</span>, <span class="string">&#x27;c002&#x27;</span> <span class="keyword">as</span> 科目<span class="number">2</span>, <span class="string">&#x27;c003&#x27;</span> <span class="keyword">as</span> 科目<span class="number">3</span>, <span class="string">&#x27;c004&#x27;</span> <span class="keyword">as</span> 科目<span class="number">4</span>, <span class="string">&#x27;c005&#x27;</span> <span class="keyword">as</span> 科目<span class="number">5</span>,</span><br><span class="line">            <span class="string">&#x27;c006&#x27;</span> <span class="keyword">as</span> 科目<span class="number">6</span>, <span class="string">&#x27;c007&#x27;</span> <span class="keyword">as</span> 科目<span class="number">7</span>, <span class="string">&#x27;c008&#x27;</span> <span class="keyword">as</span> 科目<span class="number">8</span>, <span class="string">&#x27;c009&#x27;</span> <span class="keyword">as</span> 科目<span class="number">9</span>, <span class="string">&#x27;c010&#x27;</span> <span class="keyword">as</span> 科目<span class="number">10</span></span><br><span class="line">        )</span><br><span class="line">    )</span><br><span class="line">),</span><br><span class="line">tmp <span class="keyword">as</span> (</span><br><span class="line">    <span class="comment">-- 计算每个学生的统计指标</span></span><br><span class="line">    <span class="keyword">select</span> </span><br><span class="line">        s.sno,</span><br><span class="line">        <span class="built_in">count</span>(sc.cno) <span class="keyword">as</span> 已学科目数,</span><br><span class="line">        (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> course) <span class="operator">-</span> <span class="built_in">count</span>(sc.cno) <span class="keyword">as</span> 未学科目数,</span><br><span class="line">        <span class="built_in">sum</span>(sc.score) <span class="keyword">as</span> 总成绩,</span><br><span class="line">        <span class="built_in">avg</span>(sc.score) <span class="keyword">as</span> 平均分,</span><br><span class="line">        <span class="comment">-- 超过平均分的科目数（子查询关联当前学生平均分）</span></span><br><span class="line">        <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score <span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(score) <span class="keyword">from</span> sc <span class="keyword">where</span> sno <span class="operator">=</span> s.sno) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> 超过平均分科目数,</span><br><span class="line">        <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score <span class="operator">&lt;</span> <span class="number">60</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> 不及格科目数,</span><br><span class="line">        <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score <span class="operator">&gt;=</span> <span class="number">60</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> 及格科目数</span><br><span class="line">    <span class="keyword">from</span> student s</span><br><span class="line">    <span class="keyword">left</span> <span class="keyword">join</span> sc <span class="keyword">on</span> s.sno <span class="operator">=</span> sc.sno</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> s.sno</span><br><span class="line">)</span><br><span class="line"><span class="comment">-- 关联所有信息</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">    s.sno <span class="keyword">as</span> 学号,</span><br><span class="line">    s.sname <span class="keyword">as</span> 姓名,</span><br><span class="line">    s.sage <span class="keyword">as</span> 年龄,</span><br><span class="line">    s.ssex <span class="keyword">as</span> 性别,</span><br><span class="line">    p.科目<span class="number">1</span>, p.科目<span class="number">2</span>, p.科目<span class="number">3</span>, p.科目<span class="number">4</span>, p.科目<span class="number">5</span>,</span><br><span class="line">    p.科目<span class="number">6</span>, p.科目<span class="number">7</span>, p.科目<span class="number">8</span>, p.科目<span class="number">9</span>, p.科目<span class="number">10</span>,</span><br><span class="line">    t.总成绩,</span><br><span class="line">    round(t.平均分, <span class="number">2</span>) <span class="keyword">as</span> 平均分,</span><br><span class="line">    t.已学科目数 <span class="keyword">as</span> 已学科目,</span><br><span class="line">    t.未学科目数 <span class="keyword">as</span> 未学科目,</span><br><span class="line">    t.超过平均分科目数,</span><br><span class="line">    t.不及格科目数,</span><br><span class="line">    t.及格科目数</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> psc p <span class="keyword">on</span> s.sno <span class="operator">=</span> p.sno</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> tmp t <span class="keyword">on</span> s.sno <span class="operator">=</span> t.sno</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> s.sno;</span><br></pre></td></tr></table></figure>
<img src="/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/file-20250710191845952.png" class="">
<img src="/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/file-20250710191906296.png" class="">

<img src="/2025/07/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/7.9%20SQL%E4%BC%98%E5%8C%96%E3%80%81Oracle%E5%A4%8D%E6%9D%82%E6%9F%A5%E8%AF%A2%E7%BB%83%E4%B9%A0/file-20250711094902304.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>docker安装部署</title>
    <url>/2025/07/14/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.14%20docker%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h1 id="Linux安装（CentOS7）"><a href="#Linux安装（CentOS7）" class="headerlink" title="Linux安装（CentOS7）"></a>Linux安装（CentOS7）</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#关闭防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br><span class="line"><span class="comment">#关闭selinux</span></span><br><span class="line">vim /etc/selinux/config</span><br><span class="line"><span class="comment"># 将SELINUX=enforcing改为</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.拷贝一份新的阿里云的 下载源 到 /etc/yum.repos.d/下 </span></span><br><span class="line"><span class="built_in">mv</span> /root/CentOS-Base.repo /etc/yum.repos.d/</span><br><span class="line"><span class="comment">#2.清空原下载池</span></span><br><span class="line"><span class="built_in">sudo</span> yum clean all</span><br><span class="line"><span class="comment">#3. 加载新源</span></span><br><span class="line"><span class="built_in">sudo</span> yum makecache</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装工具包</span></span><br><span class="line">yum install -y epel-release</span><br><span class="line"><span class="comment">#安装基础软件</span></span><br><span class="line">yum install -y net-tools rsync vim wget ntp</span><br><span class="line"></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加阿里yum源</span></span><br><span class="line">yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装docker</span></span><br><span class="line">yum -y install docker-ce</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动docker</span></span><br><span class="line">systemctl <span class="built_in">enable</span> --now docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">systemctl status docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看本地镜像列表</span></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line"><span class="comment">#镜像加速</span></span><br><span class="line">vim /etc/docker/daemon.json</span><br><span class="line"><span class="comment">#添加内容</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://dockerhub.icu&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.registry.cyou&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker-cf.registry.cyou&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://dockercf.jsdelivr.fyi&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.jsdelivr.fyi&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://dockertest.jsdelivr.fyi&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.aliyuncs.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://dockerproxy.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.m.daocloud.io&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.nju.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.iscas.ac.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.rainbond.cc&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#使文件生效</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl daemon-reload</span><br><span class="line"><span class="built_in">sudo</span> systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#验证 docker 是否安装成功并在容器中执行一个测试的镜像。</span></span><br><span class="line"><span class="built_in">sudo</span> docker run hello-world</span><br></pre></td></tr></table></figure>
<img src="/2025/07/14/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.14%20docker%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/file-20250714193700957.png" class="">

<h1 id="从获取镜像"><a href="#从获取镜像" class="headerlink" title="从获取镜像"></a>从获取镜像</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从镜像仓库获取</span></span><br><span class="line">docker pull redis <span class="comment">#默认最新版本latest</span></span><br><span class="line">docker pull mysql:5.7 <span class="comment">#指定版本</span></span><br><span class="line">docker pull tomcat:9.0.44-jdk8</span><br><span class="line"></span><br><span class="line">docker rmi mysql:5.7 <span class="comment">#删除镜像</span></span><br><span class="line">docker rmi -f mysql:5.7 <span class="comment">#强制删除</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从tar压缩包获取</span></span><br><span class="line">docker image load  -i /root/oracle.tar</span><br><span class="line"><span class="comment"># 从export导出包获取</span></span><br><span class="line">docker image import mysql_image.tar mysql:5.7</span><br></pre></td></tr></table></figure>

<h1 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看容器列表</span></span><br><span class="line">docker container <span class="built_in">ls</span> -a</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.创建容器</span></span><br><span class="line">docker create  centos </span><br><span class="line"></span><br><span class="line"><span class="comment">#2.创建并启动容器</span></span><br><span class="line">docker run -d tomcat:9.0.44-jdk8</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.生成容器常用参数</span></span><br><span class="line">docker run --name mysql_new -d -p 3306:3306 \</span><br><span class="line">--net mysql-test \</span><br><span class="line">-v /usr/mysql/conf:/etc/my.cnf.d \</span><br><span class="line">-v /usr/mysql/data:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=root \</span><br><span class="line">--restart always \</span><br><span class="line">--privileged=<span class="literal">true</span> \</span><br><span class="line">--network-alias mysql \</span><br><span class="line">mysql:5.7</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.进入容器命令</span></span><br><span class="line">docker <span class="built_in">exec</span> -it  mysql_new bash</span><br><span class="line">docker attach mysql_new</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.删除容器</span></span><br><span class="line">docker container <span class="built_in">rm</span> mysql_new</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.启停容器</span></span><br><span class="line">docker container start|stop|restart mysql_new</span><br><span class="line">docker container pause|unpause mysql_new</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.容器文件传输(拷出)</span></span><br><span class="line">docker container <span class="built_in">cp</span> mysql_new:/root/test /root/test</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.导出容器</span></span><br><span class="line">docker container <span class="built_in">export</span>  -o /root/mysql.tar mysql_new</span><br></pre></td></tr></table></figure>

<h1 id="拉取-Tomcat-镜像并启动容器"><a href="#拉取-Tomcat-镜像并启动容器" class="headerlink" title="拉取 Tomcat 镜像并启动容器"></a>拉取 Tomcat 镜像并启动容器</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y unzip</span><br><span class="line">unzip webroot.zip <span class="comment">#解压应用包</span></span><br><span class="line"></span><br><span class="line">docker pull tomcat:9.0.44-jdk8 <span class="comment">#之前已执行可略过</span></span><br><span class="line"></span><br><span class="line">docker run -d \</span><br><span class="line">--name=fr_tomcat \</span><br><span class="line">-p 8888:8080 \</span><br><span class="line">-v /root/webroot:/usr/local/tomcat/webapps/webroot \</span><br><span class="line">tomcat:9.0.44-jdk8</span><br></pre></td></tr></table></figure>

<p>打开网址验证<code>http://192.168.200.110:8888/webroot/decision/</code></p>
<img src="/2025/07/14/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.14%20docker%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/file-20250714212508802.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>8.20 sql题复盘</title>
    <url>/2025/08/20/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/SQL/8.20%20sql%E9%A2%98%E5%A4%8D%E7%9B%98/</url>
    <content><![CDATA[<p>某医院患者住院信息包括两个方面的内容（Oracle数据库）<br>表1 收费明细表：charge_detail<br>患者ID 住院次数 收费类别 费用</p>
<p>表2 住院记录表：pat_visit<br>患者ID 住院次数 入院时间 出院时间 入院科室 出院科室</p>
<h2 id="问题1：基于以上两张表统计如下数据，结果按月份（降序），出院科室排序。"><a href="#问题1：基于以上两张表统计如下数据，结果按月份（降序），出院科室排序。" class="headerlink" title="问题1：基于以上两张表统计如下数据，结果按月份（降序），出院科室排序。"></a>问题1：基于以上两张表统计如下数据，结果按月份（降序），出院科室排序。</h2><p><strong>需求结果</strong>：<br>出院科室 出院月份 总费用 药品占比</p>
<p><strong>思路</strong>：从住院记录表（pat_visit）开始，左连接收费明细表（charge_detail），通过患者ID和住院次数确保所有住院记录都被包括，即使没有收费记录。然后，按出院科室和住院次数进行分组，计算总费用和药品占比。药品占比是通过DECODE函数实现的：当收费类别为“药品”时，累加费用，否则为0，再除以总费用。结果会显示出院科室、住院次数、总费用和药品占比，但代码中没有明确指定排序方式，理论上需要按月份降序和出院科室排序，但这里使用了住院次数（visit_no）作为分组字段之一。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 问题1：统计各科室每月总费用和药品占比</span></span><br><span class="line"><span class="keyword">SELECT</span> p.DEPT_DISCHARGE_FROM, <span class="comment">-- 选择出院科室字段</span></span><br><span class="line">       p.visit_no, <span class="comment">-- 选择住院次数字段（这里可能应该是月份字段）</span></span><br><span class="line">       <span class="built_in">sum</span>(c.costs), <span class="comment">-- 计算总费用</span></span><br><span class="line">       <span class="built_in">sum</span>(decode(c.charge_type,<span class="string">&#x27;药品&#x27;</span>,c.costs,<span class="number">0</span>))<span class="operator">/</span><span class="built_in">sum</span>(c.costs) <span class="comment">-- 计算药品占比：药品费用除以总费用</span></span><br><span class="line"><span class="keyword">FROM</span> pat_visit p <span class="comment">-- 从住院记录表开始查询</span></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> CHARGE_DETAIL c <span class="keyword">on</span> c.patient_id<span class="operator">=</span>p.patient_id <span class="keyword">and</span> c.visit_no<span class="operator">=</span>p.visit_no <span class="comment">-- 左连接收费明细表，通过患者ID和住院次数关联</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> P.DEPT_DISCHARGE_FROM, p.visit_no <span class="comment">-- 按出院科室和住院次数分组</span></span><br></pre></td></tr></table></figure>

<h2 id="问题2：返回2023年3月出院科室为心内科的本期药品收入，同期药品收入及同比增长率。"><a href="#问题2：返回2023年3月出院科室为心内科的本期药品收入，同期药品收入及同比增长率。" class="headerlink" title="问题2：返回2023年3月出院科室为心内科的本期药品收入，同期药品收入及同比增长率。"></a>问题2：返回2023年3月出院科室为心内科的本期药品收入，同期药品收入及同比增长率。</h2><p><strong>需求结果</strong>：<br>出院科室 出院月份 本期药品费用 同期药品费用 同比增长率</p>
<p><strong>思路</strong>：使用两个公共表表达式（CTE）：tmp和tmp1。tmp查询2023年3月出院的心内科患者的药品费用总和，通过左连接收费明细表，过滤出院时间、科室和收费类别，并按科室和出院月份分组。tmp1类似地查询2022年3月的数据。主查询则左连接这两个CTE，按科室匹配，计算本期药品费用、同期药品费用以及同比增长率（（本期-同期）&#x2F;同期）。代码意图是通过比较两个时间段的药品收入来评估增长情况，但连接条件中有一个拼写错误（tmpl），可能影响结果。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 问题2：计算心内科2023年3月与2022年3月的药品收入对比及增长率</span></span><br><span class="line"><span class="keyword">with</span> tmp <span class="keyword">as</span>( <span class="comment">-- 创建临时表tmp，查询2023年3月心内科的药品费用</span></span><br><span class="line">    <span class="keyword">select</span> p.dept_discharge_from, <span class="comment">-- 选择出院科室</span></span><br><span class="line">           to_char(p.discharge_date_time,<span class="string">&#x27;yyyymm&#x27;</span>) ch_date, <span class="comment">-- 将出院时间格式化为年月格式</span></span><br><span class="line">           <span class="built_in">sum</span>(c.costs) costs <span class="comment">-- 计算药品费用总和</span></span><br><span class="line">    <span class="keyword">from</span> pat_visit p <span class="comment">-- 从住院记录表开始查询</span></span><br><span class="line">    <span class="keyword">left</span> <span class="keyword">join</span> CHARGE_DETAIL c <span class="keyword">on</span> c.patient_id<span class="operator">=</span>p.patient_id <span class="keyword">and</span> c.visit_no<span class="operator">=</span>p.visit_no <span class="comment">-- 左连接收费明细表</span></span><br><span class="line">    <span class="keyword">where</span> to_char(p.discharge_date_time,<span class="string">&#x27;yyyymm&#x27;</span>)<span class="operator">=</span><span class="string">&#x27;202303&#x27;</span> <span class="comment">-- 筛选2023年3月出院的数据</span></span><br><span class="line">          <span class="keyword">and</span> p.dept_discharge_from<span class="operator">=</span><span class="string">&#x27;心内科&#x27;</span> <span class="comment">-- 筛选心内科的数据</span></span><br><span class="line">          <span class="keyword">and</span> c.charge_type<span class="operator">=</span><span class="string">&#x27;药品&#x27;</span> <span class="comment">-- 筛选药品类别的费用</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> p.dept_discharge_from,to_char(p.discharge_date_time,<span class="string">&#x27;yyyymm&#x27;</span>) <span class="comment">-- 按科室和出院月份分组</span></span><br><span class="line">),tmp1 <span class="keyword">as</span> ( <span class="comment">-- 创建临时表tmp1，查询2022年3月心内科的药品费用</span></span><br><span class="line">    <span class="keyword">select</span> p.dept_discharge_from, <span class="comment">-- 选择出院科室</span></span><br><span class="line">           to_char(p.discharge_date_time,<span class="string">&#x27;yyyymm&#x27;</span>) ch_date, <span class="comment">-- 将出院时间格式化为年月格式</span></span><br><span class="line">           <span class="built_in">sum</span>(c.costs) costs <span class="comment">-- 计算药品费用总和</span></span><br><span class="line">    <span class="keyword">from</span> pat_visit p <span class="comment">-- 从住院记录表开始查询</span></span><br><span class="line">    <span class="keyword">left</span> <span class="keyword">join</span> CHARGE_DETAIL c <span class="keyword">on</span> c.patient_id<span class="operator">=</span>p.patient_id <span class="keyword">and</span> c.visit_no<span class="operator">=</span>p.visit_no <span class="comment">-- 左连接收费明细表</span></span><br><span class="line">    <span class="keyword">where</span> to_char(p.discharge_date_time,<span class="string">&#x27;yyyymm&#x27;</span>)<span class="operator">=</span><span class="string">&#x27;202203&#x27;</span> <span class="comment">-- 筛选2022年3月出院的数据</span></span><br><span class="line">          <span class="keyword">and</span> p.dept_discharge_from<span class="operator">=</span><span class="string">&#x27;心内科&#x27;</span> <span class="comment">-- 筛选心内科的数据</span></span><br><span class="line">          <span class="keyword">and</span> c.charge_type<span class="operator">=</span><span class="string">&#x27;药品&#x27;</span> <span class="comment">-- 筛选药品类别的费用</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> p.dept_discharge_from,to_char(p.discharge_date_time,<span class="string">&#x27;yyyymm&#x27;</span>) <span class="comment">-- 按科室和出院月份分组</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">-- 主查询：连接两个临时表，计算同比增长率</span></span><br><span class="line"><span class="keyword">select</span> tmp.dept_discharge_from, <span class="comment">-- 选择科室</span></span><br><span class="line">       tmp.ch_date, <span class="comment">-- 选择月份</span></span><br><span class="line">       tmp.costs, <span class="comment">-- 本期药品费用</span></span><br><span class="line">       tmp1.costs, <span class="comment">-- 同期药品费用</span></span><br><span class="line">       (tmp.costs<span class="operator">-</span>tmp1.costs)<span class="operator">/</span>tmp1.costs <span class="comment">-- 计算同比增长率：(本期-同期)/同期</span></span><br><span class="line"><span class="keyword">from</span> tmp </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> tmp1 <span class="keyword">on</span> tmp.dept_discharge_from<span class="operator">=</span>tmp1.dept_discharge_from <span class="comment">-- 按科室左连接两个临时表</span></span><br></pre></td></tr></table></figure>

<h2 id="问题3：将问题1中查询出的2022年3月份数据插入到指标表kpi"><a href="#问题3：将问题1中查询出的2022年3月份数据插入到指标表kpi" class="headerlink" title="问题3：将问题1中查询出的2022年3月份数据插入到指标表kpi"></a>问题3：将问题1中查询出的2022年3月份数据插入到指标表kpi</h2><p><strong>字段</strong>：年月、科室、指标编码、指标值、创建人、创建时间<br>注：指标编码为固定值“K001”，指标名称为固定值“药品占比”，创建人为自己名字，创建时间为当前时间</p>
<p><strong>思路</strong>：首先指定插入的字段，包括年月、科室、指标编码、指标名称、指标值、创建人和创建时间。然后，从住院记录表左连接收费明细表，过滤出2022年3月出院的数据，按出院科室和住院次数分组，计算药品占比（使用DECODE函数识别药品费用）。固定值如年月、指标编码、指标名称、创建人和当前时间被直接插入。代码意图是将计算出的药品占比作为指标记录保存，以便后续监控和分析，但分组依据包括住院次数，可能导致数据粒度较细。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 问题3：将2022年3月的药品占比数据插入指标表</span></span><br><span class="line"><span class="keyword">insert into</span> kpi ( <span class="comment">-- 插入数据到kpi表</span></span><br><span class="line">    MON, <span class="comment">-- 年月字段</span></span><br><span class="line">    DEPT, <span class="comment">-- 科室字段</span></span><br><span class="line">    KPI_CODE, <span class="comment">-- 指标编码字段</span></span><br><span class="line">    KPI_NAME, <span class="comment">-- 指标名字段</span></span><br><span class="line">    KPI_VALUE, <span class="comment">-- 指标值字段</span></span><br><span class="line">    CREATE_BY, <span class="comment">-- 创建人字段</span></span><br><span class="line">    CREATE_TIME <span class="comment">-- 创建时间字段</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;2022-03&#x27;</span>, <span class="comment">-- 固定值：2022年3月</span></span><br><span class="line">       P.DEPT_DISCHARGE_FROM, <span class="comment">-- 选择出院科室</span></span><br><span class="line">       <span class="string">&#x27;K001&#x27;</span>, <span class="comment">-- 固定指标编码</span></span><br><span class="line">       <span class="string">&#x27;药品占比&#x27;</span>, <span class="comment">-- 固定指标名称</span></span><br><span class="line">       <span class="built_in">sum</span>(decode(c.charge_type,<span class="string">&#x27;药品&#x27;</span>,c.costs,<span class="number">0</span>))<span class="operator">/</span><span class="built_in">sum</span>(c.costs), <span class="comment">-- 计算药品占比</span></span><br><span class="line">       <span class="string">&#x27;hwz&#x27;</span>, <span class="comment">-- 固定创建人名称</span></span><br><span class="line">       sysdate <span class="comment">-- 当前系统时间</span></span><br><span class="line"><span class="keyword">FROM</span> pat_visit p <span class="comment">-- 从住院记录表开始查询</span></span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> CHARGE_DETAIL c <span class="keyword">on</span> c.patient_id<span class="operator">=</span>p.patient_id <span class="keyword">and</span> c.visit_no<span class="operator">=</span>p.visit_no <span class="comment">-- 左连接收费明细表</span></span><br><span class="line"><span class="keyword">where</span> to_char(p.discharge_date_time,<span class="string">&#x27;yyyymm&#x27;</span>)<span class="operator">=</span><span class="string">&#x27;202203&#x27;</span> <span class="comment">-- 筛选2022年3月出院的数据</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> p.DEPT_DISCHARGE_FROM,p.visit_no <span class="comment">-- 按出院科室和住院次数分组</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Compose、mysql主从部署、Linux根目录扩容</title>
    <url>/2025/07/15/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.15%20Docker%20Compose%E3%80%81mysql%E4%B8%BB%E4%BB%8E%E9%83%A8%E7%BD%B2%E3%80%81Linux%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%89%A9%E5%AE%B9/</url>
    <content><![CDATA[<h1 id="docker-compose简介"><a href="#docker-compose简介" class="headerlink" title="docker compose简介"></a>docker compose简介</h1><p>Docker Compose 是 Docker 官方推出的工具，用于<strong>定义和运行多容器 Docker 应用</strong>。通过单个 YAML 文件（通常命名为 <code>docker-compose.yml</code>），可以配置应用的服务、网络和卷，一键启动或停止整个应用栈，无需逐个操作容器。<br>Docker Compose 是管理多容器应用的必备工具，通过 YAML 配置简化部署流程，尤其适合开发和测试环境。对于生产环境，可结合 Kubernetes 等更强大的编排工具。</p>
<h1 id="yaml文件编辑规范"><a href="#yaml文件编辑规范" class="headerlink" title="yaml文件编辑规范"></a>yaml文件编辑规范</h1><p>•第一：YAML是一种标记性语言，类似于json数据描述语言，可读性高；　<br>•第二：YAML数据结构通过缩进来表示，连续项目通过减号表示，键值对用冒号分隔，数组使用中括号<code>[]</code>括起来，bash用花括号<code>&#123;&#125;</code>括起来；　<br>•第三：不支持制表符TAB缩进，只能使用空格缩进；<br>•第四：字符后缩进一个空格(如冒号、逗号、横杠后须加空格)；<br>•第五：使用#号表示注释；<br>•第六：如果包含特殊字符用单引号<code>&#39; &#39;</code> 标记为普通字符,用双引号表示特殊字符本身的意思,布尔值必须使用双引号<code>&quot; &quot;</code>括起来；<br>•第七：YAML 区分大小写；</p>
<h2 id="docker-compose-yaml文件指令"><a href="#docker-compose-yaml文件指令" class="headerlink" title="docker compose yaml文件指令"></a>docker compose yaml文件指令</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">version：指定此yml文件基于的compose的版本</span></span><br><span class="line"><span class="string">services：指定创建容器的服务选项</span></span><br><span class="line"><span class="comment">#服务名：例如nginx等</span></span><br><span class="line"><span class="attr">network:</span> <span class="string">网络服务创建</span></span><br><span class="line"><span class="attr">volume:</span> <span class="string">数据卷服务创建</span></span><br><span class="line"><span class="string">hostname：容器主机名</span></span><br><span class="line"><span class="string">build</span> <span class="string">：指定构建镜像上下文路径</span></span><br><span class="line"><span class="string">context：上下文路径</span></span><br><span class="line"><span class="string">dockerfile：指定构建镜像的</span> <span class="string">Dockerfile</span> <span class="string">文件名</span></span><br><span class="line"><span class="string">ports：暴露容器端口，与-p相同，但端口不能低于60；例如：-</span> <span class="number">1234</span><span class="string">:80</span></span><br><span class="line"><span class="string">networks：加入顶级networks下配置的网络</span></span><br><span class="line"><span class="string">deploy：指定部署和运行服务相关配置，只能在Swarm模式使用</span></span><br><span class="line"><span class="string">volumes：挂载宿主机路径或命令卷</span></span><br><span class="line"><span class="string">image：指定容器运行的镜像</span></span><br><span class="line"><span class="string">command：执行命令，覆盖默认命令</span></span><br><span class="line"><span class="string">container_name：指定容器名称，由于容器名称是唯一的，如果指定自定义名称，则无法scale（扩展）</span></span><br><span class="line"><span class="string">environment：添加环境变量</span></span><br><span class="line"><span class="string">restart：重启策略，重启策略是no，always，no-failure，unless-stoped</span></span><br><span class="line">		<span class="literal">no</span><span class="string">，默认策略，在容器退出时不重启容器。</span></span><br><span class="line">					<span class="string">on-failure，在容器非正常退出时（退出状态非0），才会重启容器。可加(:3)</span> <span class="string">规定重启次数</span></span><br><span class="line">					<span class="string">always，在容器退出时总是重启容器。</span></span><br><span class="line">		<span class="string">unless-stopped，在容器退出时总是重启容器</span></span><br><span class="line"><span class="string">networks：配置网络，指定网卡设备等</span></span><br></pre></td></tr></table></figure>

<h1 id="compose命令"><a href="#compose命令" class="headerlink" title="compose命令"></a>compose命令</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.创建和启动服务</span></span><br><span class="line">docker compose up</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.删除和停止服务</span></span><br><span class="line">docker compose down</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.服务启动/停止/重启</span></span><br><span class="line">docker compose start/stop/restart</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.指定启动数量</span></span><br><span class="line">docker compose up --scale master=2 --scale slave=2</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.查看日志</span></span><br><span class="line">docker compose logs [ -f 容器名称 --<span class="built_in">tail</span> =50 ]</span><br></pre></td></tr></table></figure>

<h1 id="mysql主从部署"><a href="#mysql主从部署" class="headerlink" title="mysql主从部署"></a>mysql主从部署</h1><img src="/2025/07/15/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.15%20Docker%20Compose%E3%80%81mysql%E4%B8%BB%E4%BB%8E%E9%83%A8%E7%BD%B2%E3%80%81Linux%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%89%A9%E5%AE%B9/file-20250715205814061.png" class="">
<ul>
<li><strong>binlog 日志</strong>：主库记录所有数据修改操作，作为主从同步的数据源。</li>
<li><strong>undo 日志</strong>：记录事务执行前的数据状态，用于回滚和多版本并发控制。</li>
<li><strong>redo 日志</strong>：记录事务已提交的修改，确保崩溃后数据可恢复。</li>
<li><strong>relay 日志</strong>：从库临时存储主库 binlog 内容，供 SQL 线程读取执行。</li>
</ul>
<img src="/2025/07/15/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.15%20Docker%20Compose%E3%80%81mysql%E4%B8%BB%E4%BB%8E%E9%83%A8%E7%BD%B2%E3%80%81Linux%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%89%A9%E5%AE%B9/file-20250715165229436.png" class="">
<h2 id="docker-compose-yaml"><a href="#docker-compose-yaml" class="headerlink" title="docker-compose.yaml"></a>docker-compose.yaml</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2.27&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql_m:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql_m</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">mysql_m</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3336</span><span class="string">:3306</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql_net</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./my_m.conf:/etc/mysql/conf.d/my.cnf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql_m_volume:/var/lib/mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql_m_volume:/var/log/mysql</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=root</span> </span><br><span class="line">  </span><br><span class="line">  <span class="attr">mysql_s:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql_s</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">mysql_s</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3337</span><span class="string">:3306</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql_net</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./my_s.conf:/etc/mysql/conf.d/my.cnf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql_s_volume:/var/lib/mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql_s_volume:/var/log/mysql</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=root</span> </span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">mysql_net:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">mysql_net</span></span><br><span class="line">    <span class="attr">ipam:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">default</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">subnet:</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.0</span><span class="string">/24</span></span><br><span class="line">          <span class="attr">gateway:</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.1</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">mysql_m_volume:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">mysql_m_volume</span></span><br><span class="line">  <span class="attr">mysql_s_volume:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">mysql_s_volume</span></span><br></pre></td></tr></table></figure>

<h3 id="修改主服务配置文件：my-m-conf"><a href="#修改主服务配置文件：my-m-conf" class="headerlink" title="修改主服务配置文件：my_m.conf"></a>修改主服务配置文件：my_m.conf</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">mysqld</span>]</span><br><span class="line"> <span class="comment">#主服务器唯一ID</span></span><br><span class="line"><span class="string">server_id=1</span></span><br><span class="line"> <span class="comment">#启用二进制日志</span></span><br><span class="line"><span class="string">log-bin=mysql-bin</span></span><br><span class="line"><span class="comment">#上面两行最重要，下面的可以不配置# 设置不要复制的数据库(可设置多个)</span></span><br><span class="line"><span class="string">binlog-ignore-db=mysql</span></span><br><span class="line"><span class="string">binlog-ignore-db=information_schema</span></span><br><span class="line"> <span class="comment">#设置需要复制的数据库 需要复制的主数据库名字</span></span><br><span class="line"><span class="string">binlog-do-db=test</span></span><br><span class="line"> <span class="comment">#设置logbin格式 Row、Statement、Mixed</span></span><br><span class="line"><span class="string">binlog_format=STATEMENT</span></span><br><span class="line"> <span class="comment"># Disabling symbolic-links is recommended to prevent assorted security risks 关闭配置外存储</span></span><br><span class="line"><span class="string">symbolic-links=0</span></span><br></pre></td></tr></table></figure>

<h3 id="修改从服务配置文件：my-s-conf"><a href="#修改从服务配置文件：my-s-conf" class="headerlink" title="修改从服务配置文件：my_s.conf"></a>修改从服务配置文件：my_s.conf</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">mysqld</span>]</span><br><span class="line"><span class="string">server-id=2</span></span><br><span class="line"><span class="string">relay-log=relay-bin</span> <span class="comment">#启用二进制日志</span></span><br><span class="line"><span class="string">log-bin=mysql-bin</span> <span class="comment">#上面两行最重要，下面的可以不配置# 设置不要复制的数据库(可设置多个)</span></span><br><span class="line"><span class="comment"># read_only=1 #从服务器只读</span></span><br><span class="line"><span class="string">slave-skip-errors=</span> <span class="number">1032</span><span class="string">,1062,1007,1050</span> <span class="comment">#忽略报错</span></span><br></pre></td></tr></table></figure>


<h2 id="执行验证"><a href="#执行验证" class="headerlink" title="执行验证"></a>执行验证</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> mysql_service/</span><br><span class="line">docker compose up -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入主机容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql_m bash</span><br><span class="line"><span class="comment"># 登录mysql</span></span><br><span class="line">mysql -uroot -proot</span><br><span class="line"></span><br><span class="line">show master status;</span><br><span class="line"><span class="comment"># 出现以下内容说明my_m.conf、my_s.conf配置单已生效</span></span><br></pre></td></tr></table></figure>
<img src="/2025/07/15/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.15%20Docker%20Compose%E3%80%81mysql%E4%B8%BB%E4%BB%8E%E9%83%A8%E7%BD%B2%E3%80%81Linux%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%89%A9%E5%AE%B9/file-20250715183543276.png" class="">
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建一个账号（用户名：worker 密码：root）</span></span><br><span class="line">create user <span class="string">&#x27;worker&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="comment"># 给权限</span></span><br><span class="line">grant replication slave,replication client on *.* to <span class="string">&#x27;worker&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"><span class="comment"># 建库</span></span><br><span class="line">create database <span class="built_in">test</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要在执行以下配置前再查看一下状态（会变）</span></span><br><span class="line">show master status;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新开一个终端窗口进入从机容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql_s bash</span><br><span class="line"><span class="comment"># 登录mysql</span></span><br><span class="line">mysql -uroot -proot</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.登录从服务器配置执行</span></span><br><span class="line">CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;mysql_m&#x27;</span>,</span><br><span class="line">MASTER_USER=<span class="string">&#x27;worker&#x27;</span>,</span><br><span class="line">MASTER_PASSWORD=<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">MASTER_PORT=3306, </span><br><span class="line">MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000001&#x27;</span>,MASTER_LOG_POS=778;</span><br><span class="line"></span><br><span class="line"><span class="comment">#起服务</span></span><br><span class="line">start slave;</span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">show slave status\G;</span><br><span class="line"></span><br><span class="line"><span class="comment">#从机建库不会同步，需要先手动建库</span></span><br><span class="line">create database <span class="built_in">test</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#在主机test库中键一张表</span></span><br><span class="line">use <span class="built_in">test</span>;</span><br><span class="line">create table <span class="built_in">test</span> (<span class="built_in">id</span> int);</span><br><span class="line">show tables;</span><br><span class="line"></span><br><span class="line"><span class="comment">#在从机中验证，会同步创建该表</span></span><br><span class="line">use <span class="built_in">test</span>;</span><br><span class="line">show tables;</span><br><span class="line"></span><br><span class="line"><span class="comment">#若之前同步失败，修正后可用以下命令重新同步</span></span><br><span class="line">stop slave;</span><br><span class="line">reset master;</span><br><span class="line">start slave;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">show slave status\G;</span><br></pre></td></tr></table></figure>
<img src="/2025/07/15/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.15%20Docker%20Compose%E3%80%81mysql%E4%B8%BB%E4%BB%8E%E9%83%A8%E7%BD%B2%E3%80%81Linux%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%89%A9%E5%AE%B9/file-20250715192539656.png" class="">

<h1 id="Linux根目录扩容"><a href="#Linux根目录扩容" class="headerlink" title="Linux根目录扩容"></a>Linux根目录扩容</h1><p>第一步：先关机<br>第二步：添加硬盘-SCSI-创建新虚拟磁盘-设置需要添加的磁盘大小（写作最大磁盘大小）（10G）（存储为单个文件）-下一步-完成</p>
<img src="/2025/07/15/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.15%20Docker%20Compose%E3%80%81mysql%E4%B8%BB%E4%BB%8E%E9%83%A8%E7%BD%B2%E3%80%81Linux%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%89%A9%E5%AE%B9/file-20250715193501661.png" class="">

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看当前磁盘占用情况</span></span><br><span class="line"><span class="built_in">df</span> -lh</span><br><span class="line"><span class="comment"># 查看新增物理磁盘盘符</span></span><br><span class="line"><span class="built_in">ls</span> /dev/sd*</span><br><span class="line"><span class="comment"># 查看新增物理情况磁盘</span></span><br><span class="line">fdisk -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第三步：创建物理卷</span></span><br><span class="line">pvcreate /dev/sdb <span class="comment">#sdb为上一步中新增的盘符，按实际情况设置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看根目录所在卷组名称</span></span><br><span class="line">vgdisplay <span class="comment">#vgs  </span></span><br><span class="line">pvdisplay <span class="comment">#pvs</span></span><br><span class="line">lvdisplay <span class="comment">#lvs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第四步：使用新增物理卷扩容根目录卷组</span></span><br><span class="line">vgextend centos /dev/sdb</span><br><span class="line"><span class="comment"># 第五步：扩容根目录所在逻辑卷大小(按照G扩容)</span></span><br><span class="line">lvextend -L +10G /dev/centos/root</span><br><span class="line">lvextend -l +2559 /dev/centos/root <span class="comment">#若以上不行则执行这条，2559为上报错信息</span></span><br><span class="line"><span class="comment"># 第六步：重新读取根目录逻辑卷信息</span></span><br><span class="line">xfs_growfs /dev/mapper/centos-root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看扩容后 磁盘占用</span></span><br><span class="line"><span class="built_in">df</span> -lh</span><br><span class="line"><span class="comment"># 查看磁盘挂载</span></span><br><span class="line">lsblk</span><br></pre></td></tr></table></figure>
<img src="/2025/07/15/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.15%20Docker%20Compose%E3%80%81mysql%E4%B8%BB%E4%BB%8E%E9%83%A8%E7%BD%B2%E3%80%81Linux%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%89%A9%E5%AE%B9/file-20250715205128303.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>docker</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis 一主二从三哨兵</title>
    <url>/2025/07/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.16%20Redis%20%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/</url>
    <content><![CDATA[<h1 id="一主二从三哨兵"><a href="#一主二从三哨兵" class="headerlink" title="一主二从三哨兵"></a>一主二从三哨兵</h1><h3 id="一、架构组成"><a href="#一、架构组成" class="headerlink" title="一、架构组成"></a><strong>一、架构组成</strong></h3><p>“一主二从三哨兵” 架构由 3 类角色组成，共 6 个容器（或实例）：</p>
<ul>
<li><strong>1 个主节点（Master）</strong>：处理读写请求，是核心数据节点。</li>
<li><strong>2 个从节点（Slave）</strong>：通过主从复制同步主节点数据，仅处理读请求（默认），主节点故障时可被哨兵选举为新主节点。</li>
<li><strong>3 个哨兵节点（Sentinel）</strong>：监控主从节点状态，判断主节点是否下线，当主节点故障时自动触发故障转移（Failover），将某个从节点升级为新主节点。</li>
</ul>
<h3 id="二、核心组件作用"><a href="#二、核心组件作用" class="headerlink" title="二、核心组件作用"></a><strong>二、核心组件作用</strong></h3><h4 id="1-主节点（Master）"><a href="#1-主节点（Master）" class="headerlink" title="1. 主节点（Master）"></a><strong>1. 主节点（Master）</strong></h4><ul>
<li><strong>功能</strong>：接收所有写请求（如 <code>SET</code>、<code>HSET</code>），并通过主从复制将数据同步到从节点。</li>
<li><strong>特点</strong>：默认只有主节点可写，从节点只读（通过配置 <code>slave-read-only yes</code> 控制），确保数据一致性。</li>
<li><strong>Docker 配置关键点</strong>：<ul>
<li>绑定所有网络接口（<code>bind 0.0.0.0</code>），允许容器外部访问。</li>
<li>配置持久化（RDB&#x2F;AOF），避免数据丢失。</li>
<li>设置访问密码（<code>requirepass</code>）和主从同步密码（<code>masterauth</code>，与从节点一致）。</li>
</ul>
</li>
</ul>
<h4 id="2-从节点（Slave）"><a href="#2-从节点（Slave）" class="headerlink" title="2. 从节点（Slave）"></a><strong>2. 从节点（Slave）</strong></h4><ul>
<li><strong>功能</strong>：通过 <code>replicaof &lt;master-ip&gt; &lt;master-port&gt;</code> 配置同步主节点数据，仅处理读请求（分担主节点读压力）。</li>
<li><strong>特点</strong>：主节点故障后，可被哨兵选举为新主节点，升级后自动切换为可写状态。</li>
<li><strong>Docker 配置关键点</strong>：<ul>
<li>与主节点使用相同的密码配置（<code>masterauth</code> 需匹配主节点 <code>requirepass</code>）。</li>
<li>关闭保护模式（<code>protected-mode no</code>），允许跨容器访问。</li>
<li>配置持久化路径（与主节点独立，避免数据冲突）。</li>
</ul>
</li>
</ul>
<h4 id="3-哨兵节点（Sentinel）"><a href="#3-哨兵节点（Sentinel）" class="headerlink" title="3. 哨兵节点（Sentinel）"></a><strong>3. 哨兵节点（Sentinel）</strong></h4><ul>
<li><strong>功能</strong>：<ul>
<li><strong>监控</strong>：定期检查主从节点是否存活（通过 <code>PING</code> 命令）。</li>
<li><strong>判断下线</strong>：当主节点不可达时，先标记为 “主观下线（SDOWN）”；若超过 <code>quorum</code> 个哨兵达成共识，则标记为 “客观下线（ODOWN）”。</li>
<li><strong>故障转移</strong>：客观下线后，选举哨兵 leader 执行故障转移，将最优从节点升级为新主节点，其他从节点切换到新主节点同步数据。</li>
</ul>
</li>
<li><strong>Docker 配置关键点</strong>：<ul>
<li>配置监控主节点（<code>sentinel monitor &lt;master-name&gt; &lt;master-ip&gt; &lt;master-port&gt; &lt;quorum&gt;</code>），<code>quorum</code> 为达成下线共识的最小哨兵数量（3 哨兵建议设为 2）。</li>
<li>设置主节点认证密码（<code>sentinel auth-pass &lt;master-name&gt; &lt;password&gt;</code>）。</li>
<li>配置下线检测超时（<code>sentinel down-after-milliseconds</code>，建议 1000-3000ms）和故障转移超时（<code>sentinel failover-timeout</code>）。</li>
</ul>
</li>
</ul>
<h2 id="主从配置"><a href="#主从配置" class="headerlink" title="主从配置"></a>主从配置</h2><p><code>docker-compose.yaml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">redis1:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis1</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">redis1</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6379</span><span class="string">:6379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">16379</span><span class="string">:16379</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis_net</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis1/conf:/etc/conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis1/data:/data</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="string">redis-server</span> <span class="string">/etc/conf/redis.conf</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">redis2:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis2</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">redis2</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6380</span><span class="string">:6380</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">16380</span><span class="string">:16380</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis_net</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis2/conf:/etc/conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis2/data:/data</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="string">redis-server</span> <span class="string">/etc/conf/redis.conf</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis3:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis3</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">redis3</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6381</span><span class="string">:6381</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">16381</span><span class="string">:16381</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis_net</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis3/conf:/etc/conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis3/data:/data</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="string">redis-server</span> <span class="string">/etc/conf/redis.conf</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">redis_net:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">redis_net</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先启动服务使其创建该有的文件（需要刷新一下目录）</span></span><br><span class="line"><span class="built_in">cd</span> redis_service/</span><br><span class="line">docker compose up</span><br><span class="line"></span><br><span class="line"><span class="comment"># 会报错缺少配置文件，此时再去写对应的配置文件</span></span><br></pre></td></tr></table></figure>
<img src="/2025/07/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.16%20Redis%20%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/file-20250716140147451.png" class="">

<p>在 <code>/redis_service/redis1/conf/</code> 下新建主机配置文件 <code>redis.conf</code> </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">databases</span> <span class="number">10</span> </span><br><span class="line"><span class="string">bind</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="comment">#监听 </span></span><br><span class="line"><span class="string">port</span> <span class="number">6379</span></span><br><span class="line"><span class="comment">#访问密码 </span></span><br><span class="line"><span class="string">requirepass</span> <span class="number">123456</span></span><br><span class="line"><span class="string">masterauth</span> <span class="number">123456</span></span><br><span class="line"><span class="comment">#持久化文件路径</span></span><br><span class="line"><span class="string">dir</span> <span class="string">/data</span> </span><br><span class="line"><span class="comment">#持久化文件</span></span><br><span class="line"><span class="string">dbfilename</span> <span class="string">dump.rdb</span></span><br><span class="line"><span class="comment">#启用 RDB 持久化文件的压缩</span></span><br><span class="line"><span class="string">rdbcompression</span> <span class="literal">yes</span></span><br><span class="line"><span class="comment">#如果后台保存出错则停止写入</span></span><br><span class="line"><span class="string">stop-writes-on-bgsave-error</span> <span class="literal">yes</span></span><br><span class="line"><span class="comment">#关闭保护模式</span></span><br><span class="line"><span class="string">protected-mode</span> <span class="literal">no</span></span><br><span class="line"><span class="comment">#在空数据库时进行无盘复制加载</span></span><br><span class="line"><span class="string">repl-diskless-load</span> <span class="string">on-empty-db</span></span><br><span class="line"><span class="comment">#守护进程的方式运行</span></span><br><span class="line"><span class="comment">#daemonize yes</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#持久化策略</span></span><br><span class="line"><span class="comment">#表示如果在 900 秒（15 分钟）内有至少 1 次数据修改操作，则执行一次 RDB 持久化。</span></span><br><span class="line"><span class="string">save</span> <span class="number">900</span> <span class="number">1</span> </span><br><span class="line"><span class="comment">#在 300 秒（5 分钟）内有至少 10 次数据修改操作，就执行一次 RDB 持久化。</span></span><br><span class="line"><span class="string">save</span> <span class="number">300</span> <span class="number">10</span>     </span><br><span class="line"><span class="string">save</span> <span class="number">60</span> <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志</span></span><br><span class="line"><span class="string">logfile</span> <span class="string">redis.log</span></span><br></pre></td></tr></table></figure>

<p>在 <code>/redis_service/redis2/conf/</code> 下新建从机配置文件 <code>redis.conf</code><br>配置后也在<code>/redis_service/redis3/conf/</code>复制一份，并修改为对应监听端口：6381</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#实例化数据库</span></span><br><span class="line"><span class="string">databases</span> <span class="number">10</span></span><br><span class="line"><span class="string">bind</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> </span><br><span class="line"><span class="comment">#监听</span></span><br><span class="line"><span class="string">port</span> <span class="number">6380</span></span><br><span class="line"><span class="comment">#访问密码和主机密码</span></span><br><span class="line"><span class="string">requirepass</span> <span class="number">123456</span></span><br><span class="line"><span class="string">masterauth</span> <span class="number">123456</span></span><br><span class="line"><span class="comment">#持久化文件路径</span></span><br><span class="line"><span class="string">dir</span> <span class="string">/data</span> </span><br><span class="line"><span class="comment">#持久化文件</span></span><br><span class="line"><span class="string">dbfilename</span> <span class="string">dump.rdb</span></span><br><span class="line"><span class="comment">#指定本地数据存储压缩</span></span><br><span class="line"><span class="string">rdbcompression</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">stop-writes-on-bgsave-error</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">protected-mode</span> <span class="literal">no</span></span><br><span class="line"><span class="string">repl-diskless-load</span> <span class="string">on-empty-db</span></span><br><span class="line"><span class="comment">#daemonize yes</span></span><br><span class="line"><span class="comment">#protected-mode</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#持久化策略</span></span><br><span class="line"><span class="string">save</span> <span class="number">900</span> <span class="number">1</span></span><br><span class="line"><span class="string">save</span> <span class="number">300</span> <span class="number">10</span></span><br><span class="line"><span class="string">save</span> <span class="number">60</span> <span class="number">10000</span></span><br><span class="line"><span class="comment">#日志路径</span></span><br><span class="line"><span class="string">logfile</span> <span class="string">redis.log</span></span><br><span class="line"><span class="string">replicaof</span> <span class="string">redis1</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure>

<h3 id="验证测试"><a href="#验证测试" class="headerlink" title="验证测试"></a>验证测试</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 再次启动</span></span><br><span class="line">docker compose up -d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">docker container <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">cd</span> redis_service</span><br><span class="line">docker compose ps</span><br><span class="line">docker compose stats</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入主机容器验证</span></span><br><span class="line">docker <span class="built_in">exec</span> -it redis1 bash</span><br><span class="line">redis-cli</span><br><span class="line">auth 123456</span><br><span class="line">info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开一个新的终端窗口进入从机</span></span><br><span class="line">docker <span class="built_in">exec</span> -it redis2 redis-cli -p 6380</span><br><span class="line">auth 123456</span><br><span class="line">info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试主从同步</span></span><br><span class="line"><span class="comment"># 主机执行以下操作</span></span><br><span class="line"><span class="built_in">set</span> class_name zhiyun70</span><br><span class="line"><span class="comment"># 从机执行以下命令</span></span><br><span class="line">get class_name</span><br><span class="line"><span class="comment"># 若能成功输出&quot;zhiyun70&quot;说明已实现主从同步</span></span><br></pre></td></tr></table></figure>

<h2 id="哨兵配置"><a href="#哨兵配置" class="headerlink" title="哨兵配置"></a>哨兵配置</h2><p>修改<code>docker-compose.yaml</code>配置文件（添加sentinel1、sentinel2、sentinel3）</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">redis1:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis1</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">redis1</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6379</span><span class="string">:6379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">16379</span><span class="string">:16379</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis_net</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis1/conf:/etc/conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis1/data:/data</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="string">redis-server</span> <span class="string">/etc/conf/redis.conf</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">redis2:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis2</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">redis2</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6380</span><span class="string">:6380</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">16380</span><span class="string">:16380</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis_net</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis2/conf:/etc/conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis2/data:/data</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="string">redis-server</span> <span class="string">/etc/conf/redis.conf</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis3:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis3</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">redis3</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6381</span><span class="string">:6381</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">16381</span><span class="string">:16381</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis_net</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis3/conf:/etc/conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis3/data:/data</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="string">redis-server</span> <span class="string">/etc/conf/redis.conf</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">sentinel1:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">sentinel1</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">sentinel1</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">26379</span><span class="string">:26379</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis_net</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./sentinel1/conf:/etc/conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./sentinel1/data:/data</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="string">redis-sentinel</span> <span class="string">/etc/conf/sentinel.conf</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">sentinel2:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">sentinel2</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">sentinel2</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">26380</span><span class="string">:26379</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis_net</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./sentinel2/conf:/etc/conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./sentinel2/data:/data</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="string">redis-sentinel</span> <span class="string">/etc/conf/sentinel.conf</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">sentinel3:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">sentinel3</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">sentinel3</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">26381</span><span class="string">:26379</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis_net</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./sentinel3/conf:/etc/conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./sentinel3/data:/data</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="string">redis-sentinel</span> <span class="string">/etc/conf/sentinel.conf</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">redis_net:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">redis_net</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 删除原来的服务重新启动</span></span><br><span class="line">docker compose down</span><br><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure>

<p>刷新目录后会生成三个文件夹（sentinel1、sentinel2、sentinel3）<br>在 <code>/redis_service/sentinel1/conf/</code> 下新建哨兵配置文件 <code>sentinel.conf</code><br>配置后分别复制一份到sentinel2、sentinel3的conf下</p>
<img src="/2025/07/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.16%20Redis%20%E4%B8%80%E4%B8%BB%E4%BA%8C%E4%BB%8E%E4%B8%89%E5%93%A8%E5%85%B5/file-20250716143409595.png" class="">
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#操作端口</span></span><br><span class="line"><span class="comment">#绑定所有网络接口</span></span><br><span class="line"><span class="string">bind</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="comment">#哨兵服务监听的端口。</span></span><br><span class="line"><span class="string">port</span> <span class="number">26379</span></span><br><span class="line"><span class="comment">#指定进程 ID 文件的路径</span></span><br><span class="line"><span class="string">pidfile</span> <span class="string">&quot;/data/redis-sentinel.pid&quot;</span></span><br><span class="line"><span class="comment">#工作目录</span></span><br><span class="line"><span class="string">dir</span> <span class="string">&quot;/tmp&quot;</span> </span><br><span class="line"><span class="comment">#设置访问哨兵的密码</span></span><br><span class="line"><span class="string">requirepass</span> <span class="number">123456</span></span><br><span class="line"><span class="comment">#docker必关 不以后台进程方式运行</span></span><br><span class="line"><span class="string">daemonize</span> <span class="literal">no</span> </span><br><span class="line"><span class="comment">#关闭保护模式</span></span><br><span class="line"><span class="string">protected-mode</span> <span class="literal">no</span> </span><br><span class="line"><span class="comment">#指定日志文件路径</span></span><br><span class="line"><span class="string">logfile</span> <span class="string">&quot;/data/redis-sentinel.log&quot;</span></span><br><span class="line"><span class="comment">#启用主机名解析</span></span><br><span class="line"><span class="string">sentinel</span> <span class="string">resolve-hostnames</span> <span class="literal">yes</span></span><br><span class="line"><span class="comment">#监控名为redisMaster的主节点，节点名为redis1，端口为 6379，需要至少 2 个哨兵</span></span><br><span class="line"><span class="string">sentinel</span> <span class="string">monitor</span> <span class="string">redisMaster</span> <span class="string">redis1</span> <span class="number">6379 </span><span class="number">2</span></span><br><span class="line"><span class="comment">#该主节点的认证密码</span></span><br><span class="line"><span class="string">sentinel</span> <span class="string">auth-pass</span> <span class="string">redisMaster</span> <span class="number">123456</span></span><br><span class="line"><span class="comment">#在指定毫秒数后认为该主节点主观下线。</span></span><br><span class="line"><span class="string">sentinel</span> <span class="string">down-after-milliseconds</span> <span class="string">redisMaster</span> <span class="number">100</span> </span><br><span class="line"><span class="comment">#故障转移时同时同步的从节点数量为 1 个</span></span><br><span class="line"><span class="string">sentinel</span> <span class="string">parallel-syncs</span> <span class="string">redisMaster</span> <span class="number">1</span></span><br><span class="line"><span class="comment">#故障转移超时时间</span></span><br><span class="line"><span class="string">sentinel</span> <span class="string">failover-timeout</span> <span class="string">redisMaster</span> <span class="number">600</span></span><br></pre></td></tr></table></figure>

<p>启动服务时需要关闭<code>sentinel.conf</code>的编辑窗口，因为运行时需要往上面写入日志，打开窗口会占用其写入进程</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 对每个sentinel.conf赋予写权限</span></span><br><span class="line"><span class="built_in">chmod</span> a+w /root/redis_service/sentinel1/conf/sentinel.conf</span><br><span class="line"><span class="built_in">chmod</span> a+w /root/redis_service/sentinel2/conf/sentinel.conf</span><br><span class="line"><span class="built_in">chmod</span> a+w /root/redis_service/sentinel3/conf/sentinel.conf</span><br><span class="line"><span class="comment"># 对每个data文件夹赋予写权限</span></span><br><span class="line"><span class="built_in">chmod</span> a+w /root/redis_service/sentinel1/data</span><br><span class="line"><span class="built_in">chmod</span> a+w /root/redis_service/sentinel2/data</span><br><span class="line"><span class="built_in">chmod</span> a+w /root/redis_service/sentinel3/data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除原来的服务重新启动</span></span><br><span class="line"><span class="built_in">cd</span> /root/redis_service/</span><br><span class="line">docker compose down</span><br><span class="line">docker compose up -d</span><br><span class="line">docker container <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开主机和从机终端执行以下命令查看状态</span></span><br><span class="line">docker <span class="built_in">exec</span> -it redis2 redis-cli -p 6380</span><br><span class="line">auth 123456</span><br><span class="line">info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开一个新终端窗口进入哨兵容器查看状态</span></span><br><span class="line">docker <span class="built_in">exec</span> -it sentinel3 redis-cli -p 26379</span><br><span class="line">auth 123456</span><br><span class="line">info</span><br></pre></td></tr></table></figure>

<h3 id="验证测试-1"><a href="#验证测试-1" class="headerlink" title="验证测试"></a>验证测试</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/redis_service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停掉其中一个服务器redis1</span></span><br><span class="line">docker container stop redis1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 哨兵终端查看</span></span><br><span class="line">info sentinel</span><br><span class="line"><span class="comment"># 一键查看</span></span><br><span class="line">docker <span class="built_in">exec</span> -it sentinel1 redis-cli -p 26379 -a 123456 info sentinel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时若主机端口由6379变为6380，则再前往redis2查看验证</span></span><br><span class="line">docker <span class="built_in">exec</span> -it redis2 redis-cli -p 6380 -a 123456 info</span><br><span class="line"><span class="comment"># Replication下的role由原来的slave（从机）变为master（主机），说明成功实现主从切换</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes介绍</title>
    <url>/2025/07/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.17%20Kubernetes/</url>
    <content><![CDATA[<h1 id="Kubernetes介绍"><a href="#Kubernetes介绍" class="headerlink" title="Kubernetes介绍"></a>Kubernetes介绍</h1><p><a href="https://blog.csdn.net/qq_40610003/article/details/147000217">Kubernetes详细教程（一）：入门、架构及基本概念-CSDN博客</a><br><a href="https://kubernetes.io/zh-cn/docs/concepts/overview/components/">官方文档</a><br>• Kubernetes（简称k8s）是一个开源的容器编排平台，用于自动化部署、扩展和管理容器化应用。<br>• 它的核心功能包括自动化容器部署、负载均衡、自我修复、存储编排以及跨集群资源管理。<br>• 通过Kubernetes，企业能够高效管理大规模的容器化应用，确保应用的高可用性和弹性扩展。</p>
<p>简单来说，Kubernetes 是容器时代的 “操作系统”，让分布式应用的管理变得简单、高效、可靠。</p>
<h2 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h2><p><strong>自动调度</strong>：将容器放到K8S集群的任意节点中，并根据容器需要和节点负载决定目标节点。<br><strong>自动修复</strong>：当健康检查发现节点问题，系统会自动将节点上的资源进行转移，并恢复功能。<br><strong>自动缩扩容</strong>：通过预定义负载指标，根据指标自动触发动态缩扩容行为。</p>
<h2 id="基本架构"><a href="#基本架构" class="headerlink" title="基本架构"></a>基本架构</h2><p>Kubernetes架构可简单分为主节点（Master）、从节点（Node）和数据库ETCD。<br>Master为控制节点，负责整个集群的管理控制<br>Node的作用是承接工作负载</p>
<p>在官方文档中，又将Kubernetes架构分为两大部分：<strong>控制平面（Control Plane）</strong> 和 <strong>工作节点（Node）</strong></p>
<h4 id="1-控制平面（管理集群的核心组件）"><a href="#1-控制平面（管理集群的核心组件）" class="headerlink" title="1. 控制平面（管理集群的核心组件）"></a>1. 控制平面（管理集群的核心组件）</h4><ul>
<li><strong>API Server</strong>：所有操作的统一入口（如部署应用、查询状态），接收并处理用户 &#x2F; 组件的请求。</li>
<li><strong>ETCD</strong>：集群的 “数据库”，存储集群的所有配置数据（如 Pod 定义、服务规则），保证数据一致性。</li>
<li><strong>Scheduler</strong>：负责容器（Pod）的调度，根据节点资源（CPU、内存）、亲和性规则等选择最优节点运行容器。</li>
<li><strong>Controller Manager</strong>：运行多种控制器进程（如 Deployment 控制器、Node 控制器），确保集群状态与期望状态一致（如维持 Pod 副本数）。</li>
<li><strong>Cloud Controller Manager</strong>：对接云服务商 API（如 AWS、GCP），实现与云服务的集成（如负载均衡、存储卷创建）。</li>
</ul>
<h4 id="2-节点（运行容器的工作节点）"><a href="#2-节点（运行容器的工作节点）" class="headerlink" title="2. 节点（运行容器的工作节点）"></a>2. 节点（运行容器的工作节点）</h4><p>每个节点是一台物理机或虚拟机，包含以下组件：</p>
<ul>
<li><strong>Kubelet</strong>：运行在每个节点上的代理，负责监控容器状态，确保容器按 Pod 定义运行。</li>
<li><strong>Kube-proxy</strong>：节点网络代理，负责维护节点上的网络规则，实现 Service 的负载均衡和 Pod 间通信。</li>
<li><strong>Runtime</strong>：负责运行容器的底层引擎（如 Docker、containerd、CRI-O 等，需兼容 CRI 接口）。</li>
</ul>
<h3 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a><strong>核心概念</strong></h3><ol>
<li><strong>Pod：</strong> Kubernetes 管理的最小可部署单元。一个 Pod 包含一个或多个紧密耦合的容器（共享网络命名空间、存储卷）。通常，一个 Pod 只运行一个主应用容器和可能的辅助容器（如日志收集）。</li>
<li><strong>Deployment：</strong> 最常用的控制器对象，用于声明式地管理 Pod 的无状态应用。它负责创建、更新、回滚和确保指定数量的 Pod 副本始终运行。支持滚动更新。</li>
<li><strong>Service：</strong> 定义一组 Pod 的逻辑集合和访问它们的策略。为 Pod 提供稳定的网络端点（IP&#x2F;DNS），实现负载均衡和服务发现。即使 Pod 的 IP 地址变化，Service 的访问点保持不变。</li>
<li><strong>ConfigMap &amp; Secret：</strong> 用于将配置数据和敏感信息（分别）与容器镜像解耦，便于配置管理和安全。</li>
<li><strong>Volume：</strong> 为 Pod 中的容器提供持久化存储的能力，即使容器重启，数据也能保留。支持多种存储后端。</li>
<li><strong>Namespace：</strong> 用于在同一个物理集群中创建多个虚拟集群（逻辑分区），实现资源隔离（如为不同团队、项目或环境划分资源）。</li>
<li><strong>Ingress：</strong> 管理外部访问集群内服务的入口（通常是 HTTP&#x2F;HTTPS），提供负载均衡、SSL 终止和基于名称的虚拟主机等功能。</li>
<li><strong>StatefulSet：</strong> 用于管理有状态应用（如数据库）的控制器，为每个 Pod 提供稳定的网络标识符和持久化存储。</li>
<li><strong>DaemonSet：</strong> 确保集群中所有（或部分）节点上都运行一个指定 Pod 的副本（常用于日志收集、监控代理等）。</li>
<li><strong>Job &#x2F; CronJob：</strong> 用于运行一次性任务或定时任务。</li>
</ol>
<h3 id="与-Docker-Compose-的对比"><a href="#与-Docker-Compose-的对比" class="headerlink" title="与 Docker Compose 的对比"></a>与 Docker Compose 的对比</h3><ul>
<li>Docker Compose 适合单机或小规模容器编排（开发 &#x2F; 测试场景），依赖手动管理。</li>
<li>Kubernetes 适合大规模、生产环境的容器集群管理，提供自动化、高可用、弹性伸缩等核心能力。</li>
</ul>
<h1 id="操作实践"><a href="#操作实践" class="headerlink" title="操作实践"></a>操作实践</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker image load -i /root/kuboard.tar</span><br><span class="line">docker tag e6e4605073ba swr.cn-east-2.myhuaweicloud.com/kuboard/kuboard:v4</span><br><span class="line">yum install docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> root/k8s/</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>

<p>进入<code>http://192.168.200.120:8018</code><br>用户名：admin<br>密码：Kuboard123</p>
<img src="/2025/07/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.17%20Kubernetes/file-20250717144212440.png" class="">

<p>Kubernetes集群-导入集群<br>在终端执行命令<code>cat /etc/kubernetes/admin.conf</code><br>将输出的信息复制到kubeconfig窗口<br>最后点击导入集群</p>
<img src="/2025/07/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.17%20Kubernetes/file-20250717155148225.png" class="">
<img src="/2025/07/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.17%20Kubernetes/file-20250717154749876.png" class="">
<img src="/2025/07/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.17%20Kubernetes/file-20250717155125993.png" class="">

<h2 id="kubernetes-集群信息查看"><a href="#kubernetes-集群信息查看" class="headerlink" title="kubernetes-集群信息查看"></a>kubernetes-集群信息查看</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get pods <span class="comment"># 查看所有 Pod</span></span><br><span class="line"></span><br><span class="line">kubectl get deployments <span class="comment"># 查看所有 Deployment</span></span><br><span class="line"></span><br><span class="line">kubectl get services <span class="comment"># 查看所有 Service</span></span><br><span class="line"></span><br><span class="line">kubectl get pvc <span class="comment"># 查看所有 PVC</span></span><br><span class="line"></span><br><span class="line">kubectl get nodes <span class="comment"># 查看所有 Node</span></span><br><span class="line"></span><br><span class="line">kubectl get namespaces <span class="comment"># 查看所有命名空间</span></span><br><span class="line"></span><br><span class="line">kubectl get configmap &lt;name&gt; -o yaml <span class="comment"># 查看 ConfigMap 内容</span></span><br><span class="line"></span><br><span class="line">kubectl logs &lt;pod-name&gt;  <span class="comment"># 查看 Pod 日志</span></span><br></pre></td></tr></table></figure>

<h2 id="kubernetes-资源创建命令"><a href="#kubernetes-资源创建命令" class="headerlink" title="kubernetes-资源创建命令"></a>kubernetes-资源创建命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 Pod</span></span><br><span class="line">kubectl create deployment my-pod --image=nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Deployment</span></span><br><span class="line">kubectl create deployment my-deployment --image=nginx --replicas=3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Service</span></span><br><span class="line">kubectl create service clusterip my-service --tcp=80:8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 ConfigMap</span></span><br><span class="line">kubectl create configmap my-config --from-literal=key1=value1 --from-literal=key2=value2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Secret</span></span><br><span class="line">kubectl create secret generic my-secret --from-literal=username=admin --from-literal=password=secret</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Namespace</span></span><br><span class="line">kubectl create namespace my-namespace</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s部署tomcat</title>
    <url>/2025/07/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.18%20k8s%E9%83%A8%E7%BD%B2tomcat/</url>
    <content><![CDATA[<h1 id="k8s部署tomcat"><a href="#k8s部署tomcat" class="headerlink" title="k8s部署tomcat"></a>k8s部署tomcat</h1><p><code>tomcat4.0.yaml</code> 文件用于在 Kubernetes 集群中部署包含 Tomcat 应用和 Nginx 负载均衡器的应用环境，包含以下主要组成部分：</p>
<ul>
<li><strong>命名空间</strong>：创建 <code>fr-server</code> 命名空间，用于资源隔离。 </li>
<li><strong>Tomcat StatefulSet</strong>：部署两个 Tomcat 实例，使用 <code>tomcat:9.0.44 - jdk8</code> 镜像，将物理机 <code>/root/tomcat_server/webroot</code> 目录挂载到容器 <code>/usr/local/tomcat/webapps/fr</code> 目录。同时使用 Pod 反亲和性策略，确保实例分布在不同节点。</li>
<li><strong>Tomcat 服务</strong>：创建 <code>ClusterIP</code> 类型服务，将集群内部流量转发到 Tomcat Pod 的 8080 端口。</li>
<li><strong>Nginx ConfigMap</strong>：存储 Nginx 的配置文件，配置 Nginx 将请求代理到 Tomcat 后端服务。</li>
<li><strong>Nginx Deployment</strong>：部署一个 Nginx 实例，使用 <code>nginx:1.21.6</code> 镜像，将 ConfigMap 中的配置文件挂载到容器内。</li>
<li><strong>Nginx 服务</strong>：创建 <code>NodePort</code> 类型服务，通过节点的 31437 端口将 Nginx 服务暴露给集群外部。 tomcat4.0.yaml 文件用于在 Kubernetes 集群中部署包含 Tomcat 应用和 Nginx 负载均衡器的应用环境，下面是其主要组成部分的简要介绍：</li>
<li><strong>命名空间</strong>：创建 <code>fr-server</code> 命名空间，用于资源隔离。</li>
<li><strong>Tomcat StatefulSet</strong>：部署两个 Tomcat 实例，使用 <code>tomcat:9.0.44 - jdk8</code> 镜像，将物理机 <code>/root/tomcat_server/webroot</code> 目录挂载到容器 <code>/usr/local/tomcat/webapps/fr</code> 目录。同时使用 Pod 反亲和性策略，确保实例分布在不同节点。</li>
<li><strong>Tomcat 服务</strong>：创建 <code>ClusterIP</code> 类型服务，将集群内部流量转发到 Tomcat Pod 的 8080 端口。</li>
<li><strong>Nginx ConfigMap</strong>：存储 Nginx 的配置文件，配置 Nginx 将请求代理到 Tomcat 后端服务。</li>
<li><strong>Nginx Deployment</strong>：部署一个 Nginx 实例，使用 <code>nginx:1.21.6</code> 镜像，将 ConfigMap 中的配置文件挂载到容器内。</li>
<li><strong>Nginx 服务</strong>：创建 <code>NodePort</code> 类型服务，通过节点的 31437 端口将 Nginx 服务暴露给集群外部。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y unzip</span><br><span class="line">docker  pull nignix</span><br><span class="line">docker  pull tomcat:9.0.44-jdk8</span><br><span class="line">docker pull redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入192.168.200.121</span></span><br><span class="line"><span class="comment"># 将webroot.zip解压到/root/tomcat_server/</span></span><br><span class="line">unzip /root/webroot.zip -d /root/tomcat_server/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入192.168.200.120</span></span><br><span class="line"><span class="comment"># 通过tomcat4.0.yaml部署</span></span><br><span class="line">kubectl apply -f /root/tomcat_server/tomcat4.0.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证部署状态</span></span><br><span class="line">kubectl get namespaces <span class="comment">#查看命名空间</span></span><br><span class="line">kubectl get pods -n fr-server <span class="comment">#查看pod状态</span></span><br><span class="line">kubectl get services -n fr-server <span class="comment">#查看服务状态</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 排错相关</span></span><br><span class="line"><span class="comment"># 清除资源重新部署（备用）</span></span><br><span class="line">kubectl delete -f /root/tomcat_server/tomcat4.0.yaml</span><br><span class="line">kubectl apply -f /root/tomcat_server/tomcat4.0.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入Tomcat容器检查/usr/local/tomcat/webapps/fr目录是否有东西</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -it tomcat-statefulset-0 -n fr-server -- <span class="built_in">ls</span> /usr/local/tomcat/webapps/fr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证负载均衡</span></span><br><span class="line"><span class="comment"># 查看Nginx日志</span></span><br><span class="line">kubectl logs -n fr-server &lt;nginx-pod-name&gt;</span><br><span class="line"><span class="comment"># 预期输出</span></span><br><span class="line">192.168.1.1 - - [timestamp] <span class="string">&quot;GET /fr/decision HTTP/1.1&quot;</span> 200 ...</span><br><span class="line">192.168.1.1 - - [timestamp] <span class="string">&quot;GET /fr/decision HTTP/1.1&quot;</span> 200 ...</span><br><span class="line"><span class="comment"># 分别查看两个Tomcat的访问日志</span></span><br><span class="line">kubectl logs -n fr-server tomcat-statefulset-0</span><br><span class="line">kubectl logs -n fr-server tomcat-statefulset-1</span><br><span class="line"><span class="comment"># 应看到请求被均匀分配</span></span><br></pre></td></tr></table></figure>

<p>访问tomcat<br><a href="http://192.168.200.120:31437/fr/decision">http://192.168.200.120:31437/fr/decision</a><br><a href="http://192.168.200.121:31437/fr/decision">http://192.168.200.121:31437/fr/decision</a><br><a href="http://192.168.200.122:31437/fr/decision">http://192.168.200.122:31437/fr/decision</a></p>
<img src="/2025/07/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.18%20k8s%E9%83%A8%E7%BD%B2tomcat/file-20250719225911540.png" class="">
<img src="/2025/07/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.18%20k8s%E9%83%A8%E7%BD%B2tomcat/file-20250719225723561.png" class="">
<h1 id="mysql主从同步"><a href="#mysql主从同步" class="headerlink" title="mysql主从同步"></a>mysql主从同步</h1><p><code>mysql_stat.yaml</code> 文件用于在 Kubernetes 集群中部署一个 <strong>MySQL 主从复制集群</strong>，包含以下组件：<br><strong>主节点 (Master)</strong>：提供数据库读写服务。<br><strong>从节点 (Slave)</strong>：实时同步主节点数据（基于 binlog 复制）。<br><strong>存储</strong>：使用本地持久卷（PV&#x2F;PVC）保存数据。<br><strong>网络</strong>：</p>
<ul>
<li>Headless Service：用于集群内部 DNS 发现。</li>
<li>NodePort Service：暴露主节点到集群外部（端口 <code>31306</code>）。<br><strong>配置管理</strong>：通过 ConfigMap 管理 MySQL 配置文件。<br><strong>安全</strong>：Secret 存储 MySQL root 密码（示例密码为 <code>root</code>）。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在 k8snode1 创建主节点数据目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/mysql_k8s/master/data</span><br><span class="line"><span class="comment"># 在 k8snode2 创建从节点数据目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/mysql_k8s/slave/data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 k8smaster中部署</span></span><br><span class="line"><span class="built_in">cd</span> mysql_server</span><br><span class="line">kubectl apply -f mysql_stat.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证资源状态</span></span><br><span class="line"><span class="comment"># 检查命名空间</span></span><br><span class="line">kubectl get ns mysql-server</span><br><span class="line"><span class="comment"># 检查 Pod 状态（等待状态为 Running）</span></span><br><span class="line">kubectl get pods -n mysql-server</span><br><span class="line"><span class="comment"># 检查持久卷和声明</span></span><br><span class="line">kubectl get pv,pvc -n mysql-server</span><br><span class="line"><span class="comment"># 检查服务</span></span><br><span class="line">kubectl get svc -n mysql-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主从复制验证</span></span><br><span class="line"><span class="comment"># 获取主节点状态（从 `mysql-source` Pod 中获取 binlog 位置）：</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -it mysql-source-0 -n mysql-server -- mysql -uroot -proot -e <span class="string">&quot;SHOW MASTER STATUS;&quot;</span></span><br><span class="line"><span class="comment"># 在从节点配置复制（替换 &lt;MASTER_LOG_FILE&gt; 和 &lt;MASTER_LOG_POS&gt; 为上条命令的查询结果）</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -it mysql-replica-0 -n mysql-server -- mysql -uroot -proot</span><br><span class="line"></span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">  MASTER_HOST=<span class="string">&#x27;mysql-source-headless.mysql-server.svc.cluster.local&#x27;</span>,</span><br><span class="line">  MASTER_USER=<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">  MASTER_PASSWORD=<span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">  MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000001&#x27;</span>,</span><br><span class="line">  MASTER_LOG_POS=154;</span><br><span class="line">START SLAVE;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证复制状态</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -it mysql-replica-0 -n mysql-server -- mysql -uroot -proot -e <span class="string">&quot;SHOW SLAVE STATUS\G&quot;</span></span><br><span class="line"><span class="comment"># 检查关键字段：</span></span><br><span class="line"><span class="comment"># Slave_IO_Running: Yes</span></span><br><span class="line"><span class="comment"># Slave_SQL_Running: Yes</span></span><br><span class="line"><span class="comment"># Seconds_Behind_Master: 0</span></span><br></pre></td></tr></table></figure>
<img src="/2025/07/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.18%20k8s%E9%83%A8%E7%BD%B2tomcat/file-20250720165550334.png" class="">

<h2 id="测试数据同步"><a href="#测试数据同步" class="headerlink" title="测试数据同步"></a>测试数据同步</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在主节点写入数据</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -it mysql-source-0 -n mysql-server -- mysql -uroot -proot</span><br><span class="line"></span><br><span class="line">CREATE DATABASE <span class="built_in">test</span>;</span><br><span class="line">USE <span class="built_in">test</span>;</span><br><span class="line">CREATE TABLE <span class="built_in">users</span> (<span class="built_in">id</span> INT, name VARCHAR(20));</span><br><span class="line">INSERT INTO <span class="built_in">users</span> VALUES (1, <span class="string">&#x27;Tetuka&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从节点检查数据</span></span><br><span class="line">kubectl <span class="built_in">exec</span> -it mysql-replica-0 -n mysql-server -- mysql -uroot -proot -e <span class="string">&quot;SELECT * FROM test.users;&quot;</span></span><br></pre></td></tr></table></figure>
<img src="/2025/07/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.18%20k8s%E9%83%A8%E7%BD%B2tomcat/file-20250720165712253.png" class="">

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>k8s</tag>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix安装介绍</title>
    <url>/2025/07/22/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.22%20%E5%AE%89%E8%A3%85zabbix/</url>
    <content><![CDATA[<h1 id="Zabbix介绍"><a href="#Zabbix介绍" class="headerlink" title="Zabbix介绍"></a>Zabbix介绍</h1><p>Zabbix 是一款功能强大的企业级开源监控解决方案，专为实时监控IT基础设施（包括网络、服务器、应用程序和服务）的性能和可用性而设计。Zabbix特别适合需要深度监控和自定义监控需求的企业环境，其强大的灵活性和扩展性使其成为IT监控领域的领先解决方案之一。</p>
<ul>
<li>官方文档：<a href="https://www.zabbix.com/documentation">https://www.zabbix.com/documentation</a></li>
<li>社区论坛：<a href="https://www.zabbix.com/forum">https://www.zabbix.com/forum</a></li>
<li>GitHub仓库：<a href="https://github.com/zabbix/zabbix">https://github.com/zabbix/zabbix</a></li>
</ul>
<h3 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a><strong>核心功能</strong></h3><ul>
<li><strong>实时监控</strong>：支持秒级数据采集</li>
<li><strong>自动发现</strong>：自动发现网络设备、服务器和服务</li>
<li><strong>告警通知</strong>：支持多种告警方式（邮件、短信、微信等）</li>
<li><strong>可视化</strong>：提供丰富的图表和仪表盘</li>
<li><strong>分布式监控</strong>：支持多级代理架构</li>
</ul>
<h3 id="主要组件"><a href="#主要组件" class="headerlink" title="主要组件"></a><strong>主要组件</strong></h3><table>
<thead>
<tr>
<th>组件</th>
<th>功能描述</th>
</tr>
</thead>
<tbody><tr>
<td>Zabbix Server</td>
<td>核心服务，负责数据处理、触发告警</td>
</tr>
<tr>
<td>Zabbix Agent</td>
<td>安装在监控目标上的数据采集代理</td>
</tr>
<tr>
<td>Zabbix Proxy</td>
<td>分布式监控的中间代理</td>
</tr>
<tr>
<td>Zabbix Web</td>
<td>基于PHP的Web管理界面</td>
</tr>
<tr>
<td>Zabbix Database</td>
<td>存储配置和监控数据（支持MySQL等）</td>
</tr>
</tbody></table>
<h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a><strong>适用场景</strong></h3><ul>
<li><strong>IT基础设施监控</strong></li>
<li><strong>云环境监控</strong></li>
<li><strong>物联网设备监控</strong></li>
<li><strong>业务服务可用性监控</strong></li>
</ul>
<h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><p>传统方式（基于包管理器，适用于 CentOS 系统）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 Apache 服务</span></span><br><span class="line">yum -y install httpd</span><br><span class="line">systemctl start httpd</span><br><span class="line"><span class="comment"># 安装 PHP 及 MySQL 依赖</span></span><br><span class="line">yum install -y php php-mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 Zabbix 源并安装组件</span></span><br><span class="line"><span class="comment"># 安装 Zabbix 源</span></span><br><span class="line">rpm -ivh https://repo.zabbix.com/zabbix/4.4/rhel/7/x86_64/zabbix-release-4.4-1.el7.noarch.rpm</span><br><span class="line"><span class="comment"># 安装 Zabbix 服务端、客户端等组件</span></span><br><span class="line">yum install -y zabbix-server-mysql zabbix-get zabbix-web zabbix-web-mysql zabbix-agent zabbix-sender</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置数据库（MySQL）</span></span><br><span class="line"><span class="comment"># 登录 MySQL（假设 root 密码为 root，根据实际情况修改）</span></span><br><span class="line">mysql -uroot -proot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 MySQL 终端执行以下命令：</span></span><br><span class="line"><span class="comment"># 创建 Zabbix 数据库（UTF-8 编码）</span></span><br><span class="line">create database zabbix character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line"><span class="comment"># 创建 Zabbix 用户并授权</span></span><br><span class="line">create user <span class="string">&#x27;zabbix&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;zabbix&#x27;</span>;</span><br><span class="line">grant all privileges on zabbix.* to <span class="string">&#x27;zabbix&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;zabbix&#x27;</span>;</span><br><span class="line">flush privileges;</span><br><span class="line"><span class="built_in">exit</span>;  <span class="comment"># 退出 MySQL</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入 Zabbix 初始数据</span></span><br><span class="line"><span class="comment"># 进入 Zabbix 数据库脚本目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/share/doc/zabbix-server-mysql-4.4.10/</span><br><span class="line"><span class="comment"># 解压初始 SQL 脚本（若未安装 unzip 需先执行 yum install unzip）</span></span><br><span class="line">gunzip create.sql.gz</span><br><span class="line"><span class="comment"># 导入数据到 Zabbix 数据库</span></span><br><span class="line">mysql -uzabbix -pzabbix --database=zabbix &lt; create.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 Zabbix 服务端</span></span><br><span class="line"><span class="comment"># 编辑 Zabbix 服务端配置文件</span></span><br><span class="line">vim /etc/zabbix/zabbix_server.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改数据库相关配置（根据实际情况调整）：</span></span><br><span class="line">DBHost=localhost</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix  <span class="comment"># 与数据库授权密码一致</span></span><br><span class="line">DBSocket=/var/lib/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动并设置开机自启：</span></span><br><span class="line">systemctl start zabbix-server.service</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-server.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 Web 服务（Apache）</span></span><br><span class="line"><span class="comment"># 编辑 Zabbix Web 配置，设置时区</span></span><br><span class="line">vi /etc/httpd/conf.d/zabbix.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 / 修改时区配置：</span></span><br><span class="line">php_value date.timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 Apache：</span></span><br><span class="line">systemctl restart httpd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装并启动 Zabbix Agent</span></span><br><span class="line">yum install -y zabbix-agent</span><br><span class="line">systemctl start zabbix-agent.service</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-agent.service</span><br></pre></td></tr></table></figure>

<h1 id="访问-Zabbix-界面"><a href="#访问-Zabbix-界面" class="headerlink" title="访问 Zabbix 界面"></a>访问 Zabbix 界面</h1><p>通过浏览器访问 Zabbix 登录页面：<br><a href="http://192.168.200.120/zabbix">http://192.168.200.120/zabbix</a><br>传统方式：http:&#x2F;&#x2F;服务器IP&#x2F;zabbix<br>默认账号：Admin，默认密码：zabbix</p>
<img src="/2025/07/22/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/docker/7.22%20%E5%AE%89%E8%A3%85zabbix/file-20250722112404188.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>影刀考试题</title>
    <url>/2025/06/12/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.12%20%E5%BD%B1%E5%88%80%E8%80%83%E8%AF%95%E9%A2%98/</url>
    <content><![CDATA[<h1 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h1><p>流程截图</p>
<img src="/2025/06/12/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.12%20%E5%BD%B1%E5%88%80%E8%80%83%E8%AF%95%E9%A2%98/file-20250717190935365.png" class="">

<p>Python代码段</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df=pd.DataFrame(list1)</span><br><span class="line">df[<span class="string">&quot;票房&quot;</span>]=df[<span class="string">&quot;票房&quot;</span>].astype(<span class="built_in">int</span>)</span><br><span class="line">df=df.groupby(<span class="string">&quot;制片地区&quot;</span>)[<span class="string">&quot;票房&quot;</span>].<span class="built_in">sum</span>().reset_index()</span><br><span class="line">df=df.sort_values(by=<span class="string">&quot;票房&quot;</span>,ascending=<span class="literal">False</span>).head(<span class="number">3</span>)</span><br><span class="line">df.insert(<span class="number">0</span>,<span class="string">&quot;提交人&quot;</span>,<span class="string">&quot;Tetuka&quot;</span>)</span><br><span class="line">res=df.values.tolist()</span><br><span class="line"><span class="comment">#3.0-3.5</span></span><br><span class="line">df=pd.DataFrame(list1)</span><br><span class="line">df=df[(df.评分!=<span class="string">&quot;-&quot;</span>)]</span><br><span class="line">df[<span class="string">&quot;评分&quot;</span>]=df[<span class="string">&quot;评分&quot;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line">df[<span class="string">&quot;票房&quot;</span>]=df[<span class="string">&quot;票房&quot;</span>].astype(<span class="built_in">int</span>)</span><br><span class="line">df=df[(df.评分&gt;=<span class="number">3.0</span>) &amp; (df.评分&lt;=<span class="number">3.5</span>)]</span><br><span class="line">n1=df[<span class="string">&quot;票房&quot;</span>].<span class="built_in">sum</span>()</span><br><span class="line">res.append([<span class="string">&quot;Tetuka&quot;</span>,<span class="string">&quot;3.0-3.5&quot;</span>,<span class="built_in">int</span>(n1)])</span><br><span class="line"></span><br><span class="line"><span class="comment">#9.0-9.5</span></span><br><span class="line">df=pd.DataFrame(list1)</span><br><span class="line">df=df[(df.评分!=<span class="string">&quot;-&quot;</span>)]</span><br><span class="line">df[<span class="string">&quot;票房&quot;</span>]=df[<span class="string">&quot;票房&quot;</span>].astype(<span class="built_in">int</span>)</span><br><span class="line">df[<span class="string">&quot;评分&quot;</span>]=df[<span class="string">&quot;评分&quot;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line">df=df[(df.评分&gt;=<span class="number">9.0</span>) &amp; (df.评分&lt;=<span class="number">9.5</span>)]</span><br><span class="line">n2=df[<span class="string">&quot;票房&quot;</span>].<span class="built_in">sum</span>()</span><br><span class="line">res.append([<span class="string">&quot;Tetuka&quot;</span>,<span class="string">&quot;9.0-9.5&quot;</span>,<span class="built_in">int</span>(n2)])</span><br><span class="line"></span><br><span class="line"> <span class="comment">#无评分</span></span><br><span class="line">df=pd.DataFrame(list1)</span><br><span class="line">df[<span class="string">&quot;票房&quot;</span>]=df[<span class="string">&quot;票房&quot;</span>].astype(<span class="built_in">int</span>)</span><br><span class="line">df=df[(df.评分==<span class="string">&quot;-&quot;</span>)]</span><br><span class="line">n3=df[<span class="string">&quot;票房&quot;</span>].<span class="built_in">sum</span>()</span><br><span class="line">res.append([<span class="string">&quot;Tetuka&quot;</span>,<span class="string">&quot;无评分&quot;</span>,<span class="built_in">int</span>(n3)])</span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>

<p>mysql运行结果</p>
<img src="/2025/06/12/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.12%20%E5%BD%B1%E5%88%80%E8%80%83%E8%AF%95%E9%A2%98/file-20250717190947389.png" class="">


<h1 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h1><p>python代码段</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用提醒:</span></span><br><span class="line"><span class="comment"># 1. xbot包提供软件自动化、数据表格、Excel、日志、AI等功能</span></span><br><span class="line"><span class="comment"># 2. package包提供访问当前应用数据的功能，如获取元素、访问全局变量、获取资源文件等功能</span></span><br><span class="line"><span class="comment"># 3. 当此模块作为流程独立运行时执行main函数</span></span><br><span class="line"><span class="comment"># 4. 可视化流程中可以通过&quot;调用模块&quot;的指令使用此模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xbot,pymysql</span><br><span class="line"><span class="keyword">from</span> xbot <span class="keyword">import</span> <span class="built_in">print</span>, sleep</span><br><span class="line"><span class="keyword">from</span> .<span class="keyword">import</span> package</span><br><span class="line"><span class="keyword">from</span> .package <span class="keyword">import</span> variables <span class="keyword">as</span> glv</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">recountry</span>(<span class="params">c</span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1e8-1f1f3.svg&quot;</span>:<span class="string">&quot;中国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1fa-1f1f8.svg&quot;</span>:<span class="string">&quot;美国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1ee-1f1f3.svg&quot;</span>:<span class="string">&quot;印度&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1ef-1f1f5.svg&quot;</span>:<span class="string">&quot;日本&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1ec-1f1e7.svg&quot;</span>:<span class="string">&quot;英国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1eb-1f1f7.svg&quot;</span>:<span class="string">&quot;法国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1eb-1f1ee.svg&quot;</span>:<span class="string">&quot;芬兰&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> c <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">return</span> data[c]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">args</span>):</span><br><span class="line">    webpage = xbot.web.create(url=<span class="string">&quot;http://www.boxofficecn.com/the-red-box-office&quot;</span>)</span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">        web1 = webpage.find_all_by_xpath(<span class="string">&#x27;//tbody/tr&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> web1:</span><br><span class="line">            mname = j.children()[<span class="number">1</span>].get_text().split(<span class="string">&quot;（&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            year = j.children()[<span class="number">0</span>].get_text().replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">            country = recountry(j.children()[<span class="number">0</span>].children()[<span class="number">0</span>].get_attribute(<span class="string">&quot;src&quot;</span>))</span><br><span class="line">            score = j.children()[<span class="number">1</span>].get_text().split(<span class="string">&quot;（&quot;</span>)[<span class="number">1</span>].replace(<span class="string">&quot;）&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;0&quot;</span>)</span><br><span class="line">            director = j.children()[<span class="number">2</span>].get_text()</span><br><span class="line">            mbo = j.children()[<span class="number">3</span>].get_text().replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;&amp;&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;↗&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">            res.append([mname,year,country,score,director,mbo,<span class="string">&quot;Tetuka&quot;</span>])</span><br><span class="line">        nextpage = webpage.find_by_xpath(<span class="string">&quot;//div[@id=&#x27;tablepress-4_paginate&#x27;]/a[2]&quot;</span>)</span><br><span class="line">        nextpage.click()</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">    webpage.close()</span><br><span class="line"></span><br><span class="line">     <span class="comment">#数据写入数据库</span></span><br><span class="line">    conn=pymysql.connect(host=<span class="string">&quot;192.168.48.129&quot;</span>,user=<span class="string">&quot;root&quot;</span>,password=<span class="string">&quot;root123456&quot;</span>,</span><br><span class="line">    database=<span class="string">&quot;test&quot;</span>,charset=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">    insertdata=conn.cursor()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">        sql=<span class="string">f&quot;insert into movie values(&#x27;<span class="subst">&#123;i[<span class="number">0</span>]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;i[<span class="number">1</span>]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;i[<span class="number">2</span>]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;i[<span class="number">3</span>]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;i[<span class="number">4</span>]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;i[<span class="number">5</span>]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;i[<span class="number">6</span>]&#125;</span>&#x27;)&quot;</span></span><br><span class="line">        insertdata.execute(sql)</span><br><span class="line">    conn.commit()</span><br><span class="line">    insertdata.close()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>mysql运行结果</p>
<img src="/2025/06/12/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.12%20%E5%BD%B1%E5%88%80%E8%80%83%E8%AF%95%E9%A2%98/file-20250717190958310.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>影刀</tag>
      </tags>
  </entry>
  <entry>
    <title>6.17帆软FineReport填报功能</title>
    <url>/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/</url>
    <content><![CDATA[<h2 id="1-添加员工信息"><a href="#1-添加员工信息" class="headerlink" title="1.添加员工信息"></a>1.添加员工信息</h2><p>1.设计界⾯ 在属性⾯板的控件设置 每⼀个选择合适的类型 下拉框需要选择数据字典， 控件可以设置约束<br>2.⼯具栏 模版 报表填报属性 添加内置 sql ，选择数据表，选择对应单元格，确定<br>3.预览的时候选择下拉箭头下的填报预览，输⼊信息后点击左上⻆的提交，则提⽰成 功，去数据库查询验证是否插⼊成功</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617104843783.png" class="">
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617104949161.png" class="">
<h2 id="2-增删改员⼯信息导航功能完成"><a href="#2-增删改员⼯信息导航功能完成" class="headerlink" title="2.增删改员⼯信息导航功能完成"></a>2.增删改员⼯信息导航功能完成</h2><p>数据量⻓的情况可以修改⽹⻚⼤⼩ ⼯具栏 模版 ⻚⾯设置 修改尺⼨⼤些 , 设计⻚⾯ 在数 据单元格选择控件类型 , 报表填报属性选择智能 , 选择填报预览</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617111315393.png" class="">
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617111406343.png" class="">

<h2 id="3-增删改员⼯信息单元格按钮完成，给出提⽰，并且添加自动刷新"><a href="#3-增删改员⼯信息单元格按钮完成，给出提⽰，并且添加自动刷新" class="headerlink" title="3.增删改员⼯信息单元格按钮完成，给出提⽰，并且添加自动刷新"></a>3.增删改员⼯信息单元格按钮完成，给出提⽰，并且添加自动刷新</h2><p>设置回调函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (fr_submitinfo.<span class="property">success</span>) &#123; </span><br><span class="line">	<span class="variable constant_">FR</span>.<span class="property">Msg</span>.<span class="title function_">toast</span>(<span class="string">&#x27;当前行删除成功&#x27;</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">	<span class="variable constant_">FR</span>.<span class="property">Msg</span>.<span class="title function_">toast</span>(<span class="string">&#x27;当前行删除失败，错误信息为：&#x27;</span> + fr_submitinfo.<span class="property">failinfo</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>删除7777</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617113946322.png" class="">
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617114022395.png" class="">

<p>修改</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617114837781.png" class="">
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617140939533.png" class="">

<p>添加点击事件（自动刷新）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">_g</span>().<span class="title function_">refreshAllSheets</span>()</span><br></pre></td></tr></table></figure>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617141705325.png" class="">
<h2 id="4-填报操作-C"><a href="#4-填报操作-C" class="headerlink" title="4. 填报操作-C"></a>4. 填报操作-C</h2><p>使⽤数据： FRDemo 中的数据表员⼯⾏程安排表（以姓名、⽇期、地点为 联合主键）<br>题⽬要求：<br>1 ）参数栏可选择登录⼈员：⼈事员 A 、⼈事员 B 、⼈事经理；<br>2 ） 选择⼈事员 A 、⼈事员 B 登录时，⻚⾯显⽰对应⼈事员的个⼈⾏程安排表 可在空⽩⾏提交 数据，其中姓名默认为登录⼈不可编辑，⽇期默认为当天可编辑，地点 ( 单选 ) 可下拉选择 ⽆锡总部、南京总部，⼯作内容可⾃由编辑，参会⼈员（多选）可下拉复选⼈事员 A 、⼈ 事员 B 、⼈事经理，点击提交可填报数据⼊库，若记录已存在则做数据更新，填报后⾃动 参数刷新⻚⾯； 可针对已有数据做更新、删除，仅地点、⼯作内容、参会⼈员可编辑， 设置与上述⼀致，点击更新可做数据更新，点击删除可做数据删除；<br>3 ）选择⼈事经理 登录时，除 2 ）中的内容，还可查看⼈事员 A 、⼈事员 B 的⾏程安排表 仅⽤⼀张模板实现</p>
<p>制作界面</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617161547561.png" class="">

<p>人事经理显示人员行程安排表，人事员A、B不显示<br>人员行程安排表添加条件属性 $姓名!&#x3D;”人事经理”</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617190414758.png" class="">

<p>增删改自动提交<br>参与人员下拉复选框需设置返回值为字符串</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617191226508.png" class="">
<h2 id="5-填报实操-F"><a href="#5-填报实操-F" class="headerlink" title="5.填报实操-F"></a>5.填报实操-F</h2><p>弹出框添加和修改员⼯信息<br>数据来源： FRdemo 中 员⼯信息表 展⽰所有部⻔职位信息<br>1).“ 点击增加⼈员 ” ，传参部⻔、职位打开对话框，其中⼈员 ID 需⾃动取当前表⾥ ID 最⼤ 值＋ 1 ，仅姓名处可⾃由编辑，提交时校验是否为空，提交后新增该条数据<br>2).“ 点击修改⼈员明细 ” ，传参部⻔、职位打开对话框，仅⼯资处可⾃由编辑，提交后修 改该⼈员⼯资数据<br>3). 两个对话框在提交完成后都会⾃动关闭对话框<br>4). 模板完成后，增加姓名为本⼈的记录，并修改⼯资为 10000 ，在结果⽂档中截图体现<br>5). 最多可使⽤ 3 张模板</p>
<p>首页模板制作</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617191544614.png" class="">

<p>新增人员弹出框模板制作</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617191849377.png" class="">

<p>修改人员信息模板制作</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617191753466.png" class="">

<p>新增人员、修改人员 添加网络报表链接</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617192115473.png" class="">

<p>展⽰所有部⻔职位信息</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617192234918.png" class="">

<p>新增人员弹出框</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617192416846.png" class="">

<p>修改人员弹出框</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617192437100.png" class="">

<p>刷新父窗口（弹出框提交后返回父窗口）<br>弹出框模板界面-模板-模板Web属性-填报页面设置-事件设置-填报成功-添加如下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">window.parent.location.reload();</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>帆软</tag>
      </tags>
  </entry>
  <entry>
    <title>帆软企业大屏开发</title>
    <url>/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="大屏开发-数据可视化平台"><a href="#大屏开发-数据可视化平台" class="headerlink" title="大屏开发-数据可视化平台"></a>大屏开发-数据可视化平台</h1><p><strong>新建模板</strong>：文件-新建其他模板-新建决策报表-新建空白模板-确定<br><strong>布局方式</strong>：模板-PC端自适应属性-布局方式:绝对布局-报表缩放设置:双向自适应-设置方式:为该模板单独设置-字体:不自适应<br><strong>背景设置</strong>：组件设置-body-背景设置-自定义-选择图片-拉伸<br><strong>组件样式（背景）设置</strong>：属性-样式设置-自定义-主体填充-图片-选择图片-拉伸-不透明度100-外沿样式-内边距0<br><strong>添加数据</strong>：内置数据集-表设计:设置表结构（列名，数据类型），插入行:添加数据</p>
<p>添加图表轮播</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/file-20250618193950962.png" class="">

<p>界面设计</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/file-20250618193209096.png" class="">

<p>PC端预览</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/file-20250618193539590.png" class="">

<h1 id="移动端开发-学生成绩"><a href="#移动端开发-学生成绩" class="headerlink" title="移动端开发-学生成绩"></a>移动端开发-学生成绩</h1><p>设置移动端属性：模板-移动端属性-勾选设置为手机端模板-自适应属性自动匹配-确定</p>
<p>准备数据集</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">显示班级 </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stscore </span><br><span class="line"></span><br><span class="line">折线图 </span><br><span class="line"><span class="keyword">select</span> classno,course,<span class="built_in">avg</span>(grade) <span class="keyword">from</span> stscore </span><br><span class="line"><span class="keyword">where</span> classno<span class="operator">=</span><span class="string">&#x27;$&#123;班级&#125;&#x27;</span> </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> classno,course </span><br><span class="line"></span><br><span class="line">列表 </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stscore <span class="keyword">where</span> classno<span class="operator">=</span><span class="string">&#x27;$&#123;班级&#125;&#x27;</span> </span><br><span class="line"></span><br><span class="line">柱状图 </span><br><span class="line"><span class="keyword">select</span> classno,course,sex,<span class="built_in">avg</span>(grade) <span class="keyword">from</span> stscore </span><br><span class="line"><span class="keyword">where</span> classno<span class="operator">=</span><span class="string">&#x27;$&#123;班级&#125;&#x27;</span> $&#123;if(len(科目)<span class="operator">=</span><span class="operator">=</span><span class="number">0</span>,&quot;&quot;,&quot; and course=&#x27;&quot;<span class="operator">+</span>科目<span class="operator">+</span>&quot;&#x27;&quot;)&#125; </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> classno,course,sex</span><br></pre></td></tr></table></figure>

<p>设计界面</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/file-20250618194901920.png" class="">

<p>移动端效果预览</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/file-20250618195125809.jpg" class="">

<p>点击不同的班级可以查看不同班级的数据<br>点击折线图中的分类，可以联动 柱形图和明细发⽣变化</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/file-20250618195444338.jpg" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>帆软</tag>
        <tag>FineReport</tag>
      </tags>
  </entry>
  <entry>
    <title>帆软报表平台管理、Tomcat 服务器部署</title>
    <url>/2025/06/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.19%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E6%8A%A5%E8%A1%A8%E5%B9%B3%E5%8F%B0%E7%AE%A1%E7%90%86%E3%80%81Tomcat%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h1 id="报表平台管理"><a href="#报表平台管理" class="headerlink" title="报表平台管理"></a><strong>报表平台管理</strong></h1><p>服务器-报表平台管理-登录，使⽤之前设置的账号密码，如： admin admin</p>
<h1 id="修改-FineReport-数据决策系统平台-logo-和标题"><a href="#修改-FineReport-数据决策系统平台-logo-和标题" class="headerlink" title="修改 FineReport 数据决策系统平台 logo 和标题"></a><strong>修改 FineReport 数据决策系统平台 logo 和标题</strong></h1><p>提前准备⼀张 logo 图⽚，上传，标题修改完回⻋，即完成</p>
<img src="/2025/06/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.19%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E6%8A%A5%E8%A1%A8%E5%B9%B3%E5%8F%B0%E7%AE%A1%E7%90%86%E3%80%81Tomcat%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/file-20250619100750859.png" class="">
<h1 id="⽤⼾权限设置"><a href="#⽤⼾权限设置" class="headerlink" title="⽤⼾权限设置"></a><strong>⽤⼾权限设置</strong></h1><p>新增⼀个⽤⼾，实现⼈员登录决策平台可以看到指定的⽬录，指定的⾸⻚<br><strong>添加首页</strong>：目录管理-首页管理-添加首页<br><strong>添加用户</strong>：用户管理-所有用户-添加用户（也可添加机构部门和角色（小组）</p>
<img src="/2025/06/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.19%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E6%8A%A5%E8%A1%A8%E5%B9%B3%E5%8F%B0%E7%AE%A1%E7%90%86%E3%80%81Tomcat%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/file-20250619101946958.png" class="">
<h1 id="定时发送邮件"><a href="#定时发送邮件" class="headerlink" title="定时发送邮件"></a><strong>定时发送邮件</strong></h1><p>在 FineReport 管理系统中创建⼀个名为 “test_schedule” 的定时任务，执⾏的报表 为 “销量表” ，每天早上 9 点执⾏⼀次邮件发送 将 “test_schedule” 定时任务授权 给 “test_user” ⽤⼾组，并设置 “test_user” ⽤⼾组可以查看、编辑、删除定时任务。</p>
<p><strong>配置邮件信息</strong>：系统管理-邮箱-添加发件人<br>密码为qq邮箱SMTP服务授权码（QQ邮箱-账号与安全-安全设置-生成授权码）</p>
<img src="/2025/06/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.19%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E6%8A%A5%E8%A1%A8%E5%B9%B3%E5%8F%B0%E7%AE%A1%E7%90%86%E3%80%81Tomcat%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/file-20250619102953713.png" class="">

<p><strong>添加定时调度任务</strong></p>
<img src="/2025/06/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.19%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E6%8A%A5%E8%A1%A8%E5%B9%B3%E5%8F%B0%E7%AE%A1%E7%90%86%E3%80%81Tomcat%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/file-20250619104407252.png" class="">

<p><strong>定时任务授权</strong><br>权限管理-管理系统-选择角色-定时调度-解锁</p>
<img src="/2025/06/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.19%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E6%8A%A5%E8%A1%A8%E5%B9%B3%E5%8F%B0%E7%AE%A1%E7%90%86%E3%80%81Tomcat%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/file-20250619105310021.png" class="">
<p>把周杰伦选择到新建的 test_user ⻆⾊⾥⾯ 左上⻆⻮轮权限配置⾥⾯功能全部开启 登录周杰伦账号，即可以进⾏对定时调度进⾏管理了</p>
<p>小组角色视角：</p>
<img src="/2025/06/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.19%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E6%8A%A5%E8%A1%A8%E5%B9%B3%E5%8F%B0%E7%AE%A1%E7%90%86%E3%80%81Tomcat%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/file-20250619105441022.png" class="">

<h1 id="FineReport-独⽴部署"><a href="#FineReport-独⽴部署" class="headerlink" title="FineReport 独⽴部署"></a>FineReport 独⽴部署</h1><ul>
<li>解压《 apache-tomcat-8.5.98-windows-x64.zip 》，把解压⽂件夹复制到 D 盘根⽬录，把帆软的 <code>webroot</code> 拷⻉到 D:\apache-tomcat-8.5.98\webapps 下</li>
<li>把java jdk的 <code>tools.jar</code> ⽂件复制到 D:\apache-tomcat-8.5.98\webapps\webroot\WEB-INF\lib 路径下</li>
<li>在 D:\apache-tomcat-8.5.98\bin 中找到 startup.bat 双击，最⼩化不要关闭</li>
<li>打开浏览器输⼊： <a href="http://localhost:8080/webroot/decision">http://localhost:8080/webroot/decision</a> （ localhost 也可以换成⾃⼰的 ip 地址）</li>
</ul>
<h2 id="修改端⼝和内存"><a href="#修改端⼝和内存" class="headerlink" title="修改端⼝和内存"></a>修改端⼝和内存</h2><p><strong>端⼝修改</strong>：打开⽂件 D:\apache-tomcat-8.5.98\conf\server.xml ，找到如下代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">maxParameterCount</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">               /&gt;</span></span><br></pre></td></tr></table></figure>
<p>把 8080 改成 8081</p>
<p><strong>内存修改</strong>：可以去帆软社区进⾏查找，在 tomcat 的 bin ⽬录下创建⼀个⽂件 setenv.bat ， ⾥⾯放⼊如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set JAVA_OPTS=%JAVA_OPTS% -Xms2048M -Xmx2048M -Xss1024k</span><br><span class="line">set JAVA_OPTS=%JAVA_OPTS% -XX:MaxDirectMemorySize=2g</span><br><span class="line">set JAVA_OPTS=%JAVA_OPTS% -Dfineio.read_mem_limit=2</span><br><span class="line">set JAVA_OPTS=%JAVA_OPTS% -Dfineio.write_mem_limit=1</span><br></pre></td></tr></table></figure>
<p>重启 tomcat ，登录系统验证：管理系统 智能运维 负载管理 内存容量： 2.0G</p>
<h2 id="修改日志存储路径"><a href="#修改日志存储路径" class="headerlink" title="修改日志存储路径"></a>修改日志存储路径</h2><p>⽇志⽂件默认存储在 D:\apache-tomcat-8.5.98\logs\fanruan.log</p>
<p>解压 jar 包：D:\apache-tomcat-8.5.98\webapps\webroot\WEB-INF\lib\fine-core-11.0.jar</p>
<p>解压后找到 D:\apache-tomcat-8.5.98\webapps\webroot\WEB-INF\lib\fine-core 11.0\com\fr\general\log\log4j2.xml ⽂件，编辑 log4j2.xml ⽂件， 修改:<br>fileName&#x3D;”${sys:LOG_HOME}&#x2F;..&#x2F;logs&#x2F;fanruan.log” 这⼀⾏即可，改为 fanruan888.log, 把此⽂件放到 D:\apache-tomcat-8.5.98\webapps\webroot\WEB-INF\config 下，重启 tomcat ，路径产⽣新⽂件 D:\apache-tomcat-8.5.98\logs\fanruan888.log</p>
<h2 id="仅通过-IP-登录数据决策系统"><a href="#仅通过-IP-登录数据决策系统" class="headerlink" title="仅通过 IP 登录数据决策系统"></a>仅通过 IP 登录数据决策系统</h2><p>创建 D:&#x2F;apache-tomcat-8.5.98&#x2F;webapps&#x2F;webroot&#x2F;a.jsp ⽂件，代码如下：</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*&quot;</span> pageEncoding=<span class="string">&quot;UTF-8&quot;</span> %&gt;</span><br><span class="line">    &lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;FineReport报表&lt;/title&gt;</span><br><span class="line">        &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> type=<span class="string">&quot;text/css&quot;</span></span><br><span class="line">            href=<span class="string">&quot;/decision/file?path=/com/fr/web/core/css/leaflet.css&amp;type=plain&amp;parser=plain&quot;</span> /&gt;</span><br><span class="line">        &lt;meta name=<span class="string">&quot;viewport&quot;</span></span><br><span class="line">            content=<span class="string">&quot;width=device-width, initial-scale=1.0, minimum-scale=1, maximum-scale=1.0, user-scalable=no&quot;</span>&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">    &lt;body leftmargin=<span class="string">&quot;0&quot;</span> topmargin=<span class="string">&quot;0&quot;</span> marginwidth=<span class="string">&quot;0&quot;</span> marginheight=<span class="string">&quot;0&quot;</span>&gt;</span><br><span class="line">        &lt;iframe id=<span class="string">&quot;reportFrame&quot;</span> src=<span class="string">&quot;decision&quot;</span> allowfullscreen=<span class="string">&quot;true&quot;</span> name=<span class="string">&quot;itemslist&quot;</span> frameborder=<span class="string">&quot;0&quot;</span> width=<span class="string">&quot;100%&quot;</span></span><br><span class="line">            height=<span class="string">&quot;100%&quot;</span>&gt;&lt;/iframe&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">    &lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>修改 D:\apache-tomcat-8.5.98\conf\server.xml ⽂件的 8081 为 80<br>在161⾏左右的 Host 节点下，添加代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;webroot&quot;</span> <span class="attr">debug</span>=<span class="string">&quot;0&quot;</span> <span class="attr">reloadable</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>打开⽂件： D:&#x2F;apache-tomcat-8.5.98&#x2F;conf&#x2F;web.xml<br>在 welcome-file-list 标签的最后添加⼀⾏:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>a.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>重启 tomcat ，使用ip访问</p>
<img src="/2025/06/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.19%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E6%8A%A5%E8%A1%A8%E5%B9%B3%E5%8F%B0%E7%AE%A1%E7%90%86%E3%80%81Tomcat%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/file-20250619142359415.png" class="">

<h1 id="LINUX-系统独立部署"><a href="#LINUX-系统独立部署" class="headerlink" title="LINUX 系统独立部署"></a>LINUX 系统独立部署</h1><p>1.把这两个⽂件 jdk-8u212-linux-x64.tar.gz 和 apache-tomcat-8.5.98.zip 传递到 &#x2F;root 下 </p>
<p>2.<strong>解压</strong>： tar -zxvf jdk-8u212-linux-x64.tar.gz -C &#x2F;opt&#x2F;app&#x2F; </p>
<p>3.<strong>配置环境变量</strong>，加⼊代码<br>vim &#x2F;etc&#x2F;profile.d&#x2F;java.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/app/jdk1.8.0_212 <span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure>
<p><strong>刷新</strong>： source &#x2F;etc&#x2F;profile<br><strong>测试</strong>： java -version</p>
<p>4.<strong>解压</strong>： unzip apache-tomcat-8.5.98.zip -d &#x2F;opt&#x2F;app&#x2F; </p>
<p>5.<strong>赋权启动tomcat</strong><br>chmod +x &#x2F;opt&#x2F;app&#x2F;apache-tomcat-8.5.98&#x2F;bin&#x2F;*.sh<br>&#x2F;opt&#x2F;app&#x2F;apache-tomcat-8.5.98&#x2F;bin&#x2F;startup.sh</p>
<p>6.<strong>修改端⼝</strong>：<br>vim &#x2F;opt&#x2F;app&#x2F;apache-tomcat-8.5.98&#x2F;conf&#x2F;server.xml<br>把原来的 8080 修改为 8081</p>
<p>7.<strong>调⼤内存</strong>：<br>vim &#x2F;opt&#x2F;app&#x2F;apache-tomcat-8.5.98&#x2F;bin&#x2F;catalina.sh<br>第⼆⾏添加： JAVA_OPTS&#x3D;”-Xms512m -Xmx1024m -XX:MaxPermSize&#x3D;512m”</p>
<p>8.<strong>重启 tomcat</strong><br>&#x2F;opt&#x2F;app&#x2F;apache-tomcat-8.5.98&#x2F;bin&#x2F;shutdown.sh<br>&#x2F;opt&#x2F;app&#x2F;apache-tomcat-8.5.98&#x2F;bin&#x2F;startup.sh</p>
<p>9.<strong>查看⽇志</strong>： cat &#x2F;opt&#x2F;app&#x2F;apache-tomcat-8.5.98&#x2F;logs&#x2F;catalina.2024-07-24.log</p>
<p>把⾃⼰帆软⼯作⽬录下的 webroot 压缩 ( 格式选择 zip) ，上传到 &#x2F;opt&#x2F;app&#x2F;apache-tomcat 8.5.98&#x2F;webapps&#x2F; 下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/app/apache-tomcat-8.5.98/webapps/ </span><br><span class="line">unzip webroot.zip </span><br><span class="line"><span class="built_in">cp</span> /opt/app/jdk1.8.0_212/lib/tools.jar /opt/app/apache-tomcat-8.5.98/webapps/webroot/WEB-INF/lib/ </span><br><span class="line">/opt/app/apache-tomcat-8.5.98/bin/shutdown.sh </span><br><span class="line">/opt/app/apache-tomcat-8.5.98/bin/startup.sh</span><br></pre></td></tr></table></figure>

<p><strong>开机自启动</strong><br>vim &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;tomcat.service<br>加⼊如下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit] Description=tomcat service After=network.target [Service] Type=forking ExecStart=/opt/app/apache-tomcat-8.5.98/bin/startup.sh ExecReload=/opt/app/apache-tomcat-8.5.98/bin/startup.sh -s reload ExecStop=/opt/app/apache-tomcat-8.5.98/bin/shutdown.sh PrivateTmp=true [Install] WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>设置环境变量： vim &#x2F;opt&#x2F;app&#x2F;apache-tomcat-8.5.98&#x2F;bin&#x2F;setclasspath.sh<br>第⼆⾏加⼊：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/opt/app/jdk1.8.0_212 export JRE_HOME=/opt/app/jdk1.8.0_212/jre</span><br></pre></td></tr></table></figure>

<p><strong>添加权限</strong>： chmod a+x &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;tomcat.service<br><strong>启⽤服务</strong>： systemctl enable tomcat.service</p>
<p>重启虚拟机后tomcat自动启动</p>
<img src="/2025/06/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.19%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E6%8A%A5%E8%A1%A8%E5%B9%B3%E5%8F%B0%E7%AE%A1%E7%90%86%E3%80%81Tomcat%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/file-20250619163215920.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>帆软</tag>
        <tag>FineReport</tag>
      </tags>
  </entry>
  <entry>
    <title>RPA实现自动回复机器人</title>
    <url>/2025/09/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/RPA%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/</url>
    <content><![CDATA[<h1 id="基本固定回复"><a href="#基本固定回复" class="headerlink" title="基本固定回复"></a>基本固定回复</h1><p>1.桌面自动化-获取窗口信息-窗口标题设置为“微信”</p>
<p>2.循环相似元素（win），捕捉微信新消息红点，捕获相似元素（另一个红点），编辑，取消acc-name的勾选（这是红点的消息数，若勾选该选项，会仅匹配捕获时的数字，当有多条消息使红点的数字变化时会匹配不到）</p>
<img src="/2025/09/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/RPA%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250903213834039.png" class="">

<p>3.点击元素（消息红点），此时会进入聊天界面</p>
<p>4.填写输入框（win），捕获微信输入框元素，同样需要取消勾选acc-name，填写自动回复信息</p>
<p>5.点击元素（发送按钮）</p>
<p>6.将以上循环相似元素的循环拉入一个无限循环，使其一直执行</p>
<p>这样就完成了一个简单的自动回复固定消息的微信机器人，完整流程如下：</p>
<img src="/2025/09/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/RPA%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250903220348026.png" class="">

<h1 id="接入AI回复"><a href="#接入AI回复" class="headerlink" title="接入AI回复"></a>接入AI回复</h1><p>接入AI前需要获取聊天记录以便发送给AI让其生成回复内容</p>
<img src="/2025/09/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/RPA%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250903235029534.png" class="">

<h2 id="cozeAI智能体设置"><a href="#cozeAI智能体设置" class="headerlink" title="cozeAI智能体设置"></a>cozeAI智能体设置</h2><p><strong>promopt设置：</strong></p>
<blockquote>
<p>我会发送一段消息列表，形式如下：<br>[‘你好’, ‘【自动回复】你好啊！’, ‘你是谁’, ‘【自动回复】我是Tetuka微信聊天小助手，请问有什么需要帮助的吗？🥰’]<br>其中包含【自动回复】的内容为你发送的消息，否则为对方用户发送的消息，请你扮演一个Tetuka微信聊天小助手，根据消息列表，回复用户一条聊天消息，该消息须以【自动回复】开始</p>
</blockquote>
<img src="/2025/09/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/RPA%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250903235326081.png" class="">

<h2 id="Python模块"><a href="#Python模块" class="headerlink" title="Python模块"></a>Python模块</h2><p>点开右上角三个点，Python包管理，安装cozepy、httpx包（指定镜像选第二个）</p>
<img src="/2025/09/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/RPA%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250904002215290.png" class="">

<h3 id="新建Python模块"><a href="#新建Python模块" class="headerlink" title="新建Python模块"></a>新建Python模块</h3><p>coze.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> xbot</span><br><span class="line"><span class="keyword">from</span> xbot <span class="keyword">import</span> <span class="built_in">print</span>, sleep</span><br><span class="line"><span class="keyword">from</span> .<span class="keyword">import</span> package</span><br><span class="line"><span class="keyword">from</span> .package <span class="keyword">import</span> variables <span class="keyword">as</span> glv</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">args</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> cozepy <span class="keyword">import</span> COZE_CN_BASE_URL</span><br><span class="line"><span class="keyword">from</span> cozepy <span class="keyword">import</span> Coze,TokenAuth, Message, ChatStatus, MessageContentType</span><br><span class="line">coze_api_base = COZE_CN_BASE_URL</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ai</span>(<span class="params">text,coze_api_token, bot_id</span>):</span><br><span class="line">    coze = Coze(auth=TokenAuth(token=coze_api_token),base_url=coze_api_base)</span><br><span class="line">    user_id=<span class="string">&#x27;123456&#x27;</span></span><br><span class="line">    chat_poll = coze.chat.create_and_poll(</span><br><span class="line">        bot_id=bot_id,</span><br><span class="line">        user_id=user_id,</span><br><span class="line">        additional_messages = [</span><br><span class="line">            Message.build_user_question_text(<span class="built_in">str</span>(text)),</span><br><span class="line">            <span class="comment"># Message.build_assistant_answer(&quot;我很自卑，请夸一下我”),</span></span><br><span class="line">            <span class="comment"># Message.build_user_question_text(text),</span></span><br><span class="line">        ],</span><br><span class="line">    )</span><br><span class="line">    content = chat_poll.messages[<span class="number">0</span>].content</span><br><span class="line">    <span class="comment"># for message in chat poll.messages:</span></span><br><span class="line">    <span class="comment"># content += message.content +&#x27;\n</span></span><br><span class="line">    <span class="keyword">return</span> content</span><br></pre></td></tr></table></figure>

<h3 id="调用模块"><a href="#调用模块" class="headerlink" title="调用模块"></a>调用模块</h3><img src="/2025/09/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/RPA%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250904004812692.png" class="">

<p><code>coze_api_token</code>需在 扣子API-个人访问令牌-添加新令牌 中获取<br>设置过期时间后不想思考那么多直接全选所有权限并设置所有空间即可</p>
<p><code>bot_id</code>为对应智能体网页链接bot&#x2F;之后的数字</p>
<img src="/2025/09/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/RPA%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250904003401769.png" class="">

<h1 id="完整流程"><a href="#完整流程" class="headerlink" title="完整流程"></a>完整流程</h1><p>以下流程即可完成一个调用coze智能体的微信聊天机器人啦！</p>
<img src="/2025/09/03/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/RPA%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%9B%9E%E5%A4%8D%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/file-20250904010301620.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>影刀</tag>
      </tags>
  </entry>
  <entry>
    <title>6.13总结：Kettle、ETL</title>
    <url>/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/</url>
    <content><![CDATA[<h1 id="Kettle"><a href="#Kettle" class="headerlink" title="Kettle"></a>Kettle</h1><p>Kettle 是⼀款纯 Java 编写的开源 ETL ⼯具。 Kettle 是 PDI （ Pentaho Data Integeration ）的前⾝。表⽰抽取、转换、装⼊和加载数据， 翻译成中⽂是⽔壶的意思，希望把各种数据放到⼀个壶⾥，像⽔⼀样，以⼀种指定的格式流出，表达数据流的含义。</p>
<p>Kettle 共有两类设计模式，转换（ Transformation ）和作业（ Job ）；<br>转换⽤于控制数据处理和流转，作业则⽤于转换集成和流程控制。 </p>
<h1 id="ETL"><a href="#ETL" class="headerlink" title="ETL"></a>ETL</h1><p>ETL 的 3 个字⺟分别代表 Extract （抽取）、 Transform （转换）和 Load （装载）。<br>数据抽取：从数据源端的系统中，抽取⽬标端系统需要的数据。<br>数据转换：从数据源端获取的数据按照业务需求，转换成⽬标端要求的数据形式，并对错误、不规范、不⼀致的数据（俗称”脏数据”）进⾏清洗和加⼯。<br>数据装载：将转换后的数据装载到指定数据库或⽂件中。</p>
<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>1.处理等于 3000 抽取到 emp3000 ，不等于抽取到 empnot3000</p>
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191028681.png" class="">
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191038912.png" class="">
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191047369.png" class="">

<p>计算每个员⼯的年薪</p>
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191056521.png" class="">

<p>2.查询所有⼤于平均⼯资的员⼯信息</p>
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191106081.png" class="">
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191150430.png" class="">

<p>3.表 A 和表 B 数据结构完全相同，表⾃建，数据⾃定义 表 A 数据存在新增 &amp; 修改 &amp; 删除 操作，实现表 A 和表 B 的数据保持⼀致</p>
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191207605.png" class="">
<p>(表A修改后记得提交！)</p>
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191218693.png" class="">

<p>执行后表B与表A数据一致（将表A更新到表B）</p>
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191229087.png" class="">

<p>4.数据来⾃ excel ，利⽤ PRODUCTID 和 CUSTOMID 进⾏关联后，插⼊到本地数据库中的⼀个表中</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--建表</span></span><br><span class="line"><span class="keyword">create table</span> pcid(</span><br><span class="line"> ORDERID varchar2(<span class="number">100</span>),  ZTIME varchar2(<span class="number">100</span>),</span><br><span class="line"> PRODUCTID varchar2(<span class="number">100</span>),  SALE_AMOUNT number(<span class="number">5</span>),</span><br><span class="line"> CUSTOMID varchar2(<span class="number">100</span>),  PRICE number(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line"> CUSTOMNAME  varchar2(<span class="number">100</span>),  COUNTRY varchar2(<span class="number">100</span>)</span><br><span class="line"> );</span><br></pre></td></tr></table></figure>
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191240838.png" class="">

<p>执行后查看表pcid</p>
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191255951.png" class="">

<p>新建作业，发送邮件<br>SMTP 服务需要⾃⼰登录 qq 邮箱开通：账号与安全-安全设置-根据提⽰开通服务</p>
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191304399.png" class="">

<p>转换错误执行发送邮件，之后成功接收邮件</p>
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191312503.png" class="">

<p>使⽤ windows ⾃带任务计划管理程序定时调⽤ Kettle 作业，同时输出 BASIC 级别⽇志<br>将以下代码写入到winjob.bat</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:</span><br><span class="line"><span class="built_in">cd</span> D:\data-integration</span><br><span class="line">kitchen /rep huangwenzhe /user admin /pass admin /file D:\kettle\huangwenzhe\kjob1.kjb /level basic&gt;D:\kettle\huangwenzhe\kettle.log</span><br></pre></td></tr></table></figure>

<p>Windows管理工具-任务计划程序-操作-创建基本任务</p>
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191322264.png" class="">

<p>到点任务执行，发送邮件并生成log</p>
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191330040.png" class="">
<img src="/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/file-20250717191337643.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Oracle</tag>
        <tag>Kettle</tag>
        <tag>ETL</tag>
      </tags>
  </entry>
  <entry>
    <title>运维常用命令</title>
    <url>/2025/09/02/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E8%BF%90%E7%BB%B4/%E8%BF%90%E7%BB%B4%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%EF%BC%88Linux%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%89/</url>
    <content><![CDATA[<h3 id="一、-Linux-系统"><a href="#一、-Linux-系统" class="headerlink" title="一、 Linux 系统"></a>一、 Linux 系统</h3><h4 id="1-系统监控与性能排查"><a href="#1-系统监控与性能排查" class="headerlink" title="1. 系统监控与性能排查"></a>1. 系统监控与性能排查</h4><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>常用示例&#x2F;参数</th>
</tr>
</thead>
<tbody><tr>
<td><strong><code>top</code> &#x2F; <code>htop</code></strong></td>
<td>动态实时查看系统进程、CPU、内存等使用情况。<code>htop</code>是增强版，更直观。</td>
<td><code>top</code>，<code>htop</code> (需安装)</td>
</tr>
<tr>
<td><strong><code>uptime</code></strong></td>
<td>查看系统运行时间、负载平均值（1分钟、5分钟、15分钟）。</td>
<td><code>uptime</code></td>
</tr>
<tr>
<td><strong><code>free</code></strong></td>
<td>查看系统内存和Swap使用情况。</td>
<td><code>free -h</code> (以人性化单位显示)</td>
</tr>
<tr>
<td><strong><code>df</code></strong></td>
<td>查看磁盘空间使用情况。</td>
<td><code>df -h</code></td>
</tr>
<tr>
<td><strong><code>du</code></strong></td>
<td>查看文件或目录的磁盘使用空间。</td>
<td><code>du -sh /path/to/dir</code> (查看目录总大小)</td>
</tr>
<tr>
<td><strong><code>iostat</code></strong></td>
<td>查看CPU统计和磁盘I&#x2F;O信息。</td>
<td><code>iostat -x 1</code> (每1秒显示一次扩展信息)</td>
</tr>
<tr>
<td><strong><code>vmstat</code></strong></td>
<td>报告虚拟内存、进程、CPU、磁盘I&#x2F;O等统计信息。</td>
<td><code>vmstat 1</code></td>
</tr>
<tr>
<td><strong><code>netstat</code> &#x2F; <code>ss</code></strong></td>
<td>查看网络连接、路由表、接口统计等。<strong><code>ss</code>是现代替代品，更快</strong>。</td>
<td><code>ss -tulnp</code> (查看监听端口)</td>
</tr>
<tr>
<td><strong><code>lsof</code></strong></td>
<td>列出当前系统打开的文件。常用于排查“文件被哪个进程占用”。</td>
<td><code>lsof -i :8080</code> (查看谁占用了8080端口)</td>
</tr>
<tr>
<td><strong><code>ps</code></strong></td>
<td>报告当前进程的快照。</td>
<td><code>ps aux | grep nginx</code> (查找nginx进程)</td>
</tr>
</tbody></table>
<h4 id="2-文件与目录操作"><a href="#2-文件与目录操作" class="headerlink" title="2. 文件与目录操作"></a>2. 文件与目录操作</h4><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>常用示例&#x2F;参数</th>
</tr>
</thead>
<tbody><tr>
<td><strong><code>grep</code></strong></td>
<td>强大的文本搜索工具。</td>
<td><code>grep &quot;error&quot; logfile</code>，<code>grep -r &quot;pattern&quot; /dir</code> (递归搜索)</td>
</tr>
<tr>
<td><strong><code>find</code></strong></td>
<td>在目录中搜索文件。</td>
<td><code>find /var/log -name &quot;*.log&quot; -mtime +7</code> (找7天前的日志)</td>
</tr>
<tr>
<td><strong><code>awk</code></strong></td>
<td>文本处理和分析语言，处理列数据非常强大。</td>
<td><code>awk &#39;&#123;print $1&#125;&#39; file</code> (打印第一列)</td>
</tr>
<tr>
<td><strong><code>sed</code></strong></td>
<td>流编辑器，用于文本替换、删除等。</td>
<td><code>sed &#39;s/foo/bar/g&#39; file</code> (将foo全局替换为bar)</td>
</tr>
<tr>
<td><strong><code>tail</code> &#x2F; <code>head</code></strong></td>
<td>查看文件尾部&#x2F;头部内容。</td>
<td><code>tail -f app.log</code> (实时追踪日志) <code>tail -n 100 app.log</code> (看最后100行)</td>
</tr>
<tr>
<td><strong><code>cp</code> &#x2F; <code>mv</code> &#x2F; <code>rm</code></strong></td>
<td>复制 &#x2F; 移动(重命名) &#x2F; 删除</td>
<td><code>rm -rf dir</code> (<strong>慎用！强制递归删除</strong>)，<code>cp -a src dst</code> (归档模式，保留属性)</td>
</tr>
<tr>
<td><strong><code>chmod</code></strong></td>
<td>修改文件权限。</td>
<td><code>chmod 755 script.sh</code>，<code>chmod +x script.sh</code> (添加执行权限)</td>
</tr>
<tr>
<td><strong><code>chown</code></strong></td>
<td>修改文件属主和属组。</td>
<td><code>chown user:group file</code></td>
</tr>
</tbody></table>
<h4 id="3-网络工具"><a href="#3-网络工具" class="headerlink" title="3. 网络工具"></a>3. 网络工具</h4><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>常用示例&#x2F;参数</th>
</tr>
</thead>
<tbody><tr>
<td><strong><code>ping</code></strong></td>
<td>测试网络连通性。</td>
<td><code>ping example.com</code></td>
</tr>
<tr>
<td><strong><code>traceroute</code> &#x2F; <code>mtr</code></strong></td>
<td>跟踪数据包到达目标主机的路由路径。<code>mtr</code>是增强版。</td>
<td><code>mtr google.com</code></td>
</tr>
<tr>
<td><strong><code>curl</code> &#x2F; <code>wget</code></strong></td>
<td>命令行下载工具，<code>curl</code>功能更强，常用于测试API。</td>
<td><code>curl -I http://site.com</code> (仅获取HTTP头)，<code>wget url</code></td>
</tr>
<tr>
<td><strong><code>telnet</code> &#x2F; <code>nc</code> (netcat)</strong></td>
<td>检查远程端口是否通畅。</td>
<td><code>nc -zv host.com 3306</code>，<code>telnet host.com 22</code></td>
</tr>
</tbody></table>
<h4 id="4-系统管理"><a href="#4-系统管理" class="headerlink" title="4. 系统管理"></a>4. 系统管理</h4><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>常用示例&#x2F;参数</th>
</tr>
</thead>
<tbody><tr>
<td><strong><code>systemctl</code></strong></td>
<td>控制系统服务（systemd系统）。</td>
<td><code>systemctl start nginx</code> (启动)，<code>systemctl status nginx</code> (状态)</td>
</tr>
<tr>
<td><strong><code>journalctl</code></strong></td>
<td>查看systemd管理的服务的日志。</td>
<td><code>journalctl -u nginx -f</code> (查看并追踪nginx服务日志)</td>
</tr>
<tr>
<td><strong><code>crontab</code></strong></td>
<td>管理定时任务。</td>
<td><code>crontab -l</code> (列出当前任务)，<code>crontab -e</code> (编辑任务)</td>
</tr>
</tbody></table>
<hr>
<h3 id="二、-数据库-MySQL和Oracle"><a href="#二、-数据库-MySQL和Oracle" class="headerlink" title="二、 数据库 (MySQL和Oracle)"></a>二、 数据库 (MySQL和Oracle)</h3><h4 id="1-连接与基本操作"><a href="#1-连接与基本操作" class="headerlink" title="1. 连接与基本操作"></a>1. 连接与基本操作</h4><table>
<thead>
<tr>
<th>操作</th>
<th>MySQL</th>
<th>Oracle</th>
</tr>
</thead>
<tbody><tr>
<td><strong>命令行客户端连接</strong></td>
<td><code>mysql -u [用户名] -p -h [主机名/IP] [数据库名]</code>  <br>例：<code>mysql -u root -p -h 192.168.1.100 mydb</code></td>
<td><code>sqlplus [用户名]/[密码]@//[主机名/IP]:[端口]/[服务名]</code>  <br>例：<code>sqlplus system/password@//192.168.1.101:1521/ORCLCDB</code></td>
</tr>
<tr>
<td><strong>查看当前数据库</strong></td>
<td><code>SELECT DATABASE();</code></td>
<td><strong>Oracle 的概念不同</strong>：用户与 schema 强关联。连接时即连接到某个 PDB。<code>SHOW CON_NAME</code> (在容器内) 查看当前容器。</td>
</tr>
<tr>
<td><strong>列出所有数据库</strong></td>
<td><code>SHOW DATABASES;</code></td>
<td><strong>Oracle 多租户架构</strong>：  <br>- 查看所有容器数据库(CDB)&#x2F;可插拔数据库(PDB)：  <br><code>SELECT name, open_mode FROM v$pdbs;</code> (需有权限)  <br>- 切换到某个 PDB：<code>ALTER SESSION SET CONTAINER = [PDB_NAME];</code></td>
</tr>
<tr>
<td><strong>列出当前用户的所有表</strong></td>
<td><code>SHOW TABLES;</code></td>
<td><code>SELECT table_name FROM user_tables;</code></td>
</tr>
<tr>
<td><strong>查看表结构</strong></td>
<td><code>DESCRIBE [表名];</code> 或 <code>SHOW CREATE TABLE [表名];</code></td>
<td><code>DESC [表名];</code> (在 SQL*Plus 中) 或查询 <code>SELECT DBMS_METADATA.GET_DDL(&#39;TABLE&#39;, &#39;[表名]&#39;, &#39;[用户名]&#39;) FROM dual;</code></td>
</tr>
</tbody></table>
<h4 id="2-用户与权限管理"><a href="#2-用户与权限管理" class="headerlink" title="2. 用户与权限管理"></a>2. 用户与权限管理</h4><table>
<thead>
<tr>
<th>操作</th>
<th>MySQL</th>
<th>Oracle</th>
</tr>
</thead>
<tbody><tr>
<td><strong>创建用户</strong></td>
<td><code>CREATE USER &#39;[用户名]&#39;@&#39;[主机]&#39; IDENTIFIED BY &#39;[密码]&#39;;</code>  <br>例：<code>CREATE USER &#39;dev&#39;@&#39;%&#39; IDENTIFIED BY &#39;Passw0rd!&#39;;</code></td>
<td><code>CREATE USER [用户名] IDENTIFIED BY [密码] DEFAULT TABLESPACE [表空间名] QUOTA [大小] ON [表空间名];</code>  <br>例：<code>CREATE USER scott IDENTIFIED BY tiger DEFAULT TABLESPACE users QUOTA 100M ON users;</code></td>
</tr>
<tr>
<td><strong>授予权限</strong></td>
<td><code>GRANT [权限] ON [数据库名].[表名] TO &#39;[用户名]&#39;@&#39;[主机]&#39;;</code>  <br>例：<code>GRANT ALL PRIVILEGES ON mydb.* TO &#39;dev&#39;@&#39;%&#39;;</code></td>
<td><code>GRANT [权限] TO [用户名];</code>  <br>例：<code>GRANT CONNECT, RESOURCE TO scott;</code>  <br><code>GRANT SELECT, INSERT ON scott.emp TO another_user;</code></td>
</tr>
<tr>
<td><strong>撤销权限</strong></td>
<td><code>REVOKE [权限] ON [数据库名].[表名] FROM &#39;[用户名]&#39;@&#39;[主机]&#39;;</code></td>
<td><code>REVOKE [权限] FROM [用户名];</code></td>
</tr>
<tr>
<td><strong>刷新权限</strong></td>
<td><code>FLUSH PRIVILEGES;</code> (执行授权后通常需要)</td>
<td><strong>权限在 Oracle 中立即生效，无需刷新。</strong></td>
</tr>
<tr>
<td><strong>修改密码</strong></td>
<td><code>ALTER USER &#39;[用户名]&#39;@&#39;[主机]&#39; IDENTIFIED BY &#39;[新密码]&#39;;</code>  <br>或 <code>SET PASSWORD FOR ...</code></td>
<td><code>ALTER USER [用户名] IDENTIFIED BY [新密码];</code></td>
</tr>
</tbody></table>
<h4 id="3-备份与恢复-核心技能，命令差异巨大"><a href="#3-备份与恢复-核心技能，命令差异巨大" class="headerlink" title="3. 备份与恢复 (核心技能，命令差异巨大)"></a>3. 备份与恢复 (核心技能，命令差异巨大)</h4><table>
<thead>
<tr>
<th>操作</th>
<th>MySQL</th>
<th>Oracle</th>
</tr>
</thead>
<tbody><tr>
<td><strong>逻辑备份(导出)</strong></td>
<td><strong><code>mysqldump</code></strong> 工具  <br><code>mysqldump -u [用户] -p -h [主机] [数据库名] &gt; backup.sql</code></td>
<td><strong>数据泵(Data Pump)</strong> 工具，推荐方式  <br>导出：<code>expdp [用户]/[密码] DIRECTORY=[目录对象名] DUMPFILE=[文件名].dmp SCHEMAS=[用户名]</code>  <br>(传统 <code>exp</code> 工具已过时)</td>
</tr>
<tr>
<td><strong>逻辑恢复(导入)</strong></td>
<td><code>mysql -u [用户] -p -h [主机] [数据库名] &lt; backup.sql</code></td>
<td><strong>数据泵(Data Pump)</strong>  <br>导入：<code>impdp [用户]/[密码] DIRECTORY=[目录对象名] DUMPFILE=[文件名].dmp REMAP_SCHEMA=[原用户]:[新用户]</code></td>
</tr>
<tr>
<td><strong>物理备份</strong></td>
<td>使用企业版或第三方工具(如 XtraBackup)进行热备。</td>
<td><strong>RMAN (Recovery Manager)</strong>，标准且强大。  <br>示例命令：  <br><code>RMAN&gt; BACKUP DATABASE;</code>  <br><code>RMAN&gt; BACKUP TABLESPACE users;</code></td>
</tr>
</tbody></table>
<h4 id="4-状态与诊断"><a href="#4-状态与诊断" class="headerlink" title="4. 状态与诊断"></a>4. 状态与诊断</h4><table>
<thead>
<tr>
<th>操作</th>
<th>MySQL</th>
<th>Oracle</th>
</tr>
</thead>
<tbody><tr>
<td><strong>查看当前连接&#x2F;会话</strong></td>
<td><code>SHOW PROCESSLIST;</code></td>
<td><code>SELECT sid, serial#, username, status, machine, program FROM v$session;</code></td>
</tr>
<tr>
<td><strong>杀死会话</strong></td>
<td><code>KILL [processlist_id];</code></td>
<td>1. 查询会话：<code>SELECT sid, serial# FROM v$session WHERE ...</code>  <br>2. 终止：<code>ALTER SYSTEM KILL SESSION &#39;sid,serial#&#39;;</code></td>
</tr>
<tr>
<td><strong>查看数据库运行状态和参数</strong></td>
<td><code>SHOW STATUS;</code>  <br><code>SHOW VARIABLES LIKE &#39;%buffer%&#39;;</code></td>
<td><code>SELECT name, value FROM v$parameter WHERE name LIKE &#39;%sga%&#39;;</code>  <br><code>SELECT * FROM v$sysstat;</code></td>
</tr>
<tr>
<td><strong>查看锁信息</strong></td>
<td><code>SHOW ENGINE INNODB STATUS\G</code> (查看Locks部分)</td>
<td><code>SELECT * FROM v$locked_object;</code>  <br><code>SELECT * FROM v$lock;</code></td>
</tr>
<tr>
<td><strong>查看表空间使用情况</strong></td>
<td><code>SELECT table_schema, SUM(data_length+index_length)/1024/1024 AS Size_MB FROM information_schema.tables GROUP BY table_schema;</code></td>
<td><code>SELECT tablespace_name, sum(bytes)/1024/1024 MB from dba_free_space group by tablespace_name;</code></td>
</tr>
</tbody></table>
<h4 id="5-Oracle-特有实用命令-在-SQL-Plus-中"><a href="#5-Oracle-特有实用命令-在-SQL-Plus-中" class="headerlink" title="5. Oracle 特有实用命令 (在 SQL*Plus 中)"></a>5. Oracle 特有实用命令 (在 SQL*Plus 中)</h4><ul>
<li><p><strong>查看当前用户</strong>：<code>SHOW USER</code></p>
</li>
<li><p><strong>执行操作系统命令</strong>：<code>HOST [命令]</code>，例如 <code>HOST ls -l</code></p>
</li>
<li><p><strong>编辑上一条 SQL</strong>：<code>EDIT</code> (或 <code>ED</code>)</p>
</li>
<li><p><strong>运行外部 SQL 脚本</strong>：<code>@[脚本路径]</code>，例如 <code>@/home/oracle/script.sql</code></p>
</li>
</ul>
<hr>
<h3 id="关键差异总结"><a href="#关键差异总结" class="headerlink" title="关键差异总结"></a>关键差异总结</h3><ol>
<li><p><strong>架构差异</strong>：MySQL 是 <code>实例 -&gt; 数据库 -&gt; 表</code> 的结构；Oracle 是 <code>实例 -&gt; 数据库 (CDB) -&gt; 可插拔数据库 (PDB) -&gt; 表空间 -&gt; 表</code> 的结构，用户（Schema）与 PDB 关联。</p>
</li>
<li><p><strong>权限体系</strong>：MySQL 的权限与 <code>&#39;用户&#39;@&#39;主机&#39;</code> 绑定，更偏向网络层面；Oracle 的权限与用户直接绑定，更复杂精细，常用角色（如 <code>CONNECT</code>, <code>RESOURCE</code>）来管理。</p>
</li>
<li><p><strong>备份工具</strong>：<strong>这是最大的不同点</strong>。MySQL 主要用 <code>mysqldump</code> 和 XtraBackup；Oracle 强烈推荐使用 <strong>RMAN</strong> 进行物理备份和 <strong>Data Pump (<code>expdp</code>&#x2F;<code>impdp</code>)</strong> 进行逻辑备份，传统 <code>exp</code>&#x2F;<code>imp</code> 已不再被推荐用于新系统。</p>
</li>
<li><p><strong>元数据查询</strong>：MySQL 多用 <code>SHOW</code> 命令；Oracle 几乎全部通过查询<strong>数据字典视图</strong> (如 <code>dba_*</code>, <code>all_*</code>, <code>user_*</code>, <code>v$*</code>) 来完成。</p>
</li>
</ol>
<hr>
<h3 id="三、-实用技巧"><a href="#三、-实用技巧" class="headerlink" title="三、 实用技巧"></a>三、 实用技巧</h3><ol>
<li><p><strong>组合使用</strong>：Linux命令的强大之处在于可以用管道 <code>|</code> 组合。</p>
<ul>
<li><code>grep &quot;ERROR&quot; application.log | awk &#39;&#123;print $2&#125;&#39; | sort \| uniq -c | sort -nr</code> (统计错误日志中出现的错误类型及其次数并按频率排序)</li>
</ul>
</li>
<li><p><strong>后台运行</strong>：在命令后加 <code>&amp;</code> 可使其在后台运行。使用 <code>nohup command &amp;</code> 可以让命令在退出终端后继续运行。</p>
</li>
<li><p><strong>命令历史</strong>：按 <code>Ctrl + R</code> 可以反向搜索历史命令。</p>
</li>
<li><p><strong>谨慎操作</strong>：尤其在使用 <code>rm</code>、<code>dd</code>、<code>chmod</code>、<code>chown</code> 和数据库的 <code>DELETE</code>、<code>UPDATE</code>、<code>DROP</code> 命令时，一定要<strong>再三确认</strong>命令和条件是否正确。<strong>生产环境操作前最好先备份</strong>。</p>
</li>
<li><p><strong>善用手册</strong>：忘记命令用法时，使用 <code>man [command]</code> (如 <code>man ls</code>) 查看详细手册。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Oracle</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>智慧天气数据分析系统（测试项目）</title>
    <url>/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h1><p>智慧天气数据分析系统面向气象研究人员、环保部门和公众用户，实现了多源气象数据采集、历史数据分析和气象灾害预警功能。</p>
<p>项目采用Python+Flask+MySQL+Nginx架构，前端使用HTML+CSS+JavaScript构建响应式界面，后端通过Flask处理API请求和业务逻辑，MySQL存储气象历史数据和分析结果，并且引入了机器学习算法（随机森林和支持向量机）优化气象预测准确率。</p>
<p>参与模块：数据采集和数据清理、基于机器学习的气象预测算法、结合历史数据的气象灾害预警模型、ECharts可视化仪表盘（包含温度变化曲线、降水统计图和分布热力图）、系统部署采用Docker容器化技术，通过Nginx实现负载均衡和静态资源分发。</p>
<h1 id="帆软大屏开发"><a href="#帆软大屏开发" class="headerlink" title="帆软大屏开发"></a>帆软大屏开发</h1><h2 id="数据表"><a href="#数据表" class="headerlink" title="数据表"></a>数据表</h2><h3 id="ER图"><a href="#ER图" class="headerlink" title="ER图"></a>ER图</h3><img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623140010552.png" class="">

<h3 id="1-气象站点表-dim-weather-station"><a href="#1-气象站点表-dim-weather-station" class="headerlink" title="1. 气象站点表 (dim_weather_station)"></a><strong>1. 气象站点表 (dim_weather_station)</strong></h3><table>
<thead>
<tr>
<th>字段名</th>
<th>类型</th>
<th>描述</th>
<th>键类型</th>
<th>示例值</th>
</tr>
</thead>
<tbody><tr>
<td>station_id</td>
<td>VARCHAR2(10)</td>
<td>气象站唯一编码</td>
<td>主键</td>
<td>GX001</td>
</tr>
<tr>
<td>station_name</td>
<td>VARCHAR2(50)</td>
<td>气象站名称</td>
<td></td>
<td>南宁站</td>
</tr>
<tr>
<td>city</td>
<td>VARCHAR2(20)</td>
<td>所属城市</td>
<td></td>
<td>南宁</td>
</tr>
<tr>
<td>latitude</td>
<td>NUMBER</td>
<td>纬度坐标</td>
<td></td>
<td>22.82</td>
</tr>
<tr>
<td>longitude</td>
<td>NUMBER</td>
<td>经度坐标</td>
<td></td>
<td>108.36</td>
</tr>
</tbody></table>
<blockquote>
<p><strong>作用</strong>：存储气象站点基本信息，作为其他表的外键关联基础。</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1. 气象站点维度表 (主维度表)</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> dim_weather_station (</span><br><span class="line">    station_id     VARCHAR2(<span class="number">10</span>) <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    station_name   VARCHAR2(<span class="number">50</span>),</span><br><span class="line">    city           VARCHAR2(<span class="number">20</span>),</span><br><span class="line">    latitude       NUMBER,</span><br><span class="line">    longitude      NUMBER</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h3 id="2-实时天气观测表-fact-weather-observation"><a href="#2-实时天气观测表-fact-weather-observation" class="headerlink" title="2. 实时天气观测表 (fact_weather_observation)"></a><strong>2. 实时天气观测表 (fact_weather_observation)</strong></h3><table>
<thead>
<tr>
<th>字段名</th>
<th>类型</th>
<th>描述</th>
<th>键类型</th>
<th>示例值</th>
</tr>
</thead>
<tbody><tr>
<td>observation_id</td>
<td>NUMBER</td>
<td>观测记录ID</td>
<td>主键</td>
<td>1</td>
</tr>
<tr>
<td>station_id</td>
<td>VARCHAR2(10)</td>
<td>气象站ID</td>
<td>外键</td>
<td>GX001</td>
</tr>
<tr>
<td>observation_time</td>
<td>TIMESTAMP</td>
<td>观测时间</td>
<td></td>
<td>2025-06-20 14:00</td>
</tr>
<tr>
<td>temperature</td>
<td>NUMBER</td>
<td>温度(℃)</td>
<td></td>
<td>28.5</td>
</tr>
<tr>
<td>humidity</td>
<td>NUMBER</td>
<td>湿度(%)</td>
<td></td>
<td>65</td>
</tr>
<tr>
<td>precipitation</td>
<td>NUMBER</td>
<td>降水量(mm)</td>
<td></td>
<td>0.0</td>
</tr>
</tbody></table>
<blockquote>
<p><strong>作用</strong>：存储实时天气数据，每分钟更新一次。</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 2. 实时天气观测表 (主事实表)</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> fact_weather_observation (</span><br><span class="line">    observation_id   NUMBER <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    station_id       VARCHAR2(<span class="number">10</span>) <span class="keyword">REFERENCES</span> dim_weather_station(station_id),</span><br><span class="line">    observation_time <span class="type">TIMESTAMP</span>,</span><br><span class="line">    temperature      NUMBER,</span><br><span class="line">    humidity         NUMBER,</span><br><span class="line">    precipitation    NUMBER</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h3 id="3-天气预报表-fact-weather-forecast"><a href="#3-天气预报表-fact-weather-forecast" class="headerlink" title="3. 天气预报表 (fact_weather_forecast)"></a><strong>3. 天气预报表 (fact_weather_forecast)</strong></h3><table>
<thead>
<tr>
<th>字段名</th>
<th>类型</th>
<th>描述</th>
<th>键类型</th>
<th>示例值</th>
</tr>
</thead>
<tbody><tr>
<td>forecast_id</td>
<td>NUMBER</td>
<td>预报记录ID</td>
<td>主键</td>
<td>1</td>
</tr>
<tr>
<td>station_id</td>
<td>VARCHAR2(10)</td>
<td>气象站ID</td>
<td>外键</td>
<td>GX001</td>
</tr>
<tr>
<td>forecast_time</td>
<td>TIMESTAMP</td>
<td>预报时间点</td>
<td></td>
<td>2025-06-21 08:00</td>
</tr>
<tr>
<td>temp_high</td>
<td>NUMBER</td>
<td>预测最高温(℃)</td>
<td></td>
<td>32</td>
</tr>
<tr>
<td>temp_low</td>
<td>NUMBER</td>
<td>预测最低温(℃)</td>
<td></td>
<td>25</td>
</tr>
</tbody></table>
<blockquote>
<p><strong>作用</strong>：存储未来天气预报数据。</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 3. 天气预报表</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> fact_weather_forecast (</span><br><span class="line">    forecast_id     NUMBER <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    station_id      VARCHAR2(<span class="number">10</span>) <span class="keyword">REFERENCES</span> dim_weather_station(station_id),</span><br><span class="line">    forecast_time   <span class="type">TIMESTAMP</span>,</span><br><span class="line">	weather         VARCHAR2(<span class="number">20</span>),</span><br><span class="line">    temp_high       NUMBER,</span><br><span class="line">    temp_low        NUMBER</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h3 id="4-历史天气统计表-fact-historical-summary"><a href="#4-历史天气统计表-fact-historical-summary" class="headerlink" title="4. 历史天气统计表 (fact_historical_summary)"></a><strong>4. 历史天气统计表 (fact_historical_summary)</strong></h3><table>
<thead>
<tr>
<th>字段名</th>
<th>类型</th>
<th>描述</th>
<th>键类型</th>
<th>关联点</th>
</tr>
</thead>
<tbody><tr>
<td>summary_id</td>
<td>BIGINT</td>
<td>主键（自增）</td>
<td>主键</td>
<td>3001</td>
</tr>
<tr>
<td>station_id</td>
<td>VARCHAR(10)</td>
<td>关联气象站</td>
<td>外键</td>
<td>GX001</td>
</tr>
<tr>
<td>date</td>
<td>DATE</td>
<td>统计日期</td>
<td>非空</td>
<td>2025-06-19</td>
</tr>
<tr>
<td>avg_temp</td>
<td>DECIMAL(4,1)</td>
<td>日均温(℃)</td>
<td></td>
<td>29.1</td>
</tr>
<tr>
<td>max_temp</td>
<td>TINYINT</td>
<td>日最高温(℃)</td>
<td></td>
<td>35</td>
</tr>
<tr>
<td>min_temp</td>
<td>TINYINT</td>
<td>日最低温(℃)</td>
<td></td>
<td>24</td>
</tr>
<tr>
<td>total_rainfall</td>
<td>DECIMAL(6,1)</td>
<td>累计降水量(mm)</td>
<td></td>
<td>12.5</td>
</tr>
<tr>
<td>rainfall_hours</td>
<td>NUMBER(3)</td>
<td>降雨时长(小时)</td>
<td></td>
<td>2</td>
</tr>
<tr>
<td>avg_humidity</td>
<td>NUMBER(3)</td>
<td>平均湿度(%)</td>
<td></td>
<td>60</td>
</tr>
<tr>
<td>min_humidity</td>
<td>NUMBER(3)</td>
<td>最小湿度(%)</td>
<td></td>
<td>30</td>
</tr>
<tr>
<td>weather_condition</td>
<td>VARCHAR2(20)</td>
<td>主要天气状况</td>
<td></td>
<td>晴&#x2F;雨&#x2F;多云等</td>
</tr>
<tr>
<td>extreme_weather</td>
<td>VARCHAR2(50)</td>
<td>极端天气事件</td>
<td></td>
<td>雷暴&#x2F;冰雹&#x2F;大雾等</td>
</tr>
</tbody></table>
<blockquote>
<p><strong>作用</strong>：存储历史天气统计数据，按日汇总。</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 4. 历史天气统计表</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> fact_historical_summary (</span><br><span class="line">    summary_id        NUMBER <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    station_id        VARCHAR2(<span class="number">10</span>) <span class="keyword">REFERENCES</span> dim_weather_station(station_id),</span><br><span class="line">    summary_date      <span class="type">DATE</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">    <span class="comment">-- 温度指标</span></span><br><span class="line">    avg_temp          NUMBER(<span class="number">4</span>,<span class="number">1</span>),   <span class="comment">-- 日平均温度</span></span><br><span class="line">    max_temp          NUMBER(<span class="number">4</span>,<span class="number">1</span>),   <span class="comment">-- 日最高温度</span></span><br><span class="line">    min_temp          NUMBER(<span class="number">4</span>,<span class="number">1</span>),   <span class="comment">-- 日最低温度</span></span><br><span class="line">    <span class="comment">-- 降水指标</span></span><br><span class="line">    total_rainfall    NUMBER(<span class="number">6</span>,<span class="number">1</span>),   <span class="comment">-- 日总降水量(mm)</span></span><br><span class="line">    rainfall_hours    NUMBER(<span class="number">3</span>),     <span class="comment">-- 降雨时长(小时)</span></span><br><span class="line">    <span class="comment">-- 湿度指标</span></span><br><span class="line">    avg_humidity      NUMBER(<span class="number">3</span>),     <span class="comment">-- 平均湿度(%)</span></span><br><span class="line">    min_humidity      NUMBER(<span class="number">3</span>),     <span class="comment">-- 最小湿度(%)</span></span><br><span class="line">    <span class="comment">-- 天气现象</span></span><br><span class="line">    weather_condition VARCHAR2(<span class="number">20</span>),  <span class="comment">-- 主要天气状况(晴/雨/多云等)</span></span><br><span class="line">    extreme_weather   VARCHAR2(<span class="number">50</span>),  <span class="comment">-- 极端天气事件(雷暴/冰雹/大雾等)</span></span><br><span class="line">    <span class="comment">-- 约束</span></span><br><span class="line">    <span class="keyword">CONSTRAINT</span> uk_hist_unique <span class="keyword">UNIQUE</span> (station_id, summary_date)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h3 id="5-气象灾害预警表-dim-weather-alert"><a href="#5-气象灾害预警表-dim-weather-alert" class="headerlink" title="5. 气象灾害预警表 (dim_weather_alert)"></a><strong>5. 气象灾害预警表 (dim_weather_alert)</strong></h3><table>
<thead>
<tr>
<th>字段名</th>
<th>类型</th>
<th>描述</th>
<th>键类型</th>
<th>示例值</th>
</tr>
</thead>
<tbody><tr>
<td>alert_id</td>
<td>VARCHAR2(20)</td>
<td>预警ID</td>
<td>主键</td>
<td>ALERT001</td>
</tr>
<tr>
<td>station_id</td>
<td>VARCHAR2(10)</td>
<td>气象站ID</td>
<td>外键</td>
<td>GX001</td>
</tr>
<tr>
<td>alert_type</td>
<td>VARCHAR2(20)</td>
<td>预警类型</td>
<td></td>
<td>暴雨预警</td>
</tr>
<tr>
<td>issue_time</td>
<td>TIMESTAMP</td>
<td>发布时间</td>
<td></td>
<td>2025-06-20 13:30</td>
</tr>
</tbody></table>
<blockquote>
<p><strong>作用</strong>：存储气象灾害预警信息。</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 5. 气象灾害预警表</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> dim_weather_alert (</span><br><span class="line">    alert_id        VARCHAR2(<span class="number">20</span>) <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    station_id      VARCHAR2(<span class="number">10</span>) <span class="keyword">REFERENCES</span> dim_weather_station(station_id),</span><br><span class="line">    alert_type      VARCHAR2(<span class="number">20</span>),</span><br><span class="line">    issue_time      <span class="type">TIMESTAMP</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>


<h2 id="大屏效果展示"><a href="#大屏效果展示" class="headerlink" title="大屏效果展示"></a>大屏效果展示</h2><img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623143803341.png" class="">

<h3 id="实时天气（左上滚动屏）"><a href="#实时天气（左上滚动屏）" class="headerlink" title="实时天气（左上滚动屏）"></a>实时天气（左上滚动屏）</h3><p><strong>数据库查询语句</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    s.station_name <span class="keyword">AS</span> &quot;气象站名称&quot;,</span><br><span class="line">    s.city <span class="keyword">AS</span> &quot;所在城市&quot;,</span><br><span class="line">    o.observation_time <span class="keyword">AS</span> &quot;观测时间&quot;,</span><br><span class="line">    o.temperature <span class="keyword">AS</span> &quot;温度(℃)&quot;,</span><br><span class="line">    o.humidity <span class="keyword">AS</span> &quot;湿度(%)&quot;,</span><br><span class="line">    o.precipitation <span class="keyword">AS</span> &quot;降水量(mm)&quot;</span><br><span class="line"><span class="keyword">FROM</span> fact_weather_observation o</span><br><span class="line"><span class="keyword">JOIN</span> dim_weather_station s <span class="keyword">ON</span> o.station_id <span class="operator">=</span> s.station_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> o.observation_time <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure>

<p><strong>滚动效果</strong>:添加事件（初始化后）写入如下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="title function_">_g</span>().<span class="title function_">getWidgetByName</span>(<span class="string">&#x27;实时天气数据&#x27;</span>).<span class="title function_">startMarquee</span>()</span><br><span class="line">&#125;, <span class="number">500</span>);</span><br></pre></td></tr></table></figure>

<h3 id="天气预报（右上角滚动屏）"><a href="#天气预报（右上角滚动屏）" class="headerlink" title="天气预报（右上角滚动屏）"></a>天气预报（右上角滚动屏）</h3><p><strong>数据库查询语句</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    f.forecast_id <span class="keyword">AS</span> &quot;预报ID&quot;,</span><br><span class="line">    s.city <span class="keyword">AS</span> &quot;城市&quot;,</span><br><span class="line">    f.forecast_time <span class="keyword">AS</span> &quot;预报时间&quot;,</span><br><span class="line">    f.weather <span class="keyword">AS</span> &quot;天气&quot;,</span><br><span class="line">    f.temp_high <span class="keyword">AS</span> &quot;最高温度&quot;,</span><br><span class="line">    f.temp_low <span class="keyword">AS</span> &quot;最低温度&quot;</span><br><span class="line"><span class="keyword">FROM</span> fact_weather_forecast f</span><br><span class="line"><span class="keyword">JOIN</span> dim_weather_station s <span class="keyword">ON</span> f.station_id <span class="operator">=</span> s.station_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> f.forecast_time <span class="keyword">ASC</span></span><br></pre></td></tr></table></figure>

<p>气象灾害预警（右下角滚动屏）<br><strong>数据库查询语句</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    a.alert_id <span class="keyword">AS</span> &quot;预警ID&quot;,</span><br><span class="line">    s.city <span class="keyword">AS</span> &quot;城市&quot;,</span><br><span class="line">    a.alert_type <span class="keyword">AS</span> &quot;预警类型&quot;,</span><br><span class="line">    a.issue_time <span class="keyword">AS</span> &quot;发布时间&quot;</span><br><span class="line"><span class="keyword">FROM</span> dim_weather_alert a</span><br><span class="line"><span class="keyword">JOIN</span> dim_weather_station s <span class="keyword">ON</span> a.station_id <span class="operator">=</span> s.station_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> a.issue_time <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure>

<h3 id="地图"><a href="#地图" class="headerlink" title="地图"></a>地图</h3><p>设置图表切换属性为按钮，实现点击切换展示降雨量、湿度、温度、气象站点</p>
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623150321708.png" class="">
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623150159539.png" class="">
<p>地图根据值设置渐变效果</p>
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623151106016.png" class="">
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623150225574.png" class="">
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623145643973.png" class="">
<p>其中降雨量、湿度、温度使用实时天气数据的查询语句结果，气象站点使用以下查询数据库语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    station_id <span class="keyword">AS</span> &quot;站点ID&quot;,</span><br><span class="line">    station_name <span class="keyword">AS</span> &quot;气象站名称&quot;,</span><br><span class="line">    city <span class="keyword">AS</span> &quot;所属城市&quot;,</span><br><span class="line">    longitude <span class="keyword">AS</span> &quot;经度坐标&quot;,</span><br><span class="line">    latitude <span class="keyword">AS</span> &quot;纬度坐标&quot;,</span><br><span class="line">    longitude <span class="operator">||</span> <span class="string">&#x27;,&#x27;</span> <span class="operator">||</span> latitude <span class="keyword">AS</span> &quot;经纬度坐标&quot;</span><br><span class="line"><span class="keyword">FROM</span> dim_weather_station</span><br></pre></td></tr></table></figure>

<h3 id="左下图表"><a href="#左下图表" class="headerlink" title="左下图表"></a>左下图表</h3><p>图表切换属性为轮播</p>
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623150523402.png" class="">
<p>自定义鼠标悬浮时的提示，可使用富文本</p>
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623150833046.png" class="">
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623150538880.png" class="">

<h3 id="中下方查询模块"><a href="#中下方查询模块" class="headerlink" title="中下方查询模块"></a>中下方查询模块</h3><p>默认展示某日历史数据，通过设置城市、日期、类型三个参数可查询展示对应数据</p>
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623151331408.png" class="">
<p>四个类型需分别设置四个表单放置在相同位置，通过类型下拉框选中的值（控件名stype）控制展示哪张表，每张表选中所有单元格并添加条件属性使行高为0（隐藏），条件公式为：$stype!&#x3D;”历史数据” （以历史数据查询结果表为例，当类型下拉控件为选择“历史数据”时，隐藏该表）</p>
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623151611674.png" class="">
<p>各表使用的数据库查询语句如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 历史数据表单中的数据集</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> fact_historical_summary h</span><br><span class="line"><span class="keyword">JOIN</span> dim_weather_station s <span class="keyword">ON</span> h.station_id <span class="operator">=</span> s.station_id</span><br><span class="line"><span class="keyword">WHERE</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line">$&#123;if(city <span class="operator">=</span><span class="operator">=</span> &quot;&quot;,&quot;&quot;,&quot; AND s.city IN (&#x27;&quot;<span class="operator">+</span>city<span class="operator">+</span>&quot;&#x27;)&quot;)&#125;</span><br><span class="line">$&#123;if(<span class="type">date</span> <span class="operator">=</span><span class="operator">=</span> &quot;&quot;,&quot;&quot;,&quot; AND h.summary_date = TO_DATE(&#x27;&quot;<span class="operator">+</span><span class="type">date</span><span class="operator">+</span>&quot;&#x27;,&#x27;YYYY-MM-DD&#x27;)&quot;)&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 天气预报表单中的数据集</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> fact_weather_forecast f</span><br><span class="line"><span class="keyword">JOIN</span> dim_weather_station s <span class="keyword">ON</span> f.station_id <span class="operator">=</span> s.station_id</span><br><span class="line"><span class="keyword">WHERE</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line">$&#123;if(city <span class="operator">=</span><span class="operator">=</span> &quot;&quot;,&quot;&quot;,&quot; AND s.city IN (&#x27;&quot;<span class="operator">+</span>city<span class="operator">+</span>&quot;&#x27;)&quot;)&#125;</span><br><span class="line">$&#123;if(<span class="type">date</span> <span class="operator">=</span><span class="operator">=</span> &quot;&quot;,&quot;&quot;,&quot; AND TRUNC(f.forecast_time) = TO_DATE(&#x27;&quot;<span class="operator">+</span><span class="type">date</span><span class="operator">+</span>&quot;&#x27;,&#x27;YYYY-MM-DD&#x27;)&quot;)&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 灾害预警表单中的数据集</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> dim_weather_alert a</span><br><span class="line"><span class="keyword">JOIN</span> dim_weather_station s <span class="keyword">ON</span> a.station_id <span class="operator">=</span> s.station_id</span><br><span class="line"><span class="keyword">WHERE</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line">$&#123;if(city <span class="operator">=</span><span class="operator">=</span> &quot;&quot;,&quot;&quot;,&quot; AND s.city IN (&#x27;&quot;<span class="operator">+</span>city<span class="operator">+</span>&quot;&#x27;)&quot;)&#125;</span><br><span class="line">$&#123;if(<span class="type">date</span> <span class="operator">=</span><span class="operator">=</span> &quot;&quot;,&quot;&quot;,&quot; AND TRUNC(a.issue_time) = TO_DATE(&#x27;&quot;<span class="operator">+</span><span class="type">date</span><span class="operator">+</span>&quot;&#x27;,&#x27;YYYY-MM-DD&#x27;)&quot;)&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 气象站点表单中的数据集</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> dim_weather_station</span><br><span class="line"><span class="keyword">WHERE</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span></span><br><span class="line">$&#123;if(city <span class="operator">=</span><span class="operator">=</span> &quot;&quot;,&quot;&quot;,&quot; AND city IN (&#x27;&quot;<span class="operator">+</span>city<span class="operator">+</span>&quot;&#x27;)&quot;)&#125;</span><br></pre></td></tr></table></figure>

<p>${if(city &#x3D;&#x3D; “”,””,” AND city IN (‘“+city+”‘)”)}<br>为确保以上语句生效需要设置城市下拉复选框的返回值分隔符为<code>&#39;,&#39;</code><br>否则可能需要改为${if(city &#x3D;&#x3D; “”,””,” AND s.city IN (‘“+city.replace(“,”,”‘,’”)+”‘)”)}</p>
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623153627697.png" class="">

<p><strong>没有数据提示</strong></p>
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623152445328.png" class="">
<p>以历史数据为例，在数据栏下添加一栏合并居中的“没有数据”提示，并添加行高为0的条件属性，条件为：len(A2)!&#x3D;0 （即当A2有数据时，隐藏该提示）</p>
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623152544229.png" class="">

<h3 id="填报按钮"><a href="#填报按钮" class="headerlink" title="填报按钮"></a>填报按钮</h3><p>需要另外创建四个对应类型的填报表单，模板数据集同使用以上查询功能的查询语句<br>点击填报按钮后获取城市、日期、类型的值，并打开对应表单对话框<br>填报按钮的事件代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取当前选择的查询类型</span></span><br><span class="line"><span class="keyword">var</span> selectedType = <span class="variable language_">this</span>.<span class="property">options</span>.<span class="property">form</span>.<span class="title function_">getWidgetByName</span>(<span class="string">&quot;stype&quot;</span>).<span class="title function_">getValue</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安全获取城市值（兼容单选/多选/空值）</span></span><br><span class="line"><span class="keyword">var</span> cityValue = <span class="variable language_">this</span>.<span class="property">options</span>.<span class="property">form</span>.<span class="title function_">getWidgetByName</span>(<span class="string">&quot;scity&quot;</span>).<span class="title function_">getValue</span>();</span><br><span class="line"><span class="keyword">var</span> cityParam = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理不同类型的返回值</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(cityValue)) &#123;</span><br><span class="line">    cityParam = cityValue.<span class="title function_">join</span>(<span class="string">&quot;,&quot;</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (cityValue &amp;&amp; <span class="keyword">typeof</span> cityValue === <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">    cityParam = cityValue;</span><br><span class="line">&#125; <span class="comment">// 空值保持为空字符串</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取当前选择的日期（直接使用字符串值）</span></span><br><span class="line"><span class="keyword">var</span> selectedDate = <span class="variable language_">this</span>.<span class="property">options</span>.<span class="property">form</span>.<span class="title function_">getWidgetByName</span>(<span class="string">&quot;sdate&quot;</span>).<span class="title function_">getValue</span>();</span><br><span class="line"><span class="keyword">var</span> dateParam = selectedDate || <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 确保日期格式正确（去除时间部分）</span></span><br><span class="line"><span class="keyword">if</span> (dateParam &amp;&amp; dateParam.<span class="property">length</span> &gt; <span class="number">10</span>) &#123;</span><br><span class="line">    dateParam = dateParam.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据查询类型打开对应表单</span></span><br><span class="line"><span class="keyword">var</span> formPath = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> formTitle = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(selectedType) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;历史数据&quot;</span>:</span><br><span class="line">        formPath = <span class="string">&quot;历史数据填报.cpt&quot;</span>;</span><br><span class="line">        formTitle = <span class="string">&quot;历史数据填报&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;天气预报&quot;</span>:</span><br><span class="line">        formPath = <span class="string">&quot;天气预报填报.cpt&quot;</span>; <span class="comment">// 确保添加了.cpt扩展名</span></span><br><span class="line">        formTitle = <span class="string">&quot;天气预报填报&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;灾害预警&quot;</span>:</span><br><span class="line">        formPath = <span class="string">&quot;灾害预警填报.cpt&quot;</span>;</span><br><span class="line">        formTitle = <span class="string">&quot;灾害预警填报&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;气象站点&quot;</span>:</span><br><span class="line">        formPath = <span class="string">&quot;气象站点填报.cpt&quot;</span>;</span><br><span class="line">        formTitle = <span class="string">&quot;气象站点填报&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">        <span class="variable constant_">FR</span>.<span class="property">Msg</span>.<span class="title function_">alert</span>(<span class="string">&quot;提示&quot;</span>, <span class="string">&quot;请先选择查询类型&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构建参数对象</span></span><br><span class="line"><span class="keyword">var</span> params = &#123;</span><br><span class="line">    <span class="attr">city</span>: cityParam,</span><br><span class="line">    <span class="attr">date</span>: dateParam</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打开表单对话框</span></span><br><span class="line">	<span class="variable constant_">FR</span>.<span class="title function_">doHyperlinkByPost</span>(&#123;</span><br><span class="line">	    <span class="attr">url</span>: <span class="string">&quot;$&#123;servletURL&#125;?reportlet=&quot;</span> + formPath + <span class="string">&quot;&amp;op=write&quot;</span>,</span><br><span class="line">	    <span class="attr">para</span>: params, </span><br><span class="line">	    <span class="attr">target</span>: <span class="string">&quot;_dialog&quot;</span>,</span><br><span class="line">	    <span class="attr">feature</span>: &#123;</span><br><span class="line">	        <span class="attr">title</span>: formTitle,</span><br><span class="line">	        <span class="attr">width</span>: <span class="number">1200</span>,</span><br><span class="line">	        <span class="attr">height</span>: <span class="number">700</span></span><br><span class="line">	    &#125;</span><br><span class="line">	&#125;);</span><br></pre></td></tr></table></figure>

<p>每个表单需要在 模板-模板参数 中设置两个模板参数（city、date）</p>
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623154347594.png" class="">

<p>各表单设计（同6.17填报设计）</p>
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623160555535.png" class="">
<p>效果展示</p>
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623162017006.png" class="">
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623160913523.png" class="">
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623162124047.png" class="">
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623160939609.png" class="">
<img src="/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/%E6%99%BA%E6%85%A7%E5%A4%A9%E6%B0%94%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/file-20250623161002164.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Oracle</tag>
        <tag>帆软</tag>
        <tag>FineReport</tag>
      </tags>
  </entry>
  <entry>
    <title>什么是中间件</title>
    <url>/2025/08/17/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%85%B6%E4%BB%96%E6%9D%82%E9%A1%B9/%E4%BB%80%E4%B9%88%E6%98%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/</url>
    <content><![CDATA[<p><strong>中间件（Middleware）</strong> 是位于操作系统、网络和应用程序之间的软件层，它为上层应用提供一系列通用的服务和功能，简化分布式系统的开发、集成与管理。可以将中间件理解为“软件的粘合剂”——它连接不同的系统、组件或服务，使它们能够高效、可靠地通信和协作。</p>
<blockquote>
<p>它并没有很严格的定义，但是普遍接受IDC的定义：中间件是一种独立的系统软件服务程序，分布式应用软件借助这种软件在不同的技术之间共享资源，中间件位于客户机服务器的操作系统之上，管理计算资源和网络通信。从这个意义上可以用一个等式来表示中间件：中间件&#x3D;平台+通信，这也就限定了只有用于分布式系统中才能叫中间件，同时也把它与支撑软件和实用软件区分开来。</p>
</blockquote>
<hr>
<p>✅ <strong>常见中间件一览表</strong>：</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>代表产品</th>
</tr>
</thead>
<tbody><tr>
<td>消息队列</td>
<td>Kafka, RabbitMQ, RocketMQ</td>
</tr>
<tr>
<td>RPC 框架</td>
<td>gRPC, Dubbo, Thrift</td>
</tr>
<tr>
<td>数据库中间件</td>
<td>ShardingSphere, MyCat</td>
</tr>
<tr>
<td>缓存</td>
<td>Redis, Memcached</td>
</tr>
<tr>
<td>API 网关</td>
<td>Kong, APISIX, Spring Cloud Gateway</td>
</tr>
<tr>
<td>应用服务器</td>
<td>Tomcat, WebLogic</td>
</tr>
<tr>
<td>事务管理</td>
<td>Seata, Atomikos</td>
</tr>
<tr>
<td>Web 服务器</td>
<td>Nginx, Apache</td>
</tr>
</tbody></table>
<p><em>——掌握中间件原理和使用，是成为高级开发工程师、架构师的必经之路</em></p>
<h2 id="一、中间件的核心作用"><a href="#一、中间件的核心作用" class="headerlink" title="一、中间件的核心作用"></a>一、中间件的核心作用</h2><ol>
<li><p><strong>解耦系统组件</strong><br>让应用程序不必关心底层通信细节（如网络协议、数据格式、硬件差异），实现“松耦合”。</p>
</li>
<li><p><strong>提高开发效率</strong><br>提供现成的通信、安全、事务、消息等机制，开发者无需从零实现。</p>
</li>
<li><p><strong>增强系统可扩展性与可靠性</strong><br>支持负载均衡、容错、高可用、异步处理等能力。</p>
</li>
<li><p><strong>促进异构系统集成</strong><br>连接不同平台、语言、数据库或架构的系统（如 Java 与 .NET、Windows 与 Linux）。</p>
</li>
</ol>
<hr>
<h2 id="二、中间件的分类及常见类型"><a href="#二、中间件的分类及常见类型" class="headerlink" title="二、中间件的分类及常见类型"></a>二、中间件的分类及常见类型</h2><h3 id="1-消息中间件（Message-Oriented-Middleware-MOM）"><a href="#1-消息中间件（Message-Oriented-Middleware-MOM）" class="headerlink" title="1. 消息中间件（Message-Oriented Middleware, MOM）"></a>1. <strong>消息中间件（Message-Oriented Middleware, MOM）</strong></h3><p>用于在分布式系统中异步传递消息，实现解耦和削峰填谷。</p>
<ul>
<li><p><strong>功能</strong>：发布&#x2F;订阅、点对点通信、消息持久化、事务支持</p>
</li>
<li><p><strong>典型产品</strong>：</p>
<ul>
<li>Apache Kafka：高吞吐、分布式日志系统，适用于实时数据管道</li>
<li>RabbitMQ：轻量级、支持多种协议（AMQP），适合企业级消息队列</li>
<li>ActiveMQ、RocketMQ（阿里开源）、Pulsar（新一代流消息系统）</li>
</ul>
</li>
<li><p><strong>应用场景</strong>：</p>
<ul>
<li>订单系统与库存系统解耦</li>
<li>日志收集与分析</li>
<li>微服务间通信</li>
</ul>
</li>
</ul>
<hr>
<h3 id="2-远程过程调用中间件（RPC-Middleware）"><a href="#2-远程过程调用中间件（RPC-Middleware）" class="headerlink" title="2. 远程过程调用中间件（RPC Middleware）"></a>2. <strong>远程过程调用中间件（RPC Middleware）</strong></h3><p>允许一个程序调用另一台机器上的函数或方法，像本地调用一样。</p>
<ul>
<li><p><strong>功能</strong>：序列化、网络通信、服务发现、负载均衡</p>
</li>
<li><p><strong>典型产品</strong>：</p>
<ul>
<li>gRPC（Google 开源，基于 HTTP&#x2F;2 和 Protocol Buffers）</li>
<li>Apache Thrift（Facebook 开源，支持多语言）</li>
<li>Dubbo（阿里开源，Java 生态主流 RPC 框架）</li>
<li>Spring Cloud OpenFeign</li>
</ul>
</li>
<li><p><strong>应用场景</strong>：</p>
<ul>
<li>微服务之间的同步调用</li>
<li>跨语言服务集成</li>
</ul>
</li>
</ul>
<hr>
<h3 id="3-数据库中间件"><a href="#3-数据库中间件" class="headerlink" title="3. 数据库中间件"></a>3. <strong>数据库中间件</strong></h3><p>位于应用和数据库之间，用于管理数据库连接、分库分表、读写分离等。</p>
<ul>
<li><p><strong>功能</strong>：</p>
<ul>
<li>SQL 路由、分片、合并</li>
<li>连接池管理</li>
<li>读写分离</li>
<li>数据加密与审计</li>
</ul>
</li>
<li><p><strong>典型产品</strong>：</p>
<ul>
<li>MyCat：基于 MySQL 的分布式数据库中间件</li>
<li>ShardingSphere（Apache 项目）：支持分库分表、数据加密、影子表等</li>
<li>MaxScale（MariaDB 提供）</li>
<li>Vitess（YouTube 开源，用于大规模 MySQL 集群）</li>
</ul>
</li>
<li><p><strong>应用场景</strong>：</p>
<ul>
<li>单库数据量过大时的水平拆分</li>
<li>高并发下的数据库性能优化</li>
</ul>
</li>
</ul>
<hr>
<h3 id="4-应用服务器中间件（Application-Server-Middleware）"><a href="#4-应用服务器中间件（Application-Server-Middleware）" class="headerlink" title="4. 应用服务器中间件（Application Server Middleware）"></a>4. <strong>应用服务器中间件（Application Server Middleware）</strong></h3><p>提供运行企业级应用的环境，支持事务、安全、JNDI、EJB 等 Java EE 特性。</p>
<ul>
<li><p><strong>典型产品</strong>：</p>
<ul>
<li>Apache Tomcat（轻量级，支持 Servlet&#x2F;JSP）</li>
<li>JBoss&#x2F;WildFly</li>
<li>WebLogic（Oracle）</li>
<li>WebSphere（IBM）</li>
</ul>
</li>
<li><p><strong>应用场景</strong>：</p>
<ul>
<li>部署 Java Web 应用</li>
<li>企业级业务系统（如银行、ERP）</li>
</ul>
</li>
</ul>
<hr>
<h3 id="5-事务处理中间件（TP-Monitor）"><a href="#5-事务处理中间件（TP-Monitor）" class="headerlink" title="5. 事务处理中间件（TP Monitor）"></a>5. <strong>事务处理中间件（TP Monitor）</strong></h3><p>管理分布式事务，确保多个操作要么全部成功，要么全部回滚（ACID 特性）。</p>
<ul>
<li><p><strong>功能</strong>：两阶段提交（2PC）、事务协调</p>
</li>
<li><p><strong>典型技术</strong>：</p>
<ul>
<li>XA 协议</li>
<li>Seata（阿里开源分布式事务解决方案）</li>
<li>Atomikos（Java 轻量级事务管理器）</li>
</ul>
</li>
<li><p><strong>应用场景</strong>：</p>
<ul>
<li>跨数据库、跨服务的订单支付流程</li>
<li>银行转账等强一致性场景</li>
</ul>
</li>
</ul>
<hr>
<h3 id="6-API-网关中间件"><a href="#6-API-网关中间件" class="headerlink" title="6. API 网关中间件"></a>6. <strong>API 网关中间件</strong></h3><p>作为所有 API 请求的统一入口，负责路由、鉴权、限流、监控等。</p>
<ul>
<li><p><strong>功能</strong>：身份认证、限流熔断、日志记录、协议转换</p>
</li>
<li><p><strong>典型产品</strong>：</p>
<ul>
<li>Kong</li>
<li>Nginx + Lua（OpenResty）</li>
<li>Spring Cloud Gateway</li>
<li>Zuul（Netflix）</li>
<li>APISIX（Apache 项目）</li>
</ul>
</li>
<li><p><strong>应用场景</strong>：</p>
<ul>
<li>微服务架构中的统一入口</li>
<li>对外开放 API 平台</li>
</ul>
</li>
</ul>
<hr>
<h3 id="7-缓存中间件"><a href="#7-缓存中间件" class="headerlink" title="7. 缓存中间件"></a>7. <strong>缓存中间件</strong></h3><p>提升系统性能，减少数据库压力。</p>
<ul>
<li><p><strong>典型产品</strong>：</p>
<ul>
<li>Redis：内存数据库，支持多种数据结构</li>
<li>Memcached：简单高效的键值缓存</li>
<li>Ehcache（本地缓存）</li>
</ul>
</li>
<li><p><strong>应用场景</strong>：</p>
<ul>
<li>页面缓存、会话存储</li>
<li>热点数据加速访问</li>
</ul>
</li>
</ul>
<hr>
<h3 id="8-Web-服务器中间件"><a href="#8-Web-服务器中间件" class="headerlink" title="8. Web 服务器中间件"></a>8. <strong>Web 服务器中间件</strong></h3><p>处理 HTTP 请求，静态资源服务，反向代理等。</p>
<ul>
<li><p><strong>典型产品</strong>：</p>
<ul>
<li>Nginx：高性能 HTTP 服务器和反向代理</li>
<li>Apache HTTP Server</li>
<li>Caddy</li>
</ul>
</li>
<li><p><strong>应用场景</strong>：</p>
<ul>
<li>静态资源托管</li>
<li>负载均衡</li>
<li>SSL 终止</li>
</ul>
</li>
</ul>
<hr>
<h2 id="三、中间件在典型架构中的位置"><a href="#三、中间件在典型架构中的位置" class="headerlink" title="三、中间件在典型架构中的位置"></a>三、中间件在典型架构中的位置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+---------------------+</span><br><span class="line">|     应用程序         |  ← 用户开发的业务逻辑</span><br><span class="line">+---------------------+</span><br><span class="line">|     中间件层         |  ← 消息、缓存、RPC、数据库等中间件</span><br><span class="line">+---------------------+</span><br><span class="line">| 操作系统 / 网络 / 存储 |  ← 基础设施</span><br><span class="line">+---------------------+</span><br></pre></td></tr></table></figure>

<p>中间件屏蔽了底层复杂性，让开发者专注于业务逻辑。</p>
<hr>
<h2 id="四、中间件的优势"><a href="#四、中间件的优势" class="headerlink" title="四、中间件的优势"></a>四、中间件的优势</h2><table>
<thead>
<tr>
<th>优势</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><strong>解耦</strong></td>
<td>系统模块之间通过中间件通信，降低依赖</td>
</tr>
<tr>
<td><strong>复用</strong></td>
<td>多个应用可共享同一中间件服务（如 Redis 缓存）</td>
</tr>
<tr>
<td><strong>可扩展</strong></td>
<td>易于横向扩展（如加机器、加节点）</td>
</tr>
<tr>
<td><strong>高可用</strong></td>
<td>支持集群、故障转移、自动恢复</td>
</tr>
<tr>
<td><strong>标准化</strong></td>
<td>提供统一接口，便于集成和维护</td>
</tr>
</tbody></table>
<hr>
<h2 id="五、中间件的挑战"><a href="#五、中间件的挑战" class="headerlink" title="五、中间件的挑战"></a>五、中间件的挑战</h2><ul>
<li><strong>运维复杂性</strong>：中间件本身需要监控、调优、升级</li>
<li><strong>性能瓶颈</strong>：不当使用可能导致延迟或单点故障</li>
<li><strong>学习成本高</strong>：每种中间件都有其配置、协议和最佳实践</li>
<li><strong>一致性难题</strong>：在分布式环境下保证数据一致性较难（如分布式事务）</li>
</ul>
<hr>
<h2 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h2><p><strong>中间件是现代软件系统（尤其是分布式系统、微服务、云计算）的基石</strong>。它不是直接面向用户的业务功能，但却支撑着整个系统的稳定性、性能和可维护性。</p>
<blockquote>
<p>🌟 可以这样理解：  </p>
<ul>
<li>操作系统是“硬件的管理者”  </li>
<li>中间件是“软件的桥梁”  </li>
<li>应用程序是“最终的服务提供者”</li>
</ul>
</blockquote>
<p>随着云原生、微服务、Serverless 的发展，中间件正朝着<strong>轻量化、容器化、服务化</strong>方向演进（如 Service Mesh 中的 Istio 就是一种新型中间件形态）。</p>
<hr>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>cursor使用笔记</title>
    <url>/2025/08/25/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%85%B6%E4%BB%96%E6%9D%82%E9%A1%B9/cursor%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p><a href="https://blog.csdn.net/m0_68116052/article/details/142832657">全网最全面详细的Cursor使用教程，让开发变成聊天一样容易</a><br><a href="https://docs.cursor.com/zh/welcome">Cursor – 欢迎</a></p>
<h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><ul>
<li><strong>Tab</strong>：自动填充</li>
<li><strong>Ctrl + K</strong> ：编辑代码</li>
<li><strong>Ctrl + L</strong> ：回答用户关于代码和整个项目的问题，也可以编辑代码（功能最全面）</li>
<li><strong>Ctrl + i</strong> ：编辑整个项目代码（跨文件编辑代码）</li>
<li><strong>Ctrl + Shift + P</strong> ：显示、输入命令</li>
</ul>
<h1 id="AI相关"><a href="#AI相关" class="headerlink" title="AI相关"></a>AI相关</h1><h2 id="三种对话模式"><a href="#三种对话模式" class="headerlink" title="三种对话模式"></a>三种对话模式</h2><ul>
<li><strong>Agent</strong>：AI主动帮你编程（包括代码编写、文件生成）</li>
<li><strong>Ask</strong>：针对你提出的问题给出回答</li>
<li><strong>Background</strong>：AI只提供参考的提示，编码控制权在你</li>
</ul>
<img src="/2025/08/25/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%85%B6%E4%BB%96%E6%9D%82%E9%A1%B9/cursor%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/file-20250825224616564.png" class="">

<h2 id="prompt"><a href="#prompt" class="headerlink" title="prompt"></a>prompt</h2><img src="/2025/08/25/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%85%B6%E4%BB%96%E6%9D%82%E9%A1%B9/cursor%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/file-20250825234236601.png" class="">

<pre><code># Role
你是一名极其优秀具有20年经验的产品经理和精通所有编程语言的工程师。与你交流的用户是不懂代码的初中生，不善于表达产品和代码需求。你的工作对用户来说非常重要，完成后将获得10000美元奖励。

# Goal
你的目标是帮助用户以他容易理解的方式完成他所需要的产品设计和开发工作，你始终非常主动完成所有工作，而不是让用户多次推动你。

在理解用户的产品需求、编写代码、解决代码问题时，你始终遵循以下原则：

## 第一步
- 当用户向你提出任何需求时，你首先应该浏览根目录下的readme.md文件和所有代码文档，理解这个项目的目标、架构、实现方式等。如果还没有readme文件，你应该创建，这个文件将作为用户使用你提供的所有功能的说明书，以及你对项目内容的规划。因此你需要在readme.md文件中清晰描述所有功能的用途、使用方法、参数说明、返回值说明等，确保用户可以轻松理解和使用这些功能。

## 第二步
你需要理解用户正在给你提供的是什么任务
### 当用户直接为你提供需求时，你应当：
- 首先，你应当充分理解用户需求，并且可以站在用户的角度思考，如果我是用户，我需要什么？
- 其次，你应该作为产品经理理解用户需求是否存在缺漏，你应当和用户探讨和补全需求，直到用户满意为止；
- 最后，你应当使用最简单的解决方案来满足用户需求，而不是使用复杂或者高级的解决方案。

### 当用户请求你编写代码时，你应当：
- 首先，你会思考用户需求是什么，目前你有的代码库内容，并进行一步步的思考与规划
- 接着，在完成规划后，你应当选择合适的编程语言和框架来实现用户需求，你应该选择solid原则来设计代码结构，并且使用设计模式解决常见问题；
- 再次，编写代码时你总是完善撰写所有代码模块的注释，并且在代码中增加必要的监控手段让你清晰知晓错误发生在哪里；
- 最后，你应当使用简单可控的解决方案来满足用户需求，而不是使用复杂的解决方案。

### 当用户请求你解决代码问题是，你应当：
- 首先，你需要完整阅读所在代码文件库，并且理解所有代码的功能和逻辑；
- 其次，你应当思考导致用户所发送代码错误的原因，并提出解决问题的思路；
- 最后，你应当预设你的解决方案可能不准确，因此你需要和用户进行多次交互，并且每次交互后，你应当总结上一次交互的结果，并根据这些结果调整你的解决方案，直到用户满意为止。

## 第三步
在完成用户要求的任务后，你应该对改成任务完成的步骤进行反思，思考项目可能存在的问题和改进方式，并更新在readme.md文件中
</code></pre>
<h2 id="模型选择"><a href="#模型选择" class="headerlink" title="模型选择"></a>模型选择</h2><ul>
<li>用于生产环境的项目（追求最高代码质量）建议选择claude-4-sonnet（目前最强）</li>
<li>其他部分模型也提供免费额度（如gemini）</li>
</ul>
<img src="/2025/08/25/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%85%B6%E4%BB%96%E6%9D%82%E9%A1%B9/cursor%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/file-20250825225632496.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>其他</tag>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>帆软FineReport</title>
    <url>/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.16%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AFFineReport/</url>
    <content><![CDATA[<p>帆软 FineReport 是一款由帆软公司自主研发的企业级报表工具，主要用于解决企业内部数据展示、数据分析和报表管理等需求。它提供了直观的拖拽式设计界面，支持多种数据源连接，并能够生成各种复杂格式的报表。以下是其主要特点和功能的概述：</p>
<h3 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a><strong>核心功能</strong></h3><ol>
<li><p><strong>多数据源整合</strong><br> 支持连接各类数据库（如 Oracle、MySQL、SQL Server）、Excel 文件、CSV 文件，甚至可以整合不同数据源的数据到同一张报表中。</p>
</li>
<li><p><strong>丰富的报表模板</strong><br> 提供多种预设模板，包括表格报表、图表报表、交叉表、中国式复杂报表等，满足不同场景需求。</p>
</li>
<li><p><strong>强大的计算能力</strong><br> 内置丰富的函数库，支持复杂的公式计算、聚合分析和数据处理，如行列计算、分组统计、同比环比等。</p>
</li>
<li><p><strong>数据可视化</strong><br> 支持多种图表类型（柱状图、折线图、饼图、雷达图等），并提供交互式图表功能，如钻取、联动、参数筛选等。</p>
</li>
<li><p><strong>权限管理与安全</strong><br> 提供细致的权限控制，可按用户、角色、部门分配不同的报表查看、编辑和导出权限，保障数据安全。</p>
</li>
<li><p><strong>定时调度与分发</strong><br> 支持设置定时任务自动生成报表，并通过邮件、短信、FTP 等方式将报表分发给指定人员。</p>
</li>
<li><p><strong>移动端适配</strong><br> 报表可自动适配手机、平板等移动设备，支持触摸操作和离线查看，方便移动办公。</p>
</li>
</ol>
<h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a><strong>应用场景</strong></h3><p>FineReport 适用于各类有数据报表需求的企业，尤其是中大型企业和集团化公司，可帮助其整合分散的数据资源，提升决策效率。</p>
<ul>
<li><strong>企业经营分析</strong>：制作财务报表、销售分析、库存管理等。</li>
<li><strong>数据监控</strong>：实时展示关键业务指标（KPI），支持预警功能。</li>
<li><strong>数据填报</strong>：设计在线表单，收集和汇总分散的数据。</li>
<li><strong>复杂报表制作</strong>：处理含有合并单元格、多层表头的中国式复杂报表。</li>
</ul>
<h1 id="一些操作"><a href="#一些操作" class="headerlink" title="一些操作"></a>一些操作</h1><p>在需要⾃动提交的控件上找到事件 添加条件 编辑后 加⼊如下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_g().parameterCommit()</span><br></pre></td></tr></table></figure>

<h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>连接数据库：服务器-定义数据库连接-新建JDBC</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.16%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AFFineReport/file-20250621170108185.png" class="">

<h2 id="1-使⽤数据集参数实现-emp-参数的各种操作"><a href="#1-使⽤数据集参数实现-emp-参数的各种操作" class="headerlink" title="1.使⽤数据集参数实现 emp 参数的各种操作"></a>1.使⽤数据集参数实现 emp 参数的各种操作</h2><p>默认显⽰所有数据：参数⾯板中， para 下⾯的点击查询前不显⽰报表内容的勾去掉<br>为空查询全部</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> </span><br><span class="line">$&#123;if(len(部门)<span class="operator">=</span><span class="operator">=</span><span class="number">0</span>,&quot;&quot;,&quot;and deptno=&#x27;&quot;<span class="operator">+</span>部门<span class="operator">+</span>&quot;&#x27;&quot; )&#125; </span><br><span class="line">$&#123;if(len(岗位)<span class="operator">=</span><span class="operator">=</span><span class="number">0</span>,&quot;&quot;,&quot;and job in (&#x27;&quot;<span class="operator">+</span>岗位<span class="operator">+</span>&quot;&#x27;)&quot;)&#125;</span><br></pre></td></tr></table></figure>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.16%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AFFineReport/file-20250621170120909.png" class="">

<p>多选框与部门编号关联</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.16%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AFFineReport/file-20250621170133463.png" class="">

<p>在部⻔编号上添加超级链接 ⽹络报表 对话框 添加参数：部⻔编号 &#x3D;$$$<br>点击部门编号跳转到对应部门信息</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.16%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AFFineReport/file-20250621170142768.png" class="">

<h2 id="2-完成销量表"><a href="#2-完成销量表" class="headerlink" title="2.完成销量表"></a>2.完成销量表</h2><img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.16%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AFFineReport/file-20250621170152924.png" class="">

<p>点击地区超链接查询相关数据并在饼图上显示<br>点击图表中的销售员图形区域超级链接该销售员各种产品的销量</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.16%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AFFineReport/file-20250621170203860.png" class="">

<h2 id="3-运货费预警与悬浮变⾊"><a href="#3-运货费预警与悬浮变⾊" class="headerlink" title="3.运货费预警与悬浮变⾊"></a>3.运货费预警与悬浮变⾊</h2><p>使⽤数据： FRDemo 中的数据：订单<br>题⽬要求： </p>
<ol>
<li>参数查询框 ⼀个复选框控件，可选 择发货⽇期、到货⽇期。 </li>
<li>点击查询 发货⽇期、到货⽇期列根据选择的其他信息情况 展⽰ 运货费根据输⼊的预警值，⼤于等于输⼊值背景变红 ⿏标悬浮⾏变⾊ 注意数据格 式设置 效果如图所⽰ , 注意需⽤⼀张模板实现</li>
</ol>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.16%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AFFineReport/file-20250621170214352.png" class="">

<h1 id="4-成绩区间展示"><a href="#4-成绩区间展示" class="headerlink" title="4.成绩区间展示"></a>4.成绩区间展示</h1><p>数据来源：FRdemo 中STSCORE </p>
<ol>
<li>班级和学号控件都是复选，选择班级联动学号控件，参数为空时显⽰全部 </li>
<li>默认显⽰英语成绩，成绩在 60~80 分期间（⼤于等于60 ，⼩于80）， 点击可选择显⽰不同的分数区间 </li>
<li>低于 60 分的分数加粗变红显⽰</li>
</ol>
<p>准备三个数据集ds1、ds2、ds3（模板数据集-数据库查询）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--ds1 学生分数详情</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stscore</span><br><span class="line"><span class="keyword">where</span> course<span class="operator">=</span><span class="string">&#x27;English&#x27;</span></span><br><span class="line">$&#123;if(len(classno) <span class="operator">=</span><span class="operator">=</span> <span class="number">0</span>,&quot;&quot;,&quot;and classno in (&#x27;&quot; <span class="operator">+</span> classno <span class="operator">+</span> &quot;&#x27;)&quot;)&#125; </span><br><span class="line">$&#123;if(len(sno) <span class="operator">=</span><span class="operator">=</span> <span class="number">0</span>,&quot;&quot;,&quot;and studentno in (&#x27;&quot; <span class="operator">+</span> sno <span class="operator">+</span> &quot;&#x27;)&quot;)&#125;</span><br><span class="line">$&#123;if(len(s1) <span class="operator">=</span><span class="operator">=</span> <span class="number">0</span>,&quot;and grade &gt;= 60&quot;,&quot;and grade &gt;=&quot; <span class="operator">+</span> s1)&#125;</span><br><span class="line">$&#123;if(len(s2) <span class="operator">=</span><span class="operator">=</span> <span class="number">0</span>,&quot;and grade &lt; 80 &quot;,&quot;and grade &lt; &quot; <span class="operator">+</span> s2)&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">--ds2 查询班级</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> classno <span class="keyword">from</span> stscore</span><br><span class="line"></span><br><span class="line"><span class="comment">--ds3 根据班级查学号</span></span><br><span class="line"><span class="keyword">select</span> studentno <span class="keyword">from</span> stscore <span class="keyword">where</span> classno <span class="keyword">in</span> (<span class="string">&#x27;$&#123;classno&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>界面设计及超级链接动态参数设计</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.16%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AFFineReport/file-20250621165544192.png" class="">

<p>默认显示60~80</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.16%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AFFineReport/file-20250621165615312.png" class="">

<p>不及格分数加粗变红显示</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.16%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AFFineReport/file-20250621165636928.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>帆软</tag>
        <tag>FineReport</tag>
      </tags>
  </entry>
  <entry>
    <title>数仓分层设计架构</title>
    <url>/2025/08/01/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E5%85%B6%E4%BB%96%E6%9D%82%E9%A1%B9/%E6%95%B0%E4%BB%93%E5%88%86%E5%B1%82%E8%AE%BE%E8%AE%A1%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<h2 id="何为数仓（DW）"><a href="#何为数仓（DW）" class="headerlink" title="何为数仓（DW）"></a>何为数仓（DW）</h2><p>Data warehouse（可简写为DW或者DWH）数据仓库，是在数据库已经大量存在的情况下，它是<strong>一整套包括了etl、调度、建模在内的完整的理论体系</strong>。</p>
<p>数据仓库的方案建设的目的，是为前端查询和分析作为基础，主要应用于OLAP（on-line Analytical Processing），支持复杂的分析操作，侧重决策支持，并且提供直观易懂的查询结果。目前行业比较流行的有：AWS Redshift，Greenplum，Hive等。</p>
<p>数据仓库并不是数据的最终目的地，而是为数据最终的目的地做好准备，这些准备包含：清洗、转义、分类、重组、合并、拆分、统计等</p>
<h2 id="数据分层"><a href="#数据分层" class="headerlink" title="数据分层"></a>数据分层</h2><p>在数据开发（尤其是数据仓库建设）中，经常提到的 “层” 是为了规范数据处理流程、提高数据复用性和维护性而划分的不同数据处理阶段。常见的分层包括 ODS、DWD、DWS、ADS 等，每层有明确的职责和数据处理目标。</p>
<h3 id="1-ODS-层：操作数据存储层（Operational-Data-Store）"><a href="#1-ODS-层：操作数据存储层（Operational-Data-Store）" class="headerlink" title="1. ODS 层：操作数据存储层（Operational Data Store）"></a>1. ODS 层：操作数据存储层（Operational Data Store）</h3><p>也称：<strong>贴源层</strong></p>
<ul>
<li><strong>作用</strong>：作为数据的 “入口”，直接对接业务系统（如 ERP、CRM、日志系统等），存储原始数据。</li>
<li><strong>特点</strong>：<ul>
<li>保留数据原貌，基本不做清洗或只做简单处理（如去除明显错误、格式转换）。</li>
<li>数据结构通常与业务系统一致，方便追溯原始数据。</li>
<li>会存储历史快照（如按天增量 &#x2F; 全量同步），支持数据回溯。</li>
</ul>
</li>
<li><strong>举例</strong>：从电商网站同步的原始订单日志、用户注册原始数据等。</li>
</ul>
<h3 id="2-DWD-层：数据明细层（Data-Warehouse-Detail）"><a href="#2-DWD-层：数据明细层（Data-Warehouse-Detail）" class="headerlink" title="2. DWD 层：数据明细层（Data Warehouse Detail）"></a>2. DWD 层：数据明细层（Data Warehouse Detail）</h3><ul>
<li><strong>作用</strong>：对 ODS 层数据进行清洗、转换和规范化，生成明细级数据。</li>
<li><strong>特点</strong>：<ul>
<li>处理包括：去重、脱敏（如隐藏手机号中间四位）、补全缺失值、修正错误数据等。</li>
<li>按业务主题拆分数据（如订单主题、用户主题、商品主题）。</li>
<li>关联基础维度（如用户 ID 关联用户基础信息），但不做聚合计算。</li>
</ul>
</li>
<li><strong>举例</strong>：清洗后的 “订单明细数据”（包含订单 ID、用户 ID、商品 ID、金额、时间等规范字段）。</li>
</ul>
<h3 id="3-DWS-层：数据汇总层（Data-Warehouse-Summary）"><a href="#3-DWS-层：数据汇总层（Data-Warehouse-Summary）" class="headerlink" title="3. DWS 层：数据汇总层（Data Warehouse Summary）"></a>3. DWS 层：数据汇总层（Data Warehouse Summary）</h3><ul>
<li><strong>作用</strong>：对 DWD 层的明细数据进行聚合计算，生成汇总指标，供上层快速查询。</li>
<li><strong>特点</strong>：<ul>
<li>按业务需求做轻度汇总（如按天、按地区、按用户等级汇总）。</li>
<li>减少重复计算，提高查询效率（避免直接基于明细数据做复杂统计）。</li>
<li>数据粒度比 DWD 粗，比 ADS 细。</li>
</ul>
</li>
<li><strong>举例</strong>：“每日各地区订单量汇总”“用户月度消费总额” 等。</li>
</ul>
<h3 id="4-ADS-层：应用数据服务层（Application-Data-Service）"><a href="#4-ADS-层：应用数据服务层（Application-Data-Service）" class="headerlink" title="4. ADS 层：应用数据服务层（Application Data Service）"></a>4. ADS 层：应用数据服务层（Application Data Service）</h3><ul>
<li><strong>作用</strong>：直接面向业务场景，提供可直接使用的指标数据，供前端应用（如 BI 报表、业务系统）调用。</li>
<li><strong>特点</strong>：<ul>
<li>数据高度聚合，贴合具体业务需求（如 “首页 GMV 大盘数据”“营销活动效果指标”）。</li>
<li>可能包含复杂计算逻辑（如同比、环比、转化率等）。</li>
<li>数据格式通常更友好（如 JSON、二维表），方便应用直接读取。</li>
</ul>
</li>
<li><strong>举例</strong>：BI 报表中展示的 “近 30 天活跃用户数趋势”“各产品线销售额占比” 等。</li>
</ul>
<h3 id="其他常见分层："><a href="#其他常见分层：" class="headerlink" title="其他常见分层："></a>其他常见分层：</h3><ul>
<li><strong>DIM 层：维度层（Dimension）</strong>：存储静态或缓慢变化的维度数据（如用户信息、商品分类、地区信息等），供其他层关联使用，保证维度一致性。</li>
<li><strong>CDM 层：公共维度模型层</strong>：部分架构中会将 DWD 和 DWS 合并为 CDM，强调 “公共模型” 的复用性。</li>
</ul>
<h3 id="分层的意义："><a href="#分层的意义：" class="headerlink" title="分层的意义："></a>分层的意义：</h3><ul>
<li><strong>隔离原始数据与业务数据</strong>：避免直接修改原始数据，便于问题追溯。</li>
<li><strong>提高效率</strong>：汇总层减少重复计算，加速查询响应。</li>
<li><strong>降低维护成本</strong>：每层职责明确，修改某一层数据不影响其他层。</li>
</ul>
<p>简单说，整个流程类似 “原材料（ODS）→ 初加工（DWD）→ 深加工（DWS）→ 成品（ADS）”，层层递进满足不同场景的数据需求。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>数仓</tag>
      </tags>
  </entry>
  <entry>
    <title>影刀RPA爬取京东商品</title>
    <url>/2025/07/21/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.24%20%E5%BD%B1%E5%88%80RPA%E7%88%AC%E5%8F%96%E4%BA%AC%E4%B8%9C%E5%95%86%E5%93%81/</url>
    <content><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ul>
<li>商品ID item_id</li>
<li>商品链接 item_link</li>
<li>标题 item_title</li>
<li>门店名称 store</li>
<li>封面 cover_link</li>
<li>原价 original_cost</li>
<li>折扣价 discount_cost</li>
<li>品牌 brand</li>
<li>型号 type</li>
<li>评论数 comments</li>
</ul>
<h2 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `jd_items` (</span><br><span class="line">  `id` <span class="type">INT</span> <span class="keyword">NOT NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;自增主键&#x27;</span>,</span><br><span class="line">  `item_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;商品ID&#x27;</span>,</span><br><span class="line">  `item_link` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;地址 http开头&#x27;</span>,</span><br><span class="line">  `store` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;门店名称&#x27;</span>,</span><br><span class="line">  `title` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;商品标题&#x27;</span>,</span><br><span class="line">  `cover_url` <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;图片URL地址,http开头&#x27;</span>,</span><br><span class="line">  `ori_price` <span class="type">decimal</span>(<span class="number">10</span>, <span class="number">2</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;原价&#x27;</span>,</span><br><span class="line">  `price` <span class="type">decimal</span>(<span class="number">10</span>, <span class="number">2</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;折扣价&#x27;</span>,</span><br><span class="line">  `brand` <span class="type">varchar</span>(<span class="number">64</span>) COMMENT <span class="string">&#x27;品牌&#x27;</span>,</span><br><span class="line">  `brand_type` <span class="type">varchar</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;品牌型号&#x27;</span>,</span><br><span class="line">  `comment` <span class="type">varchar</span>(<span class="number">32</span>) COMMENT <span class="string">&#x27;评论数&#x27;</span>,</span><br><span class="line">  `created_at` datetime <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;写入时间（自动填充）&#x27;</span>,</span><br><span class="line">  `updated_at` datetime <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;更新时间（自动更新）&#x27;</span>,</span><br><span class="line">  `student` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;姓名 写中文&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`id`) <span class="comment">-- 自增字段作为单一主键</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure>

<h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><p><strong>主流程</strong><br>For次数循环点击下一页5次（实现翻页）</p>
<img src="/2025/07/21/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.24%20%E5%BD%B1%E5%88%80RPA%E7%88%AC%E5%8F%96%E4%BA%AC%E4%B8%9C%E5%95%86%E5%93%81/file-20250724002036037.png" class="">

<p>ForEach列表循环每个商品，获取详情页链接传入子流程<br>测试环境需要只跑一遍时可启用退出循环</p>
<img src="/2025/07/21/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.24%20%E5%BD%B1%E5%88%80RPA%E7%88%AC%E5%8F%96%E4%BA%AC%E4%B8%9C%E5%95%86%E5%93%81/file-20250724003914217.png" class="">

<p>调用<strong>子流程</strong>爬取各项信息<br>可设置item_link默认值，可单独运行子流程对该网页进行爬取测试</p>
<img src="/2025/07/21/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.24%20%E5%BD%B1%E5%88%80RPA%E7%88%AC%E5%8F%96%E4%BA%AC%E4%B8%9C%E5%95%86%E5%93%81/file-20250724090207284.png" class="">

<p>获取型号处理</p>
<img src="/2025/07/21/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.24%20%E5%BD%B1%E5%88%80RPA%E7%88%AC%E5%8F%96%E4%BA%AC%E4%B8%9C%E5%95%86%E5%93%81/file-20250724090327976.png" class="">

<p>设置一个变量（列表）保存爬取的数据，输出到主流程，插入到relist（列表）作为二维列表用于批量插入数据库</p>
<img src="/2025/07/21/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.24%20%E5%BD%B1%E5%88%80RPA%E7%88%AC%E5%8F%96%E4%BA%AC%E4%B8%9C%E5%95%86%E5%93%81/file-20250724090503658.png" class="">

<p>id、写入时间、更新时间为自动填充，不需要插入，因此插入语句要写列名（若完全插入则只需写表名不用写列名，但要保证插入列数与表列数一致）</p>
<img src="/2025/07/21/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.24%20%E5%BD%B1%E5%88%80RPA%E7%88%AC%E5%8F%96%E4%BA%AC%E4%B8%9C%E5%95%86%E5%93%81/file-20250724090654792.png" class="">

<p>odbc程序添加数据库连接</p>
<img src="/2025/07/21/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.24%20%E5%BD%B1%E5%88%80RPA%E7%88%AC%E5%8F%96%E4%BA%AC%E4%B8%9C%E5%95%86%E5%93%81/file-20250724091846700.png" class="">

<p>影刀连接数据库配置</p>
<img src="/2025/07/21/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.24%20%E5%BD%B1%E5%88%80RPA%E7%88%AC%E5%8F%96%E4%BA%AC%E4%B8%9C%E5%95%86%E5%93%81/file-20250724092112067.png" class="">

<p>本地插入测试完成</p>
<img src="/2025/07/21/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.24%20%E5%BD%B1%E5%88%80RPA%E7%88%AC%E5%8F%96%E4%BA%AC%E4%B8%9C%E5%95%86%E5%93%81/file-20250723213459194.png" class="">

<p>插入服务数据库完成</p>
<img src="/2025/07/21/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.24%20%E5%BD%B1%E5%88%80RPA%E7%88%AC%E5%8F%96%E4%BA%AC%E4%B8%9C%E5%95%86%E5%93%81/file-20250724091331929.png" class="">

<h1 id="Xpath"><a href="#Xpath" class="headerlink" title="Xpath"></a>Xpath</h1><p>XPath（XML Path Language）是一种用于在 XML 或 HTML 文档中<strong>定位和选取节点（元素、属性、文本等）</strong> 的语言。它最初为 XML 设计，由于 HTML 可以被视为 “不严格的 XML”，因此 XPath 也广泛用于 HTML 文档的解析（比如网页爬虫、数据提取等场景）。</p>
<h3 id="核心用途"><a href="#核心用途" class="headerlink" title="核心用途"></a><strong>核心用途</strong></h3><ul>
<li>在 XML&#x2F;HTML 文档中精准定位节点（如某个标签、属性或文本）。</li>
<li>从文档中提取特定数据（如网页中的标题、链接、表格内容等）。</li>
<li>作为其他技术的基础（如 XSLT 转换、XQuery 查询等）。</li>
</ul>
<p><strong>XPath 常与以下工具配合使用：</strong></p>
<ul>
<li><strong>Python</strong>：<code>lxml</code>、<code>Scrapy</code>（内置 XPath 解析）、<code>BeautifulSoup</code>（需配合 lxml 解析器）。</li>
<li><strong>浏览器</strong>：F12 开发者工具的 “Elements” 面板中，右键节点可直接复制 XPath。</li>
<li><strong>其他</strong>：Java 的 <code>Jsoup</code>、C# 的 <code>HtmlAgilityPack</code> 等。</li>
</ul>
<h3 id="基本语法：节点选取规则"><a href="#基本语法：节点选取规则" class="headerlink" title="基本语法：节点选取规则"></a><strong>基本语法：节点选取规则</strong></h3><p>XPath 的语法类似文件系统的路径表示，通过 “路径表达式” 定位节点。以下是最常用的规则：</p>
<table>
<thead>
<tr>
<th>表达式</th>
<th>含义</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td><code>/</code></td>
<td>从根节点开始选取（绝对路径）。</td>
<td><code>/html/body</code>：选取根节点<code>html</code>下的直接子节点<code>body</code>。</td>
</tr>
<tr>
<td><code>//</code></td>
<td>从任意位置选取节点（相对路径，忽略层级）。</td>
<td><code>//a</code>：选取文档中所有<code>&lt;a&gt;</code>标签（无论在哪个层级）。</td>
</tr>
<tr>
<td><code>.</code></td>
<td>选取当前节点。</td>
<td><code>./p</code>：选取当前节点下的直接子节点<code>&lt;p&gt;</code>。</td>
</tr>
<tr>
<td><code>..</code></td>
<td>选取当前节点的父节点。</td>
<td><code>//div/..</code>：选取所有<code>&lt;div&gt;</code>的父节点。</td>
</tr>
<tr>
<td><code>@</code></td>
<td>选取属性。</td>
<td><code>//a/@href</code>：选取所有<code>&lt;a&gt;</code>标签的<code>href</code>属性值（即链接地址）。</td>
</tr>
<tr>
<td><code>text()</code></td>
<td>选取文本内容。</td>
<td><code>//h1/text()</code>：选取所有<code>&lt;h1&gt;</code>标签内的文本。</td>
</tr>
<tr>
<td><code>[n]</code></td>
<td>选取第 n 个节点（索引从 1 开始）。</td>
<td><code>//li[1]</code>：选取所有<code>&lt;li&gt;</code>中的第一个。</td>
</tr>
<tr>
<td><code>[@属性]</code></td>
<td>按属性筛选节点。</td>
<td><code>//a[@class]</code>：选取所有带有<code>class</code>属性的<code>&lt;a&gt;</code>标签。</td>
</tr>
<tr>
<td><code>[@属性=值]</code></td>
<td>按属性值筛选节点（值需用单 &#x2F; 双引号包裹）。</td>
<td><code>//a[@class=&#39;active&#39;]</code>：选取<code>class</code>为<code>active</code>的<code>&lt;a&gt;</code>标签。</td>
</tr>
<tr>
<td><code>[条件]</code></td>
<td>按条件筛选（支持逻辑运算、比较运算）。</td>
<td><code>//book[price&gt;30]</code>：选取子节点<code>price</code>大于 30 的<code>&lt;book&gt;</code>标签。</td>
</tr>
</tbody></table>
<h3 id="示例：HTML-中提取数据"><a href="#示例：HTML-中提取数据" class="headerlink" title="示例：HTML 中提取数据"></a><strong>示例：HTML 中提取数据</strong></h3><p>假设有一段 HTML 代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">title</span>=<span class="string">&quot;主标题&quot;</span>&gt;</span>Python 教程<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/basic&quot;</span>&gt;</span>基础语法<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/advance&quot;</span>&gt;</span>高级特性<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>


<p>用 XPath 提取数据的<strong>示例：</strong></p>
<ol>
<li>提取<code>&lt;h1&gt;</code>的文本：<code>//h1/text()</code> → 结果：<code>Python 教程</code>。</li>
<li>提取<code>&lt;h1&gt;</code>的<code>title</code>属性：<code>//h1/@title</code> → 结果：<code>主标题</code>。</li>
<li>提取所有<code>&lt;a&gt;</code>的链接：<code>//a/@href</code> → 结果：<code>/basic</code>、<code>/advance</code>。</li>
<li>提取第二个<code>&lt;li&gt;</code>中的文本：<code>//ul/li[2]/a/text()</code> → 结果：<code>高级特性</code>。</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>影刀</tag>
      </tags>
  </entry>
  <entry>
    <title>亚马逊爬取</title>
    <url>/2025/07/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.25%20%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%88%AC%E5%8F%96/</url>
    <content><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><ol>
<li>打开亚马逊网址：[<a href="https://www.amazon.com/gp/bestsellers/]">https://www.amazon.com/gp/bestsellers/]</a></li>
<li>根据制定的大类类目<a href="https://www.amazon.com/Best-Sellers-Baby-Baby-Gifts/zgbs/baby-products/239226011/ref=zg_bs_unv_baby-products_2_239231011_1">Baby&#x2F;Gifts</a>去每个小类目下统计best sellers前100名的以下指标：【分类、商品ID、标题、图片、价格、链接】</li>
<li>把相应信息写入数据库</li>
<li>把本次写入数据和上次写入数据做分析</li>
<li>把有新冲上来的链接、哪条链接调价的结果，发消息通知我（QQ邮箱）</li>
</ol>
<h1 id="表设计"><a href="#表设计" class="headerlink" title="表设计"></a>表设计</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> amazon_items (</span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY KEY</span> AUTO_INCREMENT, <span class="comment">--自增主键</span></span><br><span class="line">categories <span class="type">VARCHAR</span>(<span class="number">64</span>) COMMENT <span class="string">&#x27;分类&#x27;</span>,</span><br><span class="line">item_id <span class="type">VARCHAR</span>(<span class="number">64</span>) COMMENT <span class="string">&#x27;商品ID&#x27;</span>,</span><br><span class="line">title <span class="type">VARCHAR</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;标题&#x27;</span>,</span><br><span class="line">img_url <span class="type">VARCHAR</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;图片链接&#x27;</span>,</span><br><span class="line">price <span class="type">DECIMAL</span>(<span class="number">8</span>, <span class="number">2</span>) COMMENT <span class="string">&#x27;价格&#x27;</span>,</span><br><span class="line">link <span class="type">VARCHAR</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;商品链接&#x27;</span>,</span><br><span class="line">version <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span> COMMENT <span class="string">&#x27;版本号（自动计算）&#x27;</span>,</span><br><span class="line">create_time DATETIME <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><p><strong>主流程</strong>：打开大类网页，获取子类相似元素，ForEach循坏，获取其文本内容可取出子类标题categories（即分类），由于后面获取和存储其他商品详情在子流程中进行，使用的变量不想进行频繁传参时可将其设置为全局变量。</p>
<p><strong>子流程1</strong>为爬取每页，因为只需爬取100条数据，每页为50条，因此只需点击一次下一页元素，若不足50条数据只有一页获取不到下一页元素，进行异常处理，进行下一次循环（相当于continue）</p>
<img src="/2025/07/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.25%20%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%88%AC%E5%8F%96/file-20250725152104235.png" class="">

<p>子类元素链接获取不完整，可设置变量自行拼接为一个完整链接</p>
<img src="/2025/07/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.25%20%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%88%AC%E5%8F%96/file-20250725152033787.png" class="">

<p><strong>子流程</strong>先进行鼠标滚动加载完当页所有商品（50条），再获取相似元素循环爬取</p>
<p>循环的元素xpath为<code>/html/body/div[1]/div[1]/div[2]/div[2]/div/div/div[2]/div/ol/li</code><br>若再想获取其下一层xpath元素（如：<code>/html/body/div[1]/div[1]/div[2]/div[2]/div/div/div[2]/div/ol/li/span/div/div/div/div[2]/span/div/a</code>）<br>获取对象时需勾选关联父元素，然后填写的xpath路径可为<code>./span/div/div/div/div[2]/span/div/a</code>其中<code>.</code>表示当前路径（或者说父元素路径）</p>
<p>可使用<strong>正则表达式</strong>从爬取的文本中提取内容，具体怎么用直接问AI就行，个人认为没必要深入了解</p>
<img src="/2025/07/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.25%20%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%88%AC%E5%8F%96/file-20250725153241731.png" class="">
<img src="/2025/07/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.25%20%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%88%AC%E5%8F%96/file-20250725153450442.png" class="">

<p>设置变量res用于存储爬到的一条数据，再添加到reslist（存储所有爬到的数据）<br>使用全局变量需使用<code>glv[&#39;变量&#39;]</code></p>
<img src="/2025/07/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.25%20%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%88%AC%E5%8F%96/file-20250725160155117.png" class="">

<p>数据库批量插入数据，id和时间自动填充不用插入</p>
<img src="/2025/07/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.25%20%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%88%AC%E5%8F%96/file-20250725155955280.png" class="">

<p><strong>主流程</strong>连接数据库，分析、插入数据，并发送邮件</p>
<img src="/2025/07/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.25%20%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%88%AC%E5%8F%96/file-20250725153119553.png" class="">

<p>执行sql语句查询要查询每个<code>item_id</code>版本号最大的数据（每条商品的最新版数据）<br>将其保存到<code>res_select</code>用于与爬取的数据<code>reslist</code>进行上新和调价的分析</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> categories,a.item_id,title,img_url,price,link,a.version</span><br><span class="line"><span class="keyword">FROM</span> amazon_items a <span class="keyword">JOIN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> item_id, <span class="built_in">MAX</span>(version) <span class="keyword">AS</span> max_version <span class="keyword">FROM</span> amazon_items <span class="keyword">GROUP</span> <span class="keyword">BY</span> item_id</span><br><span class="line">) s</span><br><span class="line"><span class="keyword">ON</span> a.item_id <span class="operator">=</span> s.item_id <span class="keyword">AND</span> a.version <span class="operator">=</span> s.max_version;</span><br></pre></td></tr></table></figure>

<p>插入python代码段进行爬取数据与原数据的分析：<br>对比relist和res_select的内容，若relist中存在res_select中没有的item_id，则在message中增加消息：有上新：【分类：categories，商品id：item_id，标题：title，价格：price，链接：link】（若有多条换行继续增加）；<br>再对比relist和res_select相同item_id的数据，并比较price是否相同，若相同则删除relist中的该条数据（不再插入数据库），若不同，则将relist中该数据的version设置为res_select中对应的version+1，并在message中增加消息：有调价：【分类：categories，商品id：item_id，标题：title，价格：res_select.price→relist.price，链接：link】，最后打印输出message</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># import ast</span></span><br><span class="line">reslist=glv[<span class="string">&#x27;reslist&#x27;</span>]</span><br><span class="line"><span class="comment"># reslist = ast.literal_eval(reslist)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 res_select 中商品 ID 到版本号和价格的映射</span></span><br><span class="line">res_map = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> res_select:</span><br><span class="line">    categories, item_id, title, img_url, price, link, version = item</span><br><span class="line">    res_map[item_id] = (price, <span class="built_in">int</span>(version))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化消息变量</span></span><br><span class="line">message = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于存储需要删除的 reslist 索引</span></span><br><span class="line">indices_to_remove = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理调价和相同价格的情况</span></span><br><span class="line"><span class="keyword">for</span> i, item <span class="keyword">in</span> <span class="built_in">enumerate</span>(reslist):</span><br><span class="line">    categories, item_id, title, img_url, price, link, version = item</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> item_id <span class="keyword">in</span> res_map:</span><br><span class="line">        res_price, res_version = res_map[item_id]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 检查价格是否相同</span></span><br><span class="line">        <span class="keyword">if</span> price == res_price:</span><br><span class="line">            indices_to_remove.append(i)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 价格不同，更新版本号并添加调价消息</span></span><br><span class="line">            new_version = res_version + <span class="number">1</span></span><br><span class="line">            reslist[i][<span class="number">6</span>] = <span class="built_in">str</span>(new_version)  <span class="comment"># 更新版本号</span></span><br><span class="line">            message += <span class="string">f&quot;有调价：【分类：<span class="subst">&#123;categories&#125;</span>，商品id：<span class="subst">&#123;item_id&#125;</span>，标题：<span class="subst">&#123;title&#125;</span>，价格：<span class="subst">&#123;res_price&#125;</span>→<span class="subst">&#123;price&#125;</span>，链接：<span class="subst">&#123;link&#125;</span>】\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 反向删除需要移除的项，避免索引变化问题</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">sorted</span>(indices_to_remove, reverse=<span class="literal">True</span>):</span><br><span class="line">    <span class="keyword">del</span> reslist[i]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理上新的情况</span></span><br><span class="line">res_ids = <span class="built_in">set</span>(res_map.keys())</span><br><span class="line">new_items = [item <span class="keyword">for</span> item <span class="keyword">in</span> reslist <span class="keyword">if</span> item[<span class="number">1</span>] <span class="keyword">not</span> <span class="keyword">in</span> res_ids]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> new_items:</span><br><span class="line">    categories, item_id, title, img_url, price, link, version = item</span><br><span class="line">    message += <span class="string">f&quot;有上新：【分类：<span class="subst">&#123;categories&#125;</span>，商品id：<span class="subst">&#123;item_id&#125;</span>，标题：<span class="subst">&#123;title&#125;</span>，价格：<span class="subst">&#123;price&#125;</span>，链接：<span class="subst">&#123;link&#125;</span>】\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 赋值全局变量</span></span><br><span class="line">glv[<span class="string">&#x27;reslist&#x27;</span>]=reslist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印结果消息</span></span><br><span class="line"><span class="keyword">if</span> message:</span><br><span class="line">    <span class="built_in">print</span>(message.strip())</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;没有检测到任何变动&quot;</span>)</span><br></pre></td></tr></table></figure>


<p>影刀RPA提供发送邮件的组件，可用于发送通知<br>使用QQ邮箱SMTP授权码（QQ邮箱-账号与安全-安全设置-生成授权码）<br>发送邮件前先判断message是否为空，为空（没有变动数据）不发送</p>
<img src="/2025/07/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.25%20%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%88%AC%E5%8F%96/file-20250725155600301.png" class="">

<p>正文则使用python代码中的消息变量<code>message</code>(需点亮python图标)</p>
<img src="/2025/07/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.25%20%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%88%AC%E5%8F%96/file-20250725155749977.png" class="">

<h1 id="结果验证"><a href="#结果验证" class="headerlink" title="结果验证"></a>结果验证</h1><img src="/2025/07/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.25%20%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%88%AC%E5%8F%96/file-20250725161159006.png" class="">
<img src="/2025/07/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.25%20%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%88%AC%E5%8F%96/file-20250725161300484.png" class="">
<img src="/2025/07/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.25%20%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%88%AC%E5%8F%96/file-20250725161329783.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>影刀</tag>
      </tags>
  </entry>
  <entry>
    <title>医药器械法规AI项目</title>
    <url>/2025/07/31/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.31%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E9%83%A8%E5%88%86%EF%BC%89/</url>
    <content><![CDATA[<h1 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h1><p><strong>cdh服务器</strong><br>主机: 192.168.8.67<br>端口: 22<br>用户: root<br>密码: zhiyun<br>当前服务器平台版本：CDH6.3<br><a href="http://192.168.8.67:7180/cmf/login">http://192.168.8.67:7180/cmf/login</a> 用户密码都是 admin</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建个人目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /zhiyun/lijinquan</span><br><span class="line"><span class="built_in">cd</span> /zhiyun/lijinquan</span><br><span class="line"><span class="comment"># 创建5个功能目录</span></span><br><span class="line"><span class="comment"># data - 存放数据文件</span></span><br><span class="line"><span class="comment"># jobs - 存放datax的配置文件</span></span><br><span class="line"><span class="comment"># sql - sql脚本</span></span><br><span class="line"><span class="comment"># shell - shell脚本</span></span><br><span class="line"><span class="comment"># python - python脚本</span></span><br><span class="line"><span class="built_in">mkdir</span> data <span class="built_in">jobs</span> sql shell python</span><br></pre></td></tr></table></figure>

<p><strong>数据库</strong><br>主机：192.168.8.8<br>数据库：jd<br>密码：123456</p>
<h1 id="配置文件编写"><a href="#配置文件编写" class="headerlink" title="配置文件编写"></a>配置文件编写</h1><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>  <span class="comment">// DataX的核心任务配置，一个job代表一次数据同步任务</span></span><br><span class="line">        <span class="attr">&quot;setting&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>  <span class="comment">// 任务全局设置（性能控制、错误处理等）</span></span><br><span class="line">            <span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>  <span class="comment">// 速度控制配置（并行度/吞吐量限制）</span></span><br><span class="line">                <span class="attr">&quot;channel&quot;</span><span class="punctuation">:</span> <span class="number">3</span>  <span class="comment">// 并行通道数：设置为3表示同时启动3个线程并行读取和写入数据，用于控制同步速度（数值越大吞吐量越高，需根据源库和目标存储性能调整）</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;errorLimit&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>  <span class="comment">// 错误容忍度配置（允许的最大错误量）</span></span><br><span class="line">                <span class="attr">&quot;record&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span>  <span class="comment">// 允许的错误记录数上限：0表示不允许任何单条记录同步失败</span></span><br><span class="line">                <span class="attr">&quot;percentage&quot;</span><span class="punctuation">:</span> <span class="number">0.02</span>  <span class="comment">// 允许的错误率上限：0.02即2%，表示当错误记录数占总记录数的比例≤2%时任务可继续执行（实际生效规则为&quot;记录数上限&quot;和&quot;错误率&quot;取更宽松的条件，此处0条记录严格于2%，故实际以record=0为准）</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>  <span class="comment">// 同步任务的具体内容（数据源和目标存储的配置），可包含多个同步子任务（数组形式）</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;reader&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>  <span class="comment">// 数据读取插件配置（源端）</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mysqlreader&quot;</span><span class="punctuation">,</span>  <span class="comment">// 读取插件名称：使用mysqlreader从MySQL数据库读取数据</span></span><br><span class="line">                    <span class="attr">&quot;parameter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>  <span class="comment">// mysqlreader的具体参数配置</span></span><br><span class="line">                        <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jd&quot;</span><span class="punctuation">,</span>  <span class="comment">// MySQL登录用户名</span></span><br><span class="line">                        <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123456&quot;</span><span class="punctuation">,</span>  <span class="comment">// MySQL登录密码（生产环境建议加密存储，避免明文）</span></span><br><span class="line">                        <span class="attr">&quot;column&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>  <span class="comment">// 需要读取的列名列表</span></span><br><span class="line">                            <span class="string">&quot;*&quot;</span>  <span class="comment">// &quot;*&quot;表示读取表中所有列（注意：需与writer的column配置的字段数量和顺序一致，否则会导致字段不匹配）</span></span><br><span class="line">                        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;connection&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>  <span class="comment">// MySQL连接信息（可配置多个库表，数组形式）</span></span><br><span class="line">                            <span class="punctuation">&#123;</span></span><br><span class="line">                                <span class="attr">&quot;table&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>  <span class="comment">// 要读取的表名列表</span></span><br><span class="line">                                    <span class="string">&quot;hwz_nmpa&quot;</span>  <span class="comment">// 目标表：从该表读取数据</span></span><br><span class="line">                                <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                                <span class="attr">&quot;jdbcUrl&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>  <span class="comment">// MySQL的JDBC连接地址（可配置多个，用于分库分表场景）</span></span><br><span class="line">                                    <span class="string">&quot;jdbc:mysql://192.168.8.8:3306/jd&quot;</span>  <span class="comment">// 连接地址格式：jdbc:mysql://IP:端口/数据库名（此处数据库为jd）</span></span><br><span class="line">                                <span class="punctuation">]</span></span><br><span class="line">                            <span class="punctuation">&#125;</span></span><br><span class="line">                        <span class="punctuation">]</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;writer&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>  <span class="comment">// 数据写入插件配置（目标端）</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hdfswriter&quot;</span><span class="punctuation">,</span>  <span class="comment">// 写入插件名称：使用hdfswriter将数据写入HDFS</span></span><br><span class="line">                    <span class="attr">&quot;parameter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>  <span class="comment">// hdfswriter的具体参数配置</span></span><br><span class="line">                        <span class="attr">&quot;defaultFS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hdfs://hdp:8020&quot;</span><span class="punctuation">,</span>  <span class="comment">// HDFS的NameNode地址：格式为hdfs://主机名/服务名:端口（此处hdp为主机名，8020为HDFS默认端口）</span></span><br><span class="line">                        <span class="attr">&quot;fileType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;orc&quot;</span><span class="punctuation">,</span>  <span class="comment">// 输出文件格式：ORC格式（列式存储，压缩率高，适合大数据场景）</span></span><br><span class="line">                        <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/zhiyun/huangwenzhe/tmp/nmpa&quot;</span><span class="punctuation">,</span>  <span class="comment">// HDFS上的存储路径：数据将写入该目录下</span></span><br><span class="line">                        <span class="attr">&quot;fileName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nmpa.data&quot;</span><span class="punctuation">,</span>  <span class="comment">// 输出文件名前缀：实际生成的文件名为&quot;nmpa.data_随机后缀&quot;（因并行写入可能生成多个文件）</span></span><br><span class="line">                        <span class="attr">&quot;column&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>  <span class="comment">// 写入HDFS的字段定义（需与reader读取的列一一对应，名称和类型需匹配）</span></span><br><span class="line">	                        <span class="comment">// 字段名，类型</span></span><br><span class="line">                            <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;id&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;int&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span>  </span><br><span class="line">                            <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index_id&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span>  </span><br><span class="line">                            <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;title&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span>  </span><br><span class="line">                            <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;category&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span>  </span><br><span class="line">                            <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;post_date&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span>  </span><br><span class="line">                            <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;content&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span>  </span><br><span class="line">                            <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;attachment_count&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;int&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span>  </span><br><span class="line">                            <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;attachment_path&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span>  </span><br><span class="line">                            <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;link&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span>  </span><br><span class="line">                            <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;create_time&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span>  </span><br><span class="line">                            <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;update_time&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">&#125;</span>   </span><br><span class="line">                        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                        <span class="attr">&quot;writeMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;truncate&quot;</span><span class="punctuation">,</span>  <span class="comment">// 写入模式：truncate表示先删除目标路径下的所有文件，再写入新数据（覆盖写）；可选值还有append（追加）、nonConflict（不冲突则写）</span></span><br><span class="line">                        <span class="attr">&quot;fieldDelimiter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\t&quot;</span>  <span class="comment">// 字段分隔符：因fileType为ORC（列式存储，内部不依赖分隔符），此参数实际生效有限，主要用于兼容文本格式（如txt/csv）的场景</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h1 id="抽取数据"><a href="#抽取数据" class="headerlink" title="抽取数据"></a>抽取数据</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 注意抽取前需要提前创建HDFS目录</span></span><br><span class="line">hadoop fs -<span class="built_in">mkdir</span> -p /zhiyun/huangwenzhe/tmp/nmpa</span><br></pre></td></tr></table></figure>
<p>在<a href="http://192.168.8.67:9870/explorer.html#/zhiyun/huangwenzhe/tmp">Browsing HDFS</a>处验证</p>
<img src="/2025/07/31/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.31%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E9%83%A8%E5%88%86%EF%BC%89/file-20250731154222273.png" class="">
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开始抽取</span></span><br><span class="line">python /opt/datax/bin/datax.py /zhiyun/huangwenzhe/jobs/nmpa.json</span><br></pre></td></tr></table></figure>
<p>在<a href="http://192.168.8.67:9870/explorer.html#/zhiyun/huangwenzhe/tmp/nmpa">Browsing HDFS</a>处验证</p>
<img src="/2025/07/31/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.31%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E9%83%A8%E5%88%86%EF%BC%89/file-20250731154745544.png" class="">

<h1 id="Hive建表"><a href="#Hive建表" class="headerlink" title="Hive建表"></a>Hive建表</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 终端进入hive</span></span><br><span class="line">hive</span><br><span class="line"><span class="comment"># 执行以下sql语句（正确执行应显示ok）</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 建立ODS数据库</span></span><br><span class="line"><span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> ods_huangwenzhe location &quot;/zhiyun/huangwenzhe/ods&quot;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 建立NMPA分区表</span></span><br><span class="line"><span class="comment">-- ODS的表应该是外部表</span></span><br><span class="line"><span class="comment">-- 内部表删除表的时候删除数据，外部表删除表不删除数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">external</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> ods_huangwenzhe.nmpa(</span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line">index_id string,</span><br><span class="line">title string,</span><br><span class="line">category string,</span><br><span class="line">post_date string,</span><br><span class="line">content string,</span><br><span class="line">attachment_count string,</span><br><span class="line">attachment_path string,</span><br><span class="line">link string,</span><br><span class="line">create_time string,</span><br><span class="line">update_time string</span><br><span class="line">) partitioned <span class="keyword">by</span> (dt string)</span><br><span class="line"><span class="type">row</span> format delimited fields terminated <span class="keyword">by</span> &quot;/t&quot;</span><br><span class="line">lines terminated <span class="keyword">by</span> &quot;\n&quot;</span><br><span class="line">stored <span class="keyword">as</span> orc</span><br><span class="line">location &quot;/zhiyun/huangwenzhe/ods/nmpa&quot;;</span><br></pre></td></tr></table></figure>

<p>查看表</p>
<img src="/2025/07/31/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.31%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E9%83%A8%E5%88%86%EF%BC%89/file-20250731161831503.png" class="">

<h1 id="加载数据到当月分区"><a href="#加载数据到当月分区" class="headerlink" title="加载数据到当月分区"></a>加载数据到当月分区</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">load data inpath <span class="string">&quot;/zhiyun/huangwenzhe/tmp/nmpa/*&quot;</span> overwrite into table ods_huangwenzhe.nmpa partition(dt=<span class="string">&quot;2025-07&quot;</span>);</span><br></pre></td></tr></table></figure>
<img src="/2025/07/31/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.31%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E9%83%A8%E5%88%86%EF%BC%89/file-20250731163303274.png" class="">
<h2 id="验证数据"><a href="#验证数据" class="headerlink" title="验证数据"></a>验证数据</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> ods_huangwenzhe.nmpa;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ods_huangwenzhe.nmpa limit <span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<h1 id="自动化调度"><a href="#自动化调度" class="headerlink" title="自动化调度"></a>自动化调度</h1><p>需求：每天凌晨4点自动执行这个流程<br>调度平台：<a href="http://192.168.8.67:12345/dolphinscheduler/ui/login">海豚调度平台</a><br>优势：告警机制（任务出错了需要通知）；自动重试<br>用户名&#x2F;密码：admin &#x2F; dolphinscheduler123</p>
<p>项目管理-创建项目-点击进入项目-工作流定义-创建工作流</p>
<img src="/2025/07/31/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.31%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E9%83%A8%E5%88%86%EF%BC%89/file-20250731204621169.png" class="">
<img src="/2025/07/31/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.31%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E9%83%A8%E5%88%86%EF%BC%89/file-20250731201838774.png" class="">

<p><strong>加载数据</strong>的shell脚本实现动态按月分区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">current_month=$(<span class="built_in">date</span> +<span class="string">&quot;%Y-%m&quot;</span>) <span class="comment"># 先定义变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用hive -e执行，注意变量引用要用$current_month，且外层用双引号</span></span><br><span class="line">hive -e <span class="string">&quot;load data inpath &#x27;/zhiyun/laojiaen/tmp/yaozh/*&#x27; overwrite into table ods_laojiaen.yaozh partition(dt=&#x27;<span class="variable">$current_month</span>&#x27;);&quot;</span></span><br></pre></td></tr></table></figure>

<p>成功运行</p>
<img src="/2025/07/31/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.31%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E9%83%A8%E5%88%86%EF%BC%89/file-20250731204101663.png" class="">
<img src="/2025/07/31/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.31%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E9%83%A8%E5%88%86%EF%BC%89/file-20250731205749853.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>医药器械法规AI项目（数据爬取部分）</title>
    <url>/2025/07/28/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.28%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96%E9%83%A8%E5%88%86%EF%BC%89/</url>
    <content><![CDATA[<h1 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h1><p>实现输入商品信息接口，提交商品后根据现有法律法规判断商品是否符合法律法规（暂定）</p>
<h1 id="医药器械网站"><a href="#医药器械网站" class="headerlink" title="医药器械网站"></a>医药器械网站</h1><p>NMPA：<a href="https://www.nmpa.gov.cn/ylqx/ylqxfgwj/index.html">医疗器械法规文件</a><br>CMDE：<a href="https://www.cmde.org.cn/flfg/index.html">国家药品监督管理局医疗器械技术审评中心—-法规文件</a><br>药智：<a href="https://db.yaozh.com/policies">政策法规数据库_药智数据</a></p>
<h1 id="NMPA数据爬取（国家药品监督管理局）"><a href="#NMPA数据爬取（国家药品监督管理局）" class="headerlink" title="NMPA数据爬取（国家药品监督管理局）"></a>NMPA数据爬取（国家药品监督管理局）</h1><p>首页：<a href="https://www.nmpa.gov.cn/ylqx/ylqxfgwj/index.html">医疗器械法规文件</a><br>实现效果：爬取以上链接每篇文章的【索引号、标题、分类、日期、文章内容、链接】并导入数据库，若有附件则将其下载至对应路径（\attachments\nmpa\索引号\文章标题\），数据库保存其附件路径及附件数。</p>
<h2 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> `hwz_nmpa` (</span><br><span class="line">  `id` <span class="type">INT</span> <span class="keyword">NOT NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;自增主键&#x27;</span>,</span><br><span class="line">  `index_id` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;索引号&#x27;</span>,</span><br><span class="line">  `title` <span class="type">VARCHAR</span>(<span class="number">200</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;标题&#x27;</span>,</span><br><span class="line">  `category` <span class="type">VARCHAR</span>(<span class="number">50</span>) COMMENT <span class="string">&#x27;分类&#x27;</span>,</span><br><span class="line">  `post_date` <span class="type">DATE</span> COMMENT <span class="string">&#x27;日期&#x27;</span>,</span><br><span class="line">  `content` TEXT COMMENT <span class="string">&#x27;文章内容&#x27;</span>,</span><br><span class="line">  `attachment_count` <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;附件数&#x27;</span>,</span><br><span class="line">  `attachment_path` <span class="type">VARCHAR</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;附件存储路径（D:\WorkSpace\RPA_project\attachments\nmpa\索引号\文章标题）&#x27;</span>,</span><br><span class="line">  `link` <span class="type">VARCHAR</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;文章链接&#x27;</span>,</span><br><span class="line">  `create_time` <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;记录创建时间&#x27;</span>,</span><br><span class="line">  `update_time` <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;记录更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_unicode_ci COMMENT<span class="operator">=</span><span class="string">&#x27;国家药监局医疗器械法规文件数据表&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="Python代码流程"><a href="#Python代码流程" class="headerlink" title="Python代码流程"></a>Python代码流程</h2><ol>
<li><p><strong>分页抓取</strong></p>
<ul>
<li><code>get_list()</code> 遍历分页（<code>index.html</code>、<code>index_1.html</code>…），提取每页的标题和链接。</li>
<li><strong>关键点</strong>：分页逻辑（第1页无编号，后续页为 <code>index_&#123;n-1&#125;.html</code>），每页间隔 2 秒防反爬。</li>
</ul>
</li>
<li><p><strong>详情页解析</strong></p>
<ul>
<li><code>get_page()</code> 解析单篇文章，提取：<ul>
<li><strong>核心字段</strong>：索引号（<code>index_id</code>）、标题、分类、日期、正文内容。</li>
<li><strong>基础 URL</strong>：从链接拆解出 <code>https://域名/</code>，用于拼接附件的相对路径。</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>附件下载</strong></p>
<ul>
<li><code>download_attachments()</code> 处理附件：<ul>
<li><p><strong>路径规范</strong>：<code>D:\...\nmpa\&#123;index_id&#125;\&#123;安全标题&#125;\</code>（过滤特殊字符）。</p>
</li>
<li><p><strong>防重复</strong>：检查本地文件是否已存在，跳过已下载文件。</p>
</li>
<li><p><strong>分块下载</strong>：<code>stream=True</code> 避免内存溢出，支持大文件。</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>数据存储</strong></p>
<ul>
<li><code>save_to_mysql()</code> 存入数据库：<ul>
<li><strong>去重逻辑</strong>：通过 <code>index_id + link</code> 判断记录是否存在，存在则更新，否则新增。</li>
<li><strong>事务管理</strong>：出错时回滚（<code>rollback</code>），确保数据一致性。</li>
</ul>
</li>
</ul>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> xbot</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">from</span> xbot <span class="keyword">import</span> <span class="built_in">print</span>, sleep,web</span><br><span class="line"><span class="keyword">from</span> .<span class="keyword">import</span> package</span><br><span class="line"><span class="keyword">from</span> .package <span class="keyword">import</span> variables <span class="keyword">as</span> glv</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL数据库配置</span></span><br><span class="line">DB_CONFIG = &#123;</span><br><span class="line">    <span class="string">&#x27;host&#x27;</span>: <span class="string">&#x27;192.168.200.129&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;root123456&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;database&#x27;</span>: <span class="string">&#x27;test&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;charset&#x27;</span>: <span class="string">&#x27;utf8mb4&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将数据保存到MySQL数据库</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_mysql</span>(<span class="params">index_id, title, category, post_date, content, attachment_count, link</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建数据库连接</span></span><br><span class="line">        connection = pymysql.connect(**DB_CONFIG)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 处理日期格式</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            post_date = datetime.strptime(post_date, <span class="string">&#x27;%Y-%m-%d&#x27;</span>).date()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            post_date = <span class="literal">None</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 附件存储路径（包含index_id和title）</span></span><br><span class="line">        safe_title = <span class="string">&quot;&quot;</span>.join([c <span class="keyword">for</span> c <span class="keyword">in</span> title <span class="keyword">if</span> c.isalpha() <span class="keyword">or</span> c.isdigit() <span class="keyword">or</span> c <span class="keyword">in</span> (<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;_&#x27;</span>)]).rstrip()</span><br><span class="line">        attachment_path = <span class="string">rf&quot;D:\WorkSpace\RPA_project\attachments\nmpa\&#123;index_id&#125;\&#123;safe_title&#125;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">with</span> connection.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            <span class="comment"># 检查记录是否已存在（同时判断index_id和link）</span></span><br><span class="line">            check_sql = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">            SELECT 1 FROM hwz_nmpa </span></span><br><span class="line"><span class="string">            WHERE index_id = %s AND link = %s</span></span><br><span class="line"><span class="string">            &quot;&quot;&quot;</span></span><br><span class="line">            cursor.execute(check_sql, (index_id, link))</span><br><span class="line">            exists = cursor.fetchone()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> exists:</span><br><span class="line">                <span class="comment"># 更新现有记录</span></span><br><span class="line">                sql = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                UPDATE hwz_nmpa SET </span></span><br><span class="line"><span class="string">                    title = %s,</span></span><br><span class="line"><span class="string">                    category = %s,</span></span><br><span class="line"><span class="string">                    post_date = %s,</span></span><br><span class="line"><span class="string">                    content = %s,</span></span><br><span class="line"><span class="string">                    attachment_count = %s,</span></span><br><span class="line"><span class="string">                    attachment_path = %s,</span></span><br><span class="line"><span class="string">                    update_time = CURRENT_TIMESTAMP</span></span><br><span class="line"><span class="string">                WHERE index_id = %s AND link = %s</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span></span><br><span class="line">                cursor.execute(sql, (title, category, post_date, content, </span><br><span class="line">                                  attachment_count, attachment_path, </span><br><span class="line">                                  index_id, link))</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;更新数据库记录: <span class="subst">&#123;index_id&#125;</span> - <span class="subst">&#123;link&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 插入新记录（包含link字段）</span></span><br><span class="line">                sql = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                INSERT INTO hwz_nmpa (</span></span><br><span class="line"><span class="string">                    index_id, title, category, post_date, </span></span><br><span class="line"><span class="string">                    content, attachment_count, attachment_path,</span></span><br><span class="line"><span class="string">                    link</span></span><br><span class="line"><span class="string">                ) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span></span><br><span class="line">                cursor.execute(sql, (index_id, title, category, post_date, </span><br><span class="line">                                   content, attachment_count, attachment_path,</span><br><span class="line">                                   link))</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;新增数据库记录: <span class="subst">&#123;index_id&#125;</span> - <span class="subst">&#123;link&#125;</span>&quot;</span>)</span><br><span class="line">            </span><br><span class="line">            connection.commit()</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">except</span> pymysql.Error <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;数据库操作失败: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> connection:</span><br><span class="line">            connection.rollback()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">if</span> connection:</span><br><span class="line">            connection.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载附件</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_attachments</span>(<span class="params">web_object, index_id, title, base_url</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建安全的标题目录名</span></span><br><span class="line">    safe_title = <span class="string">&quot;&quot;</span>.join([c <span class="keyword">for</span> c <span class="keyword">in</span> title <span class="keyword">if</span> c.isalpha() <span class="keyword">or</span> c.isdigit() <span class="keyword">or</span> c <span class="keyword">in</span> (<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;_&#x27;</span>)]).rstrip()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 附件保存路径</span></span><br><span class="line">    base_dir = <span class="string">r&quot;D:\WorkSpace\RPA_project\attachments&quot;</span></span><br><span class="line">    save_dir = os.path.join(base_dir, index_id, safe_title)</span><br><span class="line">    os.makedirs(save_dir, exist_ok=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 查找页面中的所有附件链接</span></span><br><span class="line">    attachment_links = web_object.find_all_by_xpath(<span class="string">&quot;//a[contains(@href, &#x27;.pdf&#x27;) or contains(@href, &#x27;.doc&#x27;) or contains(@href, &#x27;.xls&#x27;) or contains(@href, &#x27;.zip&#x27;) or contains(@href, &#x27;.rar&#x27;)]&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    downloaded_files = []</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> link_element <span class="keyword">in</span> attachment_links:</span><br><span class="line">        file_url = link_element.get_attribute(<span class="string">&quot;href&quot;</span>)</span><br><span class="line">        file_name = link_element.get_text().strip()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 处理相对路径</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> file_url.startswith(<span class="string">&quot;http&quot;</span>):</span><br><span class="line">            file_url = urljoin(base_url, file_url)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取文件名</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> file_name <span class="keyword">or</span> file_name == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            file_name = os.path.basename(file_url)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ext = os.path.splitext(file_url)[<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> file_name.endswith(ext):</span><br><span class="line">                file_name += ext</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 检查文件是否已存在</span></span><br><span class="line">        file_path = os.path.join(save_dir, file_name)</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(file_path):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;附件已存在，跳过下载: <span class="subst">&#123;file_name&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 下载文件</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;正在下载附件: <span class="subst">&#123;file_name&#125;</span>&quot;</span>)</span><br><span class="line">            response = requests.get(file_url, stream=<span class="literal">True</span>, timeout=<span class="number">30</span>)</span><br><span class="line">            response.raise_for_status()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                <span class="keyword">for</span> chunk <span class="keyword">in</span> response.iter_content(chunk_size=<span class="number">8192</span>):</span><br><span class="line">                    <span class="keyword">if</span> chunk:</span><br><span class="line">                        f.write(chunk)</span><br><span class="line">            </span><br><span class="line">            downloaded_files.append(file_name)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;附件下载完成: <span class="subst">&#123;file_name&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;下载附件失败: <span class="subst">&#123;file_name&#125;</span>, 错误: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 返回本次下载的文件列表和当前目录总文件数</span></span><br><span class="line">    total_files = <span class="built_in">len</span>(os.listdir(save_dir)) <span class="keyword">if</span> os.path.exists(save_dir) <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> downloaded_files, total_files</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取页面内容</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_page</span>(<span class="params">title, link</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;正在获取：<span class="subst">&#123;title&#125;</span>,<span class="subst">&#123;link&#125;</span>&quot;</span>)</span><br><span class="line">    web_object = web.create(link, <span class="string">&#x27;edge&#x27;</span>, load_timeout=<span class="number">20</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 获取基本URL用于处理相对路径</span></span><br><span class="line">    base_url = <span class="string">&quot;/&quot;</span>.join(link.split(<span class="string">&quot;/&quot;</span>)[:<span class="number">3</span>]) + <span class="string">&quot;/&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 索引号</span></span><br><span class="line">        index_id = web_object.find_by_xpath(<span class="string">&#x27;/html/body/div[4]/div[1]/table/tbody/tr[1]/td[2]&#x27;</span>).get_text()</span><br><span class="line">        <span class="built_in">print</span>(index_id)</span><br><span class="line">        <span class="comment"># 标题</span></span><br><span class="line">        title = web_object.find_by_xpath(<span class="string">&#x27;/html/body/div[4]/div[1]/table/tbody/tr[2]/td[2]&#x27;</span>).get_text()</span><br><span class="line">        <span class="built_in">print</span>(title)</span><br><span class="line">        <span class="comment"># 分类</span></span><br><span class="line">        category = web_object.find_by_xpath(<span class="string">&#x27;/html/body/div[4]/div[1]/table/tbody/tr[1]/td[4]&#x27;</span>).get_text()</span><br><span class="line">        <span class="built_in">print</span>(category)</span><br><span class="line">        <span class="comment"># 日期</span></span><br><span class="line">        post_date = web_object.find_by_xpath(<span class="string">&#x27;/html/body/div[4]/div[1]/table/tbody/tr[3]/td[2]&#x27;</span>).get_text()</span><br><span class="line">        <span class="built_in">print</span>(post_date)</span><br><span class="line">        <span class="comment"># 文章内容</span></span><br><span class="line">        content = web_object.find_by_xpath(<span class="string">&#x27;/html/body/div[4]/div[5]/p[1]&#x27;</span>).get_text()</span><br><span class="line">        <span class="built_in">print</span>(content)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 下载附件</span></span><br><span class="line">        downloaded_files, attachment_count = download_attachments(web_object, index_id, title, base_url)</span><br><span class="line">        <span class="keyword">if</span> downloaded_files:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;成功下载 <span class="subst">&#123;<span class="built_in">len</span>(downloaded_files)&#125;</span> 个附件，当前共有 <span class="subst">&#123;attachment_count&#125;</span> 个附件&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;没有新附件需要下载，当前共有 <span class="subst">&#123;attachment_count&#125;</span> 个附件&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 存入数据库</span></span><br><span class="line">        save_to_mysql(index_id, title, category, post_date, content, attachment_count, link)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;获取页面内容失败: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        web_object.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找列表</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_list</span>():</span><br><span class="line">    base_url = <span class="string">&#x27;https://www.nmpa.gov.cn/ylqx/ylqxfgwj/index&#x27;</span></span><br><span class="line">    max_page = <span class="number">44</span>  <span class="comment"># 爬取44页（包括首页）</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, max_page + <span class="number">1</span>):</span><br><span class="line">        <span class="comment"># 构建页面URL（第1页是index.html，第2页开始是index_1.html）</span></span><br><span class="line">        url = <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>.html&quot;</span> <span class="keyword">if</span> page == <span class="number">1</span> <span class="keyword">else</span> <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>_<span class="subst">&#123;page-<span class="number">1</span>&#125;</span>.html&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n=== 开始爬取第 <span class="subst">&#123;page&#125;</span>/<span class="subst">&#123;max_page&#125;</span> 页 ===&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取页面并提取条目元素</span></span><br><span class="line">        web_object = web.create(url, <span class="string">&#x27;edge&#x27;</span>, load_timeout=<span class="number">20</span>)</span><br><span class="line">        elements = web_object.find_all_by_xpath(<span class="string">&quot;/html/body/div[5]/div/div[2]/ul/li/a&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 循环处理当前页所有条目</span></span><br><span class="line">        <span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">            title = element.get_text().strip()</span><br><span class="line">            link = element.get_attribute(<span class="string">&quot;href&quot;</span>).replace(<span class="string">&quot;../../&quot;</span>, <span class="string">&quot;https://www.nmpa.gov.cn/&quot;</span>)</span><br><span class="line">            <span class="comment"># 爬取页面内容</span></span><br><span class="line">            get_page(title, link)</span><br><span class="line">        </span><br><span class="line">        web_object.close()</span><br><span class="line">        sleep(<span class="number">2</span>)  <span class="comment"># 每页间隔2秒避免请求过快</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">args</span>):</span><br><span class="line">    get_list()</span><br></pre></td></tr></table></figure>

<h2 id="效果验证"><a href="#效果验证" class="headerlink" title="效果验证"></a>效果验证</h2><p><img src="/7.28%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96%E9%83%A8%E5%88%86%EF%BC%89/file-20250728193239397.png"><img src="/7.28%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96%E9%83%A8%E5%88%86%EF%BC%89/file-20250728193800011.png"></p>
<h1 id="CMDE数据爬取（医疗器械技术评审中心）"><a href="#CMDE数据爬取（医疗器械技术评审中心）" class="headerlink" title="CMDE数据爬取（医疗器械技术评审中心）"></a>CMDE数据爬取（医疗器械技术评审中心）</h1><p>首页：<a href="https://www.cmde.org.cn/flfg/index.html">国家药品监督管理局医疗器械技术审评中心—-法规文件</a><br>实现效果：爬取以上链接每篇文章的【标题、文章来源、发布日期、文章内容、链接】并导入数据库，若有附件则将其下载至对应路径（\attachments\cmde\文章标题\），数据库保存其附件路径及附件数。<br><em>（为节省时间这里仅爬取5页作验证测试）</em></p>
<h2 id="建表-1"><a href="#建表-1" class="headerlink" title="建表"></a>建表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> `hwz_cmde` (</span><br><span class="line">  `id` <span class="type">INT</span> <span class="keyword">NOT NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;自增主键&#x27;</span>,</span><br><span class="line">  `title` <span class="type">VARCHAR</span>(<span class="number">200</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;标题&#x27;</span>,</span><br><span class="line">  `source` <span class="type">VARCHAR</span>(<span class="number">50</span>) COMMENT <span class="string">&#x27;文章来源&#x27;</span>,</span><br><span class="line">  `post_date` <span class="type">DATE</span> COMMENT <span class="string">&#x27;发布时间&#x27;</span>,</span><br><span class="line">  `content` TEXT COMMENT <span class="string">&#x27;文章内容&#x27;</span>,</span><br><span class="line">  `attachment_count` <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;附件数&#x27;</span>,</span><br><span class="line">  `attachment_path` <span class="type">VARCHAR</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;附件存储路径（D:\WorkSpace\RPA_project\attachments\cmde\标题\）&#x27;</span>,</span><br><span class="line">  `link` <span class="type">VARCHAR</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;文章链接&#x27;</span>,</span><br><span class="line">  `create_time` <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;记录创建时间&#x27;</span>,</span><br><span class="line">  `update_time` <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;记录更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_unicode_ci COMMENT<span class="operator">=</span><span class="string">&#x27;国家药监局医疗器械法规文件数据表&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="Python代码流程-1"><a href="#Python代码流程-1" class="headerlink" title="Python代码流程"></a>Python代码流程</h2><p>流程与nmpa一致，仅需对抓取方式及入库相关稍作修改</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> xbot</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">from</span> xbot <span class="keyword">import</span> <span class="built_in">print</span>, sleep,web</span><br><span class="line"><span class="keyword">from</span> .<span class="keyword">import</span> package</span><br><span class="line"><span class="keyword">from</span> .package <span class="keyword">import</span> variables <span class="keyword">as</span> glv</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL数据库配置</span></span><br><span class="line">DB_CONFIG = &#123;</span><br><span class="line">    <span class="string">&#x27;host&#x27;</span>: <span class="string">&#x27;192.168.200.129&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;root123456&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;database&#x27;</span>: <span class="string">&#x27;test&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;charset&#x27;</span>: <span class="string">&#x27;utf8mb4&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将数据保存到MySQL数据库</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_mysql</span>(<span class="params">title, source, post_date, content, attachment_count, link</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建数据库连接</span></span><br><span class="line">        connection = pymysql.connect(**DB_CONFIG)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 处理日期格式</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            post_date = datetime.strptime(post_date, <span class="string">&#x27;%Y-%m-%d&#x27;</span>).date()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            post_date = <span class="literal">None</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 附件存储路径（包含index_id和title）</span></span><br><span class="line">        safe_title = <span class="string">&quot;&quot;</span>.join([c <span class="keyword">for</span> c <span class="keyword">in</span> title <span class="keyword">if</span> c.isalpha() <span class="keyword">or</span> c.isdigit() <span class="keyword">or</span> c <span class="keyword">in</span> (<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;_&#x27;</span>)]).rstrip()</span><br><span class="line">        attachment_path = <span class="string">rf&quot;D:\WorkSpace\RPA_project\attachments\cmde\&#123;safe_title&#125;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">with</span> connection.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            <span class="comment"># 检查记录是否已存在（同时判断index_id和link）</span></span><br><span class="line">            check_sql = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">            SELECT 1 FROM hwz_cmde</span></span><br><span class="line"><span class="string">            WHERE link = %s</span></span><br><span class="line"><span class="string">            &quot;&quot;&quot;</span></span><br><span class="line">            cursor.execute(check_sql,link)</span><br><span class="line">            exists = cursor.fetchone()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> exists:</span><br><span class="line">                <span class="comment"># 更新现有记录</span></span><br><span class="line">                sql = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                UPDATE hwz_cmde SET </span></span><br><span class="line"><span class="string">                    title = %s,</span></span><br><span class="line"><span class="string">                    source = %s,</span></span><br><span class="line"><span class="string">                    post_date = %s,</span></span><br><span class="line"><span class="string">                    content = %s,</span></span><br><span class="line"><span class="string">                    attachment_count = %s,</span></span><br><span class="line"><span class="string">                    attachment_path = %s,</span></span><br><span class="line"><span class="string">                    update_time = CURRENT_TIMESTAMP</span></span><br><span class="line"><span class="string">                WHERE link = %s</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span></span><br><span class="line">                cursor.execute(sql, (title, source, post_date, content, </span><br><span class="line">                                  attachment_count, attachment_path, link))</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;更新数据库记录: <span class="subst">&#123;title&#125;</span> - <span class="subst">&#123;link&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 插入新记录（包含link字段）</span></span><br><span class="line">                sql = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                INSERT INTO hwz_cmde (</span></span><br><span class="line"><span class="string">                    title, source, post_date, </span></span><br><span class="line"><span class="string">                    content, attachment_count, attachment_path,</span></span><br><span class="line"><span class="string">                    link</span></span><br><span class="line"><span class="string">                ) VALUES (%s, %s, %s, %s, %s, %s, %s)</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span></span><br><span class="line">                cursor.execute(sql, (title, source, post_date, </span><br><span class="line">                                   content, attachment_count, attachment_path,</span><br><span class="line">                                   link))</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;新增数据库记录: <span class="subst">&#123;title&#125;</span> - <span class="subst">&#123;link&#125;</span>&quot;</span>)</span><br><span class="line">            </span><br><span class="line">            connection.commit()</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">except</span> pymysql.Error <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;数据库操作失败: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> connection:</span><br><span class="line">            connection.rollback()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">if</span> connection:</span><br><span class="line">            connection.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载附件</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_attachments</span>(<span class="params">web_object, title, base_url</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建安全的标题目录名</span></span><br><span class="line">    safe_title = <span class="string">&quot;&quot;</span>.join([c <span class="keyword">for</span> c <span class="keyword">in</span> title <span class="keyword">if</span> c.isalpha() <span class="keyword">or</span> c.isdigit() <span class="keyword">or</span> c <span class="keyword">in</span> (<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;_&#x27;</span>)]).rstrip()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 附件保存路径</span></span><br><span class="line">    base_dir = <span class="string">r&quot;D:\WorkSpace\RPA_project\attachments\cmde&quot;</span></span><br><span class="line">    save_dir = os.path.join(base_dir, safe_title)</span><br><span class="line">    os.makedirs(save_dir, exist_ok=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 查找页面中的所有附件链接</span></span><br><span class="line">    attachment_links = web_object.find_all_by_xpath(<span class="string">&quot;//a[contains(@href, &#x27;.pdf&#x27;) or contains(@href, &#x27;.doc&#x27;) or contains(@href, &#x27;.xls&#x27;) or contains(@href, &#x27;.zip&#x27;) or contains(@href, &#x27;.rar&#x27;)]&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    downloaded_files = []</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> link_element <span class="keyword">in</span> attachment_links:</span><br><span class="line">        file_url = link_element.get_attribute(<span class="string">&quot;href&quot;</span>)</span><br><span class="line">        file_name = link_element.get_text().strip()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 处理相对路径</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> file_url.startswith(<span class="string">&quot;http&quot;</span>):</span><br><span class="line">            file_url = urljoin(base_url, file_url)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取文件名</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> file_name <span class="keyword">or</span> file_name == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            file_name = os.path.basename(file_url)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ext = os.path.splitext(file_url)[<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> file_name.endswith(ext):</span><br><span class="line">                file_name += ext</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 检查文件是否已存在</span></span><br><span class="line">        file_path = os.path.join(save_dir, file_name)</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(file_path):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;附件已存在，跳过下载: <span class="subst">&#123;file_name&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 下载文件</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;正在下载附件: <span class="subst">&#123;file_name&#125;</span>&quot;</span>)</span><br><span class="line">            response = requests.get(file_url, stream=<span class="literal">True</span>, timeout=<span class="number">30</span>)</span><br><span class="line">            response.raise_for_status()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                <span class="keyword">for</span> chunk <span class="keyword">in</span> response.iter_content(chunk_size=<span class="number">8192</span>):</span><br><span class="line">                    <span class="keyword">if</span> chunk:</span><br><span class="line">                        f.write(chunk)</span><br><span class="line">            </span><br><span class="line">            downloaded_files.append(file_name)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;附件下载完成: <span class="subst">&#123;file_name&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;下载附件失败: <span class="subst">&#123;file_name&#125;</span>, 错误: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 返回本次下载的文件列表和当前目录总文件数</span></span><br><span class="line">    total_files = <span class="built_in">len</span>(os.listdir(save_dir)) <span class="keyword">if</span> os.path.exists(save_dir) <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> downloaded_files, total_files</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取页面内容</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_page</span>(<span class="params">title, link</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;正在获取：<span class="subst">&#123;title&#125;</span>,<span class="subst">&#123;link&#125;</span>&quot;</span>)</span><br><span class="line">    web_object = web.create(link, <span class="string">&#x27;edge&#x27;</span>, load_timeout=<span class="number">20</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 获取基本URL用于处理相对路径</span></span><br><span class="line">    base_url = <span class="string">&quot;/&quot;</span>.join(link.split(<span class="string">&quot;/&quot;</span>)[:<span class="number">3</span>]) + <span class="string">&quot;/&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 标题</span></span><br><span class="line">        title = web_object.find_by_xpath(<span class="string">&#x27;/html/body/div[3]/h2&#x27;</span>).get_text()</span><br><span class="line">        <span class="built_in">print</span>(title)</span><br><span class="line">        <span class="comment"># 文章来源</span></span><br><span class="line">        sad = web_object.find_by_xpath(<span class="string">&#x27;/html/body/div[3]/div[2]&#x27;</span>).get_text()</span><br><span class="line">        <span class="comment"># 提取文章来源</span></span><br><span class="line">        source_match = re.search(<span class="string">r&#x27;文章来源：(.+?) 发布时间：&#x27;</span>, sad)</span><br><span class="line">        source = source_match.group(<span class="number">1</span>) <span class="keyword">if</span> source_match <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">        <span class="built_in">print</span>(source)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 提取发布时间</span></span><br><span class="line">        date_match = re.search(<span class="string">r&#x27;发布时间：(\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;)&#x27;</span>, sad)</span><br><span class="line">        post_date = date_match.group(<span class="number">1</span>) <span class="keyword">if</span> date_match <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">        <span class="built_in">print</span>(post_date)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 文章内容</span></span><br><span class="line">        content = web_object.find_by_xpath(<span class="string">&#x27;/html/body/div[3]/div[3]&#x27;</span>).get_text()</span><br><span class="line">        <span class="built_in">print</span>(content)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 下载附件</span></span><br><span class="line">        downloaded_files, attachment_count = download_attachments(web_object, title, base_url)</span><br><span class="line">        <span class="keyword">if</span> downloaded_files:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;成功下载 <span class="subst">&#123;<span class="built_in">len</span>(downloaded_files)&#125;</span> 个附件，当前共有 <span class="subst">&#123;attachment_count&#125;</span> 个附件&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;没有新附件需要下载，当前共有 <span class="subst">&#123;attachment_count&#125;</span> 个附件&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 存入数据库</span></span><br><span class="line">        save_to_mysql(title, source, post_date, content, attachment_count, link)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;获取页面内容失败: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        web_object.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找列表</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_list</span>():</span><br><span class="line">    base_url = <span class="string">&#x27;https://www.cmde.org.cn/flfg/index&#x27;</span></span><br><span class="line">    max_page = <span class="number">13</span>  <span class="comment"># 爬取13页（包括首页）</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, max_page + <span class="number">1</span>):</span><br><span class="line">        <span class="comment"># 构建页面URL（第1页是index.html，第2页开始是index_1.html）</span></span><br><span class="line">        url = <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>.html&quot;</span> <span class="keyword">if</span> page == <span class="number">1</span> <span class="keyword">else</span> <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>_<span class="subst">&#123;page-<span class="number">1</span>&#125;</span>.html&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;开始爬取第 <span class="subst">&#123;page&#125;</span>/<span class="subst">&#123;max_page&#125;</span> 页&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取页面并提取条目元素</span></span><br><span class="line">        web_object = web.create(url, <span class="string">&#x27;edge&#x27;</span>, load_timeout=<span class="number">20</span>)</span><br><span class="line">        elements = web_object.find_all_by_xpath(<span class="string">&quot;/html/body/div[3]/div[3]/div[2]/ul/li/a&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 循环处理当前页所有条目</span></span><br><span class="line">        <span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">            title = element.get_text().strip()</span><br><span class="line">            link = element.get_attribute(<span class="string">&quot;href&quot;</span>).replace(<span class="string">&quot;../&quot;</span>, <span class="string">&quot;https://www.cmde.org.cn/&quot;</span>)</span><br><span class="line">            <span class="comment"># 爬取页面内容</span></span><br><span class="line">            get_page(title, link)</span><br><span class="line">            <span class="comment"># print(title, link)</span></span><br><span class="line">        </span><br><span class="line">        web_object.close()</span><br><span class="line">        sleep(<span class="number">2</span>)  <span class="comment"># 每页间隔2秒避免请求过快</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">args</span>):</span><br><span class="line">    get_list()</span><br></pre></td></tr></table></figure>

<h2 id="效果验证-1"><a href="#效果验证-1" class="headerlink" title="效果验证"></a>效果验证</h2><img src="/2025/07/28/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.28%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96%E9%83%A8%E5%88%86%EF%BC%89/file-20250729000315913.png" class="">

<h1 id="药智数据爬取"><a href="#药智数据爬取" class="headerlink" title="药智数据爬取"></a>药智数据爬取</h1><p>首页：<a href="https://db.yaozh.com/policies">政策法规数据库_药智数据</a><br>实现效果：爬取以上链接每篇文章的【标题、发布部门、发布日期、发文字号、效力级别、时效性、文章内容、链接】并导入数据库，若有附件则将其下载至对应路径（\attachments\yaozhi\文章标题\），数据库保存其附件路径及附件数。</p>
<h2 id="建表-2"><a href="#建表-2" class="headerlink" title="建表"></a>建表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> `hwz_yaozhi` (</span><br><span class="line">  `id` <span class="type">INT</span> <span class="keyword">NOT NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;自增主键&#x27;</span>,</span><br><span class="line">  `title` <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;标题&#x27;</span>,</span><br><span class="line">  `dept` <span class="type">VARCHAR</span>(<span class="number">50</span>) COMMENT <span class="string">&#x27;发布部门&#x27;</span>,</span><br><span class="line">  `post_date` <span class="type">DATE</span> COMMENT <span class="string">&#x27;发布日期&#x27;</span>,</span><br><span class="line">  `zihao` <span class="type">VARCHAR</span>(<span class="number">50</span>) COMMENT <span class="string">&#x27;发文字号&#x27;</span>,</span><br><span class="line">  `level` <span class="type">VARCHAR</span>(<span class="number">50</span>) COMMENT <span class="string">&#x27;效力级别&#x27;</span>,</span><br><span class="line">  `timeliness` <span class="type">VARCHAR</span>(<span class="number">50</span>) COMMENT <span class="string">&#x27;时效性&#x27;</span>,</span><br><span class="line">  `content` TEXT COMMENT <span class="string">&#x27;文章内容&#x27;</span>,</span><br><span class="line">  `attachment_count` <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;附件数&#x27;</span>,</span><br><span class="line">  `attachment_path` <span class="type">VARCHAR</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;附件存储路径（D:\WorkSpace\RPA_project\attachments\yaozhi\标题\）&#x27;</span>,</span><br><span class="line">  `link` <span class="type">VARCHAR</span>(<span class="number">255</span>) COMMENT <span class="string">&#x27;文章链接&#x27;</span>,</span><br><span class="line">  `create_time` <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;记录创建时间&#x27;</span>,</span><br><span class="line">  `update_time` <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;记录更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_unicode_ci COMMENT<span class="operator">=</span><span class="string">&#x27;药智数据表&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="Python代码流程-2"><a href="#Python代码流程-2" class="headerlink" title="Python代码流程"></a>Python代码流程</h2><ol>
<li><p><strong>列表页处理</strong>：</p>
<ul>
<li><code>get_list()</code>函数遍历指定页数的政策列表</li>
<li>每页构建URL：<code>https://db.yaozh.com/policies?p=&#123;page&#125;.html</code></li>
<li>使用XPath定位表格行(<code>tr</code>)元素</li>
<li>从每行提取4个关键信息：<ul>
<li>标题</li>
<li>链接（拼接完整URL）</li>
<li>发布部门</li>
<li>发布日期</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>详情页处理</strong>：</p>
<ul>
<li>对每个列表项调用<code>get_page()</code></li>
<li>包含重试机制（最多4次尝试加载页面）</li>
<li>提取关键信息：<ul>
<li>发文字号</li>
<li>效力级别</li>
<li>时效性</li>
<li>文章内容（多种尝试策略）</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>附件处理</strong>：</p>
<ul>
<li>调用<code>download_attachments()</code>下载所有附件</li>
<li>创建安全目录名（过滤非法字符+长度限制）</li>
<li>下载PDF&#x2F;DOC&#x2F;XLS&#x2F;ZIP&#x2F;RAR格式文件</li>
<li>处理相对路径和文件名</li>
</ul>
</li>
<li><p><strong>数据存储</strong>：</p>
<ul>
<li>调用<code>save_to_mysql()</code>保存所有数据到数据库</li>
<li>包含更新&#x2F;插入逻辑（基于链接判断是否为同一条数据）</li>
<li>自动截断超长字段（标题255字符限制）</li>
</ul>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> xbot</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> xbot <span class="keyword">import</span> <span class="built_in">print</span>, sleep,web</span><br><span class="line"><span class="keyword">from</span> .<span class="keyword">import</span> package</span><br><span class="line"><span class="keyword">from</span> .package <span class="keyword">import</span> variables <span class="keyword">as</span> glv</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL数据库配置</span></span><br><span class="line">DB_CONFIG = &#123;</span><br><span class="line">    <span class="string">&#x27;host&#x27;</span>: <span class="string">&#x27;192.168.200.129&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;root123456&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;database&#x27;</span>: <span class="string">&#x27;test&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;charset&#x27;</span>: <span class="string">&#x27;utf8mb4&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将数据保存到MySQL数据库</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_mysql</span>(<span class="params">title, dept, post_date, zihao, level, timeliness, content, attachment_count, attachment_path, link</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 创建数据库连接</span></span><br><span class="line">        connection = pymysql.connect(**DB_CONFIG)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 处理日期格式</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            post_date = datetime.strptime(post_date, <span class="string">&#x27;%Y-%m-%d&#x27;</span>).date()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            post_date = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 截断标题到255字符（保留最后255字符）</span></span><br><span class="line">        title = title[:<span class="number">255</span>] <span class="keyword">if</span> <span class="built_in">len</span>(title) &gt; <span class="number">255</span> <span class="keyword">else</span> title</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">with</span> connection.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">            <span class="comment"># 检查记录是否已存在（同时判断index_id和link）</span></span><br><span class="line">            check_sql = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">            SELECT 1 FROM hwz_yaozhi</span></span><br><span class="line"><span class="string">            WHERE link = %s</span></span><br><span class="line"><span class="string">            &quot;&quot;&quot;</span></span><br><span class="line">            cursor.execute(check_sql,link)</span><br><span class="line">            exists = cursor.fetchone()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> exists:</span><br><span class="line">                <span class="comment"># 更新现有记录</span></span><br><span class="line">                sql = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                UPDATE hwz_yaozhi SET </span></span><br><span class="line"><span class="string">                    title = %s,</span></span><br><span class="line"><span class="string">                    dept = %s,</span></span><br><span class="line"><span class="string">                    post_date = %s,</span></span><br><span class="line"><span class="string">                    zihao = %s,</span></span><br><span class="line"><span class="string">                    level = %s,</span></span><br><span class="line"><span class="string">                    timeliness = %s,</span></span><br><span class="line"><span class="string">                    content = %s,</span></span><br><span class="line"><span class="string">                    attachment_count = %s,</span></span><br><span class="line"><span class="string">                    attachment_path = %s,</span></span><br><span class="line"><span class="string">                    update_time = CURRENT_TIMESTAMP</span></span><br><span class="line"><span class="string">                WHERE link = %s</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span></span><br><span class="line">                cursor.execute(sql, (title, dept, post_date, zihao, level, timeliness, content, </span><br><span class="line">                                  attachment_count, attachment_path, link))</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;更新数据库记录: <span class="subst">&#123;title&#125;</span> - <span class="subst">&#123;link&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 插入新记录（包含link字段）</span></span><br><span class="line">                sql = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                INSERT INTO hwz_yaozhi (</span></span><br><span class="line"><span class="string">                    title, dept, post_date, zihao, level, timeliness,</span></span><br><span class="line"><span class="string">                    content, attachment_count, attachment_path,</span></span><br><span class="line"><span class="string">                    link</span></span><br><span class="line"><span class="string">                ) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s)</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span></span><br><span class="line">                cursor.execute(sql, (title, dept, post_date, zihao, level, timeliness,</span><br><span class="line">                                   content, attachment_count, attachment_path,</span><br><span class="line">                                   link))</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;新增数据库记录: <span class="subst">&#123;title&#125;</span> - <span class="subst">&#123;link&#125;</span>&quot;</span>)</span><br><span class="line">            </span><br><span class="line">            connection.commit()</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">except</span> pymysql.Error <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;数据库操作失败: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> connection:</span><br><span class="line">            connection.rollback()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">if</span> connection:</span><br><span class="line">            connection.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载附件</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_attachments</span>(<span class="params">web_object, title, base_url</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建安全的标题目录名</span></span><br><span class="line">    safe_title = <span class="string">&quot;&quot;</span>.join([c <span class="keyword">for</span> c <span class="keyword">in</span> title <span class="keyword">if</span> c.isalpha() <span class="keyword">or</span> c.isdigit() <span class="keyword">or</span> c <span class="keyword">in</span> (<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;_&#x27;</span>)]).rstrip()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 2. 限制目录名长度（Windows路径最大260字符，这里保留100字符）</span></span><br><span class="line">    safe_title = safe_title[:<span class="number">100</span>] <span class="keyword">if</span> <span class="built_in">len</span>(safe_title) &gt; <span class="number">100</span> <span class="keyword">else</span> safe_title</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 3. 去除首尾空格和点（避免创建&quot;.&quot;或&quot;..&quot;目录）</span></span><br><span class="line">    safe_title = safe_title.strip().strip(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 附件保存路径</span></span><br><span class="line">    base_dir = <span class="string">r&quot;D:\WorkSpace\RPA_project\attachments\yaozhi&quot;</span></span><br><span class="line">    save_dir = os.path.join(base_dir, safe_title)</span><br><span class="line">    os.makedirs(save_dir, exist_ok=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 查找页面中的所有附件链接</span></span><br><span class="line">    attachment_links = web_object.find_all_by_xpath(<span class="string">&quot;//a[contains(@href, &#x27;.pdf&#x27;) or contains(@href, &#x27;.doc&#x27;) or contains(@href, &#x27;.xls&#x27;) or contains(@href, &#x27;.zip&#x27;) or contains(@href, &#x27;.rar&#x27;)]&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    downloaded_files = []</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> link_element <span class="keyword">in</span> attachment_links:</span><br><span class="line">        file_url = link_element.get_attribute(<span class="string">&quot;href&quot;</span>)</span><br><span class="line">        file_name = link_element.get_text().strip()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 处理相对路径</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> file_url.startswith(<span class="string">&quot;http&quot;</span>):</span><br><span class="line">            file_url = urljoin(base_url, file_url)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取文件名</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> file_name <span class="keyword">or</span> file_name == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            file_name = os.path.basename(file_url)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ext = os.path.splitext(file_url)[<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> file_name.endswith(ext):</span><br><span class="line">                file_name += ext</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 检查文件是否已存在</span></span><br><span class="line">        file_path = os.path.join(save_dir, file_name)</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(file_path):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;附件已存在，跳过下载: <span class="subst">&#123;file_name&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 下载文件</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;正在下载附件: <span class="subst">&#123;file_name&#125;</span>&quot;</span>)</span><br><span class="line">            response = requests.get(file_url, stream=<span class="literal">True</span>, timeout=<span class="number">30</span>)</span><br><span class="line">            response.raise_for_status()</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                <span class="keyword">for</span> chunk <span class="keyword">in</span> response.iter_content(chunk_size=<span class="number">8192</span>):</span><br><span class="line">                    <span class="keyword">if</span> chunk:</span><br><span class="line">                        f.write(chunk)</span><br><span class="line">            </span><br><span class="line">            downloaded_files.append(file_name)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;附件下载完成: <span class="subst">&#123;file_name&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;下载附件失败: <span class="subst">&#123;file_name&#125;</span>, 错误: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 返回本次下载的文件列表、当前目录总文件数、文件路径</span></span><br><span class="line">    total_files = <span class="built_in">len</span>(os.listdir(save_dir)) <span class="keyword">if</span> os.path.exists(save_dir) <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> downloaded_files, total_files, save_dir</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取页面内容</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_page</span>(<span class="params">title, link, dept, post_date</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;正在获取：<span class="subst">&#123;title&#125;</span>,<span class="subst">&#123;link&#125;</span>&quot;</span>)</span><br><span class="line">    base_url = <span class="string">&quot;/&quot;</span>.join(link.split(<span class="string">&quot;/&quot;</span>)[:<span class="number">3</span>]) + <span class="string">&quot;/&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重试配置</span></span><br><span class="line">    MAX_RETRIES = <span class="number">3</span>  <span class="comment"># 最大重试次数</span></span><br><span class="line">    <span class="keyword">for</span> attempt <span class="keyword">in</span> <span class="built_in">range</span>(MAX_RETRIES + <span class="number">1</span>):  <span class="comment"># 0,1,2,3 共4次尝试（首次+3次重试）</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            web_object = web.create(link, <span class="string">&#x27;edge&#x27;</span>, load_timeout=<span class="number">30</span>)</span><br><span class="line">            <span class="comment"># 成功则跳出循环</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">if</span> attempt &lt; MAX_RETRIES:</span><br><span class="line">                <span class="comment"># 等待一段时间后重试</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;页面加载失败，第 <span class="subst">&#123;attempt+<span class="number">1</span>&#125;</span> 次重试: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">                sleep(<span class="number">2</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 最后一次尝试失败</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;页面加载超时，已尝试 <span class="subst">&#123;MAX_RETRIES+<span class="number">1</span>&#125;</span> 次: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">                web_object = <span class="literal">None</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化变量</span></span><br><span class="line">    zihao = <span class="string">&quot;&quot;</span></span><br><span class="line">    level = <span class="string">&quot;&quot;</span></span><br><span class="line">    timeliness = <span class="string">&quot;&quot;</span></span><br><span class="line">    content = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 获取所有信息项容器</span></span><br><span class="line">        info_items = web_object.find_all_by_xpath(<span class="string">&#x27;//div[@class=&quot;manual&quot;]/div[contains(@class, &quot;content&quot;)]&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> info_items:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="comment"># 获取span元素</span></span><br><span class="line">                span = item.find_by_xpath(<span class="string">&#x27;./span&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> span:</span><br><span class="line">                    span_text = span.get_text().strip()</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment"># 提取实际值</span></span><br><span class="line">                    <span class="keyword">if</span> span_text.startswith(<span class="string">&quot;【&quot;</span>):</span><br><span class="line">                        <span class="comment"># 移除span文本，获取剩余文本</span></span><br><span class="line">                        item_text = item.get_text().strip()</span><br><span class="line">                        value = item_text.replace(span_text, <span class="string">&quot;&quot;</span>, <span class="number">1</span>).strip()</span><br><span class="line">                        </span><br><span class="line">                        <span class="comment"># 分类处理</span></span><br><span class="line">                        <span class="keyword">if</span> <span class="string">&quot;发文字号&quot;</span> <span class="keyword">in</span> span_text:</span><br><span class="line">                            zihao = value</span><br><span class="line">                        <span class="keyword">elif</span> <span class="string">&quot;效力级别&quot;</span> <span class="keyword">in</span> span_text:</span><br><span class="line">                            level = value</span><br><span class="line">                        <span class="keyword">elif</span> <span class="string">&quot;时效&quot;</span> <span class="keyword">in</span> span_text.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>):</span><br><span class="line">                            timeliness = value</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="comment"># 忽略没有span的项</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;提取信息项时出错: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提取文章内容</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 尝试第一种格式：class=&quot;text&quot;</span></span><br><span class="line">        content_div = web_object.find_by_xpath(<span class="string">&#x27;//div[@class=&quot;text&quot;]&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> content_div:</span><br><span class="line">            content = content_div.get_text().strip()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 尝试第二种格式：class=&quot;new_detail_content&quot;</span></span><br><span class="line">            content_div = web_object.find_by_xpath(<span class="string">&#x27;//div[@class=&quot;new_detail_content&quot;]&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> content_div:</span><br><span class="line">                content = content_div.get_text().strip()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="comment"># 尝试第三种格式：class=&quot;text&quot;在div内</span></span><br><span class="line">                content_div = web_object.find_by_xpath(<span class="string">&#x27;//div[contains(@class, &quot;content&quot;)]//div[@class=&quot;text&quot;]&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> content_div:</span><br><span class="line">                    content = content_div.get_text().strip()</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="comment"># 尝试第四种格式：class=&quot;new_detail_content&quot;在div内</span></span><br><span class="line">                    content_div = web_object.find_by_xpath(<span class="string">&#x27;//div[contains(@class, &quot;content&quot;)]//div[@class=&quot;new_detail_content&quot;]&#x27;</span>)</span><br><span class="line">                    <span class="keyword">if</span> content_div:</span><br><span class="line">                        content = content_div.get_text().strip()</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="comment"># 最后尝试：直接获取整个manual内容</span></span><br><span class="line">                        manual_div = web_object.find_by_xpath(<span class="string">&#x27;//div[@class=&quot;manual&quot;]&#x27;</span>)</span><br><span class="line">                        <span class="keyword">if</span> manual_div:</span><br><span class="line">                            content = manual_div.get_text().strip()</span><br><span class="line">                    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;提取内容时出错: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">                        content = <span class="string">&quot;无法提取内容&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印结果</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;发文字号: <span class="subst">&#123;zihao&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;效力级别: <span class="subst">&#123;level&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;时效性: <span class="subst">&#123;timeliness&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;文章内容: <span class="subst">&#123;content&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 下载附件</span></span><br><span class="line">    downloaded_files, attachment_count, attachment_path = download_attachments(web_object, title, base_url)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;已创建文件路径：<span class="subst">&#123;attachment_path&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> downloaded_files:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;成功下载 <span class="subst">&#123;<span class="built_in">len</span>(downloaded_files)&#125;</span> 个附件，当前共有 <span class="subst">&#123;attachment_count&#125;</span> 个附件&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;没有新附件需要下载，当前共有 <span class="subst">&#123;attachment_count&#125;</span> 个附件&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 存入数据库</span></span><br><span class="line">    save_to_mysql(title, dept, post_date, zihao, level, timeliness, content, attachment_count, attachment_path, link)</span><br><span class="line"></span><br><span class="line">    web_object.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找列表</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_list</span>():</span><br><span class="line">    base_url = <span class="string">&#x27;https://db.yaozh.com/policies&#x27;</span></span><br><span class="line">    max_page = <span class="number">3</span>  <span class="comment"># 爬取3页（包括首页）</span></span><br><span class="line">    <span class="comment"># 想爬完可以改为1289，3页爬了一个小时，爬完预计18天=、= </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, max_page + <span class="number">1</span>):</span><br><span class="line">        <span class="comment"># 构建页面URL（第1页是index.html，第2页开始是index_1.html）</span></span><br><span class="line">        url = <span class="string">f&quot;<span class="subst">&#123;base_url&#125;</span>?p=<span class="subst">&#123;page&#125;</span>.html&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;开始爬取第 <span class="subst">&#123;page&#125;</span>/<span class="subst">&#123;max_page&#125;</span> 页&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 获取页面并提取条目元素</span></span><br><span class="line">        web_object = web.create(url, <span class="string">&#x27;edge&#x27;</span>, load_timeout=<span class="number">30</span>)</span><br><span class="line">        elements = web_object.find_all_by_xpath(<span class="string">&quot;/html/body/div[7]/div[6]/div/div[2]/table/tbody/tr&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 循环处理当前页所有条目</span></span><br><span class="line">        <span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">            <span class="comment"># 标题</span></span><br><span class="line">            title = element.child_at(<span class="number">0</span>).get_text().strip()</span><br><span class="line">            <span class="comment"># 链接</span></span><br><span class="line">            link = <span class="string">&quot;https://db.yaozh.com&quot;</span> + element.find_by_xpath(<span class="string">&quot;./th/a&quot;</span>).get_attribute(<span class="string">&quot;href&quot;</span>)</span><br><span class="line">            <span class="comment"># 发布部门</span></span><br><span class="line">            dept = element.child_at(<span class="number">1</span>).get_text().strip()</span><br><span class="line">            <span class="comment"># 发布日期</span></span><br><span class="line">            post_date = element.child_at(<span class="number">2</span>).get_text().strip()</span><br><span class="line">            <span class="comment"># 爬取页面内容</span></span><br><span class="line">            get_page(title, link, dept, post_date)</span><br><span class="line">        </span><br><span class="line">        web_object.close()</span><br><span class="line">        sleep(<span class="number">2</span>)  <span class="comment"># 每页间隔2秒避免请求过快</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">args</span>):</span><br><span class="line">    get_list()</span><br></pre></td></tr></table></figure>

<h2 id="效果验证-2"><a href="#效果验证-2" class="headerlink" title="效果验证"></a>效果验证</h2><img src="/2025/07/28/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/7.28%20%E5%8C%BB%E8%8D%AF%E5%99%A8%E6%A2%B0%E6%B3%95%E8%A7%84AI%E9%A1%B9%E7%9B%AE%EF%BC%88%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96%E9%83%A8%E5%88%86%EF%BC%89/file-20250729183521550.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>影刀</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>医药项目：数据清洗、合并</title>
    <url>/2025/08/04/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/8.4%20%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97%E3%80%81%E5%90%88%E5%B9%B6%EF%BC%88SparkSQL%EF%BC%89/</url>
    <content><![CDATA[<h1 id="SparkSQL"><a href="#SparkSQL" class="headerlink" title="SparkSQL"></a>SparkSQL</h1><p>Spark SQL 是 Apache Spark 生态系统中的一个核心模块，专门用于处理结构化数据。它为用户提供了使用 SQL 语句或 DataFrame API 来查询和操作数据的能力，极大地简化了大数据分析任务的开发流程。</p>
<h3 id="一、Spark-SQL-的核心特点"><a href="#一、Spark-SQL-的核心特点" class="headerlink" title="一、Spark SQL 的核心特点"></a>一、Spark SQL 的核心特点</h3><ol>
<li><p><strong>统一的数据访问方式</strong><br>Spark SQL 支持从多种数据源读取数据，包括：</p>
<ul>
<li>JSON、Parquet、ORC、CSV 等文件格式</li>
<li>JDBC&#x2F;ODBC 接口连接传统数据库（如 MySQL、PostgreSQL）</li>
<li>Hive 表（通过 HiveContext）</li>
<li>Kafka 流数据（结合 Structured Streaming）</li>
</ul>
</li>
<li><p><strong>SQL 支持</strong><br>用户可以直接使用标准 SQL 查询数据，例如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, age <span class="keyword">FROM</span> people <span class="keyword">WHERE</span> age <span class="operator">&gt;</span> <span class="number">30</span></span><br></pre></td></tr></table></figure>
<p>这使得熟悉 SQL 的数据分析师可以轻松上手。</p>
</li>
<li><p><strong>DataFrame 和 Dataset API</strong><br>Spark SQL 提供了高层次的抽象：</p>
<ul>
<li><strong>DataFrame</strong>：以结构化方式组织的分布式数据集，类似于传统数据库中的表或 Pandas 中的 DataFrame。</li>
<li><strong>Dataset</strong>（仅在 Scala&#x2F;Java 中）：类型安全的 DataFrame，结合了对象模型和函数式编程的优势。</li>
</ul>
</li>
<li><p><strong>Catalyst 优化器</strong><br>Spark SQL 内置了基于规则和成本的查询优化器 Catalyst，能够自动优化 SQL 查询执行计划，例如谓词下推、列裁剪、常量折叠等，显著提升执行效率。</p>
</li>
<li><p><strong>Tungsten 引擎</strong><br>Tungsten 是 Spark 的高性能执行引擎，通过代码生成、内存管理和二进制格式优化，提升查询性能。</p>
</li>
<li><p><strong>与 Spark 生态无缝集成</strong><br>Spark SQL 可以与 Spark Streaming、MLlib（机器学习）、GraphX（图计算）等模块无缝协作，实现复杂的数据处理流水线。</p>
</li>
</ol>
<hr>
<h3 id="二、Spark-SQL-的架构"><a href="#二、Spark-SQL-的架构" class="headerlink" title="二、Spark SQL 的架构"></a>二、Spark SQL 的架构</h3><ol>
<li><strong>SQL Parser</strong>：解析 SQL 语句，生成抽象语法树（AST）。</li>
<li><strong>Analyzer</strong>：结合元数据（如 Hive Metastore 或内置 Catalog）解析未绑定的逻辑计划。</li>
<li><strong>Optimizer (Catalyst)</strong>：使用规则优化逻辑计划。</li>
<li><strong>Planner</strong>：将逻辑计划转换为多个物理执行计划。</li>
<li><strong>Cost-based Optimizer</strong>：选择最优的物理执行计划。</li>
<li><strong>Execution Engine</strong>：在集群上执行最终的物理计划。</li>
</ol>
<hr>
<h3 id="三、使用示例"><a href="#三、使用示例" class="headerlink" title="三、使用示例"></a>三、使用示例</h3><h4 id="1-使用-Spark-SQL-查询"><a href="#1-使用-Spark-SQL-查询" class="headerlink" title="1. 使用 Spark SQL 查询"></a>1. 使用 Spark SQL 查询</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> SparkSession</span><br><span class="line"></span><br><span class="line">spark = SparkSession.builder \</span><br><span class="line">    .appName(<span class="string">&quot;SparkSQLExample&quot;</span>) \</span><br><span class="line">    .getOrCreate()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取 JSON 数据</span></span><br><span class="line">df = spark.read.json(<span class="string">&quot;people.json&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注册为临时视图</span></span><br><span class="line">df.createOrReplaceTempView(<span class="string">&quot;people&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行 SQL 查询</span></span><br><span class="line">result = spark.sql(<span class="string">&quot;SELECT name, age FROM people WHERE age &gt; 30&quot;</span>)</span><br><span class="line">result.show()</span><br></pre></td></tr></table></figure>

<h4 id="2-使用-DataFrame-API"><a href="#2-使用-DataFrame-API" class="headerlink" title="2. 使用 DataFrame API"></a>2. 使用 DataFrame API</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df.<span class="built_in">filter</span>(df.age &gt; <span class="number">30</span>).select(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>).show()</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="四、应用场景"><a href="#四、应用场景" class="headerlink" title="四、应用场景"></a>四、应用场景</h3><ul>
<li><strong>数据仓库查询</strong>：替代 Hive 做更高效的批处理查询。</li>
<li><strong>ETL 处理</strong>：清洗、转换、加载结构化数据。</li>
<li><strong>交互式分析</strong>：结合 BI 工具（如 Tableau、Superset）进行可视化分析。</li>
<li><strong>流批一体</strong>：通过 Structured Streaming 实现实时 SQL 查询。</li>
</ul>
<hr>
<h3 id="五、优势与局限"><a href="#五、优势与局限" class="headerlink" title="五、优势与局限"></a>五、优势与局限</h3><table>
<thead>
<tr>
<th>优势</th>
<th>局限</th>
</tr>
</thead>
<tbody><tr>
<td>高性能（得益于 Catalyst 和 Tungsten）</td>
<td>学习曲线较陡（尤其 Catalyst 内部机制）</td>
</tr>
<tr>
<td>支持标准 SQL 和多种数据源</td>
<td>相比专用数据库（如 ClickHouse），实时分析延迟仍较高</td>
</tr>
<tr>
<td>易于与 Spark 生态集成</td>
<td>资源消耗较大，适合中大规模数据处理</td>
</tr>
<tr>
<td>支持 Schema 演化和复杂数据类型（如 Array、Struct）</td>
<td>小文件处理效率较低</td>
</tr>
</tbody></table>
<hr>
<h3 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h3><p>Spark SQL 是大数据领域中最重要的 SQL 引擎之一，它将 SQL 的易用性与 Spark 的分布式计算能力相结合，广泛应用于数据湖分析、数据仓库、实时流处理等场景。对于需要处理 TB 到 PB 级结构化或半结构化数据的团队，Spark SQL 是一个强大而灵活的选择。在使用 Hadoop、Hive 或需要构建数据湖（Data Lake）这些场景下，Spark SQL 往往是首选的查询引擎之一。</p>
<hr>
<h1 id="项目实例"><a href="#项目实例" class="headerlink" title="项目实例"></a>项目实例</h1><h2 id="清洗数据（DWD层）"><a href="#清洗数据（DWD层）" class="headerlink" title="清洗数据（DWD层）"></a>清洗数据（DWD层）</h2><p>ODS &#x3D;&gt; DWD 数据清洗</p>
<p><strong>清洗流程图</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TD</span><br><span class="line">   清洗规则--&gt;|可以修复|修复数据;</span><br><span class="line">   清洗规则--&gt;|无法修复|删除数据;</span><br><span class="line">   删除数据--&gt;非nmpa网站的数据;</span><br><span class="line">   修复数据--&gt;附件检测;</span><br><span class="line">   附件检测--&gt;下载成功;</span><br><span class="line">   附件检测--&gt;下载失败;</span><br><span class="line">   下载成功--&gt;存在附件文件;</span><br><span class="line">   存在附件文件--&gt;上传到HDFS-/zhiyun/huangwenzhe/attacments/nmpa/...;</span><br><span class="line">   存在附件文件--&gt;文本识别;</span><br><span class="line">   文本识别--&gt;word文档;</span><br><span class="line">   文本识别--&gt;pdf文档;</span><br><span class="line">   word文档--&gt;文本类型-现成的库处理;</span><br><span class="line">   pdf文档--&gt;文本类型-现成的库处理;</span><br><span class="line">   pdf文档--&gt;扫描类型-OCR识别;</span><br></pre></td></tr></table></figure>
<h3 id="识别附件内容追加到内容字段（content）"><a href="#识别附件内容追加到内容字段（content）" class="headerlink" title="识别附件内容追加到内容字段（content）"></a>识别附件内容追加到内容字段（content）</h3><p>提取word文字: <br><a href="https://www.cnblogs.com/Yesi/p/17911301.html">https://www.cnblogs.com/Yesi/p/17911301.html</a><br><a href="https://blog.51cto.com/u_16175497/6731114">https://blog.51cto.com/u_16175497/6731114</a><br>Python 中可以读取 word 文件的库有 python-docx 和 pywin32。<br>python-docx跨平台只能处理 .docx 格式，不能处理.doc格式<br>pywin32仅限 windows 平台 .doc 和 .docx 都能处理<br><a href="https://blog.csdn.net/gs80140/article/details/145753312">python跨平台读取 .doc 格式文件靠谱的做法-CSDN博客</a></p>
<p>提取pdf文字: <br><a href="https://blog.csdn.net/stephenzyx/article/details/129974065">https://blog.csdn.net/stephenzyx/article/details/129974065</a><br><a href="https://cloud.tencent.com/developer/article/2323682">https://cloud.tencent.com/developer/article/2323682</a></p>
<h3 id="python清洗脚本"><a href="#python清洗脚本" class="headerlink" title="python清洗脚本"></a>python清洗脚本</h3><p><strong>yaozhi.py</strong> （仅处理yaozhi的数据，其他每个表各写一个py脚本，但总体结构差不多）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> SparkSession</span><br><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> functions <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">from</span> pyspark.sql.types <span class="keyword">import</span> StringType</span><br><span class="line"><span class="keyword">from</span> PyPDF2 <span class="keyword">import</span> PdfReader  <span class="comment"># 处理PDF</span></span><br><span class="line"><span class="keyword">from</span> docx <span class="keyword">import</span> Document    <span class="comment"># 处理docx</span></span><br><span class="line"><span class="keyword">import</span> subprocess  <span class="comment">#处理doc</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 实例化 spark 会话</span></span><br><span class="line">spark = SparkSession.builder \</span><br><span class="line">    .master(<span class="string">&quot;local[*]&quot;</span>) \</span><br><span class="line">    .appName(<span class="string">&quot;app&quot;</span>) \</span><br><span class="line">    .config(<span class="string">&#x27;spark.driver.memory&#x27;</span>, <span class="string">&#x27;6g&#x27;</span>) \</span><br><span class="line">    .config(<span class="string">&#x27;spark.executor.memory&#x27;</span>, <span class="string">&#x27;6g&#x27;</span>) \</span><br><span class="line">    .config(<span class="string">&#x27;spark.local.dir&#x27;</span>, <span class="string">&#x27;/home/spark-tmp&#x27;</span>) \</span><br><span class="line">    .config(<span class="string">&#x27;spark.sql.parquet.writeLegacyFormat&#x27;</span>, <span class="string">&#x27;true&#x27;</span>) \</span><br><span class="line">    .config(<span class="string">&quot;hive.metastore.uris&quot;</span>, <span class="string">&quot;thrift://hdp:9083&quot;</span>) \</span><br><span class="line">    .enableHiveSupport() \</span><br><span class="line">    .getOrCreate()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># UDF函数 用于提取每篇文章的平台ID</span></span><br><span class="line"><span class="meta">@F.udf(<span class="params">StringType(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_platform_id</span>(<span class="params">link</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> link:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 分割路径获取最后一部分</span></span><br><span class="line">    parts = link.rstrip(<span class="string">&#x27;/&#x27;</span>).split(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> parts:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 获取文件名部分（如：3808585257548289.html）</span></span><br><span class="line">    filename = parts[-<span class="number">1</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 移除.html后缀并提取纯数字ID</span></span><br><span class="line">    <span class="keyword">if</span> filename.endswith(<span class="string">&#x27;.html&#x27;</span>):</span><br><span class="line">        id_part = filename[:-<span class="number">5</span>]  <span class="comment"># 移除5个字符（.html）</span></span><br><span class="line">        <span class="comment"># 验证剩余部分是否为纯数字</span></span><br><span class="line">        <span class="keyword">if</span> id_part.isdigit():</span><br><span class="line">            <span class="keyword">return</span> id_part</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>  <span class="comment"># 不符合预期格式时返回空字符串</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># UDF函数 用于提取附件文本内容</span></span><br><span class="line"><span class="meta">@F.udf(<span class="params">StringType(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_attachment_text</span>(<span class="params">attachment_path</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> attachment_path:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;未提供附件路径&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 1. 将Windows路径转为Linux路径</span></span><br><span class="line">        linux_path = re.sub(</span><br><span class="line">            <span class="string">r&#x27;^D:\\WorkSpace\\RPA_project\\attachments&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;/zhiyun/huangwenzhe/data/attachments&#x27;</span>, </span><br><span class="line">            attachment_path</span><br><span class="line">        )</span><br><span class="line">        <span class="comment"># 将反斜杠替换为正斜杠</span></span><br><span class="line">        linux_path = linux_path.replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 2. 检查Linux路径是否存在</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(linux_path):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;错误：路径不存在 - <span class="subst">&#123;linux_path&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 3. 获取该路径下的所有附件 (.doc / .docx / .pdf)</span></span><br><span class="line">        attachments = []</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(linux_path):  <span class="comment"># 是目录</span></span><br><span class="line">            <span class="comment"># 查找目录下所有符合条件的文件</span></span><br><span class="line">            <span class="keyword">for</span> ext <span class="keyword">in</span> [<span class="string">&#x27;*.doc&#x27;</span>, <span class="string">&#x27;*.docx&#x27;</span>, <span class="string">&#x27;*.pdf&#x27;</span>]:</span><br><span class="line">                attachments.extend(glob.glob(os.path.join(linux_path, ext), recursive=<span class="literal">False</span>))</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 是文件</span></span><br><span class="line">            <span class="keyword">if</span> linux_path.lower().endswith((<span class="string">&#x27;.doc&#x27;</span>, <span class="string">&#x27;.docx&#x27;</span>, <span class="string">&#x27;.pdf&#x27;</span>)):</span><br><span class="line">                attachments.append(linux_path)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> attachments:</span><br><span class="line">            <span class="comment"># print(f&quot;在路径 &#123;linux_path&#125; 下未找到任何附件文件&quot;)</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 4. 提取所有附件的文本内容</span></span><br><span class="line">        all_text = []</span><br><span class="line">        <span class="keyword">for</span> file_path <span class="keyword">in</span> attachments:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                file_ext = file_path.lower().split(<span class="string">&#x27;.&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">                filename = os.path.basename(file_path)</span><br><span class="line">                text = <span class="string">&quot;&quot;</span></span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 处理Word文档 (.docx)</span></span><br><span class="line">                <span class="keyword">if</span> file_ext == <span class="string">&#x27;docx&#x27;</span>:</span><br><span class="line">                    doc = Document(file_path)</span><br><span class="line">                    full_text = []</span><br><span class="line">                    <span class="keyword">for</span> para <span class="keyword">in</span> doc.paragraphs:</span><br><span class="line">                        full_text.append(para.text)</span><br><span class="line">                    text = <span class="string">&#x27;\n&#x27;</span>.join(full_text)</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 处理Word文档 (.doc) - 使用 catdoc</span></span><br><span class="line">                <span class="keyword">elif</span> file_ext == <span class="string">&#x27;doc&#x27;</span>:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="comment"># 打印调试信息</span></span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;尝试使用 catdoc 处理文件: <span class="subst">&#123;file_path&#125;</span>&quot;</span>)</span><br><span class="line">                        </span><br><span class="line">                        <span class="comment"># 使用 catdoc 提取文本</span></span><br><span class="line">                        result = subprocess.run(</span><br><span class="line">                            [<span class="string">&quot;catdoc&quot;</span>, <span class="string">&quot;-w&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;-d&quot;</span>, <span class="string">&quot;utf-8&quot;</span>, file_path],</span><br><span class="line">                            capture_output=<span class="literal">True</span>,</span><br><span class="line">                            text=<span class="literal">True</span>,</span><br><span class="line">                            encoding=<span class="string">&#x27;utf-8&#x27;</span>,</span><br><span class="line">                            errors=<span class="string">&#x27;ignore&#x27;</span></span><br><span class="line">                        )</span><br><span class="line">                        </span><br><span class="line">                        <span class="keyword">if</span> result.returncode == <span class="number">0</span>:</span><br><span class="line">                            text = result.stdout</span><br><span class="line">                            <span class="built_in">print</span>(<span class="string">f&quot;catdoc 处理完成: <span class="subst">&#123;result.stdout[:<span class="number">50</span>]&#125;</span>...&quot;</span>)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                            <span class="built_in">print</span>(<span class="string">f&quot;catdoc 处理失败 (<span class="subst">&#123;result.returncode&#125;</span>): <span class="subst">&#123;result.stderr&#125;</span>&quot;</span>)</span><br><span class="line">                            text = <span class="string">&quot;&quot;</span></span><br><span class="line">                    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;调用 catdoc 出错: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">                        text = <span class="string">&quot;&quot;</span></span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 处理PDF文档</span></span><br><span class="line">                <span class="keyword">elif</span> file_ext == <span class="string">&#x27;pdf&#x27;</span>:</span><br><span class="line">                    reader = PdfReader(file_path)</span><br><span class="line">                    text = <span class="string">&quot;&quot;</span></span><br><span class="line">                    <span class="keyword">for</span> page <span class="keyword">in</span> reader.pages:</span><br><span class="line">                        page_text = page.extract_text()</span><br><span class="line">                        <span class="keyword">if</span> page_text:</span><br><span class="line">                            text += page_text + <span class="string">&quot;\n&quot;</span></span><br><span class="line">                </span><br><span class="line">                all_text.append(<span class="string">f&quot;[文件: <span class="subst">&#123;filename&#125;</span>]\n<span class="subst">&#123;text&#125;</span>\n&quot;</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[文件: <span class="subst">&#123;filename&#125;</span> 处理失败: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>]\n&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;\n&#x27;</span>.join(all_text)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;处理附件时出错: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取Hive表数据</span></span><br><span class="line">sql = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">select</span></span><br><span class="line"><span class="string">    id,</span></span><br><span class="line"><span class="string">    &quot;&quot; as platform_id,</span></span><br><span class="line"><span class="string">    title,</span></span><br><span class="line"><span class="string">    dept,</span></span><br><span class="line"><span class="string">    post_date,</span></span><br><span class="line"><span class="string">    zihao,</span></span><br><span class="line"><span class="string">    level,</span></span><br><span class="line"><span class="string">    timeliness,</span></span><br><span class="line"><span class="string">    content,</span></span><br><span class="line"><span class="string">    link,</span></span><br><span class="line"><span class="string">    attachment_path,</span></span><br><span class="line"><span class="string">    create_time,</span></span><br><span class="line"><span class="string">    update_time</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">from ods_huangwenzhe.yaozhi</span></span><br><span class="line"><span class="string">;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">df = spark.sql(sql)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 更新platform_id列</span></span><br><span class="line">df = df.withColumn(<span class="string">&quot;platform_id&quot;</span>, get_platform_id(<span class="string">&quot;link&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新content列，追加附件内容</span></span><br><span class="line">df = df.withColumn(</span><br><span class="line">    <span class="string">&quot;content&quot;</span>, </span><br><span class="line">    F.concat(</span><br><span class="line">        F.col(<span class="string">&quot;content&quot;</span>), </span><br><span class="line">        F.lit(<span class="string">&quot;\n\n[附件内容开始]\n\n&quot;</span>), </span><br><span class="line">        get_attachment_text(<span class="string">&quot;attachment_path&quot;</span>),</span><br><span class="line">        F.lit(<span class="string">&quot;\n\n[附件内容结束]&quot;</span>)</span><br><span class="line">    )</span><br><span class="line">) </span><br><span class="line"></span><br><span class="line">df.show()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 写入到Hive表</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建路径</span></span><br><span class="line">os.system(<span class="string">&quot;hadoop fs -mkdir -p /zhiyun/huangwenzhe/dwd/yaozhi&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">os.system(<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">hive -e &quot;create database if not exists dwd_huangwenzhe location &#x27;/zhiyun/huangwenzhe/dwd&#x27;&quot;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 保存到hive表里</span></span><br><span class="line">df.write.<span class="built_in">format</span>(<span class="string">&quot;hive&quot;</span>) \</span><br><span class="line">    .mode(<span class="string">&quot;overwrite&quot;</span>) \</span><br><span class="line">    .option(<span class="string">&quot;fileFormat&quot;</span>,<span class="string">&quot;parquet&quot;</span>) \</span><br><span class="line">    .option(<span class="string">&quot;location&quot;</span>,<span class="string">&quot;/zhiyun/huangwenzhe/dwd/yaozhi&quot;</span>). \</span><br><span class="line">    saveAsTable(<span class="string">&quot;dwd_huangwenzhe.yaozhi&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n清洗完成&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="合并数据（DWS层）"><a href="#合并数据（DWS层）" class="headerlink" title="合并数据（DWS层）"></a>合并数据（DWS层）</h2><p>DWD &#x3D;&gt; DWS 宽表加工</p>
<p>要求: 把清洗好的各平台数据表合并成一张大表, 该表应该包含数据表的所有字段</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 无需执行，供参考</span></span><br><span class="line"><span class="keyword">create table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> dws_huangwenzhe.wide_raw_table(</span><br><span class="line">id <span class="type">int</span>;</span><br><span class="line">platform_id string, <span class="comment">-- 平台的ID, 如果没有则需要从URL提取ID</span></span><br><span class="line">title string, <span class="comment">-- 标题 不能为空</span></span><br><span class="line">source string, <span class="comment">-- 来源（dept、source）</span></span><br><span class="line">post_date string,  <span class="comment">--发布日期</span></span><br><span class="line">category string, <span class="comment">-- 分类（level、category）</span></span><br><span class="line">timeliness string, <span class="comment">-- 状态  合并状态字段 timeliness</span></span><br><span class="line">content string, <span class="comment">-- 文本内容  不能为空</span></span><br><span class="line">link string, <span class="comment">-- 文章地址</span></span><br><span class="line">create_time string <span class="comment">--创建时间</span></span><br><span class="line">update_time string <span class="comment">--更新时间</span></span><br><span class="line">) partitioned <span class="keyword">by</span> (platform string);</span><br></pre></td></tr></table></figure>

<p><strong>bash脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -e  <span class="comment"># 任何命令执行失败立即退出脚本，避免错误累积</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志输出函数，方便追踪执行过程</span></span><br><span class="line"><span class="function"><span class="title">log</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;[<span class="subst">$(date +&#x27;%Y-%m-%d %H:%M:%S&#x27;)</span>] <span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 确保HDFS存储路径存在（避免表创建时路径权限问题）</span></span><br><span class="line"><span class="built_in">log</span> <span class="string">&quot;创建宽表HDFS存储路径...&quot;</span></span><br><span class="line">hadoop fs -<span class="built_in">mkdir</span> -p /zhiyun/huangwenzhe/dws/wide_raw_table</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 创建数据库（确保数据库存在）</span></span><br><span class="line"><span class="built_in">log</span> <span class="string">&quot;创建dws层数据库...&quot;</span></span><br><span class="line">hive -e <span class="string">&quot;</span></span><br><span class="line"><span class="string">create database if not exists dws_huangwenzhe </span></span><br><span class="line"><span class="string">location &#x27;/zhiyun/huangwenzhe/dws&#x27;;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建宽表（若不存在）</span></span><br><span class="line"><span class="built_in">log</span> <span class="string">&quot;创建宽表结构...&quot;</span></span><br><span class="line">hive -e <span class="string">&quot;</span></span><br><span class="line"><span class="string">create table if not exists dws_huangwenzhe.wide_raw_table(</span></span><br><span class="line"><span class="string">    id int,</span></span><br><span class="line"><span class="string">    platform_id string,</span></span><br><span class="line"><span class="string">    title string,</span></span><br><span class="line"><span class="string">    source string,</span></span><br><span class="line"><span class="string">    post_date string,</span></span><br><span class="line"><span class="string">    category string,</span></span><br><span class="line"><span class="string">    timeliness string,</span></span><br><span class="line"><span class="string">    content string,</span></span><br><span class="line"><span class="string">    link string,</span></span><br><span class="line"><span class="string">    create_time string,</span></span><br><span class="line"><span class="string">    update_time string</span></span><br><span class="line"><span class="string">) partitioned by (platform string)</span></span><br><span class="line"><span class="string">stored as parquet</span></span><br><span class="line"><span class="string">location &#x27;/zhiyun/huangwenzhe/dws/wide_raw_table&#x27;;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理yaozhi平台数据</span></span><br><span class="line"><span class="built_in">log</span> <span class="string">&quot;插入yaozhi数据到宽表...&quot;</span></span><br><span class="line">hive -e <span class="string">&quot;</span></span><br><span class="line"><span class="string">insert overwrite table dws_huangwenzhe.wide_raw_table partition(platform=&#x27;yaozhi&#x27;)</span></span><br><span class="line"><span class="string">select</span></span><br><span class="line"><span class="string">    id,</span></span><br><span class="line"><span class="string">    platform_id,</span></span><br><span class="line"><span class="string">    title,</span></span><br><span class="line"><span class="string">    dept as source,</span></span><br><span class="line"><span class="string">    post_date,</span></span><br><span class="line"><span class="string">    level as category,</span></span><br><span class="line"><span class="string">    timeliness,</span></span><br><span class="line"><span class="string">    content,</span></span><br><span class="line"><span class="string">    link,</span></span><br><span class="line"><span class="string">    create_time,</span></span><br><span class="line"><span class="string">    update_time</span></span><br><span class="line"><span class="string">from dwd_huangwenzhe.yaozhi</span></span><br><span class="line"><span class="string">where title is not null and content is not null;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理nmpa平台数据</span></span><br><span class="line"><span class="built_in">log</span> <span class="string">&quot;插入nmpa数据到宽表...&quot;</span></span><br><span class="line">hive -e <span class="string">&quot;</span></span><br><span class="line"><span class="string">insert overwrite table dws_huangwenzhe.wide_raw_table partition(platform=&#x27;nmpa&#x27;)</span></span><br><span class="line"><span class="string">select</span></span><br><span class="line"><span class="string">    id,</span></span><br><span class="line"><span class="string">    index_id as platform_id,</span></span><br><span class="line"><span class="string">    title,</span></span><br><span class="line"><span class="string">    null as source,</span></span><br><span class="line"><span class="string">    post_date,</span></span><br><span class="line"><span class="string">    category,</span></span><br><span class="line"><span class="string">    null as timeliness,</span></span><br><span class="line"><span class="string">    content,</span></span><br><span class="line"><span class="string">    link,</span></span><br><span class="line"><span class="string">    create_time,</span></span><br><span class="line"><span class="string">    update_time</span></span><br><span class="line"><span class="string">from dwd_huangwenzhe.nmpa</span></span><br><span class="line"><span class="string">where title is not null and content is not null;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理cmde平台数据</span></span><br><span class="line"><span class="built_in">log</span> <span class="string">&quot;插入cmde数据到宽表...&quot;</span></span><br><span class="line">hive -e <span class="string">&quot;</span></span><br><span class="line"><span class="string">insert overwrite table dws_huangwenzhe.wide_raw_table partition(platform=&#x27;cmde&#x27;)</span></span><br><span class="line"><span class="string">select</span></span><br><span class="line"><span class="string">    id,</span></span><br><span class="line"><span class="string">    platform_id,</span></span><br><span class="line"><span class="string">    title,</span></span><br><span class="line"><span class="string">    source,</span></span><br><span class="line"><span class="string">    post_date,</span></span><br><span class="line"><span class="string">    null as category,</span></span><br><span class="line"><span class="string">    null as timeliness,</span></span><br><span class="line"><span class="string">    content,</span></span><br><span class="line"><span class="string">    link,</span></span><br><span class="line"><span class="string">    create_time,</span></span><br><span class="line"><span class="string">    update_time</span></span><br><span class="line"><span class="string">from dwd_huangwenzhe.cmde</span></span><br><span class="line"><span class="string">where title is not null and content is not null;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">log</span> <span class="string">&quot;所有平台数据合并到宽表成功！&quot;</span></span><br></pre></td></tr></table></figure>
<p>若想提高插入效率可将三个查询语句用union all拼接，此处为了方便排错调试故拆开</p>
<h2 id="自动化调度"><a href="#自动化调度" class="headerlink" title="自动化调度"></a>自动化调度</h2><p>使用海豚调度平台将以上内容整合成一个工作流定时执行<br>调度平台：<a href="http://192.168.8.67:12345/dolphinscheduler/ui/login">海豚调度平台</a></p>
<img src="/2025/08/04/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/8.4%20%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97%E3%80%81%E5%90%88%E5%B9%B6%EF%BC%88SparkSQL%EF%BC%89/file-20250805155610394.png" class="">

<h3 id="结果验证"><a href="#结果验证" class="headerlink" title="结果验证"></a>结果验证</h3><img src="/2025/08/04/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE/8.4%20%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97%E3%80%81%E5%90%88%E5%B9%B6%EF%BC%88SparkSQL%EF%BC%89/file-20250805154732104.png" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Hadoop</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
</search>
