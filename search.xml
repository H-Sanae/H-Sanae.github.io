<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>GitHub+Hexo博客创建</title>
    <url>/2025/06/07/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/GitHub+Hexo%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h1><h2 id="从0开始到部署到github"><a href="#从0开始到部署到github" class="headerlink" title="从0开始到部署到github"></a>从0开始到部署到github</h2><ul>
<li><a href="https://huahuipj.github.io/2021/08/20/shi-yong-github-bu-shu-yi-ge-jian-dan-de-bo-ke/">huahuipj.github.io</a></li>
<li><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165856718216782391857659%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165856718216782391857659&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-82729029-null-null.142%5Ev33%5Eexperiment_2_v1,185%5Ev2%5Econtrol&utm_term=hexo&spm=1018.2226.3001.4187">hexo史上最全搭建教程</a></li>
<li><a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></li>
</ul>
<h2 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h2><h3 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1. 安装git"></a>1. 安装git</h3><h3 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2. 安装nodejs"></a>2. 安装nodejs</h3><h3 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h3><p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹Blog，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。</p>
<p>输入命令安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>查看版本命令：<code>hexo -v</code></p>
<p>初始化hexo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init myblog</span><br></pre></td></tr></table></figure>
<p>这个myblog可以自己取什么名字都行，会在当前文件夹（Blog）目录下创建一个myblog文件夹</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> myblog <span class="comment">#进入这个myblog文件夹</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>新建完成后，指定文件夹目录下有：</p>
<ul>
<li>node_modules: 依赖包</li>
<li>public：存放生成的页面</li>
<li>scaffolds：生成文章的一些模板</li>
<li>source：用来存放你的文章</li>
<li>themes：主题</li>
<li>_config.yml: 博客的配置文件</li>
</ul>
<p>打开hexo的服务，在浏览器输入 localhost:4000 就可以看到你生成的博客了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p>使用ctrl+c可以把服务关掉</p>
<h3 id="4-GitHub创建个人仓库"><a href="#4-GitHub创建个人仓库" class="headerlink" title="4. GitHub创建个人仓库"></a>4. GitHub创建个人仓库</h3><p>创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名</p>
<h3 id="5-生成SSH添加到GitHub"><a href="#5-生成SSH添加到GitHub" class="headerlink" title="5. 生成SSH添加到GitHub"></a>5. 生成SSH添加到GitHub</h3><p>回到你的git bash中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure>
<p>这里的 yourname 输入你的GitHub用户名，youremail 输入你GitHub的邮箱（双引号保留）</p>
<p>然后创建SSH，一路回车(应该有3次回车)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure>
<p>终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key<br>将刚复制的内容粘贴到key那里，title随便填，保存</p>
<p>测试是否成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com <span class="comment"># 注意邮箱地址不用改</span></span><br></pre></td></tr></table></figure>
<p>如果提示Are you sure you want to continue connecting (yes&#x2F;no)? 输入yes，然后会看到：<br>Hi H-Sanae! You’ve successfully authenticated, but GitHub does not provide shell access.<br>看到这个信息说明SSH已配置成功！</p>
<h3 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6. 将hexo部署到GitHub"></a>6. 将hexo部署到GitHub</h3><p>打开站点配置文件 <code>_config.yml</code>，翻到最后，修改为:<br>(YourgithubName就是你的GitHub账户)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p><code>branch</code> 填你刚刚创建<code>GitHub</code>仓库的默认分支名称，看下是<code>master</code>还是<code>main</code>，不要填错了，还要注意一下，冒号后面加一个空格</p>
<p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>然后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>到此完成，过一会儿就可以在<code>http://yourname.github.io</code> 这个网站看到你的博客了！</p>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>因为从hexo提交代码时会把你以前的所有代码都删掉，在上传代码到github之前，要记得先把以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的）。</p>
<h1 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h1><p><a href="http://localhost:4000/">http://localhost:4000</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean   #清除缓存文件 db.json 和已生成的静态文件 public</span><br><span class="line">hexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span><br><span class="line">hexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span><br></pre></td></tr></table></figure>

<p>常用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;postName&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">&quot;pageName&quot;</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo server <span class="comment">#开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span></span><br><span class="line">hexo deploy <span class="comment">#部署到GitHub</span></span><br><span class="line">hexo <span class="built_in">help</span>  <span class="comment"># 查看帮助</span></span><br><span class="line">hexo version  <span class="comment">#查看Hexo的版本</span></span><br></pre></td></tr></table></figure>

<p>缩写</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>

<p>组合命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s -g #生成并本地预览</span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure>

<h1 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h1><p><a href="https://github.com/Fechin/hexo-theme-diaspora">diaspora主题</a></p>
<h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2><p><a href="https://blog.csdn.net/qq_36759224/article/details/85420403">Hexo博客优化之博客美化系列</a></p>
<h2 id="根目录全局配置文件-config-yml"><a href="#根目录全局配置文件-config-yml" class="headerlink" title="根目录全局配置文件_config.yml"></a>根目录全局配置文件_config.yml</h2><p>1、所有的配置“:”符号后面都要带空格，否则执行本地测试直接失败。<br>2、language是设置语言。zh-Hans是中文。<br>3、如果设置zh-Hans后仍出现乱码问题。需要更改文件的字符编码集为UTF-8，方法很多。</p>
<h1 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h1><p>定位到我们的hexo根目录，执行命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &#x27;my-first-blog&#x27;</span><br></pre></td></tr></table></figure>
<p>hexo会帮我们在<code>_posts</code>下生成相关md文件<br>我们只需要打开这个文件就可以开始写博客了<br>当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间<br>一般完整格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: postName #文章页面上的显示名称，一般是中文</span><br><span class="line">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改</span><br><span class="line">categories: 默认分类 #分类</span><br><span class="line">tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格</span><br><span class="line">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</span><br><span class="line">---</span><br><span class="line">以下是正文</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>上传代码仓库到Gitee和Github</title>
    <url>/2025/06/11/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93%E5%88%B0Gitee%E5%92%8CGithub/</url>
    <content><![CDATA[<h1 id="Linux上传到Gitee"><a href="#Linux上传到Gitee" class="headerlink" title="Linux上传到Gitee"></a>Linux上传到Gitee</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>如果你的系统尚未安装 Git，请先执行以下命令进行安装</p>
<h3 id="安装Git工具"><a href="#安装Git工具" class="headerlink" title="安装Git工具"></a>安装Git工具</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Ubuntu/Debian系统 </span></span><br><span class="line"><span class="built_in">sudo</span> apt-get update </span><br><span class="line"><span class="built_in">sudo</span> apt-get install git </span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS/RHEL系统 </span></span><br><span class="line"><span class="built_in">sudo</span> yum update </span><br><span class="line"><span class="built_in">sudo</span> yum install git </span><br><span class="line"></span><br><span class="line"><span class="comment"># Arch Linux系统 </span></span><br><span class="line"><span class="built_in">sudo</span> pacman -S git</span><br></pre></td></tr></table></figure>

<h3 id="配置-Git-基本信息"><a href="#配置-Git-基本信息" class="headerlink" title="配置 Git 基本信息"></a>配置 Git 基本信息</h3><p>安装完成后，需要配置你的用户名和邮箱，这将显示在你的提交记录中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span> </span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱地址&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="在Gitee上创建仓库"><a href="#在Gitee上创建仓库" class="headerlink" title="在Gitee上创建仓库"></a>在Gitee上创建仓库</h3><p>忽略</p>
<h3 id="SSH方式"><a href="#SSH方式" class="headerlink" title="SSH方式"></a>SSH方式</h3><p>SSH 方式可以避免每次推送都输入用户名和密码，提高效率：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成SSH密钥（如果没有） </span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱地址&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看公钥 </span></span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub </span><br><span class="line"><span class="comment"># 将输出的公钥复制到Gitee的SSH公钥设置中</span></span><br></pre></td></tr></table></figure>

<p>验证连接</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br></pre></td></tr></table></figure>
<p>看到欢迎信息即表示成功</p>
<p>在下一步之前，需要有一个代码仓库，可以先从git上克隆一个到本机（空仓库也行），或者自行<code>git init</code>命令将文件夹变为一个git仓库</p>
<p>设置完成后，进入代码仓库文件夹，将这个远程仓库地址改为 SSH 形式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote set-url origin git@gitee.com:你的用户名/你的仓库名.git</span><br></pre></td></tr></table></figure>
<h4 id="复用已有密钥（没弄）"><a href="#复用已有密钥（没弄）" class="headerlink" title="复用已有密钥（没弄）"></a>复用已有密钥（没弄）</h4><h2 id="将代码上传到远程仓库（gitee）"><a href="#将代码上传到远程仓库（gitee）" class="headerlink" title="将代码上传到远程仓库（gitee）"></a>将代码上传到远程仓库（gitee）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入克隆的仓库目录</span></span><br><span class="line"><span class="built_in">cd</span> 你的仓库名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改文件后，添加到暂存区</span></span><br><span class="line">git add 修改的文件 <span class="comment">#可以提交单个文件</span></span><br><span class="line">git add * <span class="comment">#也可以提交所有文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交修改</span></span><br><span class="line">git commit -m <span class="string">&quot;修改说明&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送到Gitee</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>gitee</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Obsidian+Hexo图片管理方案</title>
    <url>/2025/06/17/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/Hexo+Obsidian%E5%9B%BE%E7%89%87%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<h1 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h1><p>主要参考：<a href="https://phakeandy.github.io/2024/05/03/Hexo-Obsidian%EF%BC%9A%E8%A7%A3%E5%86%B3%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/">Hexo + Obsidian：解决图片无法显示问题 | andy’s blog</a></p>
<h1 id="Obsidian配置"><a href="#Obsidian配置" class="headerlink" title="Obsidian配置"></a>Obsidian配置</h1><p>可选参考：<a href="https://blog.csdn.net/qq_52357217/article/details/127562163">如何让Obsidian的图片存储形式设置为 .&#x2F;${filename}.assets</a></p>
<h2 id="设置obsidian仓库"><a href="#设置obsidian仓库" class="headerlink" title="设置obsidian仓库"></a>设置obsidian仓库</h2><p>此方法只对一个文章仓库有效，即将hexo博客根目录同时设置为obsidian的文章根目录，方法为使用obsidian打开博客根目录（_config.yml文件所在目录，有一个source文件夹）<br><img src="/../../images/Hexo+Obsidian%E5%9B%BE%E7%89%87%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88/file-20250617212712587.png"></p>
<h2 id="obsidian安装插件-Custom-Attachment-Location"><a href="#obsidian安装插件-Custom-Attachment-Location" class="headerlink" title="obsidian安装插件 Custom Attachment Location"></a>obsidian安装插件 Custom Attachment Location</h2><p>设置→第三方插件→关闭安全模式→社区插件市场→浏览→输入Custom Attachment Location→点击安装并启动</p>
<h3 id="设置-Location-for-New-Attachments"><a href="#设置-Location-for-New-Attachments" class="headerlink" title="设置 Location for New Attachments"></a>设置 Location for New Attachments</h3><p>设置为<code>source/images/$&#123;filename&#125;</code><br>即将粘贴在文章中的图片保存在文章根目录（也是博客根目录）下的source文件夹下的images文件夹下的一个文件夹中（以当前笔记文件名命名）</p>
<p>tips:<br>.&#x2F;为当前笔记所在目录，${filename}为当前笔记文件名<br>设置为 .&#x2F;${filename} 即将图片放在当前笔记目录下的同名文件内<br>.&#x2F;assets&#x2F;${filename} 将图片放在当前笔记目录下的assets目录下的同名目录（在笔记目录下设置一个assets文件夹用于存放各笔记的图片，防止同目录下笔记过多导致图片文件夹也多）笔者本来打算这样管理文章图片的，但目前并没有找到使其与hexo兼容的方法，故放弃，改用以上方法</p>
<h2 id="obsidian设置文件与链接"><a href="#obsidian设置文件与链接" class="headerlink" title="obsidian设置文件与链接"></a>obsidian设置文件与链接</h2><p><img src="/../../images/Hexo+Obsidian%E5%9B%BE%E7%89%87%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88/file-20250617214538889.png"><br>以上配置完成后即可使图片正常在网页中显示<br>图片链接类似如下：<br><code>\![]\(../../images/文章名称/图片名称.png)</code></p>
<p>在博客目录下打开git终端，使用<code>hexo s -g</code>命令后可在<code>http://127.0.0.1:4000/</code>里验证图片是否显示</p>
<h2 id="Hexo端配置（可选，与上文无关）"><a href="#Hexo端配置（可选，与上文无关）" class="headerlink" title="Hexo端配置（可选，与上文无关）"></a>Hexo端配置（可选，与上文无关）</h2><p><a href="https://hexo.io/zh-cn/docs/asset-folders">资源文件夹 | Hexo</a><br>修改 <code>_config.yml</code> 文件中的这个选项，这样在使用命令生成博客md文件时可以生成一个同名的资源目录，用于存放同名文章使用的资产，此法也可以实现图片的显示，但似乎只有通过命令生成的才有效，且只能在<code>/source/_posts/</code>下保存</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true  </span><br><span class="line">marked: # 如果原本有就更改下面的这些选项，如果没有就添加  </span><br><span class="line">  prependRoot: true  </span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure>
<p>该配置完成后使用<code>hexo new post &lt;文章名&gt;</code>就会在 <code>/source/_posts/</code> 路径下新建 <code>&lt;文章名&gt;.md</code> 文件和同名资产文件夹，然后在obsidian中选择打开刚刚生成的md文件写作时也能成功匹配粘贴的图片。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>hexo</tag>
        <tag>obsidian</tag>
      </tags>
  </entry>
  <entry>
    <title>5.16总结：Linux基础</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.16%E6%80%BB%E7%BB%93%EF%BC%9ALinux%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>查看ip命令：ifconfig<br>IP: 192.168.48.129</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.16%E6%80%BB%E7%BB%93%EF%BC%9ALinux%E5%9F%BA%E7%A1%80/file-20250618200815881.png" class="">

<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="cd-切换目录"><a href="#cd-切换目录" class="headerlink" title="cd 切换目录"></a>cd 切换目录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~ 回到自己的家目录，一般直接用 <span class="built_in">cd</span> 即可</span><br><span class="line"><span class="built_in">cd</span> ../ 回到当前目录的上一级目录</span><br><span class="line"><span class="built_in">cd</span> / 回到根目录</span><br><span class="line">从根目录算起的路径叫做绝对路径，以斜线开头</span><br><span class="line"><span class="built_in">cd</span> /home/test/</span><br><span class="line">从当前目录算起的路径叫做相对路径，当前工作目录的相对位置</span><br><span class="line"><span class="built_in">cd</span> <span class="built_in">test</span> （当前位置有<span class="built_in">test</span>文件夹时可用）</span><br><span class="line"><span class="built_in">pwd</span> 显示现在所在的目录位置</span><br></pre></td></tr></table></figure>

<h2 id="ls-查看内容"><a href="#ls-查看内容" class="headerlink" title="ls 查看内容"></a>ls 查看内容</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -a 显示全部包括隐藏文件(隐藏文件以.开头)</span><br><span class="line">ll 等于 <span class="built_in">ls</span> -l 显示长格式属性，常用</span><br><span class="line"><span class="built_in">ls</span> -r 反向排序 </span><br><span class="line"><span class="built_in">ls</span> -S 按照占磁盘大小从大到小排序 </span><br><span class="line"><span class="built_in">ls</span> -t 以时间排序（由新到旧） </span><br><span class="line"><span class="built_in">ls</span> /home/test 指定路径查看</span><br></pre></td></tr></table></figure>
<p>-a -l -r 这类属于参数，可同时在一个 - 中设置，不分顺序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">按磁盘大小从大到小反向排序（即从小到大），长格式显示所有文件</span><br><span class="line"><span class="built_in">ls</span> -rlaS /home/test</span><br></pre></td></tr></table></figure>
<h2 id="mkdir-创建目录"><a href="#mkdir-创建目录" class="headerlink" title="mkdir 创建目录"></a>mkdir 创建目录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> a 创建一个目录 </span><br><span class="line"><span class="built_in">mkdir</span> b c 同时创建多个目录 </span><br><span class="line"><span class="built_in">mkdir</span> -p d/e 创建多级目录(创建一个目录d，里面有个目录e)</span><br></pre></td></tr></table></figure>
<p>蓝色 代表目录<br>白色 代表文件</p>
<h2 id="touch-创建空文件"><a href="#touch-创建空文件" class="headerlink" title="touch 创建空文件"></a>touch 创建空文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> name.txt </span><br><span class="line"><span class="built_in">touch</span> /root/test/name.txt  <span class="comment">#文件名可带路径</span></span><br><span class="line"><span class="built_in">touch</span> &#123;1..5&#125;.txt  <span class="comment">#批量创建5个文件</span></span><br><span class="line"><span class="built_in">touch</span> student&#123;1..10&#125;.txt  <span class="comment">#文件名分别为student1.txt；student2.txt；student3.txt...student100.txt</span></span><br></pre></td></tr></table></figure>
<p>通配符：配合文件名及目录使用<br>？匹配一个字符 ?.txt<br>* 匹配全部字符 *.txt<br>{1..10} 1到10<br>{a..z} a b c …z<br>{A..Z} A B C …..Z</p>
<h2 id="rm-删除文件或目录"><a href="#rm-删除文件或目录" class="headerlink" title="rm 删除文件或目录"></a>rm 删除文件或目录</h2><p>rm 一般都带 -f 强制删除<br>删文件夹必带 -r 将指定目录下的所有文件与子目录一并处理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> t.txt 删除文件，会提示是否删除，输入y执行删除，n不删除 </span><br><span class="line"><span class="built_in">rm</span> -r a 删除a目录（文件夹）及其里面的文件及子目录 </span><br><span class="line"><span class="built_in">rm</span> -rf * 强制删除文件夹下面的子目录和文件 </span><br><span class="line"><span class="built_in">rm</span> -rf q*强制删除以q开头的文件夹及下面的子目录和文件</span><br></pre></td></tr></table></figure>

<h2 id="mv-移动文件或目录并命名"><a href="#mv-移动文件或目录并命名" class="headerlink" title="mv 移动文件或目录并命名"></a>mv 移动文件或目录并命名</h2><p>mv移动时可设置文件名，不填写路径只写文件名相当于不移动只重命名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> a b <span class="comment">#将文件a重命名为b</span></span><br><span class="line"><span class="built_in">mv</span> a.txt b.txt <span class="comment">#将a.txt重命名为b.txt</span></span><br><span class="line"><span class="built_in">mv</span> a c/ <span class="comment">#将文件a移动到c目录下</span></span><br><span class="line"><span class="built_in">mv</span> b.txt ../c.txt <span class="comment">#将b.txt移动到上一级目录并重命名为c.txt</span></span><br></pre></td></tr></table></figure>

<h2 id="cp-拷贝文件到指定目录并命名"><a href="#cp-拷贝文件到指定目录并命名" class="headerlink" title="cp 拷贝文件到指定目录并命名"></a>cp 拷贝文件到指定目录并命名</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r 递归拷贝目录（复制包括所有子文件，必须使用） </span><br><span class="line"><span class="built_in">cp</span> a.txt b/a.txt </span><br><span class="line"><span class="built_in">cp</span> a.txt b/b.txt </span><br><span class="line"><span class="built_in">cp</span> -r /root/a /root/b</span><br></pre></td></tr></table></figure>

<h2 id="ln-软连接"><a href="#ln-软连接" class="headerlink" title="ln 软连接"></a>ln 软连接</h2><p>类似win快捷方式<br>浅蓝色<br>删除带 -r</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s 目标位置 链接名称</span><br><span class="line">目标位置：要链接到的原始文件或目录的路径</span><br><span class="line">链接名称：要创建的软连接的名称和位置，不写路径默认在当前目录下创建</span><br><span class="line"><span class="built_in">ln</span> -s /home/test/ wk</span><br><span class="line"><span class="built_in">ln</span> -s /home/test/ /home/wk</span><br><span class="line">删除软连接</span><br><span class="line"><span class="built_in">rm</span> -rf wk</span><br></pre></td></tr></table></figure>
<p>软连接存放路径一般放在用户的家目录，放在其他地方会出问题</p>
<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>Tab 命令补全；文件名或者路径补全；连续按2次Tab键，显示以已输入字符开头的所有命令、文件名或路径<br>Ctrl + C 取消当前命令行的编辑；结束当前执行的命令<br>上下键自动记录命令<br>Ctrl+滚轮上下滚动可以放大缩小<br>mobax右键快速粘贴，修改完重启mobox生效  （0516文件目录类.mp4_01:01:39）<br>鼠标中键也可快速粘贴</p>
<h2 id="vim-编辑文件"><a href="#vim-编辑文件" class="headerlink" title="vim 编辑文件"></a>vim 编辑文件</h2><p>在命令行下执行：vim 文件名 进入一般模式<br><strong>在一般模</strong>式下输入 i 或 a 进入编辑模式</p>
<p><strong>编辑模式</strong>按 esc 退回一般模式<br>在一般模式下输入 : 或 &#x2F; 进入命令模式</p>
<p><strong>命令模式</strong>下输入命令进行保存退出，有以下命令：<br>:wq 保存退出； :q 不保存退出； :q! 强制不保存退出<br>命令模式按 esc 退回一般模式</p>
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.16%E6%80%BB%E7%BB%93%EF%BC%9ALinux%E5%9F%BA%E7%A1%80/file-20250618200735270.png" class="">

<h3 id="一般模式-命令"><a href="#一般模式-命令" class="headerlink" title="一般模式 命令"></a>一般模式 命令</h3><p>dd 删除光标所在的行,且保存到剪贴板<br>3dd 删除光标所在的三行,且保存到剪贴板<br>yy复制光标所在的行<br>4yy复制光标所在的连续4行<br>p（小写） 将已复制的内容在光标的下一行粘贴<br>P（大写）将已复制的内容在光标的上一行粘贴<br>x,X：在一行字中，x 为向后删除一个字符（相当于[Del]键），X 为向前删除一个字符 （相当于[Backspace]）也可5x（向后删除5个字符）等<br>G光标快速定位到最后一行 gg 光标快速定位到第一行<br>u 撤销上一步操作</p>
<h3 id="命令模式-命令"><a href="#命令模式-命令" class="headerlink" title="命令模式 命令"></a>命令模式 命令</h3><p>:wq 保存退出； :q 不保存退出； :q! 强制不保存退出<br>:set nu 显示行号；  :set nonu 取消行号<br>:5 光标快读定位到第5行<br>:nohl 去除高亮显示</p>
<p><strong>查找字符</strong>：&#x2F;<br>&#x2F;hello 查找字符串hello，按n向下搜索，按N向上搜索</p>
<p><strong>替换字符串</strong><br>替换字符串命令的基本语法是: [range]s&#x2F;⽬标字符串&#x2F;替换字符串&#x2F;[option]<br>其中range和option字段都可以缺省不填，间隔符除了&#x2F;还可以是其他的<br>range：表⽰搜索范围，默认表⽰当前⾏； 1,10表⽰从第1到第10⾏<br>g 表示全局替换，有多少次替换多少次；无g 只替代每行第一个<br>s 表示替换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#把整个文件的nologin替换成888888 </span></span><br><span class="line">:1,<span class="variable">$s</span>/nologin/88888/g</span><br><span class="line"></span><br><span class="line"><span class="comment">#把1到10行的nologin替换成888888</span></span><br><span class="line">:1,10s/nologin/88888/g</span><br></pre></td></tr></table></figure>


<h2 id="锁死IP"><a href="#锁死IP" class="headerlink" title="锁死IP"></a>锁死IP</h2><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.16%E6%80%BB%E7%BB%93%EF%BC%9ALinux%E5%9F%BA%E7%A1%80/file-20250618200840558.png" class="">

<h2 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h2><p>类似于备份系统，以便还原系统<br>虚拟机-快照-拍摄快照<br>如果系统出问题可以还原到这个拍照的节点<br>快照可以是关机也可以是开机，但建议关机拍快照<br>![[Pasted image 20250516164905.png]]</p>
<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.分别使用绝对路径和相对路径切换到home目录 </span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"><span class="built_in">cd</span> ../home  <span class="comment">#当前为~</span></span><br><span class="line">2.回到当前目录的上一级目录 </span><br><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line">3.回到家目录 </span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line">4.在/home目录下创建两个目录 class a </span><br><span class="line"><span class="built_in">mkdir</span> /home/class a  <span class="comment">#这个写法会在home下创一个class，在/下创一个a</span></span><br><span class="line"><span class="built_in">mkdir</span> /home/class /home/a</span><br><span class="line">5.创建目录 /home/class/students</span><br><span class="line"><span class="built_in">mkdir</span> /home/class/students</span><br><span class="line">6.删除一个目录 /home/a </span><br><span class="line"><span class="built_in">rm</span> -rf /home/a</span><br><span class="line">7.在目录 /home/class/students 下创建个文件 name.txt </span><br><span class="line"><span class="built_in">touch</span> /home/class/students/name.txt</span><br><span class="line">8.将 /home/class/students/name.txt 复制到 /home/class 目录 </span><br><span class="line"><span class="built_in">cp</span> /home/class/students/name.txt /home/class</span><br><span class="line">9.创建/home/class/teachers文件夹，复制整个目录 /home/class/students 到 /home/class/teachers/文件夹下 </span><br><span class="line"><span class="built_in">mkdir</span> /home/class/teachers</span><br><span class="line"><span class="built_in">cp</span> -r /home/class/students /home/class/teachers/</span><br><span class="line">10.删除 /home/class/name.txt</span><br><span class="line"><span class="built_in">rm</span> -f /home/class/name.txt </span><br><span class="line">11.删除文件夹及里面的文件 /home/class/teachers </span><br><span class="line"><span class="built_in">rm</span> -rf /home/class/teachers </span><br><span class="line">12./home目录下创建一个文件name.txt,重命名 /home/name.txt 文件为 age.txt </span><br><span class="line"><span class="built_in">touch</span> /home/name.txt</span><br><span class="line"><span class="built_in">mv</span> /home/name.txt /home/age.txt</span><br><span class="line">13.将 /home/age.txt 拷贝到 /root/ 目录下 </span><br><span class="line"><span class="built_in">cp</span> /home/age.txt /root/</span><br><span class="line">14.在/root下创建一个软连接wk，指向/etc/sysconfig/network-scripts/ifcfg-ens33，然后 使用ll查看这个软连接</span><br><span class="line"><span class="built_in">ln</span> -s /etc/sysconfig/network-scripts/ifcfg-ens33 /root/wk</span><br><span class="line">15.删除上题中建立的软连接 </span><br><span class="line"><span class="built_in">rm</span> -rf wk</span><br><span class="line">16.在/root下递归创建目录xxx/yyy/zzz </span><br><span class="line"><span class="built_in">mkdir</span> -p xxx/yyy/zzz</span><br><span class="line">17.使用<span class="built_in">touch</span>命令在zzz目录中批量创建文件：test1.log...test10.log，a.txt...z.txt， a1.txt...a10.txt b1.txt..b10.txt ... z1.txt...z10.txt </span><br><span class="line"><span class="built_in">cd</span> xxx/yyy/zzz</span><br><span class="line"><span class="built_in">touch</span> <span class="built_in">test</span>&#123;1..10&#125;.<span class="built_in">log</span> &#123;a..z&#125;.txt &#123;a..z&#125;&#123;1..10&#125;.txt</span><br><span class="line">18.删除zzz中所有名字是单个字母后缀是txt的文件 </span><br><span class="line"><span class="built_in">rm</span> -f ?.txt</span><br><span class="line">19.将zzz中所有<span class="built_in">test</span>开头的文件复制到上级目录yyy中</span><br><span class="line"><span class="built_in">cp</span> <span class="built_in">test</span>* ../</span><br></pre></td></tr></table></figure>

<p>上机练习3</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.将/etc/man_db.conf复制到家目录/root下; </span><br><span class="line"><span class="built_in">cp</span> /etc/man_db.conf /root/</span><br><span class="line"></span><br><span class="line">2.使用vim开启家目录下的man_db.conf在vim中设定一下行号; </span><br><span class="line">vim man_db.conf</span><br><span class="line">:<span class="built_in">set</span> num</span><br><span class="line"></span><br><span class="line">3.定位到第68行 </span><br><span class="line">:68</span><br><span class="line"></span><br><span class="line">4.移动到第一行，并且向下搜寻一下SECTION这个字符串，请问他在第几行? <span class="comment">#102行</span></span><br><span class="line">:1</span><br><span class="line">/SECTION</span><br><span class="line">5.接下来，我要</span><br><span class="line">将50到100行之间的小写[man]字符串改为大写[MAN]字符串 </span><br><span class="line">:50,100s/man/MAN/g</span><br><span class="line"></span><br><span class="line">6.修改完之后，突然反悔了，要全部复原，有哪些方法? </span><br><span class="line">u  <span class="comment">#撤销上一步操作</span></span><br><span class="line">:q!  <span class="comment">#强制不保存退出</span></span><br><span class="line"></span><br><span class="line">7.我要复制65到73这9行内容,并且贴到最后一行之后; </span><br><span class="line">:65,73y  <span class="comment">#复制65到73这9行内容</span></span><br><span class="line">:$  <span class="comment">#跳转到最后一行</span></span><br><span class="line">p  <span class="comment">#粘贴到下一行</span></span><br><span class="line">:65,73t$  <span class="comment">#组合命令，一行实现</span></span><br><span class="line"></span><br><span class="line">8.到第70行，并且向右删除5个字符 </span><br><span class="line">:70</span><br><span class="line">5x</span><br><span class="line"></span><br><span class="line">9.在第一行新增一行，该行内容输入[I am a student…] </span><br><span class="line">:1  <span class="comment">##先定位到第一行</span></span><br><span class="line">i  <span class="comment">#按i进入编辑模式再输入I am a student…</span></span><br><span class="line"></span><br><span class="line">10.找到原来猴子吃桃的题目，把代码拷贝到第50行之后 </span><br><span class="line"><span class="comment">#直接粘贴（）</span></span><br><span class="line"></span><br><span class="line">11.到第30行，删除30到38行 </span><br><span class="line">:30</span><br><span class="line">9dd</span><br><span class="line"></span><br><span class="line">12.取消行号，存储后离开吧！</span><br><span class="line">:<span class="built_in">set</span> nonu</span><br><span class="line">:wq</span><br><span class="line"></span><br><span class="line">13.配置静态ip，vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line"><span class="comment">#见上图锁死IP</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.19总结：Linux命令</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.19%E6%80%BB%E7%BB%93%EF%BC%9ALinux%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="Linux命令（搜索查看查找类）"><a href="#Linux命令（搜索查看查找类）" class="headerlink" title="Linux命令（搜索查看查找类）"></a>Linux命令（搜索查看查找类）</h1><h2 id="find-从指定目录查找文件"><a href="#find-从指定目录查找文件" class="headerlink" title="find 从指定目录查找文件"></a>find 从指定目录查找文件</h2><p>-name &lt;查询方式&gt; 按照指定的文件名查找模式查找文件<br>-mtime n 查找n天以前被修改过的所有文件。<br>-exec&lt;执行指令&gt;：假设find指令的回传值为True，就执行该指令；<br>-size &lt;文件大小&gt; 按照指定的文件大小查找文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /root -name <span class="string">&quot;*.pdf&quot;</span> find /root -name <span class="string">&quot;*.pdf&quot;</span> -a -size +1M find /root -mtime +7 <span class="comment">#七天前被修改过的文件 </span></span><br><span class="line">find /root -name <span class="string">&quot;*.sql&quot;</span> -<span class="built_in">exec</span> <span class="built_in">ls</span> -l &#123;&#125; \; <span class="comment">#查找文件并以ls -l形式显示 </span></span><br><span class="line">find /root -name <span class="string">&quot;*.pdf&quot;</span> -<span class="built_in">exec</span> <span class="built_in">rm</span> -f &#123;&#125; \;</span><br></pre></td></tr></table></figure>


<h2 id="head-与-tail-查看行"><a href="#head-与-tail-查看行" class="headerlink" title="head 与 tail 查看行"></a>head 与 tail 查看行</h2><p>头+ 尾-<br>head -n +行数 文件名 （不加-n默认开头十行）<br>tail -n -行数 文件名 （不加-n默认结尾十行） </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">head</span> a.txt <span class="comment">#默认显示开头十行</span></span><br><span class="line"><span class="built_in">tail</span> a.txt <span class="comment">#默认显示结尾十行 </span></span><br><span class="line"><span class="built_in">head</span> -n +3 a.txt   <span class="comment">#只显示前三行 </span></span><br><span class="line"><span class="built_in">tail</span> -n -3 a.txt   <span class="comment">#只显示后三行</span></span><br></pre></td></tr></table></figure>

<h2 id="cat-查看内容"><a href="#cat-查看内容" class="headerlink" title="cat 查看内容"></a>cat 查看内容</h2><p>cat（英文全拼：concatenate）命令用于连接文件并打印到标准输出设备上。<br>-n 显示行号包括空行<br>-b 跳过空白行编号<br>-s 将所有的连续的多个空行替换为一个空行（压缩成一个空行） </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> 1.<span class="built_in">log</span> 2.<span class="built_in">log</span> </span><br><span class="line"><span class="built_in">cat</span> -sb test.log</span><br></pre></td></tr></table></figure>

<h2 id="more查看大内容"><a href="#more查看大内容" class="headerlink" title="more查看大内容"></a>more查看大内容</h2><p>more 分屏查看文件（敲空格查看下一页）</p>
<h2 id="grep-过滤查找"><a href="#grep-过滤查找" class="headerlink" title="grep 过滤查找"></a>grep 过滤查找</h2><p>以行为单位进行查找，显示结果为满足的行<br>-c 统计满足的行数<br>-v 反转不包含</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep <span class="string">&quot;p&quot;</span> 1.txt <span class="comment">#单文件搜索包含p的行 </span></span><br><span class="line">grep <span class="string">&quot;P&quot;</span> 1.txt b.txt <span class="comment">#多文件搜索 </span></span><br><span class="line">grep -v <span class="string">&quot;p&quot;</span> 1.txt <span class="comment">#单文件搜索不包含p的行 </span></span><br><span class="line">grep -c <span class="string">&quot;p&quot;</span> 1.txt <span class="comment">#统计出现多少行 </span></span><br><span class="line">grep <span class="string">&quot;^n&quot;</span> 1.txt <span class="comment">#显示以n开头的行</span></span><br><span class="line">grep <span class="string">&quot;n$&quot;</span> 1.txt <span class="comment">#显示以n结尾的行 </span></span><br></pre></td></tr></table></figure>

<h2 id="history-查看已经执行过的历史命令"><a href="#history-查看已经执行过的历史命令" class="headerlink" title="history 查看已经执行过的历史命令"></a>history 查看已经执行过的历史命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">history</span> 5 <span class="comment">#最近五个命令</span></span><br></pre></td></tr></table></figure>

<h2 id="wc-统计文件"><a href="#wc-统计文件" class="headerlink" title="wc 统计文件"></a>wc 统计文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">wc</span> -c name.txt <span class="comment">#查看文件的字节数</span></span><br><span class="line"><span class="built_in">wc</span> -l name.txt <span class="comment">#查看文件的行数</span></span><br></pre></td></tr></table></figure>

<h2 id="du-查看空间"><a href="#du-查看空间" class="headerlink" title="du 查看空间"></a>du 查看空间</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">du</span> -h name.txt 人性化方式（带单位） </span><br><span class="line"><span class="built_in">du</span> -s name.txt 只统计每个参数所占用空间总的大小 </span><br><span class="line"><span class="built_in">du</span> -sh /root</span><br></pre></td></tr></table></figure>

<h2 id="管道符号-（配合命令使用）"><a href="#管道符号-（配合命令使用）" class="headerlink" title="管道符号 | （配合命令使用）"></a>管道符号 | （配合命令使用）</h2><p>管道符 | 表示将前一个命令的处理结果输出传递给后面的命令处理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">history</span> | grep -c <span class="string">&quot;ll&quot;</span> <span class="comment">#统计历史输入了几次ll命令</span></span><br></pre></td></tr></table></figure>

<h2 id="和-指令"><a href="#和-指令" class="headerlink" title="&gt; 和 &gt;&gt; 指令"></a>&gt; 和 &gt;&gt; 指令</h2><p>&gt; 输出重定向(覆盖写),<br>&gt;&gt; 追加（追加写）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l | grep -c <span class="string">&quot;^d&quot;</span> </span><br><span class="line"><span class="built_in">ls</span> -l | grep <span class="string">&quot;^d&quot;</span> | <span class="built_in">wc</span> -l </span><br><span class="line"><span class="built_in">history</span> | grep -c <span class="string">&quot;ls&quot;</span> </span><br><span class="line"><span class="built_in">history</span> | grep <span class="string">&quot;ls&quot;</span> | grep <span class="string">&quot;s$&quot;</span> &gt; ttt.txt </span><br><span class="line"><span class="built_in">cat</span> a.txt b.txt &gt;&gt; ttt.txt </span><br><span class="line"><span class="built_in">cat</span> a.txt b.txt | grep <span class="string">&quot;s&quot;</span> &gt;&gt; ttt.txt</span><br></pre></td></tr></table></figure>


<h1 id="解压安装类"><a href="#解压安装类" class="headerlink" title="解压安装类"></a>解压安装类</h1><h2 id="zip压缩-unzip解压"><a href="#zip压缩-unzip解压" class="headerlink" title="zip压缩 unzip解压"></a>zip压缩 unzip解压</h2><p>常用选项：<br>-r  递归压缩，即压缩目录<br>-d&lt;目录&gt;  指定解压后文件的存放目录<br>压缩用相对路径，解压可以用绝对路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 压缩文件和目录 </span></span><br><span class="line">zip 文件名.zip 将要压缩的内容 </span><br><span class="line">zip test.zip -r a/b  <span class="comment">#注：绝对路径压缩会带前面的路径文件夹</span></span><br><span class="line"><span class="comment"># 解压缩文件 </span></span><br><span class="line">unzip 文件名.zip</span><br><span class="line">unzip linux.x64_11gR2_database_1of2.zip -d /opt/app/database/</span><br></pre></td></tr></table></figure>

<h2 id="tar-压缩解压"><a href="#tar-压缩解压" class="headerlink" title="tar 压缩解压"></a>tar 压缩解压</h2><p>-z  调用 gzip 程序进行压缩或解压<br>-c  创建（Create）.tar 格式的包文件<br>-x  解开.tar 格式的包文件<br>-c  &lt;&#x2F;解压时指定释放的目标文件夹 指定目录<br>-v  输出详细信息（Verbose）<br>-f  表示使用归档文件（一般都要带上表示使用tar，放在最后）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">压缩：tar [选项] ... 归档文件名（压缩包名字） 源文件或目录 <span class="comment">#压缩选项一般用-zcvf</span></span><br><span class="line">解压：tar [选项] ... 归档文件名 [-C 目标目录]  <span class="comment">#解压选项一般用-zxvf</span></span><br><span class="line">tar -zcvf abc123.tar.gz abc.txt 123.txt  <span class="comment">#将abc.txt和123.txt压缩成abc123.tar.gz</span></span><br><span class="line">tar -zcvf abc123.tar.gz m </span><br><span class="line">tar -zxvf abc123.tar.gz -C /home/test/  <span class="comment">#解压到指定目录</span></span><br></pre></td></tr></table></figure>

<h2 id="Yum包管理"><a href="#Yum包管理" class="headerlink" title="Yum包管理"></a>Yum包管理</h2><p>Yum是一个Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载 RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum list | grep xxx  <span class="comment">#查询yum服务器是否有需要安装的软件</span></span><br><span class="line">yum info xxx  <span class="comment">#查询指定的yum包信息</span></span><br><span class="line">yum install xxx  <span class="comment">#安装指定的yum包</span></span><br><span class="line">yum remove xxx  <span class="comment">#卸载指定的yum包 </span></span><br><span class="line">yum list installed  <span class="comment">#查看已安装的软件包</span></span><br><span class="line">yum install ntpdate  <span class="comment"># # 安装网络对时</span></span><br></pre></td></tr></table></figure>

<h1 id="用户权限类"><a href="#用户权限类" class="headerlink" title="用户权限类"></a>用户权限类</h1><p>登录时尽量少用root帐号登录，因为它是系统管理员，最大的权限，避免操作失误。可 以利用普通用户登录，登录后再用 su - 用户名 命令来切换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su - <span class="built_in">test</span>  <span class="comment">#切换到test用户</span></span><br><span class="line">su - root <span class="comment">#切换到root用户（需要输入密码）</span></span><br></pre></td></tr></table></figure>

<h2 id="用户及用户组"><a href="#用户及用户组" class="headerlink" title="用户及用户组"></a>用户及用户组</h2><p>类似于角色，系统可以对有共性的多个用户进行统一的管理 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">新增用户组 groupadd xiaoshou </span><br><span class="line">添加用户 useradd xiaomei </span><br><span class="line">添加用户时加上组 useradd -g xiaoshou xiaomei </span><br><span class="line">指定/修改密码 passwd xiaomei </span><br><span class="line">查询用户信息 <span class="built_in">id</span> xiaomei </span><br><span class="line">切换用户 su - xiaomei </span><br><span class="line">查看当前用户 <span class="built_in">whoami</span> </span><br><span class="line">修改用户的组 usermod -g 用户组 用户名 </span><br><span class="line">删除用户 userdel xiaomei (<span class="built_in">exit</span>退出后再删除) </span><br><span class="line">删除组 groupdel xiaoshou</span><br></pre></td></tr></table></figure>
<h3 id="用户和组的相关文件"><a href="#用户和组的相关文件" class="headerlink" title="用户和组的相关文件"></a>用户和组的相关文件</h3><p><strong>&#x2F;etc&#x2F;passwd 文件</strong><br>用户（user）的配置文件，记录用户的各种信息<br>每行的含义：用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell</p>
<p><strong>&#x2F;etc&#x2F;group 文件</strong><br>组(group)的配置文件，记录Linux包含的组的信息<br>每行含义：组名:口令:组标识号:组内用户列表</p>
<h2 id="权限详解"><a href="#权限详解" class="headerlink" title="权限详解"></a>权限详解</h2><p>[ r ]代表可读(read)<br>[ w ]代表可写(write)<br>[ x ]代表可执行(execute)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">drwxr-xr-x.  2 root    root      6 5月  16 14:26 a</span><br><span class="line">-rw-rw-rw-.  1 wukong shenxian   0 5月  19 16:32 1.txt</span><br></pre></td></tr></table></figure>
<p>10个字符.<br>第一个字符代表文件类型：文件（-） 目录（d） 链接（l）<br>接下来每三个字符为一组，共三组，分别代表 文件拥有者、同组的其他用户、不同组的其他用户</p>
<p>可用数字表示为：r&#x3D;4， w&#x3D;2， x&#x3D;1<br>因此 rwx&#x3D;4+2+1&#x3D;7</p>
<h2 id="chmod-修改权限"><a href="#chmod-修改权限" class="headerlink" title="chmod 修改权限"></a>chmod 修改权限</h2><p>u 所有者  g 所有组  o 其他人  a 所有人(u、g、o的总和) </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> u=rwx,g=rx,o=x name.txt</span><br><span class="line"><span class="built_in">chmod</span> o+w name.txt </span><br><span class="line"><span class="built_in">chmod</span> a-x name.txt</span><br><span class="line"><span class="built_in">chmod</span> +x name.txt <span class="comment">#不写用户默认为所有人，效果同a+x</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> u=rwx,g=rx,o=x file</span><br><span class="line"><span class="built_in">chmod</span> 751 file  <span class="comment">#功能同上     </span></span><br><span class="line">   　　 　   </span><br><span class="line"><span class="built_in">chmod</span> -R u+r directory  <span class="comment">#递归地给directory目录下所有文件和子目录的属主分配读的权限</span></span><br></pre></td></tr></table></figure>

<h3 id="chown-修改文件所有者"><a href="#chown-修改文件所有者" class="headerlink" title="chown 修改文件所有者"></a>chown 修改文件所有者</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> [-R] 所有者 文件或目录  <span class="comment">#-R表示递归里面的所有文件及目录 </span></span><br><span class="line"><span class="built_in">chown</span> test02 /root/test.txt </span><br><span class="line"><span class="built_in">chown</span> -R 用户:组 /usr/local/mysql </span><br><span class="line"><span class="built_in">chown</span> meimei:students 1.txt</span><br></pre></td></tr></table></figure>

<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#上机练习4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#1.将/etc/passwd文件拷贝到/root/目录下，并改名为ptest</span></span><br><span class="line"><span class="built_in">cp</span> /etc/passwd /root/ptest</span><br><span class="line"><span class="comment">#2.查看ptest的前八行数据 </span></span><br><span class="line"><span class="built_in">head</span> -n +8 ptest</span><br><span class="line"><span class="comment">#3.过滤查看ptest文件中包含root的行 </span></span><br><span class="line">grep <span class="string">&quot;root&quot;</span> ptest</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.查看/home目录占用空间 </span></span><br><span class="line"><span class="built_in">du</span> -sh /home</span><br><span class="line"></span><br><span class="line"><span class="comment">#5./root中新建文件test.log，插入内容如下： @directory-client @gnome-apps @gnome-desktop </span></span><br><span class="line"><span class="built_in">touch</span> /root/test.log</span><br><span class="line">vim test.log</span><br><span class="line">i <span class="string">&quot;@directory-client @gnome-apps @gnome-desktop &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#6.将test.log和ptest合并到/root目录下的test1.log </span></span><br><span class="line"><span class="built_in">cat</span> test.log ptest &gt; /root/test1.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#7.将/root目录下的ptest加上行号输出到test2.log</span></span><br><span class="line"><span class="built_in">cat</span> -n /root/ptest &gt; test2.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#8.查找并显示根目录下大于1M的png文件 </span></span><br><span class="line">find / -name <span class="string">&quot;*.png&quot;</span> -a -size +1M</span><br><span class="line"></span><br><span class="line"><span class="comment">#9.统计系统上使用ls命令的次数 </span></span><br><span class="line"><span class="built_in">history</span> | grep -c <span class="string">&quot;ls&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#10.将/root/ptest中出现了root的行存储到test.txt文件 </span></span><br><span class="line">grep <span class="string">&quot;root&quot;</span> /root/ptest &gt; test.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#11.根据名称查找 /root 下的txt文件 </span></span><br><span class="line">find /root -name <span class="string">&quot;*.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#12.查找整个linux系统下大于20M的文件 (+n 大于 -n小于 n等于) </span></span><br><span class="line">find / -size +20M</span><br><span class="line"></span><br><span class="line"><span class="comment">#13.查找/root/xxx/yyy/zzz下所有.txt文件并把他们删掉 </span></span><br><span class="line">find /root/xxx/yyy/zzz -name <span class="string">&quot;*.txt&quot;</span> -<span class="built_in">exec</span> <span class="built_in">rm</span> -f &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment">#14.统计ptest文件的字节数 </span></span><br><span class="line"><span class="built_in">wc</span> -c ptest</span><br><span class="line"><span class="built_in">cat</span> ptest | <span class="built_in">wc</span> -c  <span class="comment">#只显示数字</span></span><br><span class="line"><span class="comment">#15.统计ptest文件以s开头的行的数量</span></span><br><span class="line">grep -c <span class="string">&quot;^s&quot;</span> ptest</span><br><span class="line"></span><br><span class="line"><span class="comment">#上机练习5</span></span><br><span class="line"><span class="comment">#1.将 /root/xxx 压缩成 a.tar.gz </span></span><br><span class="line">tar -zcvf a.tar.gz /root/xxx </span><br><span class="line"></span><br><span class="line"><span class="comment">#2.将 a.tar.gz 解压到/root/ceshi/ </span></span><br><span class="line"><span class="built_in">mkdir</span> ceshi</span><br><span class="line">tar -zxvf a.tar.gz -C /root/ceshi/</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.增加用户组 students </span></span><br><span class="line">groupadd students</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.添加新用户kunkun及meimei并直接加到students组 </span></span><br><span class="line">useradd -g students kunkun</span><br><span class="line">useradd -g students meimei</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.指定kunkun密码, 然后切换到这个用户 </span></span><br><span class="line">passwd kunkun</span><br><span class="line">kunkun123</span><br><span class="line">su - kunkun</span><br><span class="line"><span class="comment">#6.到该用户的家目录新建一个student.txt </span></span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line"><span class="built_in">touch</span> student.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.查询并写入该用户的用户信息到student.txt, 退出exit </span></span><br><span class="line"><span class="built_in">id</span> kunkun &gt; student.txt</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#8.使用root账号新建文件1.txt及2.txt 对文件/root/1.txt 为所有用户分配读写执行权限 </span></span><br><span class="line"><span class="built_in">touch</span> 1.txt 2.txt</span><br><span class="line"><span class="built_in">chmod</span> 777 /root/1.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#9.对文件/root/2.txt 设置权限为rwxr-xr--</span></span><br><span class="line"><span class="built_in">chmod</span> 754 /root/2.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#10.对文件/root/2.txt 设置属组权限增加写的权限 </span></span><br><span class="line"><span class="built_in">chmod</span> g+w /root/2.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#11.给/root/1.txt文件修改kunkun用户及students用户组权限 </span></span><br><span class="line"><span class="built_in">chown</span> kunkun:students /root/1.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#12./root/下创建文件夹open，里面批量创建文件open1.log...open100.log </span></span><br><span class="line"><span class="built_in">mkdir</span> open</span><br><span class="line"><span class="built_in">touch</span> /root/open/open&#123;1..100&#125;.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#13.对文件夹open设置为meimei用户及students用户组权限 </span></span><br><span class="line"><span class="built_in">chown</span> -R meimei:students open</span><br><span class="line"></span><br><span class="line"><span class="comment">#14.对文件夹open设置权限为rwxr-xr-x </span></span><br><span class="line"><span class="built_in">chmod</span> -R 755 open</span><br><span class="line"></span><br><span class="line"><span class="comment">#15.查看/etc/group及/etc/passwd文件内容重定向到/root/open.txt中 </span></span><br><span class="line"><span class="built_in">cat</span> /etc/group /etc/passwd &gt; /root/open.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#16.删除用户kunkun和meimei，查看/etc/passwd的后3行数据追加到/root/open.txt中 </span></span><br><span class="line">userdel kunkun</span><br><span class="line">userdel meimei</span><br><span class="line"><span class="built_in">tail</span> -n -3 /etc/passwd &gt;&gt; /root/open.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#17.删除用户组，查看/etc/group的后3行数据追加到/root/open.txt中 </span></span><br><span class="line">groupdel students</span><br><span class="line"><span class="built_in">tail</span> -n -3 /etc/group &gt;&gt; /root/open.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#18.删除home下两个用户的文件夹及里面的内容</span></span><br><span class="line"><span class="built_in">rm</span> -rf /home/kunkun /home/meimei</span><br><span class="line"></span><br><span class="line"><span class="comment">#19.神仙妖怪大战，使用拼音来化名，例如：shaseng为沙僧 </span></span><br><span class="line"><span class="comment">#建立两个组 (神仙, 妖怪)，建立用户 (悟空, 八戒, 沙僧)，把悟空和八戒放入妖怪，沙僧放入神仙 </span></span><br><span class="line">groupadd shenxian</span><br><span class="line">groupadd yaoguai</span><br><span class="line">useradd -g yaoguai wukong</span><br><span class="line">useradd -g yaoguai bajie</span><br><span class="line">useradd -g shenxian shaseng</span><br><span class="line"><span class="comment">#设置三个用户的密码 </span></span><br><span class="line">passwd wukong</span><br><span class="line">wukong123</span><br><span class="line">passwd bajie</span><br><span class="line">bajie123</span><br><span class="line">passwd shaseng</span><br><span class="line">shaseng123</span><br><span class="line"><span class="comment">#用悟空在自己的家目录下建立一个文件 monkey.txt，该文件要输出 i am a monkey </span></span><br><span class="line">su - wukong</span><br><span class="line"><span class="built_in">touch</span> monkey.txt</span><br><span class="line">vim monkey.txt</span><br><span class="line">i <span class="comment">#i am a monkey</span></span><br><span class="line">esc :wq</span><br><span class="line"><span class="comment">#用root账号给八戒一个对悟空文件夹及内容可以rwx的权限 </span></span><br><span class="line">su - root</span><br><span class="line"><span class="built_in">chmod</span> -R g=rwx /home/wukong</span><br><span class="line"><span class="comment">#八戒修改 monkey.txt 加入一句话( i am a pig ) </span></span><br><span class="line">su - bajie</span><br><span class="line">vim /home/wukong/monkey.txt</span><br><span class="line">i <span class="comment">#i am a pig</span></span><br><span class="line">esc :wq</span><br><span class="line"><span class="comment">#测试一下沙僧对该文件有没有权限访问 </span></span><br><span class="line">su - shaseng</span><br><span class="line">vim /home/wukong/monkey.txt <span class="comment">#显示权限不足</span></span><br><span class="line">:q</span><br><span class="line"><span class="comment">#把沙僧放入妖怪组 </span></span><br><span class="line">su - root</span><br><span class="line">usermod -g yaoguai shaseng</span><br><span class="line"><span class="comment">#让沙僧修改该文件 monkey.txt，加入一句话 (&quot;我是沙僧，我是妖怪!&quot;)</span></span><br><span class="line">su - shaseng</span><br><span class="line">vim /home/wukong/monkey.txt</span><br><span class="line">i <span class="comment">#我是沙僧，我是妖怪!</span></span><br><span class="line">esc :wq</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.19总结：git相关</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.19%E6%80%BB%E7%BB%93%EF%BC%9Agit%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<h1 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h1><p>右键–git bash here–命令窗口（一般在对应工作区右键打开） </p>
<p>仓库区和工作区<br>.git文件夹为仓库区：类似于一个数据存储着每一次提交的变化<br>.git所在目录称为工作区，我们在这里创建项目和其他文件 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init：创建本地仓库 </span><br><span class="line">git add 文件名 <span class="comment">#把文件添加到暂存区，暂存区存储将要被提交的文件变化</span></span><br><span class="line">git add * <span class="comment">#上一条代码的文件名可换为*号表示添加所有文件</span></span><br><span class="line">git commit -m “说明文本”  <span class="comment">#提交暂存区存储变化并生成一个新的版本</span></span><br><span class="line">git status  <span class="comment">#查看命令状态（可选）</span></span><br><span class="line">git <span class="built_in">log</span>  <span class="comment">#查看日志</span></span><br></pre></td></tr></table></figure>

<h1 id="Git服务器和远程仓库"><a href="#Git服务器和远程仓库" class="headerlink" title="Git服务器和远程仓库"></a>Git服务器和远程仓库</h1><p>github.com 全球最大开源项目托管平台 <a href="https://github.com/">https://github.com/</a><br>Gitee.com 国内知名开源项目托管平台 码云 <a href="https://gitee.com/">https://gitee.com</a></p>
<h1 id="gitee码云截图"><a href="#gitee码云截图" class="headerlink" title="gitee码云截图"></a>gitee码云截图</h1><img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.19%E6%80%BB%E7%BB%93%EF%BC%9Agit%E7%9B%B8%E5%85%B3/file-20250618200911701.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.19%E6%80%BB%E7%BB%93%EF%BC%9Agit%E7%9B%B8%E5%85%B3/file-20250618200929532.png" class="">
<img src="/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.19%E6%80%BB%E7%BB%93%EF%BC%9Agit%E7%9B%B8%E5%85%B3/file-20250618200943196.png" class="">
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.20总结：安装MySQL和Oracle</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.20%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%89%E8%A3%85MySQL%E5%92%8COracle/</url>
    <content><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="网络配置类"><a href="#网络配置类" class="headerlink" title="网络配置类"></a>网络配置类</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">clear  <span class="comment">#清屏</span></span><br><span class="line">ifconfig  <span class="comment">#列出网卡信息</span></span><br><span class="line">ping ip地址  <span class="comment">#看网络是不是连通</span></span><br><span class="line">free  <span class="comment">#查看内存使用情况</span></span><br></pre></td></tr></table></figure>

<h3 id="top-查看系统整体资源"><a href="#top-查看系统整体资源" class="headerlink" title="top 查看系统整体资源"></a>top 查看系统整体资源</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PID：进程的标识符。 </span><br><span class="line">USER：运行进程的用户名。 </span><br><span class="line">PR（优先级）：进程的优先级。 </span><br><span class="line">NI（Nice值）：进程的优先级调整值。 </span><br><span class="line">VIRT（虚拟内存）：进程使用的虚拟内存大小。 </span><br><span class="line">RES（常驻内存）：进程实际使用的物理内存大小。 </span><br><span class="line">SHR（共享内存）：进程共享的内存大小。 </span><br><span class="line">%CPU：进程占用 CPU 的使用率。 </span><br><span class="line">%MEM：进程占用内存的使用率。 </span><br><span class="line">TIME+：进程的累计 CPU 时间。</span><br></pre></td></tr></table></figure>

<h2 id="ps-显示系统执行的进程"><a href="#ps-显示系统执行的进程" class="headerlink" title="ps 显示系统执行的进程"></a>ps 显示系统执行的进程</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ps -aux  <span class="comment">#查看所有用户所有进程 </span></span><br><span class="line">ps -ef  <span class="comment">#查看子父进程之间的关系（常用）</span></span><br><span class="line"></span><br><span class="line">ps -ef | grep <span class="string">&quot;mysql&quot;</span> <span class="comment">#查看mysql服务</span></span><br><span class="line">ps -ef | grep <span class="string">&quot;oracle&quot;</span> <span class="comment">#查看oracle服务</span></span><br></pre></td></tr></table></figure>
<h2 id="pstree-查看进程树"><a href="#pstree-查看进程树" class="headerlink" title="pstree 查看进程树"></a>pstree 查看进程树</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pstree 1660  <span class="comment">#树状的形式显示进程的pid</span></span><br></pre></td></tr></table></figure>
<h2 id="kill"><a href="#kill" class="headerlink" title="kill"></a>kill</h2><p>最常用的信号是：<br>1 (HUP)：重新加载进程。<br>9 (KILL)：强制杀死一个进程。<br>15 (TERM)：正常停止一个进程。<br>kill -9 16989 杀死进程</p>
<h2 id="systemctl-服务管理"><a href="#systemctl-服务管理" class="headerlink" title="systemctl 服务管理"></a>systemctl 服务管理</h2><p>systemctl [ start | stop | restart | status] 服务名<br>service 服务名 [ start | stop | restart | status]<br>服务名：mysql network firewalld等<br>systemctl是新版本写法，service是老版本写法<br>防火墙操作：status&#x2F;start&#x2F;stop&#x2F;restart&#x2F;disable&#x2F;enable 多两个<br>查看防火墙： systemctl status firewalld<br>停止防火墙： systemctl disable firewalld 重启后生效<br>注：直接关死即可，单机版使用防火墙</p>
<h2 id="netstat-端口（port）"><a href="#netstat-端口（port）" class="headerlink" title="netstat 端口（port）"></a>netstat 端口（port）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -nltp <span class="comment">#查看网络端口</span></span><br></pre></td></tr></table></figure>
<p>mysql 端口默认 3306<br>oracle 端口默认 1521<br>centos7 端口默认 22<br>nginx 端口默认 80<br>达梦 端口默认5236</p>
<h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su - oracle</span><br><span class="line">sqlplus / as sysdba </span><br><span class="line">SQL&gt; startup; </span><br><span class="line">SQL&gt; quit;</span><br><span class="line">lsnrctl start</span><br></pre></td></tr></table></figure>

<h2 id="解锁scott"><a href="#解锁scott" class="headerlink" title="解锁scott"></a>解锁scott</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su - oracle</span><br><span class="line">sqlplus / as sysdba </span><br><span class="line">SQL&gt; alter user scott identified by oracle123456; </span><br><span class="line">SQL&gt; alter user scott account unlock; </span><br><span class="line">SQL&gt; quit;</span><br></pre></td></tr></table></figure>

<h2 id="ifconfig没有东西：网卡丢失"><a href="#ifconfig没有东西：网卡丢失" class="headerlink" title="ifconfig没有东西：网卡丢失"></a>ifconfig没有东西：网卡丢失</h2><p>出现这种报错一般是和 NetworkManager 服务冲突导致的，直接关闭 NetworkManger 服务就好了。<br>1.关闭NetworkManager ：service NetworkManager stop<br>2.禁止开机启动 ：systemctl disable NetworkManager<br>3.重启网络： service network restart<br>4.查看网络状态：systemctl status network<br>或者登录虚拟机，点击电源按钮选择有线连接即可</p>
<h2 id="文件夹"><a href="#文件夹" class="headerlink" title="文件夹"></a>文件夹</h2><p>&#x2F;usr&#x2F;local&#x2F;  一般放小软件的安装<br>&#x2F;opt&#x2F;app&#x2F;  一般放大软件的安装</p>
<h1 id="DBeaver连接MySQL"><a href="#DBeaver连接MySQL" class="headerlink" title="DBeaver连接MySQL"></a>DBeaver连接MySQL</h1><p>![[Pasted image 20250520142144.png]]</p>
<h2 id="DBeaver连接Oracle"><a href="#DBeaver连接Oracle" class="headerlink" title="DBeaver连接Oracle"></a>DBeaver连接Oracle</h2><p>![[Pasted image 20250520185323.png]]</p>
<h2 id="开机自启修改"><a href="#开机自启修改" class="headerlink" title="开机自启修改"></a>开机自启修改</h2><p>![[Pasted image 20250520182457.png]]<br>![[Pasted image 20250520182309.png]]<br>![[Pasted image 20250520183613.png]]</p>
<h3 id="开机自启验证"><a href="#开机自启验证" class="headerlink" title="开机自启验证"></a>开机自启验证</h3><p>![[Pasted image 20250520183234.png]]<br>![[Pasted image 20250520183432.png]]</p>
<h1 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h1><p>![[Pasted image 20250520184543.png]]</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.21总结：定时任务、添加硬盘、python、nginx安装</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.21%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E3%80%81%E6%B7%BB%E5%8A%A0%E7%A1%AC%E7%9B%98%E3%80%81python%E3%80%81nginx%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="echo-输出字符"><a href="#echo-输出字符" class="headerlink" title="echo 输出字符"></a>echo 输出字符</h2><p>换行打印输入字符 解释<br>-n 不换行显示<br>-e 出现转义字符进行解释处理<br>转义字符<br>\n 换行 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;hello&quot;</span>  <span class="comment">#不换行显示</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;你好\n坤坤&quot;</span>  <span class="comment">#换行显示</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;test&quot;</span> &gt; t.txt</span><br></pre></td></tr></table></figure>

<h2 id="date-显示日期"><a href="#date-显示日期" class="headerlink" title="date 显示日期"></a>date 显示日期</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">date</span> (显示当前时间) </span><br><span class="line"><span class="built_in">date</span> +<span class="string">&quot;%Y&quot;</span>  <span class="comment">#显示当前年份, +号紧贴，没有空格</span></span><br><span class="line"><span class="built_in">date</span> +<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>  <span class="comment">#自定格式显示</span></span><br><span class="line"><span class="built_in">date</span> +<span class="string">&quot;%Y年%m月%d日 %H时%M分%S秒&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="date-d-日期解析"><a href="#date-d-日期解析" class="headerlink" title="date -d 日期解析"></a>date -d 日期解析</h3><p>用于字符转日期</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;2009-12-12&quot;</span> </span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;2009-12-12 + 1 day&quot;</span> </span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;+1 day&quot;</span> </span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;+1 month&quot;</span> </span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;+1 year&quot;</span> </span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;2009-12-12 + 1 day&quot;</span> +<span class="string">&quot;%Y/%m/%d %H:%M:%S&quot;</span> &gt; time.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">date</span> -s <span class="string">&quot;2023-08-08 12:34:56&quot;</span> <span class="comment">#设置系统当前时间</span></span><br></pre></td></tr></table></figure>

<h3 id="linux网络对时"><a href="#linux网络对时" class="headerlink" title="linux网络对时"></a>linux网络对时</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装netdate </span></span><br><span class="line">yum install ntpdate </span><br><span class="line"><span class="comment">#执行命令，同步时间。 </span></span><br><span class="line">ntpdate us.pool.ntp.org</span><br></pre></td></tr></table></figure>

<h2 id="cal-查看日历"><a href="#cal-查看日历" class="headerlink" title="cal 查看日历"></a>cal 查看日历</h2><p>cal 日 月 年 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cal  <span class="comment">#显示当前日历 </span></span><br><span class="line">cal 2023  <span class="comment">#显示2023年日历 </span></span><br><span class="line">cal 01 2023  <span class="comment">#显示2023年1月日历 </span></span><br><span class="line">cal 15 01 2023  <span class="comment">#显示2023年1月15日日历</span></span><br></pre></td></tr></table></figure>
<h2 id="wget命令"><a href="#wget命令" class="headerlink" title="wget命令"></a>wget命令</h2><p>用来从指定的URL下载文件。<br>python下载地址：<a href="https://www.python.org/ftp/python">https://www.python.org/ftp/python</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tar.xz</span><br></pre></td></tr></table></figure>
<h2 id="seq命令"><a href="#seq命令" class="headerlink" title="seq命令"></a>seq命令</h2><p>用于产生从某个数到另外一个数之间的所有整数<br>seq [选项]… 首数 增量 尾数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">seq</span> 1 10  <span class="comment">#正序输出，默认递增1</span></span><br><span class="line"><span class="built_in">seq</span> 1 2 100  <span class="comment">#递增2 #2,4,6...100</span></span><br><span class="line"><span class="built_in">seq</span> 100 -1 1  <span class="comment">#倒序输出</span></span><br></pre></td></tr></table></figure>

<h2 id="Linux定时执行计划"><a href="#Linux定时执行计划" class="headerlink" title="Linux定时执行计划"></a>Linux定时执行计划</h2><p>方式一：修改配置文件：&#x2F;etc&#x2F;crontab （要指明执行用户）<br>分 时 日 月 周 用户名 执行的命令 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/crontab </span><br><span class="line">5 * * * * root <span class="built_in">date</span> &gt; /root/time.txt </span><br><span class="line"><span class="built_in">date</span> +<span class="string">&quot;\%Y&quot;</span> &gt; /root/time.txt <span class="comment">#定时任务中的特殊符号需要转义%</span></span><br></pre></td></tr></table></figure>

<p>方式二：通过crontab命令（不需要指明执行用户，默认就是当前用户） </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e  <span class="comment"># 编辑用户的cron配置文件； </span></span><br><span class="line">crontab -l  <span class="comment">#查看用户的计划任务； </span></span><br><span class="line">crontab -r  <span class="comment">#删除用户的计划任务； </span></span><br><span class="line">5 * * * * <span class="built_in">date</span> &gt; /root/time.txt</span><br></pre></td></tr></table></figure>

<p>特殊符号说明<br>*  任何时间。比如 第一个 * 表示一小时中每分钟都执行一次的意思<br>,   不连续的时间。比如 0 8,12,16 * * * 表示在每天的8点0分，12点0分，16点0分都执行一次命令<br>-   连续的时间范围。比如 0 5 * * 1-6 表示在周一到六凌晨5点0分执行命令<br>*&#x2F;n   每隔多久执行一次。比如 *&#x2F;10 * * * * 表示每隔10分钟就执行一遍命令</p>
<h2 id="linux添加硬盘分区挂载"><a href="#linux添加硬盘分区挂载" class="headerlink" title="linux添加硬盘分区挂载"></a>linux添加硬盘分区挂载</h2><h3 id="fdisk"><a href="#fdisk" class="headerlink" title="fdisk"></a>fdisk</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk -l  <span class="comment">#可以查看系统所有硬盘的分区情况 </span></span><br><span class="line">fdisk /dev/sdb1  <span class="comment">#可以分区</span></span><br></pre></td></tr></table></figure>
<h3 id="df"><a href="#df" class="headerlink" title="df"></a>df</h3><p>用于显示 Linux 系统中各文件系统的硬盘使用情况，包括文件系统所在硬盘分区的总容量、已使用的容量、剩余容量等。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">df</span> -h  <span class="comment">#查看磁盘使用及挂载情况</span></span><br></pre></td></tr></table></figure>
<h3 id="linux添加硬盘分区挂载-1"><a href="#linux添加硬盘分区挂载-1" class="headerlink" title="linux添加硬盘分区挂载"></a>linux添加硬盘分区挂载</h3><p>1.关闭虚拟机添加硬盘：虚拟机-设置-添加-硬盘-1G-单个文件存储-打开虚拟机<br>进入目录&#x2F;dev，查看出现文件sdb<br>df -h 列出磁盘使用情况，目前没有新加的硬盘<br>fdisk -l 发现存在待分区的磁盘 </p>
<p>2.分区：fdisk &#x2F;dev&#x2F;sdb 依次输入m n p 1 空 空 w<br>cd &#x2F;dev 看到sdb1文件出现 </p>
<p>3.创建文件格式：mkfs.ext4 &#x2F;dev&#x2F;sdb1 </p>
<p>4.挂载：先创建目录，mkdir -p &#x2F;mnt&#x2F;pan1<br>vim &#x2F;etc&#x2F;fstab<br>添加&#x2F;dev&#x2F;sdb1 &#x2F;mnt&#x2F;pan1 ext4 defaults 0 0<br>重启虚拟机<br>df -h 查看挂载情况<br>df -hl &#x2F;mnt&#x2F;pan1 查看目录空间</p>
<h1 id="python安装"><a href="#python安装" class="headerlink" title="python安装"></a>python安装</h1><p>![[Pasted image 20250521151924.png]]</p>
<h1 id="nginx安装"><a href="#nginx安装" class="headerlink" title="nginx安装"></a>nginx安装</h1><p>![[Pasted image 20250521160817.png]]<br>![[Pasted image 20250521160938.png]]</p>
<h1 id="vscode连接linux编写python"><a href="#vscode连接linux编写python" class="headerlink" title="vscode连接linux编写python"></a>vscode连接linux编写python</h1><p>![[Pasted image 20250521171257.png]]</p>
<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.把当前时间显示为字符串格式，例如：2023年08月08日 12时30分25秒 </span></span><br><span class="line"><span class="built_in">date</span> +<span class="string">&quot;%Y年%m月%d日 %H时%M分%S秒&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.把字符串20880909转换为时间类型显示 </span></span><br><span class="line"><span class="built_in">date</span> -d <span class="string">&quot;20880909&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.设置当前系统时间为你的生日 </span></span><br><span class="line"><span class="built_in">date</span> -s <span class="string">&quot;1999-10-13&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.把系统时间更新为网络时间 </span></span><br><span class="line">ntpdate us.pool.ntp.org</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.显示2008年的日历信息 </span></span><br><span class="line">cal 2008</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.显示你的出生年月日的日历信息</span></span><br><span class="line">cal 13 10 1999</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.输出一个直角三角形</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;*\n***\n*****\n*******\n*********&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#8.生成一个序列8 18 28 ...... 98 </span></span><br><span class="line"><span class="built_in">seq</span> 8 10 98</span><br><span class="line"></span><br><span class="line"><span class="comment">#9.生成一个序列99 96 93 ...... 6 3 </span></span><br><span class="line"><span class="built_in">seq</span> 99 -3 3</span><br><span class="line"></span><br><span class="line"><span class="comment">#10.用第一种方式设置定时任务，每2分钟把当前系统时间追加到文件/root/time.txt中(格式：2023-06-12 10:39:20) </span></span><br><span class="line">vim /etc/crontab</span><br><span class="line">i</span><br><span class="line">*/2 * * * * root <span class="built_in">date</span> +<span class="string">&quot;\%Y-\%m-\%d \%H:\%M:\%S&quot;</span> &gt;&gt; /root/time.txt</span><br><span class="line">esc :wq</span><br><span class="line"></span><br><span class="line"><span class="comment">#11.用第二种方式设置定时任务，每一分钟将/etc/passwd拷贝到/root下 </span></span><br><span class="line">crontab -e</span><br><span class="line">i</span><br><span class="line">* * * * * <span class="built_in">cp</span> /etc/passwd /root/</span><br><span class="line">esc :wq</span><br><span class="line"></span><br><span class="line"><span class="comment">#12.删除上面的两个定时任务</span></span><br><span class="line">vim /etc/crontab</span><br><span class="line">i</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">esc :wq</span><br><span class="line">crontab -r</span><br></pre></td></tr></table></figure>
<h2 id="添加一块2G的硬盘，分区并挂载到-mnt-ceshi目录下："><a href="#添加一块2G的硬盘，分区并挂载到-mnt-ceshi目录下：" class="headerlink" title="添加一块2G的硬盘，分区并挂载到&#x2F;mnt&#x2F;ceshi目录下："></a>添加一块2G的硬盘，分区并挂载到&#x2F;mnt&#x2F;ceshi目录下：</h2><p>关闭虚拟机-&gt;虚拟机-设置-添加-硬盘-2G-单个文件存储-打开虚拟机</p>
<p>进入目录&#x2F;dev，查看出现文件sdb<br>![[Pasted image 20250521113430.png]]</p>
<p>df -h 列出磁盘使用情况，目前没有新加的硬盘<br>![[Pasted image 20250521113720.png]]</p>
<p>fdisk -l 发现存在待分区的磁盘<br>![[Pasted image 20250521113840.png]]</p>
<p>分区：fdisk &#x2F;dev&#x2F;sdb 依次输入m n p 1 空 空 w<br>![[Pasted image 20250521114030.png]]</p>
<p>cd &#x2F;dev 看到sdb1文件出现<br>![[Pasted image 20250521114153.png]]</p>
<p>创建文件格式：mkfs.ext4 &#x2F;dev&#x2F;sdb1<br>![[Pasted image 20250521114247.png]]</p>
<p>挂载：先创建目录<br>mkdir -p &#x2F;mnt&#x2F;pan1<br>vim &#x2F;etc&#x2F;fstab<br>添加&#x2F;dev&#x2F;sdb1 &#x2F;mnt&#x2F;pan1 ext4 defaults 0 0<br>![[Pasted image 20250521114513.png]]</p>
<p>重启虚拟机<br>df -h 查看挂载情况<br>![[Pasted image 20250521114912.png]]</p>
<p>df -hl &#x2F;mnt&#x2F;pan1 查看目录空间<br>![[Pasted image 20250521114942.png]]<br>添加硬盘成功</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.22总结：shell脚本命令</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.22%E6%80%BB%E7%BB%93%EF%BC%9Ashell%E8%84%9A%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="shell变量"><a href="#shell变量" class="headerlink" title="shell变量"></a>shell变量</h1><h2 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h2><p>$HOME :当前登录用户的 “家目录” 路径<br>$USER：当前用户名<br>$RANDOM 可以随机生成 0~32767之间的整数数字</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$HOME</span> <span class="comment">#相当于pwd</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$USER</span> <span class="comment">#相当于whoami</span></span><br><span class="line"><span class="built_in">echo</span> $[RANDOM%100+1] <span class="comment">#生成1-100的随机整数</span></span><br></pre></td></tr></table></figure>

<h2 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h2><p>变量名&#x3D;值；变量名和&#x3D;之间不能用空格<br>用$符引用变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xm=<span class="string">&quot;哥哥&quot;</span></span><br><span class="line">age=5</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$xm</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$xm</span>是<span class="variable">$age</span>岁&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#命令赋值需要用反点``引起</span></span><br><span class="line">n=`<span class="built_in">cat</span> /etc/passwd | grep -c <span class="string">&quot;root&quot;</span>` </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$n</span></span><br></pre></td></tr></table></figure>

<h2 id="特殊变量"><a href="#特殊变量" class="headerlink" title="特殊变量"></a>特殊变量</h2><p>$n  n为number，$0代表该脚本名称，$1-$9代表第一到第九个参数（位置参数）<br>$#  获取所有输入参数的个数，常用于循环；<br>$@  代表命令行中所有的参数，$@会把每个参数区分对待；<br>$?  返回最后一次命令执行的状态，返回0代表正确执行，返回非0代表执行不正确。</p>
<h1 id="read-读取终端输入"><a href="#read-读取终端输入" class="headerlink" title="read 读取终端输入"></a>read 读取终端输入</h1><p>-p：指定读取值时的提示符；<br>-t：指定读取值时等待的时间（秒）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入密码：&quot;</span> s </span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入密码：&quot;</span> -t 10 pw <span class="comment">#10秒后关闭输入</span></span><br></pre></td></tr></table></figure>

<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符 &#x3D;"></a>赋值运算符 &#x3D;</h2><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><p>字符串比较： &#x3D;&#x3D; 等于  !&#x3D; 不等于<br>数值比较：-eq 等于 -ne 不等于 -lt 小于 -le 小于等于 -gt 大于 -ge 大于等于<br>类型权限：-f 存在且是文件 -d 存在且是目录 -r 读 (read) -w 写(write) -x 执行 (execute)</p>
<h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>-a 与  -o 或  ! 非</p>
<h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2><p>$((运算式)) 或 $[运算式]<br>+ , - , *, &#x2F;, % 加，减，乘，除，取余</p>
<h1 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h1><h2 id="if-条件判断"><a href="#if-条件判断" class="headerlink" title="if [ 条件判断 ]"></a>if [ 条件判断 ]</h2><ul>
<li>if [ 条件判断式 ] 中括号里面两边要加空格!</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sex=<span class="string">&quot;男&quot;</span> </span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$sex</span> == <span class="string">&quot;男&quot;</span> ] </span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;去做饭&quot;</span> </span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$sex</span> == <span class="string">&quot;女&quot;</span> ] </span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;去逛街&quot;</span> </span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;其他&quot;</span> </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多条件应用</span></span><br><span class="line">a=3 b=4 c=<span class="string">&quot;s&quot;</span> </span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -lt <span class="variable">$b</span> -a <span class="variable">$c</span> == <span class="string">&quot;s&quot;</span> ] </span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;true&quot;</span> </span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;false&quot;</span> </span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断文件是否存在 </span></span><br><span class="line"><span class="keyword">if</span> [ -f /root/a.txt ] </span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;是文件&quot;</span> <span class="built_in">cat</span> /root/a.txt </span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;不是文件&quot;</span> </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h2 id="case-等值判断"><a href="#case-等值判断" class="headerlink" title="case 等值判断"></a>case 等值判断</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sex=<span class="string">&quot;男&quot;</span> </span><br><span class="line"><span class="keyword">case</span> <span class="variable">$sex</span> <span class="keyword">in</span> </span><br><span class="line"><span class="string">&quot;男&quot;</span>) <span class="built_in">echo</span> <span class="string">&quot;打游戏&quot;</span> ;; </span><br><span class="line"><span class="string">&quot;女&quot;</span>) <span class="built_in">echo</span> <span class="string">&quot;去逛街&quot;</span> ;;</span><br><span class="line">*) <span class="built_in">echo</span> <span class="string">&quot;其他&quot;</span> ;; </span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>

<h1 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h1><h2 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5` </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span> </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 位置参数 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$@</span> </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span> </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串 </span></span><br><span class="line">s=<span class="string">&quot;a b c dd e&quot;</span> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$s</span> </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span> </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令结果 </span></span><br><span class="line">s=`<span class="built_in">ls</span> /root`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$s</span> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$s</span> </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span> </span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 二重循环：循环里面嵌套循环，外层循环先开始，内层循环结束后，再开始外层的下一个循环</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5` </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5` </span><br><span class="line">	<span class="keyword">do</span> </span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$j</span>&quot;</span>  <span class="comment">#内层循环 </span></span><br><span class="line">	<span class="keyword">done</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span>  <span class="comment">#外层循环 </span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#乘法表（双重嵌套）</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9` </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 <span class="variable">$i</span>` </span><br><span class="line">	<span class="keyword">do</span> </span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">&quot; <span class="variable">$j</span> * <span class="variable">$i</span> = <span class="subst">$(($i * $j)</span>) &quot;</span> </span><br><span class="line">	<span class="keyword">done</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;&quot;</span> </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<h2 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">i=1 </span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -le 10 ] </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span> </span><br><span class="line">	i=$((<span class="variable">$i</span>+<span class="number">1</span>)) </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 不确定循环次数 </span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;及格了吗？（y/n）：&quot;</span> answer </span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$answer</span> == <span class="string">&quot;n&quot;</span> ] </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;学习做作业考试&quot;</span> </span><br><span class="line">	<span class="built_in">read</span> -p <span class="string">&quot;及格了吗？（y/n）：&quot;</span> answer </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;终于及格了&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="循环控制"><a href="#循环控制" class="headerlink" title="循环控制"></a>循环控制</h2><p>只影响离自己最近的那个循环<br>break 跳出当前循环（如果有多重循环会继续执行上一层循环）<br>continue 跳出语句（不再往下执行），继续执行当前循环的下一个元素</p>
<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.输入两个数字判断两个数字的大小 </span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入第一个数&quot;</span> num1</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入第二个数&quot;</span> num2</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num1</span> -eq <span class="variable">$num2</span> ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$num1</span>=<span class="variable">$num2</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$num1</span> -gt <span class="variable">$num2</span> ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$num1</span>&gt;<span class="variable">$num2</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$num1</span>&lt;<span class="variable">$num2</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.输入一个数字输出这个数字是偶数还是奇数 </span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个整数: &quot;</span> num</span><br><span class="line"><span class="keyword">if</span> [ $[num%2] -eq 0 ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$num</span> 是偶数&quot;</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$num</span> 是奇数&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.判断一个年份是否是闰年,400整除是世纪闰年，100不整除并且被4整除是闰年，其余是平年</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个年份：&quot;</span> y</span><br><span class="line"><span class="keyword">if</span> [ $[y%400] -eq 0 -o $[y%100] -ne 0 -a $[y%4] -eq 0 ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$y</span>是闰年&quot;</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$y</span>是平年&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.输入三个数，不考虑相等，有小到大打印输出 </span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;输入三个数（用空格分隔）：&quot;</span> num1 num2 num3</span><br><span class="line"><span class="comment"># num1 &lt;= num2</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num1</span> -gt <span class="variable">$num2</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    temp=<span class="variable">$num1</span></span><br><span class="line">    num1=<span class="variable">$num2</span></span><br><span class="line">    num2=<span class="variable">$temp</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># num1 &lt;= num3</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num1</span> -gt <span class="variable">$num3</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    temp=<span class="variable">$num1</span></span><br><span class="line">    num1=<span class="variable">$num3</span></span><br><span class="line">    num3=<span class="variable">$temp</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># num2 &lt;= num3</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num2</span> -gt <span class="variable">$num3</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    temp=<span class="variable">$num2</span></span><br><span class="line">    num2=<span class="variable">$num3</span></span><br><span class="line">    num3=<span class="variable">$temp</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;排序：<span class="variable">$num1</span> <span class="variable">$num2</span> <span class="variable">$num3</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#5.编写脚本,将系统日志文件（/var/log/messages），拷贝到/root/文件夹中 </span></span><br><span class="line"><span class="built_in">cp</span> /var/log/messages /root/</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.编写脚本，位置参数传入学生的姓名和班级，打印“我的名字叫xx，我的班级是xx班” </span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;我的名字叫<span class="variable">$1</span>，我的班级是<span class="variable">$2</span>班&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#7.用if，写一个shell脚本，运行时输入一个数字，如果是666则输出evil，如果是777则输出lucky, 如果是其他则输出human。 </span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个数字：&quot;</span> num</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$num</span> -eq 666 ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;evil&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$num</span> -eq 777 ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;lucky&quot;</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;human&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#8.用case方法改写上面的功能。</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个数字：&quot;</span> num</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$num</span> <span class="keyword">in</span></span><br><span class="line"><span class="string">&quot;666&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;evil&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="string">&quot;777&quot;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;lucky&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;human&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#9.判断/root/hosts是否是存在并且是普通文件，如果不存在则新建一个，如果已经存在，则追加写入当前时间到此文件中 </span></span><br><span class="line">path=<span class="string">&quot;/root/hosts&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$path</span> ]</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line">	<span class="built_in">date</span> &gt;&gt; <span class="variable">$path</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;是文件，已追加&quot;</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	<span class="built_in">touch</span> <span class="variable">$path</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;没有文件，已新建&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#10.判断当前用户是否为root，如果不是则打印非root账号，是的话就执行ifconfig查看 网卡信息（$USER获取当前用户） </span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$USER</span> == <span class="string">&quot;root&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span> ifconfig</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$USER</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#11.位置参数传递一个绝对路径的文件，添加所有人可执行权限且提示添加执行权限成功，如果没有传递参数提示没有传递文件。 </span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -eq 0 ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;没有传递文件&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ ! -f <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]</span><br><span class="line">	<span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;&#x27;<span class="variable">$1</span>&#x27; 不是文件&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">chmod</span> a+x <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;已为 &#x27;<span class="variable">$1</span>&#x27; 添加所有人可执行权限&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#12.编写脚本判断mysql是否正常启动（端口号3306，查看端口netstat -nltp,然后grep过 滤返回行数，判断行数是否大于0）</span></span><br><span class="line">port=`netstat -nltp | grep -c <span class="string">&quot;3306&quot;</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$port</span> -gt 0 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;MySQL服务已启动&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;MySQL服务未启动&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#13.首先显示当天日期， 然后查找给定的用户是否在系统中工作（cat /etc/passwd）。 如果在系统中，就输出一条欢迎语句（例如 hello，root！）；如果不在系统中，就 输出一条语句（waiting for root！） </span></span><br><span class="line"><span class="built_in">date</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入要查找的用户：&quot;</span> usr</span><br><span class="line">n=`<span class="built_in">cat</span> /etc/passwd | grep -c <span class="variable">$usr</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$n</span> -gt 0 ]</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;hello,<span class="variable">$usr</span>！&quot;</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">echo</span> <span class="string">&quot;waiting for <span class="variable">$usr</span>！&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#14.接受一个参数，若给定参数不是目录， 则给出提示信息； 否则使用 ls -l 命令列出该目录下的内容，并输出有多少个子目录（d 开头），多少 个普通文件(-开头）。显示示例如下： 目录的数量：16 文件的数量：25</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个路径:&quot;</span> path</span><br><span class="line"><span class="keyword">if</span> [ -d <span class="variable">$path</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">ls</span> -l <span class="variable">$path</span></span><br><span class="line">    d=`<span class="built_in">ls</span> -l <span class="variable">$path</span> | grep -c <span class="string">&quot;^d&quot;</span>`</span><br><span class="line">    f=`<span class="built_in">ls</span> -l <span class="variable">$path</span> | grep -c <span class="string">&quot;^-&quot;</span>`</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;目录数量：<span class="variable">$d</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;文件数量：<span class="variable">$f</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;&#x27;<span class="variable">$path</span>&#x27;不是目录&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#上机练习11</span></span><br><span class="line"><span class="comment">#1.写一个循环，输出20-40 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 20 40`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.从1-50的单数，倒序</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 50 -1 1`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">if</span> [ $[i%2] -ne 0 ]</span><br><span class="line">    <span class="keyword">then</span> <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.计算并显示 1 到 100 之间的奇数之和</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 100`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ $[i%2] -ne 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">sum</span>=$[<span class="built_in">sum</span>+<span class="variable">$i</span>]</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$sum</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#5.有若干只鸡兔同在一个笼子里，从上面数有35个头，从下面数有94只脚。问笼中各有多少只鸡和兔？ </span></span><br><span class="line">ck=35</span><br><span class="line">rb=0</span><br><span class="line">leg=70</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$leg</span> -ne 94 ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    ck=$[ck-1]</span><br><span class="line">    rb=$[rb+1]</span><br><span class="line">    leg=$[ck*2+rb*4]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ck</span>只鸡和<span class="variable">$rb</span>只兔&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#6.猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个，第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前 一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。</span></span><br><span class="line">n=1</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    n=$[(n+1)*2]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第一天共摘了<span class="variable">$n</span>个桃&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#7.创建用户组wanmei，批量建立用户wm1到wm9,用户属于wanmei组,创建完成查看/etc/group和/etc/passwd文件 </span></span><br><span class="line">g=<span class="string">&quot;wanmei&quot;</span></span><br><span class="line">u=<span class="string">&quot;wm&quot;</span></span><br><span class="line">groupadd <span class="variable">$g</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    u=wm<span class="variable">$i</span></span><br><span class="line">    useradd -g <span class="variable">$g</span> <span class="variable">$u</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">cat</span> /etc/group /etc/passwd</span><br><span class="line"><span class="comment">#8.删除上面的用户和用户组 </span></span><br><span class="line">g=<span class="string">&quot;wanmei&quot;</span></span><br><span class="line">u=<span class="string">&quot;wm&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    u=wm<span class="variable">$i</span></span><br><span class="line">    userdel <span class="variable">$u</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">groupdel <span class="variable">$g</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#9.实现传入一个目录作为参数，如果传入的不是目录则提示不是目录，如果是目录则将该目录下所有的普通文件的文件名都罗列出来 </span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个目录:&quot;</span> <span class="built_in">dir</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$dir</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;不是目录&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    names=`<span class="built_in">ls</span> <span class="variable">$dir</span>`</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$names</span>&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$names</span></span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span> [ -d <span class="variable">$dir</span>/<span class="variable">$i</span> ] <span class="comment">#必须要带绝对路径</span></span><br><span class="line">                <span class="keyword">then</span></span><br><span class="line">                    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#10.猜数字游戏：电脑随机产生一个100以内的数字（1-99），通过每次键盘输入来猜数字，输入的小了就提示往大猜，输入大了就提示往小里猜， 直到输入正确数字（通过$RANDOM获取随机数）</span></span><br><span class="line">n=$[RANDOM%99+1]</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;现在生成了一个1-99的随机数，请输入你猜的数字：&quot;</span> num</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$num</span> -eq <span class="variable">$n</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;恭喜你猜对了！&quot;</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">elif</span> [ <span class="variable">$num</span> -lt <span class="variable">$n</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">&quot;猜错了，往大猜：&quot;</span> num</span><br><span class="line">    <span class="keyword">elif</span> [ <span class="variable">$num</span> -gt <span class="variable">$n</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">&quot;猜错了，往小猜：&quot;</span> num</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">&quot;输入不合法，请重新输入：&quot;</span> num</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.23总结：函数</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.23%E6%80%BB%E7%BB%93%EF%BC%9A%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="二重循环"><a href="#二重循环" class="headerlink" title="二重循环"></a>二重循环</h1><p>循环里面嵌套循环，外层循环先开始，内层循环结束后，再开始外层的下一个循环</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5` </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5` </span><br><span class="line">	<span class="keyword">do</span> </span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$j</span>&quot;</span>  <span class="comment">#内层循环 </span></span><br><span class="line">	<span class="keyword">done</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span>  <span class="comment">#外层循环 </span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#乘法表（双重嵌套）</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9` </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 <span class="variable">$i</span>` </span><br><span class="line">	<span class="keyword">do</span> </span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$j</span>*<span class="variable">$i</span> = <span class="subst">$(($i*$j)</span>)&quot;</span> </span><br><span class="line">	<span class="keyword">done</span> </span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;&quot;</span> </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="循环控制"><a href="#循环控制" class="headerlink" title="循环控制"></a>循环控制</h2><p>只影响离自己最近的那个循环<br>break 跳出当前循环（如果有多重循环会继续执行上一层循环）<br>continue 跳出语句（不再往下执行），继续执行当前循环的下一个元素</p>
<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">name</span></span>()&#123;</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;hello 黄文哲&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">getSum</span></span>()&#123;</span><br><span class="line">	<span class="built_in">sum</span>=$((<span class="variable">$1</span>+<span class="variable">$2</span>))  <span class="comment">#这里的$1 $2是调用函数时的位置参数</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$sum</span>&quot;</span></span><br><span class="line">	name  <span class="comment">#函数可以互相嵌套，前提是被嵌套的函数要先声明</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行函数</span></span><br><span class="line">getSum <span class="variable">$1</span> <span class="variable">$2</span>  <span class="comment">#这里的$1 $2是脚本的位置参数（./test.sh 1 2）</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入数字1:&quot;</span> n1</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入数字2:&quot;</span> n2</span><br><span class="line">he=`getSum <span class="variable">$n1</span> <span class="variable">$n2</span>` <span class="comment">#调用函数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$he</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="递归（自己调用自己）"><a href="#递归（自己调用自己）" class="headerlink" title="递归（自己调用自己）"></a>递归（自己调用自己）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#输入一个目录显示里面的所有目录</span></span><br><span class="line"><span class="function"><span class="title">getDir</span></span>()&#123;</span><br><span class="line">    names=`<span class="built_in">ls</span> <span class="variable">$1</span>`</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$names</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> [ -d <span class="variable">$1</span>/<span class="variable">$i</span> ]</span><br><span class="line">            <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$i</span>&quot;</span></span><br><span class="line">                getDir <span class="variable">$1</span>/<span class="variable">$i</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 上机练习12</span></span><br><span class="line"><span class="comment">#1.99乘法表 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9` </span><br><span class="line">	<span class="keyword">do</span> </span><br><span class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 <span class="variable">$i</span>` </span><br><span class="line">		<span class="keyword">do</span> </span><br><span class="line">			<span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$j</span>×<span class="variable">$i</span>=<span class="subst">$(($i*$j)</span>) &quot;</span> </span><br><span class="line">		<span class="keyword">done</span> </span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;&quot;</span> </span><br><span class="line">	<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.拼接一个直角三角形 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 <span class="variable">$i</span>`</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">                <span class="built_in">echo</span> -n <span class="string">&quot;*&quot;</span></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot; &quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.上个练习基础上拼接一个等腰三角形 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 5`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">for</span> k <span class="keyword">in</span> `<span class="built_in">seq</span> 1 $((<span class="number">5</span>-<span class="variable">$i</span>))`</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">               <span class="built_in">echo</span> -n <span class="string">&quot; &quot;</span> </span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 $((<span class="variable">$i</span>*<span class="number">2</span>-<span class="number">1</span>))`</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">                <span class="built_in">echo</span> -n <span class="string">&quot;*&quot;</span></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot; &quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.上个练习基础上拼接一个菱形 </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$i</span> -le 5 ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> `<span class="built_in">seq</span> 1 $((<span class="number">5</span>-<span class="variable">$i</span>))`</span><br><span class="line">                <span class="keyword">do</span></span><br><span class="line">                    <span class="built_in">echo</span> -n <span class="string">&quot; &quot;</span> </span><br><span class="line">                <span class="keyword">done</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 1 $((<span class="variable">$i</span>*<span class="number">2</span>-<span class="number">1</span>))`</span><br><span class="line">                <span class="keyword">do</span></span><br><span class="line">                    <span class="built_in">echo</span> -n <span class="string">&quot;*&quot;</span></span><br><span class="line">                <span class="keyword">done</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot; &quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> `<span class="built_in">seq</span> 1 $((<span class="variable">$i</span>-<span class="number">5</span>))`</span><br><span class="line">                <span class="keyword">do</span></span><br><span class="line">                    <span class="built_in">echo</span> -n <span class="string">&quot; &quot;</span> </span><br><span class="line">                <span class="keyword">done</span></span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> `<span class="built_in">seq</span> 1 $(((<span class="number">10</span>-<span class="variable">$i</span>)*<span class="number">2</span>-<span class="number">1</span>))`</span><br><span class="line">                <span class="keyword">do</span></span><br><span class="line">                    <span class="built_in">echo</span> -n <span class="string">&quot;*&quot;</span></span><br><span class="line">                <span class="keyword">done</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot; &quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#5.打印输出100至200之间的全部素数，输出素数并统计共有多少个素数。 注：质数(prime number)又称素数，有无限个。一个大于1的自然数，除了1和它本身外，不能被其他自然数整除，换句话说就是该数除了1和它本身以外不再有其他的因数;否则称为合数。</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 100 200`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        n=$((<span class="variable">$i</span>-<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> 2 <span class="variable">$n</span>`</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span> [ $((<span class="variable">$i</span>%<span class="variable">$j</span>)) -eq 0 ]</span><br><span class="line">                    <span class="keyword">then</span> <span class="built_in">break</span></span><br><span class="line">                <span class="keyword">elif</span> [ <span class="variable">$j</span> -eq <span class="variable">$n</span> ]</span><br><span class="line">                    <span class="keyword">then</span> </span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span></span><br><span class="line">                        count=$((<span class="variable">$count</span>+<span class="number">1</span>))</span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;共有<span class="variable">$count</span>个素数&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#上机练习13</span></span><br><span class="line"><span class="comment">#1.编写函数, 函数传入三个参数,输出积</span></span><br><span class="line"><span class="function"><span class="title">getJi</span></span>()&#123;</span><br><span class="line">    ji=$((<span class="variable">$1</span>*<span class="variable">$2</span>*<span class="variable">$3</span>))</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$he</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.编写函数，传递一个数字参数5，实现1到5的累加，返回和，输出&quot;和是：15&quot; </span></span><br><span class="line"><span class="function"><span class="title">getSum</span></span>()&#123;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 <span class="variable">$1</span>`</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">sum</span>=$((<span class="variable">$sum</span>+<span class="variable">$i</span>))</span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;和是：<span class="variable">$sum</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.编写函数,当该函数没有参数或参数多于2个, 输出-1,只有一个参数时, 输出1,有两个参数 时, 输出2 提示：使用$#判断参数的个数 </span></span><br><span class="line"><span class="function"><span class="title">countNum</span></span>()&#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$#</span> -eq 1 -o <span class="variable">$#</span> -eq 2 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$#</span>&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;-1&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.编写函数，实现传入一个目录参数，将该目录下（递归）所有的文件都打印出来（遇到文件则打印，遇到目录则继续调函数递归） </span></span><br><span class="line"><span class="function"><span class="title">getFile</span></span>()&#123;</span><br><span class="line">    names=`<span class="built_in">ls</span> <span class="variable">$1</span>`</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$names</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> [ -f <span class="variable">$1</span>/<span class="variable">$i</span> ]</span><br><span class="line">            <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>/<span class="variable">$i</span>&quot;</span></span><br><span class="line">            <span class="keyword">elif</span> [ -d <span class="variable">$1</span>/<span class="variable">$i</span> ]</span><br><span class="line">            <span class="keyword">then</span></span><br><span class="line">                getFile <span class="variable">$1</span>/<span class="variable">$i</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.编写函数，传入一个数字n，实现n的阶乘,效果如下：</span></span><br><span class="line"><span class="function"><span class="title">jiecheng</span></span>()&#123;</span><br><span class="line">    txt=<span class="string">&quot;<span class="variable">$1</span>!=<span class="variable">$1</span>&quot;</span></span><br><span class="line">    res=1</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> <span class="variable">$1</span> -1 1`</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> [ <span class="variable">$i</span> -ne <span class="variable">$n</span> ]</span><br><span class="line">                <span class="keyword">then</span> txt=<span class="variable">$txt</span>*<span class="variable">$i</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            res=$((<span class="variable">$res</span>*<span class="variable">$i</span>))</span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;根据数字<span class="variable">$1</span>得到阶乘表达式是：<span class="variable">$txt</span>=<span class="variable">$res</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入数字：&quot;</span> n</span><br><span class="line">jiecheng <span class="variable">$n</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.24总结：shell工具</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.24%E6%80%BB%E7%BB%93%EF%BC%9Ashell%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h1 id="shell工具"><a href="#shell工具" class="headerlink" title="shell工具"></a>shell工具</h1><p>grep 、sed、awk被称为linux中的”三剑客”<br>grep  更适合单纯的查找或匹配文本<br>sed  更适合编辑匹配到的文本<br>awk  更适合格式化文本，对文本进行较复杂格式处理</p>
<h2 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h2><p>sort命令可将文件进行排序，并将排序结果标准输出</p>
<p><strong>参数说明</strong><br><strong>-n</strong>  依照数值的大小排序（升序）<br><strong>-r</strong>  以相反的顺序来排序<br><strong>-t</strong>  设置排序时所用的分隔字符<br><strong>-k</strong>  指定需要排序的列</p>
<p>例如，文件夹sh下有如下sort.txt文件：<br>bb:40:5.4<br>bd:20:4.2<br>xz:50:2.3<br>cls:10:3.5<br>ss:30:1.6</p>
<p>按照”：”分割后的第三列倒序排序：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sort</span> -t <span class="string">&quot;:&quot;</span> -nrk 3 /root/sh/sort.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果</span></span><br><span class="line">bb:40:5.4 </span><br><span class="line">bd:20:4.2 </span><br><span class="line">cls:10:3.5 </span><br><span class="line">xz:50:2.3 </span><br><span class="line">ss:30:1.6</span><br></pre></td></tr></table></figure>
<h2 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h2><p>stream editor（流编辑器）的简称<br>它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中（“模式空间“），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。</p>
<p><strong>参数说明</strong><br><strong>p</strong> 打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行<br><strong>i</strong> 插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)<br><strong>a</strong> 新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)<br><strong>s</strong> 取代，可以直接进行取代的工作，通常这个 s 的动作可以搭配正则表示法</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.显示文件的第 2 行的内容： </span></span><br><span class="line">sed -n <span class="string">&#x27;2 p&#x27;</span> /root/sh/sort.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#2.显示文件的第 2 行到第 4 行的内容： </span></span><br><span class="line">sed -n <span class="string">&#x27;2,4 p&#x27;</span> /root/sh/sort.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#3.将文件中的bb全部替换为BB </span></span><br><span class="line">sed <span class="string">&#x27;s/bb/BB/g&#x27;</span> /root/sh/sort.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#4.以文件bb开头的上一行添加 </span></span><br><span class="line">sed <span class="string">&#x27;/^bb/i hello&#x27;</span> /root/sh/sort.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#5.将文件中的d全部删除 </span></span><br><span class="line">sed <span class="string">&#x27;s/d//g&#x27;</span> /root/sh/sort.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以使用管道符 | 连续处理，接着重定向保存</span></span><br><span class="line"><span class="comment"># 使用 | 连续处理时只需在第一个语句里指定文件路径，后续的处理不能写！</span></span><br><span class="line"><span class="comment"># 命令过长需要换行时可以使用\拼接</span></span><br><span class="line"><span class="comment"># 使用 | 换行时可不使用 \</span></span><br><span class="line">sed <span class="string">&#x27;s/bd/BB/g&#x27;</span> /root/sh/sort.txt \</span><br><span class="line">| sed <span class="string">&#x27;s/ss/SS/g&#x27;</span> | sed <span class="string">&#x27;s/cls/AA/g&#x27;</span> \</span><br><span class="line">| <span class="built_in">sort</span> -t <span class="string">&quot;:&quot;</span>  -nrk 3 | sed <span class="string">&#x27;/^bb/i one,two,three&#x27;</span> \</span><br><span class="line">| sed <span class="string">&#x27;s/:/./g&#x27;</span> &gt; /root/sh/sort.csv</span><br><span class="line"></span><br><span class="line">sed <span class="string">&#x27;s/bd/BB/g&#x27;</span> /root/sh/sort.txt |</span><br><span class="line">sed <span class="string">&#x27;s/ss/SS/g&#x27;</span> | sed <span class="string">&#x27;s/cls/AA/g&#x27;</span> |</span><br><span class="line"><span class="built_in">sort</span> -t <span class="string">&quot;:&quot;</span>  -nrk 3 | sed <span class="string">&#x27;/^bb/i one,two,three&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/:/./g&#x27;</span> &gt; /root/sh/sort.csv</span><br></pre></td></tr></table></figure>


<h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><p>一个完整的awk命令格式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk [options] <span class="string">&#x27;BEGIN&#123;command1&#125; &#123;command2&#125; END&#123;command3&#125;&#x27;</span> file</span><br><span class="line"><span class="comment">#[options]设置分隔字段</span></span><br><span class="line"><span class="comment">#BEGIN可设置列名</span></span><br><span class="line"><span class="comment">#command2设置打印的列</span></span><br><span class="line"><span class="comment">#END可显示行列总数量</span></span><br><span class="line"><span class="comment">#file表示文件路径</span></span><br></pre></td></tr></table></figure>
<p>-v FS 指定以什么对字段进行分隔<br>-v OFS 指定输出的字段以什么分隔<br>不写导出后的分隔符默认以空格划分</p>
<p><strong>内置参数</strong><br>NF 分割完字段的数量<br>$1 代表文本行中的第 1 个数据字段<br>$2 代表文本行中的第 2 个数据字段<br>输出指定列：{print $1,$2}<br>分隔符相同的情况输出一整行：{print}</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1-3重要</span></span><br><span class="line"><span class="comment">#1.以:为分隔符，打印第2列和第1列 </span></span><br><span class="line">awk -v FS=<span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $2,$1&#125;&#x27;</span> /root/shell/sort.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#2.以:为分隔符，打印第2列和第1列，列之间用,分割 </span></span><br><span class="line">awk -v FS=<span class="string">&quot;:&quot;</span> -v OFS=<span class="string">&quot;,&quot;</span> <span class="string">&#x27;&#123;print $2,$1&#125;&#x27;</span> /root/shell/sort.txt </span><br><span class="line"></span><br><span class="line"><span class="comment">#3.添加列保存为csv，下载，使用excel查看 </span></span><br><span class="line">awk -v FS=<span class="string">&quot;:&quot;</span> -v OFS=<span class="string">&quot;,&quot;</span> <span class="string">&#x27;BEGIN&#123;print &quot;one,two,three&quot;&#125;&#123;print $2,$1,$3&#125;&#x27;</span> /root/shell/sort.txt &gt; /root/shell/sort.csv </span><br><span class="line"></span><br><span class="line"><span class="comment">#4-5扩展</span></span><br><span class="line"><span class="comment">#4.第二列大于30 </span></span><br><span class="line">awk -v FS=<span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123; if($2&gt;30)&#123;print $2&#125;&#125;&#x27;</span> /root/shell/sort.txt </span><br><span class="line"><span class="comment">#5.行列总数量 </span></span><br><span class="line">awk -v FS=<span class="string">&quot;:&quot;</span> <span class="string">&#x27;BEGIN&#123;n=0&#125;&#123;for(i=1;i&lt;=NF;i++)&#123;n++&#125; &#125;END&#123;print n&#125;&#x27;</span> /root/shell/sort.txt</span><br></pre></td></tr></table></figure>
<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.复制网卡文件/etc/sysconfig/network-scripts/ifcfg-ens33 到家目录，并且改名为 wangka.txt </span></span><br><span class="line"><span class="built_in">cp</span> /etc/sysconfig/network-scripts/ifcfg-ens33 <span class="variable">$HOME</span>/wangka.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.找到含有 IP 的行输出 </span></span><br><span class="line"><span class="built_in">cat</span> wangka.txt | grep <span class="string">&quot;IPADDR&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.显示文件的第 3 行到第 5 行的内容 </span></span><br><span class="line">sed -n <span class="string">&#x27;3,5 p&#x27;</span> <span class="variable">$HOME</span>/wangka.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.将文件中的255全部替换为250 </span></span><br><span class="line">sed <span class="string">&#x27;s/255/250/g&#x27;</span> <span class="variable">$HOME</span>/wangka.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.以文件IPADDR开头的上一行添加hello </span></span><br><span class="line">sed <span class="string">&#x27;/^IPADDR/i hello&#x27;</span> <span class="variable">$HOME</span>/wangka.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.找到所有DNS，并且删掉</span></span><br><span class="line">sed <span class="string">&#x27;s/DNS//g&#x27;</span> <span class="variable">$HOME</span>/wangka.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.使用管道符连续处理4. 5. 6. 题，并且重定向结果保存为wangka.csv</span></span><br><span class="line">sed <span class="string">&#x27;s/255/250/g&#x27;</span> <span class="variable">$HOME</span>/wangka.txt |</span><br><span class="line">sed <span class="string">&#x27;/^IPADDR/i hello&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/DNS//g&#x27;</span> &gt; <span class="variable">$HOME</span>/wangka.csv</span><br><span class="line"></span><br><span class="line"><span class="comment">#8. 根据wangka.csv文件自己灵活处理重定向为ip.txt,内容如下： </span></span><br><span class="line"><span class="comment"># 192.168.145.151 </span></span><br><span class="line"><span class="comment"># 250.250.250.0 </span></span><br><span class="line"><span class="comment"># 192.168.145.2 </span></span><br><span class="line"><span class="comment"># 8.8.8.8 </span></span><br><span class="line"><span class="comment"># 114.114.114.114 </span></span><br><span class="line">sed -n <span class="string">&#x27;20,24 p&#x27;</span> <span class="variable">$HOME</span>/wangka.csv |</span><br><span class="line">awk -v FS=<span class="string">&quot;\&quot;&quot;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> &gt; <span class="variable">$HOME</span>/ip.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#9.ip.txt中以.分割，按照第一列进行降序排序 </span></span><br><span class="line"><span class="built_in">sort</span> -t <span class="string">&quot;.&quot;</span> -nrk 1 <span class="variable">$HOME</span>/ip.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#10.ip.txt中以.为分隔符，打印第1列和第2列 </span></span><br><span class="line">awk -v FS=<span class="string">&quot;.&quot;</span> <span class="string">&#x27;&#123;print $1,$2&#125;&#x27;</span> <span class="variable">$HOME</span>/ip.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#11.ip.txt中以.为分隔符，打印第3列和第4列，列之间用,分割</span></span><br><span class="line">awk -v FS=<span class="string">&quot;.&quot;</span> -v OFS=<span class="string">&quot;,&quot;</span> <span class="string">&#x27;&#123;print $3,$4&#125;&#x27;</span> <span class="variable">$HOME</span>/ip.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#12.ip.txt中以.为分隔符，列之间用,分割，且加一行，保存为ip.csv,格式如下： </span></span><br><span class="line"><span class="comment"># one,two,three,four </span></span><br><span class="line"><span class="comment"># 192,168,145,151 </span></span><br><span class="line"><span class="comment"># 250,250,250,0 </span></span><br><span class="line"><span class="comment"># 192,168,145,2 </span></span><br><span class="line"><span class="comment"># 8,8,8,8 </span></span><br><span class="line"><span class="comment"># 114,114,114,114</span></span><br><span class="line">awk -v FS=<span class="string">&quot;.&quot;</span> -v OFS=<span class="string">&quot;,&quot;</span> <span class="string">&#x27;BEGIN&#123;print &quot;one,two,three,four&quot;&#125;&#123;print $1,$2,$3,$4&#125;&#x27;</span> <span class="variable">$HOME</span>/ip.txt &gt; <span class="variable">$HOME</span>/ip.csv</span><br><span class="line"></span><br><span class="line"><span class="comment">#13.在家目录下创建一个names.txt的文件，写入班级的所有同学的姓名，每个一行，每次随机产生一个姓名</span></span><br><span class="line">c=`<span class="built_in">cat</span> names.txt | <span class="built_in">wc</span> -l`</span><br><span class="line">n=$[RANDOM%<span class="variable">$c</span>+1]</span><br><span class="line">sed -n <span class="string">&quot;<span class="variable">$n</span> p&quot;</span> <span class="variable">$HOME</span>/names.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#14.批量修改家目录下的文件扩展名，使用位置参数传递两种扩展名，例如txt文件为csv 文件。（注：碰到特殊符号使用\进行转义）</span></span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line">f=`<span class="built_in">ls</span> *.<span class="variable">$1</span>`</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$f</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        new=`<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span> | sed <span class="string">&quot;s/\.$1$/.<span class="variable">$2</span>/&quot;</span>`</span><br><span class="line">        <span class="built_in">mv</span> <span class="variable">$i</span> <span class="variable">$new</span></span><br><span class="line">    <span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>5.26总结：数据清洗、数据导入和备份</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5Linux/5.26%E6%80%BB%E7%BB%93%EF%BC%9A%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97%E3%80%81%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%92%8C%E5%A4%87%E4%BB%BD/</url>
    <content><![CDATA[<h1 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h1><p>数据清洗即是将爬下来未处理的数据文件（txt、json等格式），转化为csv文件，一般需要通过sed把里面不必要的字符删除，再以通过awk以一定规律分割，最后将脚本的处理结果重定向到csv文件中。</p>
<p>一般处理思路：<br>sed掐头-去尾-换行-置空值-删符号-删元素（列名）-awk分隔、添加列名 &gt; 重定向到csv</p>
<table>
<thead>
<tr>
<th>操作类型</th>
<th>sed&#x2F;awk 实现方案</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td><strong>去除结构标记</strong></td>
<td>删除JSON头尾</td>
<td><code>sed &#39;s/^&#123;&quot;data&quot;:\[//; s/\]&#125;$//&#39;</code></td>
</tr>
<tr>
<td><strong>字段分隔</strong></td>
<td>替换分隔符为换行符</td>
<td><code>sed &#39;s/&#125;,&#123;/\n/g&#39;</code></td>
</tr>
<tr>
<td><strong>特殊字符处理</strong></td>
<td>移除转义字符</td>
<td><code>sed &#39;s/\\//g&#39;</code></td>
</tr>
<tr>
<td><strong>空值标准化</strong></td>
<td>统一空值表示</td>
<td><code>sed &#39;s/&quot;&quot;/null/g&#39;</code></td>
</tr>
<tr>
<td><strong>引号处理</strong></td>
<td>删除所有引号</td>
<td><code>tr -d &#39;&quot;&#39;</code></td>
</tr>
<tr>
<td><strong>字段提取</strong></td>
<td>按位置重组字段</td>
<td><code>awk &#39;&#123;print $2,$1,$3&#125;&#39;</code></td>
</tr>
</tbody></table>
<p>导出的csv文件用excel打开可能中文显示会乱码（wps不会），需正常显示可如下操作：</p>
<ul>
<li>右键csv文件以txt方式打开-另存为-设置编码为ANSI-确定保存<br>此后用excel打开此文件即可正常显示中文</li>
</ul>
<h1 id="通过mysql对数据库服务器操作"><a href="#通过mysql对数据库服务器操作" class="headerlink" title="通过mysql对数据库服务器操作"></a>通过mysql对数据库服务器操作</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -h127.0.0.1 -P3306 -uroot -proot123456 <span class="built_in">test</span> -e <span class="string">&quot;select * from student&quot;</span></span><br></pre></td></tr></table></figure>
<p>-h：MySQL服务器的ip地址或主机名；<br>-u：连接MySQL服务器的用户名；<br>-e：执行mysql内部命令；<br>-p：连接MySQL服务器的密码。<br>-P：连接MySQL服务器的端口</p>
<h1 id="mysqldump-备份命令"><a href="#mysqldump-备份命令" class="headerlink" title="mysqldump 备份命令"></a>mysqldump 备份命令</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.导出education数据库里面的users表的表数据和表结构(下面以users表为例)</span></span><br><span class="line">mysqldump -u[用户名] -h[ip] -p[密码] -P[端口号] 数据库名 表名 &gt; 导出的文件名.sql</span><br><span class="line">mysqldump -uroot -h127.0.0.1 -proot -p3306 education <span class="built_in">users</span> &gt; d:/user.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#导出多张表:</span></span><br><span class="line">mysqldump -uroot -proot --databases <span class="built_in">test</span> --tables t1 t2 &gt; two.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.只导出表结构不导表数据，添加“-d“命令参数</span></span><br><span class="line">mysqldump -uroot -h127.0.0.1 -proot -p3306 -d education <span class="built_in">users</span> &gt; d:/user.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.只导出表数据不导表结构，添加“-t&quot;命令参数</span></span><br><span class="line">mysqldump -uroot -h127.0.0.1 -proot -p3306 -t education <span class="built_in">users</span> &gt; d:/user.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.导出数据库的表结构和表数据(导入的时候需要指定数据库，保证指定的数据库存在)</span></span><br><span class="line"><span class="comment">#导出命令</span></span><br><span class="line">mysqldump -h127.0.0.1 -P3306 -uroot -proot education  &gt; d:/database.sql</span><br><span class="line"><span class="comment">#导入命令</span></span><br><span class="line">mysql -uroot -proot -h127.0.0.1 -P3306 education &lt; d:/database.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.导出特定数据库的所有表格的表结构及其数据，添加&quot;--databases“命令参数(导入的时候直接执行导出sql就行)</span></span><br><span class="line"><span class="comment">#导出命令</span></span><br><span class="line">mysqldump -h127.0.0.1 -P3306 -uroot -proot education --databases education &gt; database.sql</span><br><span class="line"><span class="comment">#导入命令:</span></span><br><span class="line">mysql -uroot -proot -h127.0.0.1 -P3306 &lt;d:/all database.sql</span><br></pre></td></tr></table></figure>


<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#上机练习15</span></span><br><span class="line"><span class="comment">#1.清洗数据《infotest.txt》保存成《infotest.csv》 </span></span><br><span class="line">sed <span class="string">&#x27;s/\[&#123;//g&#x27;</span> /root/sh/infotest.txt |  <span class="comment">#掐头</span></span><br><span class="line">sed <span class="string">&#x27;s/&#125;\]//g&#x27;</span> |  <span class="comment">#去尾</span></span><br><span class="line">sed <span class="string">&#x27;s/&quot;&quot;/null/g&#x27;</span> |  <span class="comment">#置空值</span></span><br><span class="line">sed <span class="string">&#x27;s/&quot;//g&#x27;</span> |  <span class="comment">#删引号</span></span><br><span class="line"><span class="comment">#删除元素说明</span></span><br><span class="line">sed <span class="string">&#x27;s/catchTime://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/commentCount://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/content://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/createTime://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/pic_list://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/praiseCount://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/reportCount://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/source://g&#x27;</span> |</span><br><span class="line"><span class="comment">#以逗号分割，添加列名，保存到csv</span></span><br><span class="line">awk -v FS=<span class="string">&quot;,&quot;</span> -v OFS=<span class="string">&quot;,&quot;</span> <span class="string">&#x27;BEGIN&#123;print &quot;catchTime,commentCount,content,createTime,pic_list,praiseCount,reportCount,source&quot;&#125;&#123;print $1,$2,$3,$4,$5,$6,$7,$8&#125;&#x27;</span> \</span><br><span class="line">&gt; /root/sh/infotest.csv</span><br></pre></td></tr></table></figure>
<p>![[Pasted image 20250526193700.png]]</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#2.清洗数据《douban.txt》保存成《douban.csv》</span></span><br><span class="line">sed <span class="string">&#x27;s/&#123;&quot;subjects&quot;:\[&#123;//g&#x27;</span> /root/sh/douban.txt |  <span class="comment">#掐头</span></span><br><span class="line">sed <span class="string">&#x27;s/&#125;\]&#125;//g&#x27;</span> |  <span class="comment">#去尾</span></span><br><span class="line">sed <span class="string">&#x27;s/&#125;,&#123;/\n/g&#x27;</span> |  <span class="comment">#换行</span></span><br><span class="line">sed <span class="string">&#x27;s/\\//g&#x27;</span> |  <span class="comment">#删\号</span></span><br><span class="line">sed <span class="string">&#x27;s/&quot;&quot;/null/g&#x27;</span> |  <span class="comment">#置空值</span></span><br><span class="line">sed <span class="string">&#x27;s/&quot;//g&#x27;</span> |  <span class="comment">#删引号</span></span><br><span class="line"><span class="comment">#删除元素说明</span></span><br><span class="line">sed <span class="string">&#x27;s/id://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/title://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/episodes_info://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/rate://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/cover_x://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/url://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/playable://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/cover://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/cover_y://g&#x27;</span> |</span><br><span class="line">sed <span class="string">&#x27;s/is_new://g&#x27;</span> |</span><br><span class="line"><span class="comment">#以逗号分割，添加列名，保存到csv</span></span><br><span class="line">awk -v FS=<span class="string">&quot;,&quot;</span> -v OFS=<span class="string">&quot;,&quot;</span> <span class="string">&#x27;BEGIN&#123;print &quot;id,title,episodes_info,rate,cover_x,url,playable,cover,cover_y,is_new&quot;&#125;&#123;print $8,$4,$1,$2,$3,$5,$6,$7,$9,$10&#125;&#x27;</span> \</span><br><span class="line">&gt;/root/sh/douban.csv</span><br></pre></td></tr></table></figure>
<p>![[Pasted image 20250526193548.png]]</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#上机练习16</span></span><br><span class="line"><span class="comment">#编写shell脚本/root/shell/mysqlcsv.sh 实现：</span></span><br><span class="line"><span class="comment">#1.如果douban表存在则删除 </span></span><br><span class="line"><span class="comment">#2.如果douban表不存在则新建 </span></span><br><span class="line"><span class="comment">#3.导入douban.csv数据到douban表中,建表过程为根据导入的csv文件自动创建表 </span></span><br><span class="line"><span class="comment">#4.查询douban表验证结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置mysql连接参数</span></span><br><span class="line">dbhost=<span class="string">&quot;127.0.0.1&quot;</span>  <span class="comment">#主机名</span></span><br><span class="line">dbprot=3306  <span class="comment">#端口</span></span><br><span class="line">dbuser=<span class="string">&quot;root&quot;</span>  <span class="comment">#用户名</span></span><br><span class="line">dbpass=<span class="string">&quot;root123456&quot;</span>  <span class="comment">#密码</span></span><br><span class="line">db=<span class="string">&quot;test&quot;</span>  <span class="comment">#表空间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果douban表存在则删除 </span></span><br><span class="line">sql1=<span class="string">&quot;drop table if exists douban&quot;</span></span><br><span class="line">mysql -h<span class="variable">$dbhost</span> -P<span class="variable">$dbprot</span> -u<span class="variable">$dbuser</span> -p<span class="variable">$dbpass</span> <span class="variable">$db</span> -e  <span class="string">&quot;<span class="variable">$sql1</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取第一行（列名）</span></span><br><span class="line">names=`<span class="built_in">head</span> -n +1 /root/sh/douban.csv | sed <span class="string">&#x27;s/,/ /g&#x27;</span>`</span><br><span class="line"><span class="comment">#找出最后一个列名</span></span><br><span class="line">lastname=`<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$names</span>&quot;</span> | awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果douban表不存在则新建 </span></span><br><span class="line">sql2=<span class="string">&quot;create table if not exists douban(&quot;</span></span><br><span class="line"> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$names</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$i</span> == <span class="string">&quot;<span class="variable">$lastname</span>&quot;</span> ]</span><br><span class="line">        <span class="keyword">then</span> </span><br><span class="line">            sql2=<span class="string">&quot;$sql2<span class="variable">$i</span> varchar(200))&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            sql2=<span class="string">&quot;$sql2<span class="variable">$i</span> varchar(200),&quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">mysql -h<span class="variable">$dbhost</span> -P<span class="variable">$dbprot</span> -u<span class="variable">$dbuser</span> -p<span class="variable">$dbpass</span> <span class="variable">$db</span> -e  <span class="string">&quot;<span class="variable">$sql2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#导入数据</span></span><br><span class="line">sql3=<span class="string">&quot;LOAD DATA INFILE &#x27;/usr/local/mysql/data/douban.csv&#x27; INTO TABLE douban</span></span><br><span class="line"><span class="string">CHARACTER SET utf8</span></span><br><span class="line"><span class="string">FIELDS TERMINATED BY &#x27;,&#x27;</span></span><br><span class="line"><span class="string">LINES TERMINATED BY &#x27;\n&#x27;</span></span><br><span class="line"><span class="string">IGNORE 1 LINES&quot;</span></span><br><span class="line">mysql -h<span class="variable">$dbhost</span> -P<span class="variable">$dbprot</span> -u<span class="variable">$dbuser</span> -p<span class="variable">$dbpass</span> <span class="variable">$db</span> -e  <span class="string">&quot;<span class="variable">$sql3</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看表和数据</span></span><br><span class="line">sql4=<span class="string">&quot;select * from douban&quot;</span></span><br><span class="line">mysql -h<span class="variable">$dbhost</span> -P<span class="variable">$dbprot</span> -u<span class="variable">$dbuser</span> -p<span class="variable">$dbpass</span> <span class="variable">$db</span> -e  <span class="string">&quot;<span class="variable">$sql4</span>&quot;</span></span><br></pre></td></tr></table></figure>
<p>![[Pasted image 20250526193754.png]]</p>
<p>上机练习17.实现每天凌晨3点10分备份数据库test到&#x2F;root&#x2F;backup&#x2F;db</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#一、编写shell脚本为 /root/shell/backdb.sh </span></span><br><span class="line"><span class="comment">#1.判断路径/root/backup/db是否存在，不存在创建，存在开始备份 </span></span><br><span class="line"><span class="comment">#2.备份后的文件以时间命名，如20230401110101.sql </span></span><br><span class="line"><span class="comment">#3.在备份的同时，检查是否有10天前的备份数据库文件，有则删除之 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql连接参数</span></span><br><span class="line">dbhost=<span class="string">&quot;127.0.0.1&quot;</span>  <span class="comment">#主机名</span></span><br><span class="line">dbport=3306  <span class="comment">#端口</span></span><br><span class="line">dbuser=<span class="string">&quot;root&quot;</span>  <span class="comment">#用户名</span></span><br><span class="line">dbpwd=<span class="string">&quot;root123456&quot;</span>  <span class="comment">#密码</span></span><br><span class="line">db=<span class="string">&quot;test&quot;</span>  <span class="comment">#表空间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置备份目录</span></span><br><span class="line">backup_dir=<span class="string">&quot;/root/backup/db&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 检查并创建备份目录</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">&quot;<span class="variable">$backup_dir</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$backup_dir</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;创建备份目录: <span class="variable">$backup_dir</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;备份目录存在: <span class="variable">$backup_dir</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 生成带时间戳的备份文件名</span></span><br><span class="line">backup_file=<span class="string">&quot;<span class="variable">$backup_dir</span>/<span class="subst">$(date +&#x27;%Y%m%d%H%M%S&#x27;)</span>.sql&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行数据库备份</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;开始备份数据库 <span class="variable">$db</span> 到 <span class="variable">$backup_file</span>&quot;</span></span><br><span class="line">mysqldump -h<span class="variable">$dbhost</span> -P<span class="variable">$dbport</span> -u<span class="variable">$dbuser</span> -p<span class="variable">$dbpwd</span> <span class="variable">$db</span> &gt; <span class="variable">$backup_file</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查备份是否成功</span></span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;数据库备份成功!&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;数据库备份失败!&quot;</span> &gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 删除10天前的备份文件</span></span><br><span class="line">find <span class="string">&quot;<span class="variable">$backup_dir</span>&quot;</span> -name <span class="string">&quot;*.sql&quot;</span> -mtime +10 -<span class="built_in">exec</span> <span class="built_in">rm</span> -f &#123;&#125; \;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;已清理10天前的备份文件&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前备份文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;当前备份文件:&quot;</span></span><br><span class="line"><span class="built_in">ls</span> -lh <span class="string">&quot;<span class="variable">$backup_dir</span>&quot;</span>/*.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#二、编写定时任务，任务是执行上面的shell脚本</span></span><br><span class="line"><span class="built_in">sudo</span> vim /etc/crontab</span><br><span class="line"><span class="comment">#每天凌晨3点10分备份数据库</span></span><br><span class="line">10 3 * * * root /root/sh/backdb.sh</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>4.28总结：安装环境、sql基础</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5SQL/4.28%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E3%80%81sql%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h1><p>PLSQL Developer 又称 sqlpuls<br>用户名：scott<br>密码：oracle</p>
<h2 id="虚拟机环境："><a href="#虚拟机环境：" class="headerlink" title="虚拟机环境："></a>虚拟机环境：</h2><p>打开虚拟机Windows7 x64.vmx<br>运行（win+r） cmd 输入 ipconfig 查看本机IP（IPv4）：192.168.48.128<br>开始菜单 Net Manager 修改 本地-服务器命名-orcl 和 监听程序- LISTENER 的 主机名 为本机IP （192.168.48.128）<br>进入 C:\oraclient\client64\bin\network\admin 以及 C:\oraclient\client64\network\admin 修改 listener.ora 和 tnsnames.ora 的 HOST（127.0.0.1）为本机IP</p>
<h2 id="本机环境："><a href="#本机环境：" class="headerlink" title="本机环境："></a>本机环境：</h2><p>安装sqlplus及汉化包<br>帮助-注册-输入许可证信息<br>将 instantclient_21_3 解压到D盘根目录<br>进入 D:\instantclient_21_3\network\admin 修改 tnsnames.ora 的 HOST 为 虚拟机本机IP（192.168.48.128）<br>添加环境变量 变量名：TNS_ADMIN 变量值：D:\instantclient_21_3\network\admin<br>sqlplus-工具-首选项-连接<br>Oracle主目录：D:\instantclient_21_3<br>OCI库：D:\instantclient_21_3\oci.dll</p>
<h1 id="数据库相关术语"><a href="#数据库相关术语" class="headerlink" title="数据库相关术语"></a>数据库相关术语</h1><p>数据库（Database，DB）<br>数据库管理系统（Batabase Management System，DBMS）<br>结构化查询语言（Structured Query Language，SQL）<br>关系型数据库（Relational Database，RDB）：目前应用最广泛的数据库。<br>常见的五种关系型数据库管理系统：<br>① Oracle Database：甲骨文公司 （用得最多）<br>② SQL Server：微软公司<br>③ DB2：IBM 公司（巨贵）<br>④ PostgreSQL：开源<br>⑤ MySQL：开源</p>
<p>服务器：用于接收并处理其它程序发出的请求的程序（软件），或者是安装此类程 序的设备（计算机）。<br>客户端：向服务器发出请求的程序（软件），或者是安装此类程序的设备（计算 机）。<br>表（table）：类似 Excel，由行和列组成的二维表。行（Row）和列（Column） 字段：表中的列（垂直方向），叫做一个字段。<br>记录：表的行（水平方向），叫做一条记录。【注意】关系数据库必须以行为单位 进行数据读写。<br>单元格：行列交汇处。【注意】与 Excel 不同，一个单元格只能输入一个数据。</p>
<h1 id="SQL相关"><a href="#SQL相关" class="headerlink" title="SQL相关"></a>SQL相关</h1><h2 id="SQL是什么？"><a href="#SQL是什么？" class="headerlink" title="SQL是什么？"></a>SQL是什么？</h2><p>结构化查询语言(Structured Query Language)，是数据库编程的核心语言。<br>SQL 语句：用关键字、表名和列名等组合而成的一条语句。</p>
<h3 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h3><ol>
<li>DQL（Data Query Language，数据查询语言）:一种用于从数据库中检索数据的语 言,代表关键字为select。 </li>
<li>DDL（Data Definition Language，数据定义语言）:用来创建数据库中的各种对象， 创建、删除、修改表的结构，代表关键字为create、drop、alter。 </li>
<li>DML（Data Manipulation Language，数据操作语言）:用于数据库中对数据的操 纵，代表关键字为insert、delete 、update。 </li>
<li>DCL（Data Control Language，数据控制语言）:用来授予或回收访问数据库的某种 特权。代表关键字为grant、revoke。 </li>
<li>TCL（Trasactional Control Languag, 事务控制语言）：用于维护数据的一致性，包 括commit、rollback和savepoint三条语句。</li>
</ol>
<h2 id="emp员工表列名"><a href="#emp员工表列名" class="headerlink" title="emp员工表列名"></a>emp员工表列名</h2><p>empno 员工编号<br>ename 员工姓名<br>job 员工工作<br>mgr 领导编号<br>hiredate 聘用日期<br>sal 工资<br>comm 奖金<br>deptno 部门编号<br>![[image 1.png]]</p>
<h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>三击即可选中某一条sql代码（或使用home将光标移动到本行开始，再使用shift+end选中本行）<br>快捷键F8即可运行选中的代码</p>
<p>单行注释：–注释文字<br>多行注释：&#x2F;* 注释文字*&#x2F;</p>
<p>select查询语句显示的结果称为结果集（result set）</p>
<p>关键字、表名不区分大小写<br>selelct 后跟 列（字段），可选多个列，用逗号隔开，对列进行筛选；*代表所有列<br>from 后跟 表；表名加点可显示列名：emp.ename<br>where 后跟 条件判断式 ，对行进行筛选</p>
<p>单引号转义自己时输入两个单引号可显示一个单引号，且任一边的单引号数量须为奇数</p>
<h3 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h3><p>为查询显示的每个输出字段或表达式取一个别名，以增加结果集的可读性，易于理解列 的含义！相当于起个外号一样，别名的效果范围仅在该SQL语句范围内，别名并不会改 变本名（列：空格 或 as；表：空格）<br>select ename 姓名，sal as 工资 from emp e<br>ename列名起名为姓名，sal列名起名为工资，emp表名起为e<br>![[image 2.png]]</p>
<h3 id="去重-distinct"><a href="#去重-distinct" class="headerlink" title="去重 distinct"></a>去重 distinct</h3><p>加在列名前，单列完全去重（多列只会去完全相同的记录，因此列数越多去重效果越差）<br>![[image 3.png]]</p>
<h3 id="连接符"><a href="#连接符" class="headerlink" title="连接符 ||"></a>连接符 ||</h3><p>可将两个字段的字符串连接在一起，还可以在结果集中加入字符串（使用前提左边有值右边也有值）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> ename <span class="operator">||</span> <span class="string">&#x27;的工资是&#x27;</span> <span class="operator">||</span> sal <span class="operator">||</span> <span class="string">&#x27;元&#x27;</span> 工资信息 <span class="keyword">from</span> emp</span><br><span class="line"><span class="operator">!</span>[[image <span class="number">4.</span>png]]</span><br></pre></td></tr></table></figure>

<h3 id="虚拟表-dual-（做测试，看系统日期）"><a href="#虚拟表-dual-（做测试，看系统日期）" class="headerlink" title="虚拟表 dual （做测试，看系统日期）"></a>虚拟表 dual （做测试，看系统日期）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sysdate <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>
<p>![[image 5.png]]</p>
<h3 id="伪列-rownum"><a href="#伪列-rownum" class="headerlink" title="伪列 rownum"></a>伪列 rownum</h3><p>只能从1开始（rownum只能小于任何数和等于1）根据查询结果集生成的一个列，在物理上不真实存在<br>![[image 6.png]]</p>
<h3 id="rowid"><a href="#rowid" class="headerlink" title="rowid"></a>rowid</h3><p>在数据插入到在数据插入到表里的时候就生成的，真实一直存在，有点类似身份证，用于区分数据的唯一性<br>![[image 7.png]]</p>
<h1 id="上机作业"><a href="#上机作业" class="headerlink" title="上机作业"></a>上机作业</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">--1. 查询emp表中员工的名字和工资</span></span><br><span class="line"><span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--2. 查询emp表中员工的编号,名字,奖金</span></span><br><span class="line"><span class="keyword">select</span> empno, ename, comm <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--3. 查询部门编号和部门名称</span></span><br><span class="line"><span class="keyword">select</span> deptno, dname <span class="keyword">from</span> dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">--4. 查询员工名字和入职日期(列名中文显示 名字, 入职日期)</span></span><br><span class="line"><span class="keyword">select</span> ename 名字, hiredate 入职日期 <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--5. 查询员工编号，名字，经理编号</span></span><br><span class="line"><span class="keyword">select</span> empno,  ename, mgr <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--6. 查询公司里的所有部门的部门编号（去重）</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> deptno <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--7. 查询员工的姓名和工资，按这种格式显示：simth的工资是800块</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="operator">||</span> <span class="string">&#x27;的工资是&#x27;</span> <span class="operator">||</span> sal <span class="operator">||</span> <span class="string">&#x27;块&#x27;</span>  工资信息 <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--8. 使用虚拟表来查看系统日期</span></span><br><span class="line"><span class="keyword">select</span> sysdate <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="comment">--9. 查看员工表的前五条数据</span></span><br><span class="line"><span class="keyword">select</span> emp.<span class="operator">*</span>, rownum <span class="keyword">from</span> emp <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--10. 查看员工表的rowid</span></span><br><span class="line"><span class="keyword">select</span> emp.<span class="operator">*</span>,rowid <span class="keyword">from</span> emp;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>4.29总结：数据类型、建表</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5SQL/4.29%E6%80%BB%E7%BB%93%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E5%BB%BA%E8%A1%A8/</url>
    <content><![CDATA[<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>![[Pasted image 20250428191815.png]]</p>
<p><strong>字符类型</strong><br>char：用于存储 固定长度 的字符串。最大长度为2000个字节。<br>varchar2：用于存储字符串数据。会根据实际数据的长度自动调整，因此在大多数情况下都会使用varchar2类型。最大长度是4000个字节。<br><em>中文（包括符号）占两个字节，英文占一个</em></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> length(<span class="string">&#x27;字符串a，&#x27;</span>) <span class="keyword">from</span> dual <span class="comment">--结果5（不区分中文）</span></span><br><span class="line"><span class="keyword">select</span> lengthb(<span class="string">&#x27;字符串a，&#x27;</span>) <span class="keyword">from</span> dual <span class="comment">--结果9（区分中文）</span></span><br></pre></td></tr></table></figure>

<p>**数值类型 **<br>number：具有精度和范围两个参数。精度指定所有数字位的个数，范围指定小数的位数。 如number（7,2）总位数7位，其中2位是小数，小数点前有5位整数，小数位数不能超过总位数。字符类型原理上不能用于运算，因此需要运算的数据需要使用number类型</p>
<p>**日期时间类型 **<br>date：可以存储日期和时间的组合数据。结合oracle提供的日期时间函数便地处理数据。日期可直接加减，不能乘除，加的是日期</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sysdate<span class="operator">+</span><span class="number">365</span> <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>
<p>timestamp：时间戳类型,可存放世纪、纪元、年、月、日、时、分、秒还可以存放秒后6 位。 一般只有对时间要求比较严格的业务（如话费计费）才用</p>
<p><strong>CLOB&#x2F;BLOB</strong><br>CLOB：大文本文件类型，可存放word,excel等文档。<br>BLOB：二进制文件类型，可存放视频、音频等。</p>
<h2 id="三大范式-（面试会问）"><a href="#三大范式-（面试会问）" class="headerlink" title="三大范式 （面试会问）"></a>三大范式 （面试会问）</h2><ul>
<li><strong>第一范式</strong>：原子性的，不可分。 *（列尽可能细分）*所谓第一范式（1NF）是指数据库表的每一列都是不可分割的基本数据项，同一列中不能有多个值，即实体中的某个属性不能有多个值或者不能有重复的属性。 </li>
<li><strong>第二范式</strong>：要求实体的属性完全依赖于主关键字。<em>（一张表只做一件事）</em> 所谓完全依赖是指不能存在仅依赖主关键字一部分的属性，如果存在，那么这个属性和主关键字的这一部分应该分离出来形成一个新的实体，新实体与原实体之间是一对多的关系。为实现区分通常需要为表加上一个列，以存储各个实例的惟一标识。 </li>
<li><strong>第三范式</strong> ：属性不依赖于其它非主属性。<em>（关系近）</em> 第三范式（3NF）要求一个数据库表中不包含已在其它表中已包含的非主关键字信息。 满足第三范式（3NF）必须先满足第二范式（2NF）。</li>
</ul>
<h2 id="数据存储方式"><a href="#数据存储方式" class="headerlink" title="数据存储方式"></a>数据存储方式</h2><p>oracle数据库的存储结构可以分为逻辑存储结构和物理存储结构,对于这两种存储结构， oracle是分别进行管理的。</p>
<p><strong>逻辑存储结构</strong>：oracle内部的组织和管理数据的方式。<br>oracle在逻辑上将保存的数据划分为一个个小单元来进行存储和维护，更高一级的逻辑存储结构都是由这些基本的小单元组成的。 逻辑结构类型按照尺寸从小到大分可分为：块(block)–&gt;区(extent)–&gt;段(segment)–&gt;表空间(tablespace）</p>
<p><strong>物理存储结构</strong>：oracle外部（操作系统）组织和管理数据的方式。<br>Oracle数据库逻辑上由一个或多个表空间组成，每个表空间在物理上由一个或多个数据 文件组成，而每个数据文件是有数据块构成的。所以，逻辑上数据存放在表空间中，而物理上存储在表空间所对应的数据文件中。<br>构成数据库物的物理文件主要有三种： </p>
<ul>
<li>数据文件：存放数据库数据。 </li>
<li>控制文件：存放数据库的基本信息，告诉数据库到哪里找到数据文件和重做日志文件等。对数据库的成功启动和正常运行是很重要的。 </li>
<li>重做日志文件：存放对数据的改变。至少两组，Oracle以循环方式来使用它们。</li>
</ul>
<h1 id="表和表空间的关系"><a href="#表和表空间的关系" class="headerlink" title="表和表空间的关系"></a>表和表空间的关系</h1><p>表空间是由若干个数据段组成，存放表，视图，索引等。一个表只能属于一个表空间， 一个表空间可以放任意多个表，一个表空间至少有一个存储文件（.dbf结尾的文件），可以有多个，而且这多个数据文件可以在不同位置，一个用户有一个默认的表空间，一个用户可以在默认表空间外的其它表空间建表。</p>
<h2 id="创建表空间"><a href="#创建表空间" class="headerlink" title="创建表空间"></a>创建表空间</h2><p>create tablespace 表空间名 datafile ‘数据文件路径’ size 初始大小（2G） autoextend on next 每次扩展的大小(100M) maxsize 最大容量（unlimited）;</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> tablespace huangwenzhe429 <span class="comment">--真的表空间名</span></span><br><span class="line">datafile <span class="string">&#x27;C:\workspace\sql\huangwenzhe429.dbf&#x27;</span> <span class="comment">--生成的文件名，可以不同，但建议与表空间名一样，数据库所在系统（虚拟机环境）应有对应路径</span></span><br><span class="line">size <span class="number">100</span>M autoextend <span class="keyword">on</span> next <span class="number">50</span>M maxsize unlimited;</span><br><span class="line"><span class="comment">--起始空间100M，用完后自动分配50M,最大空间无限</span></span><br></pre></td></tr></table></figure>
<p>登录system管理员给用户权限（管理员用户名：system）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--grant 权限 to 用户名;</span></span><br><span class="line"><span class="keyword">grant</span> dba <span class="keyword">to</span> scott <span class="comment">--给scott用户管理员权限</span></span><br><span class="line"><span class="keyword">grant</span> resource,<span class="keyword">connect</span> <span class="keyword">to</span> scott; <span class="comment">--连接权限和资源权限 </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">any</span> <span class="keyword">table</span> <span class="keyword">to</span> scott; <span class="comment">--建表权限 </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">any</span> tablespace <span class="keyword">to</span> scott; <span class="comment">--建表空间权限 </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">any</span> <span class="keyword">table</span> <span class="keyword">to</span> scott; <span class="comment">--只读权限 </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">any</span> <span class="keyword">view</span> <span class="keyword">to</span> scott; <span class="comment">--创建视图权限 </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">select</span> <span class="keyword">any</span> <span class="keyword">table</span> <span class="keyword">to</span> scott; <span class="comment">--预编译表的权限</span></span><br><span class="line"><span class="comment">--查看角色权限信息 </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> role_sys_privs; </span><br></pre></td></tr></table></figure>
<p>用户权限对比表： <a href="https://blog.csdn.net/weixin_36470210/article/details/116318174">https://blog.csdn.net/weixin_36470210/article/details/116318174</a></p>
<h2 id="创建临时表空间"><a href="#创建临时表空间" class="headerlink" title="创建临时表空间"></a>创建临时表空间</h2><p><em>一般存放select查询出来的虚拟表</em></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> temporary tablespace huangwenzheTemp429 </span><br><span class="line">tempfile <span class="string">&#x27;C:\workspace\sql\huangwenzheTemp429.dbf&#x27;</span> </span><br><span class="line">size <span class="number">100</span>M autoextend <span class="keyword">on</span> next <span class="number">50</span>M maxsize unlimited;</span><br></pre></td></tr></table></figure>
<h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><p>create user 用户名 identified by 密码 default tablespace 表空间名 temporary tablespace 临时表空间名;<br><em>default后面的语句是为用户指定默认表空间和临时表空间，如果不指定，默认的表空间 是users表空间，临时表空间是temp</em></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> huangwenzhe <span class="comment">--用户名</span></span><br><span class="line">identified <span class="keyword">by</span> oracle <span class="comment">--密码</span></span><br><span class="line"><span class="keyword">default</span> tablespace huangwenzhe429 <span class="comment">--表空间名</span></span><br><span class="line">temporary tablespace huangwenzheTemp429;  <span class="comment">--临时表空间名</span></span><br></pre></td></tr></table></figure>
<h2 id="删除表空间"><a href="#删除表空间" class="headerlink" title="删除表空间"></a>删除表空间</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> tablespace huangwenzhe including contents;</span><br></pre></td></tr></table></figure>
<p><em>including contents选项用于删除表空间时包含其内容。如果不使用这个选项，表空间会 被删除，但数据文件仍然存在，磁盘空间不会被释放。使用这个选项可以确保表空间及 其内容被完全删除，从而释放磁盘空间</em></p>
<h2 id="命令窗口登陆数据库"><a href="#命令窗口登陆数据库" class="headerlink" title="命令窗口登陆数据库"></a>命令窗口登陆数据库</h2><p>sqlplus 用户名&#x2F;密码@数据库<br>sqlplus scott&#x2F;oracle@orcl<br><em>（此处不需要分号，但命令窗口写sql语句结束一定要加分号）</em><br>![[Pasted image 20250429122129.png]]<br><em>命令窗口操作数据库应在数据库所在系统（虚拟机环境）中进行</em></p>
<h2 id="扩容表空间"><a href="#扩容表空间" class="headerlink" title="扩容表空间"></a>扩容表空间</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> tablespace huangwenzhe429 </span><br><span class="line"><span class="keyword">add</span> datafile <span class="string">&#x27;C:\workspace\sql\huangwenzhe429.dbf&#x27;</span> </span><br><span class="line">size <span class="number">100</span>m autoextend <span class="keyword">on</span> next <span class="number">10</span>m maxsize unlimited;</span><br></pre></td></tr></table></figure>

<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>system登录报错： ORA-01017（用户名&#x2F;口令无效; 登录被拒绝）<br>打开cmd命令窗，输入sqlplus &#x2F; as sysdba<br>1.修改密码：alter user 用户名 identified by 密码;<br>2.用户被锁定，解锁：alter user 用户名 account unlock;</p>
<h1 id="建表相关"><a href="#建表相关" class="headerlink" title="建表相关"></a>建表相关</h1><p>三大数据类型：number  varchar2  date</p>
<p><strong>六大约束</strong></p>
<ul>
<li>not null 非空约束  </li>
<li>unique 唯一约束  </li>
<li>primary key 主键约束（非空&amp;唯一）</li>
<li>default 默认约束</li>
<li>check 检查约束（唯一带条件判断的约束）</li>
<li>references 外键约束</li>
</ul>
<p>有外键约束的表为从表，没有的为主表，建表先主后从，删表先从后主</p>
<p>重复数据 &#x3D; 冗余数据<br>null &#x3D; 空<br>列名不应使用会高亮的关键字</p>
<h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create table</span> bm(  <span class="comment">--表名为bm</span></span><br><span class="line">	bmno number(<span class="number">4</span>) <span class="keyword">primary key</span>,</span><br><span class="line">	bmmc varchar2(<span class="number">20</span>) <span class="keyword">unique</span>,</span><br><span class="line">	bmdz varchar2(<span class="number">20</span>) <span class="keyword">not null</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--列级约束</span></span><br><span class="line"><span class="keyword">create table</span> yg( <span class="comment">--表名为yg</span></span><br><span class="line">	ygno number(<span class="number">6</span>) <span class="keyword">primary key</span>, <span class="comment">--主键约束</span></span><br><span class="line">	ygxm varchar2(<span class="number">20</span>) <span class="keyword">not null</span>, <span class="comment">--非空约束</span></span><br><span class="line">	job varchar2(<span class="number">20</span>) <span class="keyword">not null</span>, <span class="comment">--not null无法使用表级约束</span></span><br><span class="line">	rzrq <span class="type">date</span> <span class="keyword">default</span> sysdate, <span class="comment">--默认约束，默认为当前日期</span></span><br><span class="line">	gz number(<span class="number">7</span>,<span class="number">2</span>) <span class="keyword">check</span>(gz<span class="operator">&gt;=</span><span class="number">1500</span>), <span class="comment">--唯一一个带条件判断的约束</span></span><br><span class="line">	bmno number(<span class="number">4</span>) <span class="keyword">references</span> bm(bmno), <span class="comment">--外键约束</span></span><br><span class="line">	<span class="keyword">constraint</span> zjys <span class="keyword">primary key</span>(ygno), <span class="comment">--表级约束</span></span><br><span class="line">	<span class="keyword">constraint</span> wjys <span class="keyword">foreign key</span>(bmno) <span class="keyword">references</span> bm(bmno)</span><br><span class="line">	<span class="comment">--表级约束语法</span></span><br><span class="line">	<span class="comment">--constraint 约束名 约束类型(列名)</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--复合主键必须用表级约束</span></span><br><span class="line"><span class="keyword">create table</span> cj(</span><br><span class="line">	sno number(<span class="number">5</span>),</span><br><span class="line">	course varchar2(<span class="number">20</span>),</span><br><span class="line">	score number(<span class="number">6</span>,<span class="number">3</span>),</span><br><span class="line">	<span class="keyword">constraint</span> fhzj <span class="keyword">primary key</span>(sno,course)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建一个和select查询语句查询结果一样的表（包括结构和数据）</span></span><br><span class="line"><span class="keyword">create table</span> bm3 <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.dept</span><br></pre></td></tr></table></figure>

<h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert into</span> bm <span class="keyword">values</span>(<span class="number">10</span>,<span class="string">&#x27;销售部门&#x27;</span>,<span class="string">&#x27;桂林市&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> bm</span><br></pre></td></tr></table></figure>

<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><h2 id="表空间"><a href="#表空间" class="headerlink" title="表空间"></a>表空间</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--创建表空间</span></span><br><span class="line"><span class="keyword">create</span> tablespace huangwenzhe429 </span><br><span class="line">datafile <span class="string">&#x27;C:\workspace\sql\huangwenzhe429.dbf&#x27;</span> </span><br><span class="line">size <span class="number">100</span>M autoextend <span class="keyword">on</span> next <span class="number">50</span>M maxsize unlimited;</span><br><span class="line"></span><br><span class="line"><span class="comment">--给予管理员权限</span></span><br><span class="line"><span class="keyword">grant</span> dba <span class="keyword">to</span> scott;</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建临时表空间</span></span><br><span class="line"><span class="keyword">create</span> temporary tablespace huangwenzheTemp429 </span><br><span class="line">tempfile <span class="string">&#x27;C:\workspace\sql\huangwenzheTemp429.dbf&#x27;</span> </span><br><span class="line">size <span class="number">100</span>M autoextend <span class="keyword">on</span> next <span class="number">50</span>M maxsize unlimited;</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建用户</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> huangwenzhe</span><br><span class="line">identified <span class="keyword">by</span> oracle </span><br><span class="line"><span class="keyword">default</span> tablespace huangwenzhe429 </span><br><span class="line">temporary tablespace huangwenzheTemp429;</span><br><span class="line"></span><br><span class="line"><span class="comment">--给予用户管理员权限</span></span><br><span class="line"><span class="keyword">grant</span> dba <span class="keyword">to</span> huangwenzhe;</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看别的用户的表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.emp;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">--删除表空间</span></span><br><span class="line"><span class="keyword">drop</span> tablespace huangwenzhe429 including contents;</span><br></pre></td></tr></table></figure>

<h2 id="学生管理系统"><a href="#学生管理系统" class="headerlink" title="学生管理系统"></a>学生管理系统</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--创建teacher表</span></span><br><span class="line"><span class="keyword">create table</span> teacher(</span><br><span class="line">       TNO varchar2(<span class="number">10</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       TNAME varchar2(<span class="number">20</span>) <span class="keyword">not null</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入teacher数据</span></span><br><span class="line"><span class="keyword">insert into</span> teacher <span class="keyword">values</span>(<span class="string">&#x27;t001&#x27;</span>,<span class="string">&#x27;刘阳&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> teacher <span class="keyword">values</span>(<span class="string">&#x27;t002&#x27;</span>,<span class="string">&#x27;谌燕&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> teacher <span class="keyword">values</span>(<span class="string">&#x27;t003&#x27;</span>,<span class="string">&#x27;胡明星&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看/删除teacher表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> teacher</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> teacher</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建student表</span></span><br><span class="line"><span class="keyword">create table</span> student(</span><br><span class="line">       SNO varchar2(<span class="number">20</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       SNAME varchar2(<span class="number">30</span>),</span><br><span class="line">       SAGE number(<span class="number">2</span>) <span class="keyword">check</span>(SAGE <span class="keyword">between</span> <span class="number">6</span> <span class="keyword">and</span> <span class="number">40</span>),</span><br><span class="line">       SSEX varchar2(<span class="number">5</span>) <span class="keyword">default</span> <span class="string">&#x27;男&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入student数据</span></span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s001&#x27;</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">23</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s002&#x27;</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">23</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s003&#x27;</span>,<span class="string">&#x27;吴鹏&#x27;</span>,<span class="number">25</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s004&#x27;</span>,<span class="string">&#x27;琴沁&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s005&#x27;</span>,<span class="string">&#x27;王丽&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s006&#x27;</span>,<span class="string">&#x27;李波&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s007&#x27;</span>,<span class="string">&#x27;刘玉&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s008&#x27;</span>,<span class="string">&#x27;萧蓉&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s009&#x27;</span>,<span class="string">&#x27;陈萧晓&#x27;</span>,<span class="number">23</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s010&#x27;</span>,<span class="string">&#x27;陈美&#x27;</span>,<span class="number">22</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s12&#x27;</span>,<span class="string">&#x27;谢丰琴&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s13&#x27;</span>,<span class="string">&#x27;谢中菊&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;谢一才&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看/删除student表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> student</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建course表</span></span><br><span class="line"><span class="keyword">create table</span> course(</span><br><span class="line">       CNO varchar2(<span class="number">10</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       CNAME varchar2(<span class="number">30</span>),</span><br><span class="line">       TNO varchar2(<span class="number">20</span>) <span class="keyword">references</span> teacher(tno)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入course数据</span></span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c001&#x27;</span>,<span class="string">&#x27;J2SE&#x27;</span>,<span class="string">&#x27;t002&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c002&#x27;</span>,<span class="string">&#x27;Java Web&#x27;</span>,<span class="string">&#x27;t002&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c003&#x27;</span>,<span class="string">&#x27;SSH&#x27;</span>,<span class="string">&#x27;t001&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c004&#x27;</span>,<span class="string">&#x27;Oracle&#x27;</span>,<span class="string">&#x27;t001&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c005&#x27;</span>,<span class="string">&#x27;SQL SERVER 2005&#x27;</span>,<span class="string">&#x27;t003&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c006&#x27;</span>,<span class="string">&#x27;C#&#x27;</span>,<span class="string">&#x27;t003&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c007&#x27;</span>,<span class="string">&#x27;JavaScript&#x27;</span>,<span class="string">&#x27;t002&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c008&#x27;</span>,<span class="string">&#x27;DIV+CSS&#x27;</span>,<span class="string">&#x27;t001&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c009&#x27;</span>,<span class="string">&#x27;PHP&#x27;</span>,<span class="string">&#x27;t003&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> course <span class="keyword">values</span>(<span class="string">&#x27;c010&#x27;</span>,<span class="string">&#x27;EJB3.0&#x27;</span>,<span class="string">&#x27;t002&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看/删除course表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> course</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> course</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建sc表</span></span><br><span class="line"><span class="keyword">create table</span> sc(</span><br><span class="line">       SNO varchar2(<span class="number">10</span>) <span class="keyword">references</span> student(sno),</span><br><span class="line">       CNO varchar2(<span class="number">10</span>) <span class="keyword">references</span> course(cno),</span><br><span class="line">       SCORE number(<span class="number">5</span>,<span class="number">2</span>) <span class="keyword">check</span>(SCORE <span class="keyword">between</span> <span class="number">0</span> <span class="keyword">and</span> <span class="number">100</span>),</span><br><span class="line">       <span class="keyword">constraint</span> fhzj <span class="keyword">primary key</span>(sno,cno)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入sc数据</span></span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s001&#x27;</span>,<span class="string">&#x27;c001&#x27;</span>,<span class="number">78.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s002&#x27;</span>,<span class="string">&#x27;c001&#x27;</span>,<span class="number">80.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s003&#x27;</span>,<span class="string">&#x27;c001&#x27;</span>,<span class="number">81.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s004&#x27;</span>,<span class="string">&#x27;c001&#x27;</span>,<span class="number">60.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s001&#x27;</span>,<span class="string">&#x27;c002&#x27;</span>,<span class="number">82.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s002&#x27;</span>,<span class="string">&#x27;c002&#x27;</span>,<span class="number">72.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s003&#x27;</span>,<span class="string">&#x27;c002&#x27;</span>,<span class="number">81.90</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s001&#x27;</span>,<span class="string">&#x27;c003&#x27;</span>,<span class="number">59.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s12&#x27;</span>,<span class="string">&#x27;c005&#x27;</span>,<span class="number">89.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s13&#x27;</span>,<span class="string">&#x27;c008&#x27;</span>,<span class="number">87.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s13&#x27;</span>,<span class="string">&#x27;c007&#x27;</span>,<span class="number">65.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s13&#x27;</span>,<span class="string">&#x27;c010&#x27;</span>,<span class="number">85.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;c007&#x27;</span>,<span class="number">100.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;c005&#x27;</span>,<span class="number">60.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;c006&#x27;</span>,<span class="number">92.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;c008&#x27;</span>,<span class="number">95.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;c010&#x27;</span>,<span class="number">91.00</span>);</span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s14&#x27;</span>,<span class="string">&#x27;c004&#x27;</span>,<span class="number">57.00</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看/删除sc表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> sc</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>4.30总结：增删改查、操作符</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5SQL/4.30%E6%80%BB%E7%BB%93%EF%BC%9A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%93%8D%E4%BD%9C%E7%AC%A6/</url>
    <content><![CDATA[<h1 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h1><p>结构：增create 删drop 改alter 查select<br>数据：增insert 删delete 改update 查select</p>
<h2 id="alter-table-能够实现的功能"><a href="#alter-table-能够实现的功能" class="headerlink" title="alter table 能够实现的功能"></a>alter table 能够实现的功能</h2><p>alter都是基于表去修改</p>
<p>1.新增列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 <span class="keyword">add</span> 列名 类型(长度)[约束<span class="operator">&amp;</span>默认值]; </span><br><span class="line"><span class="keyword">alter table</span> student <span class="keyword">add</span> City varchar2(<span class="number">20</span>) <span class="keyword">not null</span>;</span><br></pre></td></tr></table></figure>
<p>2.修改列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 modify 列名 类型 [约束 默认值]; <span class="comment">--修改表中的列 </span></span><br><span class="line"><span class="keyword">alter table</span> student modify City <span class="type">varchar</span>(<span class="number">300</span>) <span class="keyword">unique</span> <span class="keyword">not null</span>; </span><br><span class="line"><span class="keyword">alter table</span> 表名 modify 列名 类型 <span class="keyword">null</span>; <span class="comment">--去掉列的非空约束 </span></span><br><span class="line"><span class="keyword">alter table</span> 表名 modify 列名 类型 <span class="keyword">not null</span>; <span class="comment">--给列添加非空约束 </span></span><br><span class="line"><span class="keyword">alter table</span> cjb modify xingming <span class="keyword">null</span></span><br></pre></td></tr></table></figure>
<p>3.删除列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 <span class="keyword">drop</span> <span class="keyword">column</span> 列名; <span class="comment">--删除表中的列 </span></span><br><span class="line"><span class="keyword">alter table</span> student <span class="keyword">drop</span> <span class="keyword">column</span> sname </span><br></pre></td></tr></table></figure>
<p>4.新的列定义默认值 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> student modify city <span class="keyword">default</span> <span class="string">&#x27;北京&#x27;</span>; </span><br></pre></td></tr></table></figure>
<p>5.重命名列 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 rename <span class="keyword">column</span> 旧列名 <span class="keyword">to</span> 新列名; </span><br></pre></td></tr></table></figure>
<p>6.将表更改为只读状态</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 READ <span class="keyword">ONLY</span>; <span class="comment">--改为只读状态</span></span><br><span class="line"><span class="keyword">alter table</span> 表名 READ WRITE; <span class="comment">--改回可编辑模式</span></span><br></pre></td></tr></table></figure>
<p>7.添加约束 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 <span class="keyword">add</span> 表级约束语法; <span class="comment">--给表添加表级约束 </span></span><br><span class="line"><span class="comment">--alter table 表名 add constraint 约束名 约束类型(列名)</span></span><br><span class="line"><span class="keyword">alter table</span> bm2 <span class="keyword">add constraint</span> bm2_zjys <span class="keyword">primary key</span>(deptno);</span><br><span class="line"><span class="keyword">alter table</span> emp <span class="keyword">add constraint</span> FK_DEPTNO <span class="keyword">foreign key</span> (deptno) <span class="keyword">references</span> DEPT (DEPTNO); </span><br><span class="line"><span class="keyword">alter table</span> emp <span class="keyword">add constraint</span> CK_sal <span class="keyword">check</span> sal (sal<span class="operator">&gt;</span><span class="number">800</span>) </span><br><span class="line"><span class="comment">--因非空约束不能使用表级约束语法，故添加非空约束需使用modify：</span></span><br><span class="line"><span class="keyword">alter table</span> bm2 modify loc varchar2(<span class="number">20</span>) <span class="keyword">not null</span>;</span><br></pre></td></tr></table></figure>
<p>8.删除约束 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter table</span> 表名 <span class="keyword">drop</span> <span class="keyword">constraint</span> 约束名; <span class="comment">--删除一个约束</span></span><br><span class="line"><span class="keyword">alter table</span> bm2 <span class="keyword">drop</span> <span class="keyword">constraint</span> BM2_ZJYS</span><br></pre></td></tr></table></figure>


<h2 id="insert-数据插入"><a href="#insert-数据插入" class="headerlink" title="insert 数据插入"></a>insert 数据插入</h2><ul>
<li>格式一：指定列插入数据，使用前提是不被插入的列可为空</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert into</span> bm3(deptno,loc) <span class="keyword">values</span>(<span class="number">50</span>,<span class="string">&#x27;七星区&#x27;</span>);</span><br><span class="line"><span class="keyword">insert into</span> bm3(deptno,dname,loc) <span class="keyword">values</span>(<span class="number">60</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;a&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>格式二：不指定列插入，默认所有列都需要值，如遇到不插入数据的列则用null值填充</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert into</span> bm3 <span class="keyword">values</span>(<span class="number">70</span>,<span class="string">&#x27;t&#x27;</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure>
<ul>
<li>格式三：只插入select查询结果集的数据,注意查询的结果集结构要保证和表结构一致</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert into</span> bm3(deptno,dname) <span class="keyword">select</span> deptno,dname <span class="keyword">from</span> scott.dept</span><br><span class="line"><span class="keyword">insert into</span> bm3 <span class="keyword">select</span> <span class="number">20</span>,<span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;z&#x27;</span> <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">insert into</span> bm3 <span class="keyword">select</span> deptno,ename,job <span class="keyword">from</span> scott.emp</span><br></pre></td></tr></table></figure>

<h2 id="update-修改"><a href="#update-修改" class="headerlink" title="update 修改"></a>update 修改</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> bm3 <span class="keyword">set</span> deptno<span class="operator">=</span><span class="number">80</span> <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">60</span></span><br><span class="line"><span class="keyword">update</span> bm3 <span class="keyword">set</span> dname<span class="operator">=</span><span class="string">&#x27;销售部门&#x27;</span>,loc<span class="operator">=</span><span class="string">&#x27;八星区&#x27;</span> <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">80</span> <span class="comment">--修改多项数据，逗号隔开</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--把WARD的工资改成和SMITH一样</span></span><br><span class="line"><span class="keyword">update</span> yg2 <span class="keyword">set</span> sal<span class="operator">=</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> yg2 <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;SMITH&#x27;</span>) <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;WARD&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="delete-删除的是数据"><a href="#delete-删除的是数据" class="headerlink" title="delete 删除的是数据"></a>delete 删除的是数据</h2><p>delete、insert只能以行为单位进行操作</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> yg2 <span class="keyword">where</span> empno<span class="operator">=</span><span class="number">7369</span></span><br><span class="line"><span class="keyword">alter table</span> yg2 <span class="keyword">drop</span> <span class="keyword">column</span> deptno</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> yg2 <span class="keyword">where</span> sal<span class="operator">&gt;</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> yg2 <span class="keyword">where</span> empno<span class="operator">=</span><span class="number">7499</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--删除表数据 DDL结构上的不能回滚 DML数据上的能回滚</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> yg2<span class="comment">--删除结构和数据，不能回滚</span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> yg2<span class="comment">--删除数据,不能回滚</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> yg2 <span class="comment">--删除数据，能回滚</span></span><br></pre></td></tr></table></figure>
<p>速度：drop&gt;truncate&gt;delete</p>
<h2 id="merge-融合"><a href="#merge-融合" class="headerlink" title="merge 融合"></a>merge 融合</h2><p>备份还原（仅一张表）<br>根据与源表联接的结果，对目标表执行插入、更新或删除操作。例如，根据在另一个表中找到的差异在一个表中插入、更新或删除行，可以对两个表进行同步。<br>merge也是数据上的属于DML</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">merge</span> <span class="keyword">into</span> 目标表</span><br><span class="line"><span class="keyword">Using</span> 备份表（源表）</span><br><span class="line"><span class="keyword">On</span> (<span class="keyword">values</span><span class="operator">=</span><span class="keyword">values</span>) </span><br><span class="line"><span class="keyword">When</span> matched <span class="keyword">then</span> <span class="keyword">update</span> 和 <span class="keyword">delete</span> </span><br><span class="line"><span class="keyword">When</span> <span class="keyword">not</span> matched <span class="keyword">then</span> <span class="keyword">insert</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--用源表sc1对目标表sc进行更新 </span></span><br><span class="line"><span class="keyword">merge</span> <span class="keyword">into</span> sc <span class="comment">--目标表（需要更新的表）</span></span><br><span class="line"><span class="keyword">using</span> sc1 <span class="comment">--源表（备份表）</span></span><br><span class="line"><span class="keyword">on</span>(sc.sno<span class="operator">=</span>sc1.sno <span class="keyword">and</span> sc.cno<span class="operator">=</span>sc1.cno)</span><br><span class="line"><span class="keyword">when</span> matched <span class="keyword">then</span> </span><br><span class="line"><span class="keyword">update</span> <span class="keyword">set</span> sc.score<span class="operator">=</span>sc1.score<span class="comment">--有值的时候去做更新</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">not</span> matched <span class="keyword">then</span> </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">values</span>(sc1.sno,sc1.cno,sc1.score)<span class="comment">--没值的时候直接插入</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">merge</span> <span class="keyword">into</span> table1</span><br><span class="line"><span class="keyword">using</span> table2</span><br><span class="line"><span class="keyword">on</span>(table1.id<span class="operator">=</span>table2.id)</span><br><span class="line"><span class="keyword">when</span> matched <span class="keyword">then</span> </span><br><span class="line"><span class="keyword">update</span> <span class="keyword">set</span> table1.setup_date<span class="operator">=</span>table2.setup_date</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">set</span> table1.mature_date<span class="operator">=</span>table2.mature_date</span><br><span class="line"><span class="keyword">when</span> <span class="keyword">not</span> matched <span class="keyword">then</span> </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">values</span>(table2.setup_date,table2.mature_date)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>update和delete同时带有where时，delete相当于继承上面的where条件再执行delete后面的条件</p>
<h1 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h1><ul>
<li>算术操作符：+ - * &#x2F; （加减乘除）<br>一般用与数字类型的运算，和日期加减运算</li>
<li>连接操作符: || (把多个列合并成一个列)</li>
<li>逻辑操作符: and、or、not (与、或、非)<br>一般用于多个条件判断式的连接<br>优先级：not&gt;and&gt;or (可用小括号改变优先级)</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--not 取反离自己最近的那个条件判断式</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">not</span> sal<span class="operator">&gt;</span><span class="number">2000</span> <span class="keyword">or</span> deptno<span class="operator">=</span><span class="number">20</span> <span class="keyword">and</span> job<span class="operator">=</span><span class="string">&#x27;MANAGER&#x27;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>比较操作符：&gt;、 &gt;&#x3D;、 &lt;、 &lt;&#x3D;、 &#x3D;、 !&#x3D; 、 &lt;&gt; 、any、all、between..and..、like、in、is null<br>（都是放在where后面做条件比较）</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span><span class="number">3000</span><span class="comment">--数字的大于不包含本身</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename<span class="operator">&gt;</span><span class="string">&#x27;C&#x27;</span><span class="comment">--字符的大于包含本身（比的是数据的首字母A..Z）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--any：只需满足与括号内任一内容比较的条件（大于最小值，小于最大值）</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span><span class="keyword">any</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span>) <span class="comment">--求工资大于20号部门任一工资的员工数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--all：必须满足与括号内所有内容比较的条件（大于最大值，小于最小值）</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span><span class="keyword">all</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span>) <span class="comment">--求工资大于所有20号部门的工资的员工数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--in：筛选出括号内的内容，功能相当于 =any</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sno <span class="keyword">in</span>(<span class="string">&#x27;s001&#x27;</span>,<span class="string">&#x27;s002&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--is null:判断为空值 </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">not null</span> <span class="comment">--非空</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--between..and..包含边界值，边界值得从小到大</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">950</span> <span class="keyword">and</span> <span class="number">3000</span></span><br></pre></td></tr></table></figure>
<p><strong>like</strong> 模糊搜索<br>在where子句中使用like关键字查询数据的方式也称为<strong>字符串模式匹配</strong>或<strong>字符串模糊查询</strong>，like关键字需要使用通配符在字符串内查找指定的模式，所以要了解常用的通配符。<br>Like关键字可以使用以下两个通配符：</p>
<ul>
<li>%：代表0或者多个字符 </li>
<li>_：代表一个且只能是一个字符<br>例如：<br>“k%”代表以k开头的任意长度的字符串；<br>“%k”代表以k结尾的任意长度的字符串；<br>“%k%”代表含有k字母的任意长度的字符串；<br>“_kk”代表3个字符长度且后面2个字符是kk的字符串<br>要查询的字符串中含有“%”或“”时，可以使用转义（escape）关键字实现：</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> EMP <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%\_%&#x27;</span> <span class="keyword">escape</span> <span class="string">&#x27;\&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>上述查询语句中使用了”\”为转义字符，即在“\”之后的“_<em>”字符已不是通配符，而是他本来的含义，即下划线。因此该查询的结果为：含有“_</em>”，任意长度字符的字符串。<br>以上规则可复合使用（见练习17-20）</p>
<h1 id="上机练习5"><a href="#上机练习5" class="headerlink" title="上机练习5"></a>上机练习5</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--学生管理系统</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--1.将c002课程的成绩增加5分</span></span><br><span class="line"><span class="keyword">update</span> sc <span class="keyword">set</span> score<span class="operator">=</span>score<span class="operator">+</span><span class="number">5</span> <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c002&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--2.将c001课程成绩小于80分的同学的成绩增加10分</span></span><br><span class="line"><span class="keyword">update</span> sc <span class="keyword">set</span> score<span class="operator">=</span>score<span class="operator">+</span><span class="number">10</span> <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span> <span class="keyword">and</span> score<span class="operator">&lt;</span><span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.增加一个学生:学号&#x27;s013&#x27;，姓名：&#x27;王麻子&#x27;，年龄：28，性别：男</span></span><br><span class="line"><span class="keyword">insert into</span> student <span class="keyword">values</span>(<span class="string">&#x27;s013&#x27;</span>,<span class="string">&#x27;王麻子&#x27;</span>,<span class="number">28</span>,<span class="string">&#x27;男&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.创建一张和sc表相同的表，并将s001和s002学生的选课信息插入新表中</span></span><br><span class="line"><span class="keyword">create table</span> sc1 <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sno<span class="operator">=</span><span class="string">&#x27;s001&#x27;</span> <span class="keyword">or</span> sno<span class="operator">=</span><span class="string">&#x27;s002&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--5.将所有c001课程成绩不及格的同学的分数改为60分</span></span><br><span class="line"><span class="keyword">update</span> sc <span class="keyword">set</span> score<span class="operator">=</span><span class="number">60</span> <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span> <span class="keyword">and</span> score<span class="operator">&lt;</span><span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--6.删除“s002”同学的“c001”课程的信息记录</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sno<span class="operator">=</span><span class="string">&#x27;s002&#x27;</span> <span class="keyword">and</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span></span><br><span class="line"><span class="comment">--重新插入“s002”同学的“c001”课程的信息记录</span></span><br><span class="line"><span class="keyword">insert into</span> sc <span class="keyword">values</span>(<span class="string">&#x27;s002&#x27;</span>,<span class="string">&#x27;c001&#x27;</span>,<span class="number">80.90</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.用sc1去更新sc，当学生和选修课程相同的时候，把sc1的分数更新到sc，不同的时候就插入到sc</span></span><br><span class="line"> <span class="keyword">merge</span> <span class="keyword">into</span> sc</span><br><span class="line"> <span class="keyword">using</span> sc1</span><br><span class="line"> <span class="keyword">on</span>(sc.sno<span class="operator">=</span>sc1.sno <span class="keyword">and</span> sc.cno<span class="operator">=</span>sc1.cno)</span><br><span class="line"> <span class="keyword">when</span> matched <span class="keyword">then</span></span><br><span class="line"> <span class="keyword">update</span> <span class="keyword">set</span> sc.score<span class="operator">=</span>sc1.score</span><br><span class="line"> <span class="keyword">when</span> <span class="keyword">not</span> matched <span class="keyword">then</span></span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">values</span>(sc1.sno,sc1.cno,sc1.score)</span><br><span class="line"> </span><br><span class="line"> <span class="comment">--操作符练习</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--1.查询名字是BLAKE的人的编号,名字,工资</span></span><br><span class="line"><span class="keyword">select</span> empno,ename,sal <span class="keyword">from</span> emp <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;BLAKE&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.查询编号是7782的员工的编号,名字,工资,奖金</span></span><br><span class="line"><span class="keyword">select</span> empno,ename,sal,comm <span class="keyword">from</span> emp <span class="keyword">where</span> empno<span class="operator">=</span><span class="number">7782</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.查询职位是销售(SALESMAN)的人的名字,职位,入职日期</span></span><br><span class="line"><span class="keyword">select</span> ename,job,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;SALESMAN&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--4.查询部门是10的人的编号,名字,部门编号</span></span><br><span class="line"><span class="keyword">select</span> empno,ename,deptno <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">10</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--5.查询工资大于1500,并且小于2500的人的编号,名字,工资</span></span><br><span class="line"><span class="keyword">select</span> empno,ename,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span><span class="number">1500</span> <span class="keyword">and</span> sal<span class="operator">&lt;</span><span class="number">2500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--6.查询工资小于2000的人的名字,工资,奖金</span></span><br><span class="line"><span class="keyword">select</span> ename,sal,comm <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&lt;</span><span class="number">2000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--7.求工作是CLERK的或者工资小于2000员工姓名,工作,工资</span></span><br><span class="line"><span class="keyword">select</span> ename,job,sal <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">or</span> sal<span class="operator">&lt;</span><span class="number">2000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--8.求工资小于800或者大于1500的员工姓名,工作,工资</span></span><br><span class="line"><span class="keyword">select</span> ename,job,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&lt;</span><span class="number">800</span> <span class="keyword">or</span> sal<span class="operator">&gt;</span><span class="number">1500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--9.求工作是CLERK,并且工资小于950或者大于1500的员工姓名,工作,工资</span></span><br><span class="line"><span class="keyword">select</span> ename,job,sal <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">and</span> (sal<span class="operator">&lt;</span><span class="number">950</span> <span class="keyword">or</span> sal<span class="operator">&gt;</span><span class="number">1500</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--10.求10号部门工资大于1000和20号部门工资大于1500的员工姓名</span></span><br><span class="line"> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">10</span> <span class="keyword">and</span> sal<span class="operator">&gt;</span><span class="number">1000</span> <span class="keyword">or</span> deptno<span class="operator">=</span><span class="number">20</span> <span class="keyword">and</span> sal<span class="operator">&gt;</span><span class="number">1500</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">--11.求工资在1500到2000之间的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">1500</span> <span class="keyword">and</span> <span class="number">2000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--12.求部门编号是10号，20号，30号中任意一个部门的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span>(<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--13.求姓名中包含&#x27;M&#x27;的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%M%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--14.求员工姓名第二位是&#x27;M&#x27;的员工姓名</span></span><br><span class="line"> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;_M%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--15.求姓名中包含A和L的姓名</span></span><br><span class="line"> <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%A%&#x27;</span> <span class="keyword">and</span> ename <span class="keyword">like</span> <span class="string">&#x27;%L%&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--16.求姓名是五位的员工信息</span></span><br><span class="line"><span class="keyword">select</span>  <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;_____&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--17.求姓名中第3位是%的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;__\%%&#x27;</span> <span class="keyword">escape</span> <span class="string">&#x27;\\&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--18.求第一位是_,倒数第二位也是_的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;\_%&#x27;</span> <span class="keyword">and</span> ename <span class="keyword">like</span> <span class="string">&#x27;%\__&#x27;</span> <span class="keyword">escape</span> <span class="string">&#x27;\ &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--19.求以_开头,第三位也是下划线_,第六位是%的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;\__\___\%%&#x27;</span> <span class="keyword">escape</span> <span class="string">&#x27;\ &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--20.求名字中不包含M的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">&#x27;%M%&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.10总结：删除重复数据</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5SQL/5.10%E6%80%BB%E7%BB%93%EF%BC%9A%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="删除重复数据"><a href="#删除重复数据" class="headerlink" title="删除重复数据"></a>删除重复数据</h1><p>删除的是全字段重复的数据（见练习18题）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create table</span> dept1 <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.dept; </span><br><span class="line"><span class="keyword">insert into</span> dept1 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.dept; </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept1</span><br><span class="line"></span><br><span class="line"><span class="comment">--方法一 </span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> dept1 <span class="keyword">where</span> rowid <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="built_in">max</span>(rowid) <span class="keyword">from</span> dept1 <span class="keyword">group</span> <span class="keyword">by</span> deptno)</span><br><span class="line"></span><br><span class="line"><span class="comment">--方法二 </span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> dept1 <span class="keyword">where</span> rowid <span class="keyword">not</span> <span class="keyword">in</span> ( </span><br><span class="line">	<span class="keyword">select</span> rowid <span class="keyword">from</span> ( </span><br><span class="line">		<span class="keyword">select</span> dept1.<span class="operator">*</span>,rowid,<span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> deptno) r <span class="keyword">from</span> dept1 </span><br><span class="line">		)<span class="keyword">where</span> r<span class="operator">=</span><span class="number">1</span> </span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--上机练习14</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--1、检索“c001”课程分数小于80，按分数降序排列的同学学号</span></span><br><span class="line"><span class="keyword">select</span> sno,score <span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span> <span class="keyword">and</span> score<span class="operator">&lt;</span><span class="number">80</span> <span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2、查询各个课程及相应的选修人数</span></span><br><span class="line"><span class="keyword">select</span> c.cno,c.cname,<span class="built_in">count</span>(sc.sno) 选修人数</span><br><span class="line"><span class="keyword">from</span> course c <span class="keyword">left</span> <span class="keyword">join</span> sc <span class="keyword">on</span> c.cno<span class="operator">=</span>sc.cno </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> c.cno,c.cname <span class="keyword">order</span> <span class="keyword">by</span> c.cno</span><br><span class="line"></span><br><span class="line"><span class="comment">--3、按照不同老师编号分类显示课程列表，课程之间用逗号隔开</span></span><br><span class="line"><span class="keyword">select</span> tno,<span class="built_in">listagg</span>(cname,<span class="string">&#x27;，&#x27;</span>)<span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> cno) <span class="keyword">from</span> course <span class="keyword">group</span> <span class="keyword">by</span> tno</span><br><span class="line"></span><br><span class="line"><span class="comment">--4、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分</span></span><br><span class="line"><span class="keyword">select</span> cno 课程ID, <span class="built_in">max</span>(score) 最高分, <span class="built_in">min</span>(score) 最低分 <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> cno <span class="keyword">order</span> <span class="keyword">by</span> cno</span><br><span class="line"></span><br><span class="line"><span class="comment">--5、查看成绩表信息，多加一列标注是否及格</span></span><br><span class="line"><span class="keyword">select</span> sc.<span class="operator">*</span>,<span class="keyword">case</span></span><br><span class="line">       <span class="keyword">when</span> score<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">then</span> <span class="string">&#x27;是&#x27;</span></span><br><span class="line">       <span class="keyword">else</span> <span class="string">&#x27;否&#x27;</span></span><br><span class="line">       <span class="keyword">end</span> 是否及格</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"></span><br><span class="line"><span class="comment">--6、查询出只选修了一门课程的全部学生的学号和姓名</span></span><br><span class="line"><span class="keyword">select</span> sno,sname <span class="keyword">from</span> student s <span class="keyword">where</span> </span><br><span class="line">       (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sc  <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno)<span class="operator">=</span><span class="number">1</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> s.sno</span><br><span class="line"></span><br><span class="line"><span class="comment">--7、查询平均成绩大于85的所有学生的学号、姓名和平均成绩</span></span><br><span class="line"><span class="keyword">select</span> s.sno,s.sname,<span class="built_in">avg</span>(score) </span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> sc <span class="keyword">on</span>(s.sno<span class="operator">=</span>sc.sno) </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sno,s.sname <span class="keyword">having</span> <span class="built_in">avg</span>(score)<span class="operator">&gt;</span><span class="number">85</span> <span class="keyword">order</span> <span class="keyword">by</span> s.sno</span><br><span class="line"></span><br><span class="line"><span class="comment">--8、统计各科成绩,各分数段人数:分数段为[100-85] a,[84-70] b,[69-60] c,[ &lt;60] d</span></span><br><span class="line"><span class="keyword">select</span> c.cno, c.cname,</span><br><span class="line">    <span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score <span class="keyword">between</span> <span class="number">85</span> <span class="keyword">and</span> <span class="number">100</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">end</span>) a,</span><br><span class="line">    <span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score <span class="keyword">between</span> <span class="number">70</span> <span class="keyword">and</span> <span class="number">84</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">end</span>) b,</span><br><span class="line">    <span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score <span class="keyword">between</span> <span class="number">60</span> <span class="keyword">and</span> <span class="number">69</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">end</span>) c,</span><br><span class="line">    <span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score <span class="operator">&lt;</span> <span class="number">60</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">end</span>) <span class="keyword">as</span> d</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">join</span> course c <span class="keyword">on</span> sc.cno<span class="operator">=</span>c.cno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> c.cno, c.cname</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> c.cno</span><br><span class="line"></span><br><span class="line"><span class="comment">--9、查询课程名称为“Oracle”，且分数低于60 的学生姓名和分数</span></span><br><span class="line"><span class="keyword">select</span> s.sname, sc.score </span><br><span class="line"><span class="keyword">from</span> student s </span><br><span class="line"><span class="keyword">join</span> sc <span class="keyword">on</span> sc.sno<span class="operator">=</span>s.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno<span class="operator">=</span>sc.cno</span><br><span class="line"><span class="keyword">where</span> c.cname<span class="operator">=</span><span class="string">&#x27;Oracle&#x27;</span> <span class="keyword">and</span> sc.score<span class="operator">&lt;</span><span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--10、查询所有学生的选课情况，选了多少门课程；</span></span><br><span class="line"><span class="keyword">select</span> s.sno,s.sname,</span><br><span class="line"><span class="built_in">listagg</span>(c.cname,<span class="string">&#x27;、&#x27;</span>)<span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> sc.cno) 选课,</span><br><span class="line"><span class="built_in">count</span>(sc.cno) 合计</span><br><span class="line"><span class="keyword">from</span> student s </span><br><span class="line"><span class="keyword">join</span> sc <span class="keyword">on</span> sc.sno<span class="operator">=</span>s.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno<span class="operator">=</span>sc.cno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sno,s.sname</span><br><span class="line"></span><br><span class="line"><span class="comment">--11、统计每门课程的学生选修人数（超过1人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列</span></span><br><span class="line"><span class="keyword">select</span> cno,<span class="built_in">count</span>(sno) 选修人数 <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> cno <span class="keyword">order</span> <span class="keyword">by</span> 选修人数 <span class="keyword">desc</span>, cno </span><br><span class="line"></span><br><span class="line"><span class="comment">--12.向SC表中插入一些记录，这些记录要求符合以下条件：没有上过编号“c002”课程的同学学号、“c002”号课的平均成绩；</span></span><br><span class="line"><span class="keyword">insert into</span> sc(sno,cno,score)</span><br><span class="line"><span class="keyword">select</span> s.sno,<span class="string">&#x27;c002&#x27;</span>,(<span class="keyword">select</span> <span class="built_in">avg</span>(score) <span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c002&#x27;</span>)</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">where</span> s.sno <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">      <span class="keyword">select</span> sno <span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c002&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--13、查询全部学生都选修的课程的课程号和课程名</span></span><br><span class="line"><span class="keyword">select</span> c.cno,c.cname <span class="keyword">from</span> course c</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">--不存在未选修某一门课</span></span><br><span class="line">      <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> student s <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(  <span class="comment">--未选修某一门课</span></span><br><span class="line">             <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> sc.cno<span class="operator">=</span>c.cno <span class="comment">--选修了某一门课</span></span><br><span class="line">      )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--14、查询没有学全所有课的同学的学号、姓名；</span></span><br><span class="line"><span class="keyword">select</span> sno,sname <span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line">      <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> course c <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(  <span class="comment">--未选修某一门课</span></span><br><span class="line">             <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> sc.cno<span class="operator">=</span>c.cno <span class="comment">--选修了某一门课</span></span><br><span class="line">      )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--15、查询“c001”课程比“c002”课程成绩高的所有学生的学号；</span></span><br><span class="line"><span class="keyword">select</span> sc1.sno,sc1.score,sc2.score <span class="keyword">from</span> sc sc1 </span><br><span class="line"><span class="keyword">join</span> sc sc2 <span class="keyword">on</span> sc1.sno<span class="operator">=</span>sc2.sno</span><br><span class="line"><span class="keyword">where</span> sc1.cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span> <span class="keyword">and</span> sc2.cno<span class="operator">=</span><span class="string">&#x27;c002&#x27;</span> <span class="keyword">and</span> sc1.score<span class="operator">&gt;</span>sc2.score</span><br><span class="line"></span><br><span class="line"><span class="comment">--16.将所有c001课程成绩低于平均成绩的同学的分数改为60分</span></span><br><span class="line"><span class="keyword">update</span>  sc <span class="keyword">set</span> score <span class="operator">=</span> <span class="number">60</span> <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span> <span class="keyword">and</span> score<span class="operator">&lt;</span>(</span><br><span class="line">        <span class="keyword">select</span> <span class="built_in">avg</span>(score) <span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--17.删除学习“谌燕”老师课的SC 表记录；</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sc <span class="keyword">where</span> cno <span class="keyword">in</span>(</span><br><span class="line">       <span class="keyword">select</span> c.cno <span class="keyword">from</span> course c <span class="keyword">join</span> teacher t <span class="keyword">on</span> c.tno<span class="operator">=</span>t.tno <span class="keyword">where</span> t.tname<span class="operator">=</span><span class="string">&#x27;谌燕&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--18.创建dept1表获取scott.dept表数据，再使用insert...select插入一次scott.dept表数据到detp1表，再使用删除语句删除重复数据</span></span><br><span class="line"><span class="keyword">create table</span> dept1 <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.dept; <span class="comment">--建表</span></span><br><span class="line"><span class="keyword">insert into</span> dept1 <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scott.dept; <span class="comment">--插入</span></span><br><span class="line"><span class="comment">--删除重复数据</span></span><br><span class="line"><span class="comment">--方法一</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> dept1 <span class="keyword">where</span> rowid <span class="keyword">not</span> <span class="keyword">in</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="built_in">max</span>(rowid) <span class="keyword">from</span> dept1 <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line">)</span><br><span class="line"><span class="comment">--方法二</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> dept1 <span class="keyword">where</span> rowid <span class="keyword">not</span> <span class="keyword">in</span>(</span><br><span class="line">       <span class="keyword">select</span> rowid <span class="keyword">from</span>(</span><br><span class="line">              <span class="keyword">select</span> dept1.<span class="operator">*</span>,rowid,<span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> deptno) r <span class="keyword">from</span> dept1</span><br><span class="line">       ) <span class="keyword">where</span> r<span class="operator">=</span><span class="number">1</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--19、查询没学过“谌燕”老师课的同学的学号、姓名；</span></span><br><span class="line"><span class="keyword">select</span> sno,sname <span class="keyword">from</span> student s <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc </span><br><span class="line">       <span class="keyword">join</span> course c <span class="keyword">on</span> sc.cno<span class="operator">=</span>c.cno</span><br><span class="line">       <span class="keyword">join</span> teacher t <span class="keyword">on</span> c.tno<span class="operator">=</span>t.tno</span><br><span class="line">       <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> t.tname<span class="operator">=</span><span class="string">&#x27;谌燕&#x27;</span> </span><br><span class="line">) <span class="keyword">order</span> <span class="keyword">by</span> s.sno</span><br><span class="line"></span><br><span class="line"><span class="comment">--20、查询学过“c001”并且也学过编号“c002”课程的同学的学号、姓名；</span></span><br><span class="line"><span class="keyword">select</span> sno,sname <span class="keyword">from</span> student s <span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> cno<span class="operator">=</span><span class="string">&#x27;c001&#x27;</span></span><br><span class="line">) <span class="keyword">and</span> <span class="keyword">exists</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> cno<span class="operator">=</span><span class="string">&#x27;c002&#x27;</span></span><br><span class="line">) <span class="keyword">order</span> <span class="keyword">by</span> s.sno</span><br><span class="line"></span><br><span class="line"><span class="comment">--21、查询出每个学科排名第一名的学生姓名列表,包括课程编号，学生姓名，学生成绩</span></span><br><span class="line"><span class="comment">--子查询</span></span><br><span class="line"><span class="keyword">select</span> sc.cno,s.sname,sc.score <span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">join</span> student s <span class="keyword">on</span> s.sno<span class="operator">=</span>sc.sno</span><br><span class="line"><span class="keyword">where</span> sc.score<span class="operator">=</span>(</span><br><span class="line">      <span class="keyword">select</span> <span class="built_in">max</span>(score) <span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span>sc.cno</span><br><span class="line">) <span class="keyword">order</span> <span class="keyword">by</span> sc.cno</span><br><span class="line"><span class="comment">--窗口函数</span></span><br><span class="line"><span class="keyword">with</span> rnk <span class="keyword">as</span>(</span><br><span class="line">     <span class="keyword">select</span> sc.cno 课程编号, s.sname 学生姓名, sc.score 学生成绩,</span><br><span class="line">     <span class="built_in">dense_rank</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> sc.cno <span class="keyword">order</span> <span class="keyword">by</span> sc.score <span class="keyword">desc</span>) 排名</span><br><span class="line">     <span class="keyword">from</span> sc <span class="keyword">join</span> student s <span class="keyword">on</span> s.sno<span class="operator">=</span>sc.sno</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> 课程编号,学生姓名,学生成绩 <span class="keyword">from</span> rnk <span class="keyword">where</span> 排名<span class="operator">=</span><span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> 课程编号</span><br><span class="line"></span><br><span class="line"><span class="comment">--22、查询选修“谌燕”老师所授课程的学生中，成绩最高的学生姓名及其成绩</span></span><br><span class="line"><span class="keyword">with</span> cy_c <span class="keyword">as</span>( <span class="comment">-- 获取谌燕老师教授的所有课程</span></span><br><span class="line">     <span class="keyword">select</span> c.cno <span class="keyword">from</span> course c </span><br><span class="line">     <span class="keyword">join</span> teacher t <span class="keyword">on</span> t.tno<span class="operator">=</span>c.tno</span><br><span class="line">     <span class="keyword">where</span> t.tname<span class="operator">=</span><span class="string">&#x27;谌燕&#x27;</span> </span><br><span class="line">),</span><br><span class="line">top_s <span class="keyword">as</span>( <span class="comment">-- 找出这些课程中成绩最高的学生</span></span><br><span class="line">      <span class="keyword">select</span> sname 学生姓名, score 成绩 ,<span class="built_in">dense_rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sc.score <span class="keyword">desc</span>) 排名</span><br><span class="line">      <span class="keyword">from</span> sc <span class="keyword">join</span> student s <span class="keyword">on</span> s.sno<span class="operator">=</span>sc.sno</span><br><span class="line">      <span class="keyword">where</span> sc.cno <span class="keyword">in</span>(<span class="keyword">select</span> cno <span class="keyword">from</span> cy_c)</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> 学生姓名,成绩 <span class="keyword">from</span> top_s <span class="keyword">where</span> 排名<span class="operator">=</span><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--23、查询学过“谌燕”老师所教的所有课的同学的学号、姓名；</span></span><br><span class="line"><span class="keyword">with</span> cy_c <span class="keyword">as</span>( <span class="comment">-- 获取谌燕老师教授的所有课程</span></span><br><span class="line">     <span class="keyword">select</span> c.cno <span class="keyword">from</span> course c </span><br><span class="line">     <span class="keyword">join</span> teacher t <span class="keyword">on</span> t.tno<span class="operator">=</span>c.tno</span><br><span class="line">     <span class="keyword">where</span> t.tname<span class="operator">=</span><span class="string">&#x27;谌燕&#x27;</span> </span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> s.sno 学号, s.sname 姓名</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">-- 不存在没选修的课程-&gt;选修了全部课程</span></span><br><span class="line">     <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> cy_c <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">--没选修谌燕老师某一课程</span></span><br><span class="line">            <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> sc.cno<span class="operator">=</span>cy_c.cno <span class="comment">--选修了谌燕老师某一课程</span></span><br><span class="line">     )</span><br><span class="line">) <span class="keyword">order</span> <span class="keyword">by</span> 学号</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--24、查询至少有一门课与学号为“s001”的同学所学相同的同学的学号和姓名</span></span><br><span class="line"><span class="keyword">with</span> s1_c <span class="keyword">as</span>( <span class="comment">-- 获取s001同学的所有课程</span></span><br><span class="line">     <span class="keyword">select</span> cno <span class="keyword">from</span> sc <span class="keyword">where</span> sno<span class="operator">=</span><span class="string">&#x27;s001&#x27;</span> </span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> s.sno,s.sname <span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">join</span> sc <span class="keyword">on</span> sc.sno<span class="operator">=</span>s.sno</span><br><span class="line"><span class="keyword">where</span> sc.cno <span class="keyword">in</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> s1_c)</span><br><span class="line"></span><br><span class="line"><span class="comment">--25、查询和“s001”号的同学学习的课程完全相同的其他同学学号和姓名</span></span><br><span class="line"><span class="keyword">with</span> s1_c <span class="keyword">as</span>( <span class="comment">-- 获取s1同学的所有课程</span></span><br><span class="line">     <span class="keyword">select</span> cno <span class="keyword">from</span> sc <span class="keyword">where</span> sno<span class="operator">=</span><span class="string">&#x27;s001&#x27;</span> </span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> s.sno 学号, s.sname 姓名 <span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">join</span> sc <span class="keyword">on</span> sc.sno<span class="operator">=</span>s.sno </span><br><span class="line"><span class="keyword">where</span> s.sno<span class="operator">!=</span><span class="string">&#x27;s001&#x27;</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">--不存在</span></span><br><span class="line">      <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> s1_c <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">--sc1没选</span></span><br><span class="line">             <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> sc.cno<span class="operator">=</span>s1_c.cno <span class="comment">--但sc选了</span></span><br><span class="line">      )</span><br><span class="line">) <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">--不存在</span></span><br><span class="line">      <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sc.sno<span class="operator">=</span>s.sno <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span>( <span class="comment">---sc没选</span></span><br><span class="line">             <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> s1_c <span class="keyword">where</span> s1_c.cno<span class="operator">=</span>sc.cno <span class="comment">--但s1选了</span></span><br><span class="line">      )</span><br><span class="line">) <span class="keyword">order</span> <span class="keyword">by</span> s.sno</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.12总结：批量插入</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5SQL/5.12%E6%80%BB%E7%BB%93%EF%BC%9A%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5/</url>
    <content><![CDATA[<h2 id="两种批量插入方式"><a href="#两种批量插入方式" class="headerlink" title="两种批量插入方式"></a>两种批量插入方式</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>执行以下语句-&gt;复制需要插入的数据-&gt;点击编辑数据（开锁）-&gt;移动鼠标位置使其图标变为向右–按住鼠标左键拉动-&gt;粘贴</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表 <span class="keyword">for</span> <span class="keyword">update</span></span><br></pre></td></tr></table></figure>

<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>![[d90d4fbb3aad612bf9fffe28097db015_.png]]<br>![[0d7ed71d558ac1ee1709e15226bbec35_.png]]<br>![[afc2ae31166987f9f50663fd58fa3074_.png]]<br>![[7a6ed6a666f8bd8e8b1429d1d85b1b4c_.png]]</p>
<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create table</span> t(tno varchar2(<span class="number">20</span>))</span><br><span class="line"><span class="keyword">insert into</span> t <span class="keyword">values</span>(<span class="string">&#x27;1,2,3&#x27;</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t</span><br><span class="line"><span class="comment">--1.求tno这个字段的累计总和</span></span><br><span class="line"><span class="keyword">select</span> substr(tno,<span class="number">1</span>,<span class="number">1</span>)<span class="operator">+</span>substr(tno,<span class="number">3</span>,<span class="number">1</span>)<span class="operator">+</span>substr(tno,<span class="number">5</span>,<span class="number">1</span>)  <span class="keyword">from</span> t</span><br><span class="line"></span><br><span class="line"><span class="comment">--建表shuiguo</span></span><br><span class="line"><span class="keyword">create table</span> shuiguo(tdate varchar2(<span class="number">30</span>),tname varchar2(<span class="number">20</span>),saleamount number(<span class="number">10</span>))</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> shuiguo</span><br><span class="line"><span class="comment">--2.查询语句，结果按梨、葡萄、西瓜、橘子、柠檬、苹果、香蕉的顺序排序，同种水果按销量降序排序   </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> shuiguo <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">case</span> tname</span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;梨&#x27;</span> <span class="keyword">then</span> <span class="number">1</span></span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;葡萄&#x27;</span> <span class="keyword">then</span> <span class="number">2</span></span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;西瓜&#x27;</span> <span class="keyword">then</span> <span class="number">3</span></span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;橘子&#x27;</span> <span class="keyword">then</span> <span class="number">4</span></span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;柠檬&#x27;</span> <span class="keyword">then</span> <span class="number">5</span></span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;苹果&#x27;</span> <span class="keyword">then</span> <span class="number">6</span></span><br><span class="line">       <span class="keyword">when</span> <span class="string">&#x27;香蕉&#x27;</span> <span class="keyword">then</span> <span class="number">7</span></span><br><span class="line">       <span class="keyword">else</span> <span class="number">8</span> <span class="keyword">end</span>, </span><br><span class="line">       saleamount <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--建表emp2</span></span><br><span class="line"><span class="keyword">create table</span> emp2(empno number(<span class="number">10</span>), ename varchar2(<span class="number">20</span>), dname varchar2(<span class="number">20</span>), sal number(<span class="number">10</span>), e_date <span class="type">date</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp2</span><br><span class="line"><span class="comment">--3.查询出每个部门中，连续三个月工资都增长的员工信息，包括员工姓名、部门名称和连续增长的月份。 要求查询的结果格式：部门名称，员工姓名，连续增长月份</span></span><br><span class="line"><span class="keyword">with</span> tmp <span class="keyword">as</span>(</span><br><span class="line">     <span class="keyword">select</span> dname 部门名称, ename 员工姓名, <span class="built_in">count</span>(<span class="operator">*</span>) 连续增长月份 <span class="keyword">from</span>( <span class="comment">--连续增长的月份</span></span><br><span class="line">         <span class="keyword">select</span> tmp1.<span class="operator">*</span>,<span class="built_in">lag</span>(row_num,<span class="number">1</span>,row_num<span class="number">-1</span>)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> ename <span class="keyword">order</span> <span class="keyword">by</span> ename,e_date,e_date) last_row_num <span class="keyword">from</span>( <span class="comment">--增长的月份</span></span><br><span class="line">                <span class="keyword">select</span> emp2.<span class="operator">*</span>, <span class="comment">-- 偏移、编号</span></span><br><span class="line">                       <span class="built_in">lag</span>(sal,<span class="number">1</span>,<span class="keyword">null</span>)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> ename <span class="keyword">order</span> <span class="keyword">by</span> ename,e_date) last_sal,</span><br><span class="line">                       <span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> ename <span class="keyword">order</span> <span class="keyword">by</span> ename) row_num</span><br><span class="line">                <span class="keyword">from</span> emp2</span><br><span class="line">         ) tmp1 <span class="keyword">where</span> sal<span class="operator">-</span>last_sal<span class="operator">&gt;</span><span class="number">0</span></span><br><span class="line">     ) <span class="keyword">where</span> row_num<span class="operator">-</span>last_row_num<span class="operator">=</span><span class="number">1</span> <span class="keyword">group</span> <span class="keyword">by</span> dname,ename</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tmp <span class="keyword">where</span> 连续增长月份<span class="operator">&gt;=</span><span class="number">3</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.13总结 索引</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5SQL/5.13%E6%80%BB%E7%BB%93%20%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<p>索引的目的是加速查询的速度：原则上一个列最多只能建两个索引<br>索引建完自动生效，不改变语法书写格式</p>
<h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><h2 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> (<span class="keyword">unique</span><span class="operator">/</span>BITMAP) index 索引名称 <span class="keyword">on</span> 表名(列名) tablespace 表空间名； <span class="comment">--unique 用于指定是否强制要求索引列为唯一性数据，表空间可选择是否指定，不指定则用默认表空间。出于性能考虑索引表空间和表的表空间要分开。</span></span><br></pre></td></tr></table></figure>
<h2 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h2><h3 id="一、按存储形式分类"><a href="#一、按存储形式分类" class="headerlink" title="一、按存储形式分类"></a>一、按存储形式分类</h3><ul>
<li>b_tree索引</li>
<li>位图索引</li>
<li>基于函数索引</li>
<li>方向键索引</li>
</ul>
<h4 id="B-TREE索引"><a href="#B-TREE索引" class="headerlink" title="B-TREE索引"></a>B-TREE索引</h4><p>适用场景：列基数比较大的时候使用（行业、身高）<br>列基数：该列不重复数据的个数 count(distinct col)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> index ind_name <span class="keyword">on</span> tb_name(col_name)</span><br></pre></td></tr></table></figure>

<h4 id="位图索引"><a href="#位图索引" class="headerlink" title="位图索引"></a>位图索引</h4><p>说明：位图索引在创建时，会扫描整张表，为索引列的每个取值建立一个不重复的位图 （BITMAP）来描述该取值<br>适用场景：列基数比较小的时候使用（性别、婚姻状况）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> bitmap index ind_name <span class="keyword">on</span> tb_name(col_name); </span><br><span class="line"><span class="keyword">create</span> bitmap index ind_student54_sex <span class="keyword">on</span> student_54_new(sex)</span><br></pre></td></tr></table></figure>
<h4 id="反向键索引"><a href="#反向键索引" class="headerlink" title="反向键索引"></a>反向键索引</h4><p>说明：可以视作一种特殊的B-TREE索引，存储索引列的反向值<br>背景：为防止B-TREE索引在某叶上数据量占比过高而使用的一种索引<br>适用场景：原始数据分支不明显但反向数据分支明显的列（身高：集中在一米七一米八）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> index ind_name <span class="keyword">on</span> tb_name(col_name) reverse</span><br></pre></td></tr></table></figure>
<h4 id="基于函数的索引"><a href="#基于函数的索引" class="headerlink" title="基于函数的索引"></a>基于函数的索引</h4><p>说明：可以视作一种特殊的B-TREE索引，存储函数处理后的数据<br>背景：在某个字段上以原值建立了索引，但是在筛选时在该字段上经常加函数，导致索引无法生效<br>适用场景：对某列进行筛选时经常需要配合函数使用（例如查找姓名中的首字母）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> index ind_name <span class="keyword">on</span> tb_name(<span class="keyword">function</span>(col_name));</span><br></pre></td></tr></table></figure>

<h3 id="二、按唯一性分类"><a href="#二、按唯一性分类" class="headerlink" title="二、按唯一性分类"></a>二、按唯一性分类</h3><h4 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h4><p>索引列中不可能出现重复值</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index ind_name <span class="keyword">on</span> tb_name(col_name)</span><br></pre></td></tr></table></figure>
<ul>
<li>B-TREE索引可以建立唯一索引，位图索引不能建立唯一索引</li>
<li>如果在某列上建立了唯一约束或主键约束，ORACLE会自动在该列上建立一个同名的唯一索引</li>
</ul>
<h4 id="非唯一索引"><a href="#非唯一索引" class="headerlink" title="非唯一索引"></a>非唯一索引</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> index ind_name <span class="keyword">on</span> tb_name(col_name);</span><br></pre></td></tr></table></figure>

<h3 id="三、按列的个数分类（索引覆盖的列的个数）"><a href="#三、按列的个数分类（索引覆盖的列的个数）" class="headerlink" title="三、按列的个数分类（索引覆盖的列的个数）"></a>三、按列的个数分类（索引覆盖的列的个数）</h3><h4 id="单列索引"><a href="#单列索引" class="headerlink" title="单列索引"></a>单列索引</h4><p>基于一个列建立的索引</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> index ind_name <span class="keyword">on</span> tb_name(col_name)</span><br></pre></td></tr></table></figure>
<h4 id="复合索引（联合索引）"><a href="#复合索引（联合索引）" class="headerlink" title="复合索引（联合索引）"></a>复合索引（联合索引）</h4><p>基于两个或两个以上列建立的索引</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--写在前面的字段（ename）且叫为主键列，触发索引需要用到主键列，与主键列的位置没有关系</span></span><br><span class="line"><span class="keyword">create</span> index ind_emp_enamejob <span class="keyword">on</span> emp(ename,job)</span><br></pre></td></tr></table></figure>

<h2 id="修改索引名称"><a href="#修改索引名称" class="headerlink" title="修改索引名称"></a>修改索引名称</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> index 索引名 rename <span class="keyword">to</span> 新索引名；</span><br></pre></td></tr></table></figure>

<h2 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h2><p>通过drop index 索引名</p>
<h2 id="索引建立或使用的规则与建议"><a href="#索引建立或使用的规则与建议" class="headerlink" title="索引建立或使用的规则与建议"></a>索引建立或使用的规则与建议</h2><p>1.如果对某大表进行筛选时，某列或某几列频繁出现在WHERE子句中，并且检索出的数 据低于总行数的15%（50%），应考虑在这些列上建立索引。<br>2.如果对某大表进行排序时，某列或某几列频繁出现在ORDER BY子句中，应考虑在这些 列上建立索引。<br>3.小表不要建立索引。<br>4.对于含有空值的列，如果经常在查询时查询非空值，建议在该列上建立索引；如果经 常在查询时查询空值，建议在该列上建立基于函数的索引。<br>5.为了提高表连接的性能，应在连接列上建立索引（建立一般普通的索引即可）<br>6.索引是数据库的一种实体对象，级别类似于表，会占用内存空间，ORACLE会自动进行 索引维护，表和索引可以建立在不同的表空间。<br>7.通过索引可以提升数据的查询速度，但是会相对地降低DML语句的操作速度，尤其是 插和改的速度，ORACLE会花费时间在索引维护上，所以说要把握好索引的数量<br>8.对于列基数比较大的列，适合B-TREE索引，列基数比较小的列，适合位图索引。<br>9.对于复合索引，至少要引用到索引列中的第一个列才会使用该索引。<br>10.某列可以出现在多个索引中，但相同的某列或某几列无法多次建立索引。 –就是可以 有多个组合，但不能有重复组合，不同顺序的相同几列视为不同组合<br>11.索引建立后并不一定会被引用，ORACLE会分析整个SQL后做出最优的执行方式。<br>12.ORACLE会自动在主键约束和唯一约束列上建立唯一索引。<br>13.对于一般的B-TREE索引，通配符出现在搜索词的首位时不会引用索引<br>14.在索引列上使用&lt;&gt; !&#x3D;号时，或对空值进行判断时，索引不会生效<br>15.rebiuld重建索引，减少碎片，提高效率。</p>
<h2 id="索引的优缺点"><a href="#索引的优缺点" class="headerlink" title="索引的优缺点"></a>索引的优缺点</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>1.大大加快数据的检索速度;<br>2.创建唯一性索引，保证数据库表中每一行数据的唯一性;<br>3.加速表和表之间的连接;<br>4.在使用分组和排序子句进行数据检索时，可以显著减少查询中分组和排序的时间。</p>
<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>1.索引需要占物理空间。<br>2.当对表中的数据进行增加、删除和修改的时候，索引也要动态的维护，降低了数据的 维护速度。</p>
<h1 id="SQL性能优化问题"><a href="#SQL性能优化问题" class="headerlink" title="SQL性能优化问题"></a>SQL性能优化问题</h1><p>SQL执行顺序from—where—group by—having—select—order by From后面的表执行顺序从右往左，从后往前<br>1、 如果结果集没有影响的关联，将小的表放在后面<br>2、 Where条件顺序，将过滤条数大的放在后面，过滤条数小的放在前面<br>3、 尽量减少对表的重复查询<br>4、 使用exists代替in：in后面用子查询，用exists代替in（看exists子查询中where条件， 结果返回true或者fasle），如果in后面是具体的值，还是用in，用in的SQL语句总是多了 一种转换过程<br>5、 Distict,查询效率低，要先排序，再去重<br>6、 索引正确使用，不能使用聚合函数，不能使用not<br>7、 大于等于效率要高于大于，用&gt;&#x3D;替代&gt;，前提是整数相比较<br>8、 Like效率低，使用instr代替instr(name,’n’)&gt;&#x3D;1可以代替like‘%c%’<br>9、 Where 是过滤行，having对分组的过滤<br>10、 要查看执行计划(F5, EXPLAIN )<br>11、 对 WHERE + ORDER BY 组合的优化, 在where 进行限制后 在进行 order BY<br>12、 尽量少排序 ORDER BY<br>13、 任何地方都不要使用select * from表，用具体的字段列表代替“*”，不要返回用不到 的任何字段<br>14、 尽量用 JOIN 替换子查询<br>15、 尽量少使用 OR ,索引失效<br>16、 尽量避免 UNION 使用 UNION ALL 然后再 GROUP BY 去重<br>17、 尽早过滤数据, WHERE 过滤 使用 join时 先过滤再 JOIN<br>18、 尽量避免一条 UPDATE 更新多条记录, 用 MERGE INTO , 效率比 UPDATE 高</p>
<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1.给emp表的ename列创建一个索引，建立索引前后时间对比</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;S%&#x27;</span></span><br><span class="line"><span class="keyword">create</span> index idx_emp_ename <span class="keyword">on</span> emp(ename);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;S%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.创建job和sal的复合索引，查询工资大于2000的MANAGER员工信息</span></span><br><span class="line"><span class="keyword">create</span> index idx_emp_jobsal <span class="keyword">on</span> emp(job,sal)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span><span class="number">2000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.查询所有人选修c002课程及格的情况,自己判断如何创建索引</span></span><br><span class="line"><span class="comment">--在sc表的cno和score字段上创建复合索引</span></span><br><span class="line"><span class="keyword">create</span> index idx_sc_sccno <span class="keyword">on</span> sc(cno,score)</span><br><span class="line"><span class="keyword">select</span> sc.<span class="operator">*</span>,<span class="keyword">case</span> <span class="keyword">when</span> score<span class="operator">&gt;=</span><span class="number">60</span> <span class="keyword">then</span> <span class="string">&#x27;及格&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不及格&#x27;</span> <span class="keyword">end</span> 及格情况 </span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;c002&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--4.使用小写函数来创建索引，查询带有m的员工信息</span></span><br><span class="line"><span class="keyword">create</span> index idx_emp_ename <span class="keyword">on</span> emp(<span class="built_in">lower</span>(ename))</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;m%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--5.修改删除一个索引</span></span><br><span class="line"><span class="keyword">alter</span> index idx_emp_ename rename <span class="keyword">to</span> ind_emp_ename1；<span class="comment">--修改</span></span><br><span class="line"><span class="keyword">drop</span> index ind_emp_ename1 <span class="comment">--删除</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.14 视图、序列</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5SQL/5.14%20%E8%A7%86%E5%9B%BE%E3%80%81%E5%BA%8F%E5%88%97/</url>
    <content><![CDATA[<h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><p>视图实际上是一个或多个表的预定义查询，视图的使用方法和表一样。<br>视图用于查看表的数据，不真实存储数据，只访问基表中的行。<br>一般视图都最好加只读（with read only）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--创建视图</span></span><br><span class="line"><span class="comment">--or replace 可写可不写，不写的话不可创建已有的视图名</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> 视图名 <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名 <span class="keyword">with</span> read <span class="keyword">only</span> <span class="comment">--附加只读状态，可写可不写</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--查看视图</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 视图名</span><br><span class="line"></span><br><span class="line"><span class="comment">--删除视图</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> 视图名； </span><br><span class="line"></span><br><span class="line"><span class="comment">--scott账号要使用system账号赋予权限才能创建视图 </span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> <span class="keyword">any</span> <span class="keyword">view</span> <span class="keyword">to</span> scott</span><br><span class="line"></span><br><span class="line"><span class="comment">/*当视图表结构和原表结构不一致的前提下，</span></span><br><span class="line"><span class="comment">原表插入数据的字段可为空，也可以通过对应视图表插入数据*/</span></span><br><span class="line"><span class="comment">--综合以上情况只要是视图表都最好加只读</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> v_dept <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept </span><br><span class="line"><span class="keyword">insert into</span> v_dept <span class="keyword">values</span>(<span class="number">60</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;a&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h1 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h1><p>序列是一个数据库项，用于生成一个整数序列，生成的序列用来填充数字型主键列。<br>数据库的对象之一，和表之间没有关联关系，用于数字型的主键列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--创建序列</span></span><br><span class="line"><span class="keyword">create</span> sequence 序列名</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> 开始数字 </span><br><span class="line">increment <span class="keyword">by</span> 增量数</span><br><span class="line">maxvalue 最大z值 <span class="comment">--可写可不写</span></span><br><span class="line">minvalue 最小值 <span class="comment">--可写可不写</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--例：创建一个序列，从1开始，每次增长1</span></span><br><span class="line"><span class="keyword">create</span> sequence seq_dept</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">1</span></span><br><span class="line">increment <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--调用序列</span></span><br><span class="line"><span class="keyword">select</span> seq_dept.nextval <span class="keyword">from</span> dual<span class="comment">--序列的下一个值，nextval第一次执行相当于激活序列</span></span><br><span class="line"><span class="keyword">select</span> seq_dept.currval <span class="keyword">from</span> dual<span class="comment">--查看序列的当前值</span></span><br><span class="line"><span class="keyword">insert into</span> dept <span class="keyword">values</span>(seq_dept.nextval,<span class="string">&#x27;销售部门&#x27;</span>,<span class="string">&#x27;桂林市&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--修改序列（只能修改增长值）</span></span><br><span class="line"><span class="keyword">alter</span> sequence seq_dept increment <span class="keyword">by</span> <span class="number">100</span></span><br><span class="line"><span class="comment">---没激活的序列直接修改增长值，那么该序列的初始值变成增长值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--删除序列</span></span><br><span class="line"><span class="keyword">drop</span> sequence seq_dept</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="循环序列"><a href="#循环序列" class="headerlink" title="循环序列"></a>循环序列</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> sequence seq_aa</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">5</span></span><br><span class="line">minvalue <span class="number">1</span></span><br><span class="line">maxvalue <span class="number">30</span></span><br><span class="line">increment <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> sequence seq_aa</span><br><span class="line"><span class="keyword">select</span> seq_aa.nextval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">alter</span> sequence seq_aa <span class="keyword">cycle</span></span><br></pre></td></tr></table></figure>

<h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><p>它是数据库在执行一系列操作时，保证所有的操作都正确完成，要么都执行，要 么都不执行，保证数据的完整性<br>事务产生于会话的第一条DML语句（insert、delete 、update）</p>
<p>必须具备以下四个属性，简称 <strong>ACID</strong> 属性： </p>
<ul>
<li>A：原子性（Atomicity）：事务是一个完整的操作。事务的各步操作是不可分的（原子的）；要么都执行，要么都不执行。 </li>
<li>C：一致性（Consistency）：一个查询的结果必须与数据库在查询开始时的状态保持一致 （读不等待写，写不等待读）。 </li>
<li>I：隔离性（Isolation）：数据库中每一个用户的操作都是互不影响的，对于其他会话来 说，未完成的（也就是未提交的）事务必须不可见。 </li>
<li>D：持久性（Durability）：事务一旦提交完成后，数据库就不可以丢失这个事务的结果， 数据就永久的保存到数据库中。</li>
</ul>
<p>事务采用隐性的方式，起始于session（会话窗口）的第一条DML语句， 事务结束于：<br>1）COMMIT（提交）或ROLLBACK（回滚）<br>2）DDL语句被执行（提交）<br>3）DCL语句被执行（提交）<br>4）用户退出SQLPLUS（正常退出是提交，非正常退出是回滚）<br>5）服务器故障或系统崩溃（回滚）<br>6）shutdowm immediate(回滚）<br>在一个事务里如果某个DML语句失败，之前其他任何DML语句将保持完好，而且不会提交！</p>
<h1 id="锁表解锁"><a href="#锁表解锁" class="headerlink" title="锁表解锁"></a>锁表解锁</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1.查看被锁的表 </span></span><br><span class="line"><span class="keyword">select</span> b.owner,b.object_name,a.session_id,a.locked_mode </span><br><span class="line"><span class="keyword">from</span> v$locked_object a,dba_objects b <span class="keyword">where</span> b.object_id <span class="operator">=</span> a.object_id;</span><br><span class="line"><span class="comment">--2.查看那个用户那个进程造成死锁 </span></span><br><span class="line"><span class="keyword">select</span> s.sid, q.sql_text </span><br><span class="line"><span class="keyword">from</span> v$sqltext q, v$session s <span class="keyword">where</span> q.address <span class="operator">=</span> s.sql_address <span class="keyword">and</span> s.sid <span class="operator">=</span> <span class="operator">&amp;</span>sid <span class="comment">-- 这个&amp;sid是第一步查询出来的 </span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> piece;<span class="comment">--查看导致锁死的SQL </span></span><br><span class="line"><span class="keyword">select</span> b.username,b.sid,b.serial#,logon_time </span><br><span class="line"><span class="keyword">from</span> v$locked_object a,v$session b <span class="keyword">where</span> a.session_id <span class="operator">=</span> b.sid <span class="keyword">order</span> <span class="keyword">by</span> b.logon_time;</span><br><span class="line"><span class="comment">--3.杀掉进程 </span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;alter system kill session &#x27;&#x27;&#x27;</span> <span class="operator">||</span> sid <span class="operator">||</span> <span class="string">&#x27;,&#x27;</span> <span class="operator">||</span> serial# <span class="operator">||</span> <span class="string">&#x27;&#x27;&#x27;;&#x27;</span> &quot;Deadlock&quot; <span class="keyword">from</span> v$session <span class="keyword">where</span> sid <span class="keyword">in</span> (<span class="keyword">select</span> sid <span class="keyword">from</span> v$lock <span class="keyword">where</span> block <span class="operator">=</span> <span class="number">1</span>);</span><br></pre></td></tr></table></figure>

<h2 id="模拟死锁"><a href="#模拟死锁" class="headerlink" title="模拟死锁"></a>模拟死锁</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--T1时刻</span></span><br><span class="line"><span class="comment">--事务1：session1执行 </span></span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> sal<span class="operator">=</span>sal1<span class="number">.1</span> <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">10</span>;</span><br><span class="line"><span class="comment">--事务2：session2执行 </span></span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> sal<span class="operator">=</span><span class="number">3000</span> <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span></span><br><span class="line"><span class="comment">--T2时刻</span></span><br><span class="line"><span class="comment">--事务1：session1执行 </span></span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> sal<span class="operator">=</span><span class="number">3000</span> <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span></span><br><span class="line"><span class="comment">--事务2：session2执行 </span></span><br><span class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> sal<span class="operator">=</span>sal1<span class="number">.1</span> <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">10</span>;</span><br><span class="line"><span class="comment">--session3:system操作同上等待死锁</span></span><br></pre></td></tr></table></figure>

<h1 id="数据导入导出"><a href="#数据导入导出" class="headerlink" title="数据导入导出"></a>数据导入导出</h1><p>数据的迁移和备份，导入导出，虚拟机cmd进行操作<br>exp 账号&#x2F;密码@数据库名 file&#x3D;文件存放路径及文件名 full&#x3D;y –全库导出<br>命令行语句，不需要登录数据，只需要在命令行运行</p>
<p>按用户导出：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">exp scott<span class="operator">/</span>oracle<span class="variable">@orcl</span> file<span class="operator">=</span>c:\test\exp_0514_scott.bak owner<span class="operator">=</span>scott </span><br></pre></td></tr></table></figure>
<p>![[Pasted image 20250514184025.png]]</p>
<p>导入</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">imp scott<span class="operator">/</span>oracle<span class="variable">@orcl</span> file<span class="operator">=</span>c:\test\exp_0514_scott.bak <span class="keyword">full</span><span class="operator">=</span>y</span><br></pre></td></tr></table></figure>
<p>![[Pasted image 20250514185153.png]]</p>
<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--上机练习17</span></span><br><span class="line"><span class="comment">--1.创建一个视图，查询出来emp表的所有数据，并用insert into 给这个插入一条数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> v_emp <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">insert into</span> v_emp <span class="keyword">values</span>(<span class="number">1111</span>,<span class="string">&#x27;HWZ&#x27;</span>,<span class="string">&#x27;CLERK&#x27;</span>,<span class="keyword">null</span>,trunc(sysdate),<span class="number">888</span>,<span class="keyword">null</span>,<span class="number">40</span>)</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> emp <span class="keyword">where</span> empno<span class="operator">=</span><span class="number">1111</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.创建一个查询emp表所有部门平均工资的视图，并试图去修改这个视图的数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> v_emp_avgsal <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">avg</span>(sal) 平均工资 <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> v_emp_avgsal</span><br><span class="line"><span class="keyword">update</span> v_emp_avgsal <span class="keyword">set</span> 平均工资<span class="operator">=</span>round(平均工资) <span class="comment">--非法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.创建一个只读视图，查询学生的平均成绩，并试图去修改数据</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> v_avg <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> sno,<span class="built_in">avg</span>(score) 平均成绩 <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> sno <span class="keyword">order</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">with</span> read <span class="keyword">only</span></span><br><span class="line"><span class="keyword">update</span> v_avg <span class="keyword">set</span> 平均成绩<span class="operator">=</span>round(平均成绩) <span class="comment">--非法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--4.创建一个序列，从1开始，每次增长1</span></span><br><span class="line"><span class="keyword">create</span> sequence seq_emp</span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">1</span></span><br><span class="line">increment <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--5.使用序列，把序列是8的插入到emp表中作为主键</span></span><br><span class="line"><span class="keyword">select</span> seq_emp.nextval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">select</span> seq_emp.currval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">insert into</span> emp <span class="keyword">values</span>(seq_emp.currval,<span class="string">&#x27;hwz&#x27;</span>,<span class="string">&#x27;CLERK&#x27;</span>,<span class="number">1111</span>,trunc(sysdate),<span class="number">888</span>,<span class="keyword">null</span>,<span class="number">40</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.修改序列增长值为10，把序列是38的插入到emp表中作为主键</span></span><br><span class="line"><span class="keyword">alter</span> sequence seq_emp increment <span class="keyword">by</span> <span class="number">10</span></span><br><span class="line"><span class="keyword">select</span> seq_emp.nextval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">insert into</span> emp <span class="keyword">values</span>(seq_emp.currval,<span class="string">&#x27;hwz2&#x27;</span>,<span class="string">&#x27;CLERK&#x27;</span>,<span class="number">1111</span>,trunc(sysdate),<span class="number">666</span>,<span class="keyword">null</span>,<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--上机练习18</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建字典表 t_dic</span></span><br><span class="line"><span class="keyword">create table</span> t_dic(</span><br><span class="line">       type varchar2(<span class="number">10</span>),</span><br><span class="line">       name varchar2(<span class="number">20</span>),</span><br><span class="line">       key varchar2(<span class="number">10</span>) <span class="keyword">unique</span>,</span><br><span class="line">       <span class="keyword">value</span> varchar2(<span class="number">20</span>) <span class="keyword">not null</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">--批量插入数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_dic <span class="keyword">for</span> <span class="keyword">update</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建货物表 goods</span></span><br><span class="line"><span class="keyword">create table</span> goods(</span><br><span class="line">       id varchar2(<span class="number">32</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       type varchar2(<span class="number">10</span>) <span class="keyword">references</span> t_dic(key),</span><br><span class="line">       name varchar2(<span class="number">100</span>),</span><br><span class="line">       inprice number(<span class="number">10</span>,<span class="number">2</span>), </span><br><span class="line">       outprice number(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">       tjdw varchar2(<span class="number">10</span>) <span class="keyword">references</span> t_dic(key),</span><br><span class="line">       qualitydate number(<span class="number">4</span>) <span class="keyword">check</span>(qualitydate<span class="operator">&gt;</span><span class="number">0</span>) </span><br><span class="line">);</span><br><span class="line"><span class="comment">--批量插入数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> goods <span class="keyword">for</span> <span class="keyword">update</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建货物库存表 stock</span></span><br><span class="line"><span class="keyword">create table</span> stock(</span><br><span class="line">       id varchar2(<span class="number">32</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       goodsid varchar2(<span class="number">32</span>) <span class="keyword">references</span> goods(id),</span><br><span class="line">       sl number(<span class="number">4</span>),</span><br><span class="line">       intime <span class="type">date</span> <span class="keyword">default</span> sysdate,</span><br><span class="line">       productime <span class="type">date</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建进帐表 income</span></span><br><span class="line"><span class="keyword">create table</span> income(</span><br><span class="line">       id varchar2(<span class="number">32</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       goodsid varchar2(<span class="number">32</span>) <span class="keyword">references</span> goods(id),</span><br><span class="line">       stockid varchar2(<span class="number">32</span>) <span class="keyword">references</span> stock(id),</span><br><span class="line">       sl number(<span class="number">4</span>) <span class="keyword">check</span>(sl<span class="operator">&gt;</span><span class="number">0</span>),</span><br><span class="line">       discount number(<span class="number">4</span>,<span class="number">1</span>),</span><br><span class="line">       allprice number(<span class="number">8</span>,<span class="number">1</span>),</span><br><span class="line">       outtime <span class="type">date</span> <span class="keyword">default</span> sysdate</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建出帐表 outcome</span></span><br><span class="line"><span class="keyword">create table</span> outcome(</span><br><span class="line">       id varchar2(<span class="number">32</span>) <span class="keyword">primary key</span>,</span><br><span class="line">       goodsid varchar2(<span class="number">32</span>) <span class="keyword">references</span> goods(id),</span><br><span class="line">       stockid varchar2(<span class="number">32</span>) <span class="keyword">references</span> stock(id),</span><br><span class="line">       sl number(<span class="number">4</span>,<span class="number">1</span>) <span class="keyword">check</span>(sl<span class="operator">&gt;</span><span class="number">0</span>),</span><br><span class="line">       allprice number(<span class="number">8</span>,<span class="number">1</span>),</span><br><span class="line">       intime <span class="type">date</span> <span class="keyword">default</span> sysdate</span><br><span class="line">);</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> outcome</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_dic <span class="comment">--字典表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> goods <span class="comment">--货物表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stock  <span class="comment">--库存表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> income <span class="comment">--进帐表</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> outcome <span class="comment">--出帐表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--1. 在货物库存表stock的goodsid建立索引</span></span><br><span class="line"><span class="keyword">create</span> index idx_stock_goodsid <span class="keyword">on</span> stock(goodsid)</span><br><span class="line"></span><br><span class="line"><span class="comment">--2. 在货物类型表goods的货物名称列添加唯一约束</span></span><br><span class="line"><span class="keyword">alter table</span> goods <span class="keyword">add constraint</span> wyys <span class="keyword">unique</span>(name)</span><br><span class="line"></span><br><span class="line"><span class="comment">--3. 将货物类型表的各种物品，在库存表插入一条记录，要求每个字段都填写完整，保证数量都在100以上。</span></span><br><span class="line"><span class="keyword">insert into</span> stock(id,goodsid,sl,intime,productime)</span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">    g.id id,</span><br><span class="line">    g.id goodsid,</span><br><span class="line">    <span class="built_in">floor</span>(dbms_random.value(<span class="number">100</span>, <span class="number">300</span>))  sl,  <span class="comment">-- 随机生成100-300的数量</span></span><br><span class="line">    trunc(sysdate) <span class="operator">-</span> <span class="number">30</span>  intime,  <span class="comment">-- 进货日期（一个月前）</span></span><br><span class="line">    trunc(sysdate <span class="operator">-</span> dbms_random.value(<span class="number">30</span>,<span class="number">90</span>))  productime  <span class="comment">-- 生产日期（1-3个月前）</span></span><br><span class="line"><span class="keyword">from</span> goods g <span class="keyword">order</span> <span class="keyword">by</span> g.id</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> stock <span class="comment">--删除数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--4. 查询出货物表中过期的所有物品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> goods g <span class="keyword">join</span> stock s <span class="keyword">on</span> s.id<span class="operator">=</span>g.id <span class="keyword">where</span> productime<span class="operator">+</span>qualitydate<span class="operator">&lt;</span>sysdate</span><br><span class="line"></span><br><span class="line"><span class="comment">--5. 查询货物表中10天之内过期的所有物品</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> goods g <span class="keyword">join</span> stock s <span class="keyword">on</span> s.id<span class="operator">=</span>g.id <span class="keyword">where</span> productime<span class="operator">+</span>qualitydate<span class="operator">+</span><span class="number">10</span><span class="operator">&lt;</span>sysdate</span><br><span class="line"></span><br><span class="line"><span class="comment">--6. 于当前时间新进货脉动50瓶，可口可乐50瓶，在出账表outcome和库存表stock插入相应记录</span></span><br><span class="line"><span class="keyword">create</span> sequence seq_stock <span class="comment">--库存序列</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">12</span></span><br><span class="line">increment <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> sequence seq_stock </span><br><span class="line"><span class="keyword">select</span> seq_stock.nextval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">select</span> seq_stock.currval <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> sequence seq_outcome <span class="comment">--出账序列</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">1</span></span><br><span class="line">increment <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> sequence seq_outcome</span><br><span class="line"><span class="keyword">select</span> seq_outcome.nextval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">select</span> seq_outcome.currval <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">--库存表插入</span></span><br><span class="line"><span class="keyword">insert into</span> stock</span><br><span class="line"><span class="keyword">select</span> seq_stock.nextval,id,<span class="number">50</span>,trunc(sysdate),trunc(sysdate)<span class="number">-20</span></span><br><span class="line"><span class="keyword">from</span> goods <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> goods <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;脉动&#x27;</span> <span class="keyword">or</span> name<span class="operator">=</span><span class="string">&#x27;可口可乐&#x27;</span>)</span><br><span class="line">       </span><br><span class="line"><span class="comment">--出账插入</span></span><br><span class="line"><span class="keyword">insert into</span> outcome <span class="comment">--脉动</span></span><br><span class="line"><span class="keyword">select</span> seq_outcome.nextval,id,seq_outcome.nextval,<span class="number">50</span>,inprice<span class="operator">*</span><span class="number">50</span>,trunc(sysdate) </span><br><span class="line"><span class="keyword">from</span> goods <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> goods <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;脉动&#x27;</span> <span class="keyword">or</span> name<span class="operator">=</span><span class="string">&#x27;可口可乐&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> outcome</span><br><span class="line"></span><br><span class="line"><span class="comment">--7. 于当前时间卖出泰山一包，在进账表插入相应记录，在库存表修改相应记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> income <span class="comment">--进帐表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> sequence seq_intcome <span class="comment">--出账序列</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">1</span></span><br><span class="line">increment <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> sequence seq_income</span><br><span class="line"><span class="keyword">select</span> seq_income.nextval <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">select</span> seq_income.currval <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">--进帐插入</span></span><br><span class="line"><span class="keyword">insert into</span> income(id, goodsid, stockid, sl, discount, allprice, outtime) </span><br><span class="line"><span class="keyword">values</span>(</span><br><span class="line">    seq_income.nextval, <span class="comment">-- id</span></span><br><span class="line">    (<span class="keyword">select</span> id <span class="keyword">from</span> goods <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;泰山&#x27;</span>), <span class="comment">-- 商品id</span></span><br><span class="line">    (<span class="keyword">select</span> s.id <span class="keyword">from</span> stock s <span class="keyword">join</span> goods g <span class="keyword">on</span> s.goodsid <span class="operator">=</span> g.id <span class="keyword">where</span> g.name <span class="operator">=</span> <span class="string">&#x27;泰山&#x27;</span>), <span class="comment">-- 库存id</span></span><br><span class="line">    <span class="number">1</span>, <span class="comment">-- 销售数量1包</span></span><br><span class="line">    <span class="number">1</span>, <span class="comment">-- 不打折</span></span><br><span class="line">    (<span class="keyword">select</span> outprice <span class="keyword">from</span> goods <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;泰山&#x27;</span>)<span class="operator">*</span><span class="number">1</span>, <span class="comment">-- 总价</span></span><br><span class="line">    sysdate <span class="comment">-- 销售时间</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">--更新库存</span></span><br><span class="line"><span class="keyword">update</span> stock <span class="keyword">set</span> sl <span class="operator">=</span> sl <span class="operator">-</span> <span class="number">1</span> <span class="keyword">where</span> goodsid <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> goods <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;泰山&#x27;</span>) <span class="keyword">and</span> sl <span class="operator">&gt;</span> <span class="number">0</span>; <span class="comment">-- 确保库存充足</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--8. 查询库存内所有物品的总价，进货价计算</span></span><br><span class="line"><span class="keyword">select</span> s.<span class="operator">*</span>, outprice<span class="operator">*</span>sl 总价, inprice<span class="operator">*</span>sl 进货价 <span class="keyword">from</span> stock s <span class="keyword">join</span> goods g <span class="keyword">on</span> g.id<span class="operator">=</span>s.id </span><br><span class="line"></span><br><span class="line"><span class="comment">--9. 查询酒水类物品的仓库保有量最大的物品id和总价</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (</span><br><span class="line">    <span class="keyword">select</span> g.id, g.outprice <span class="operator">*</span> <span class="built_in">sum</span>(s.sl) 总价</span><br><span class="line">    <span class="keyword">from</span> stock s</span><br><span class="line">    <span class="keyword">join</span> goods g <span class="keyword">on</span> s.goodsid <span class="operator">=</span> g.id</span><br><span class="line">    <span class="keyword">where</span> g.type <span class="operator">=</span> <span class="string">&#x27;g02&#x27;</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> g.id, g.outprice</span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">sum</span>(s.sl) <span class="keyword">desc</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">where</span> rownum <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--10. 查询价格大于5元低于10元的所有物品名称</span></span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span> goods <span class="keyword">where</span> outprice <span class="keyword">between</span> <span class="number">5</span> <span class="keyword">and</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--11. 查询名称中有山字的所有物品</span></span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span> goods <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%山%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--12. 查询进货日期是今天的所有进货记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> outcome <span class="keyword">where</span> intime <span class="operator">=</span> trunc(sysdate)</span><br><span class="line"></span><br><span class="line"><span class="comment">--13. 查询名称长度最大的物品名称</span></span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">from</span>(</span><br><span class="line">    <span class="keyword">select</span> name <span class="keyword">from</span> goods <span class="keyword">order</span> <span class="keyword">by</span> length(name) <span class="keyword">desc</span></span><br><span class="line">) <span class="keyword">where</span> rownum <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--14. 汇总各类型物品的库存，其中烟和酒水单独统计，其他物品展示为其他</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span></span><br><span class="line">       g.type <span class="keyword">in</span>(<span class="string">&#x27;g01&#x27;</span>,<span class="string">&#x27;g02&#x27;</span>) <span class="keyword">then</span> (g.name)</span><br><span class="line">       <span class="keyword">else</span> <span class="string">&#x27;其他&#x27;</span> <span class="keyword">end</span> 名称, <span class="built_in">sum</span>(s.sl) 库存</span><br><span class="line"><span class="keyword">from</span> stock s <span class="keyword">join</span> goods g <span class="keyword">on</span> g.id<span class="operator">=</span>s.goodsid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">case</span> <span class="keyword">when</span></span><br><span class="line">       g.type <span class="keyword">in</span>(<span class="string">&#x27;g01&#x27;</span>,<span class="string">&#x27;g02&#x27;</span>) <span class="keyword">then</span> (g.name)</span><br><span class="line">       <span class="keyword">else</span> <span class="string">&#x27;其他&#x27;</span> <span class="keyword">end</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 库存</span><br><span class="line"></span><br><span class="line"><span class="comment">--15. 更新可比克薯片的名称，将名称改为可比克薯片（袋装）</span></span><br><span class="line"><span class="keyword">update</span> goods <span class="keyword">set</span> name<span class="operator">=</span><span class="string">&#x27;可比克薯片（袋装）&#x27;</span> <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;可比克薯片&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--16. 将各类物品根据价格倒序排列展示</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> goods <span class="keyword">order</span> <span class="keyword">by</span> outprice <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--17. 查询出今天的销售额，毛利润</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(allprice) 销售额, <span class="built_in">sum</span>(allprice<span class="operator">-</span>inprice<span class="operator">*</span>sl) 毛利润</span><br><span class="line"><span class="keyword">from</span> income i <span class="keyword">join</span> goods g <span class="keyword">on</span> g.id<span class="operator">=</span>i.goodsid</span><br><span class="line"></span><br><span class="line"><span class="comment">--18. 根据每种物品类型（类型包括很多物品）昨天销售的累计数量，求出最大的数量的类型名称及总数量</span></span><br><span class="line"><span class="keyword">with</span> 昨日销售 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> g.type <span class="keyword">as</span> 类型代码,<span class="built_in">sum</span>(i.sl) <span class="keyword">as</span> 销售总量</span><br><span class="line">    <span class="keyword">from</span> income i <span class="keyword">join</span> goods g <span class="keyword">on</span> i.goodsid <span class="operator">=</span> g.id</span><br><span class="line">    <span class="keyword">where</span> trunc(i.outtime) <span class="operator">=</span> trunc(sysdate) <span class="operator">-</span> <span class="number">1</span>  <span class="comment">-- 昨天的销售记录</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> g.type</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> d.name 类型名称, y.销售总量</span><br><span class="line"><span class="keyword">from</span> 昨日销售 y <span class="keyword">join</span> t_dic d <span class="keyword">on</span> y.类型代码 <span class="operator">=</span> d.key</span><br><span class="line"><span class="keyword">where</span> y.销售总量 <span class="operator">=</span> (<span class="keyword">select</span> <span class="built_in">max</span>(销售总量) <span class="keyword">from</span> 昨日销售);</span><br><span class="line"></span><br><span class="line"><span class="number">19.</span> 查询出烟类，近<span class="number">10</span>天的销售情况，展示出物品名称，卖出数量，总价格，毛利润</span><br><span class="line"><span class="number">20.</span> 根据天数分组，汇总近<span class="number">10</span>天每天的销售情况，毛利润和总价格</span><br><span class="line"><span class="number">21.</span> 创建视图，展示当月销售物品中，分类统计各类物品的销售数量，总进价，总卖出价，毛利润</span><br><span class="line"><span class="number">22.</span> 在物品表里查出利润率最大的物品</span><br><span class="line"><span class="number">23.</span> 因为某人讲价，于当前时间，以<span class="number">8</span>折卖出馒头<span class="number">50</span>个，在进账表和库存表做出相应修改</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.6总结：排序、分组</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5SQL/5.6%E6%80%BB%E7%BB%93%EF%BC%9A%E6%8E%92%E5%BA%8F%E3%80%81%E5%88%86%E7%BB%84/</url>
    <content><![CDATA[<h1 id="关键词相关"><a href="#关键词相关" class="headerlink" title="关键词相关"></a>关键词相关</h1><p>关键词一共6个，一条查询语句最少要有2个关键词，最多6个关键词，每个关键词只能出现一次</p>
<ul>
<li>select 选列</li>
<li>from 选表</li>
<li>where 选行</li>
<li>group by 分组</li>
<li>having 选分组后的行</li>
<li>order by 排序</li>
</ul>
<p><strong>书写顺序</strong>：select — from — where — group by — having — order by<br><strong>执行顺序</strong>：from — where — group by — having — select — order by</p>
<h1 id="排序-order-by"><a href="#排序-order-by" class="headerlink" title="排序 order by"></a>排序 order by</h1><p>asc 升序（从小到大），默认，可写可不写；<br>desc 降序（从大到小），需在列名后标注</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="comment">--升序</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> <span class="comment">--降序</span></span><br></pre></td></tr></table></figure>

<p>order by 是唯一一个可以使用别名的关键词 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sal 工资, deptno 部门 <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> 工资 <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>

<p>排序后空值最大（升序排序时空值在最下面）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> comm <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>

<p>desc不共用（每列默认升序，需逐个设置）<br>多个列进行排序时，先全按照左边的列进行排序，在左边列排完的基础上，再排右边列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--先按部门升序排序，再按工资降序排序</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> deptno, sal <span class="keyword">desc</span></span><br><span class="line"><span class="comment">--两者都需降序排序时需要都写出desc</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">desc</span>, sal <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>

<p>数字指代能用但不常用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno,ename,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">1</span>,<span class="number">3</span> <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>

<h1 id="分组-group-by"><a href="#分组-group-by" class="headerlink" title="分组 group by"></a>分组 group by</h1><p>单独使用时效果相当于去重，一般只搭配聚合函数一起使用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--两者结果一样</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> deptno <span class="keyword">from</span> emp <span class="comment">--去重</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno  <span class="comment">--分组</span></span><br></pre></td></tr></table></figure>
<p><strong>分组后select后面只能跟分了组的列和聚合函数</strong></p>
<h2 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h2><p>多行聚合成一行的函数，如：<br>最大值max() 最小值min() 求和sum() 平均值avg() 计数count()</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(sal),<span class="built_in">min</span>(sal),<span class="built_in">sum</span>(sal),<span class="built_in">avg</span>(sal),<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure>
<p>count求的就是结果集里面有多少条有效数据（空值不计），可使用count(1)或者count(*)来求所有数据的计数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--求每个部门的最高工资</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"><span class="comment">--每个部门有几个工作为MANAGER的员工</span></span><br><span class="line"><span class="keyword">select</span>  deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"><span class="comment">--可进行多项分组</span></span><br><span class="line"><span class="keyword">select</span> deptno,job,<span class="built_in">avg</span>(sal),<span class="built_in">count</span>(<span class="number">1</span>),<span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno,job</span><br></pre></td></tr></table></figure>
<p>有分组的查询语句，那么聚合函数则在分组后产生</p>
<h2 id="having"><a href="#having" class="headerlink" title="having"></a>having</h2><p>功能等同where：专门用于筛选聚合函数<br>与where的区别：</p>
<ul>
<li>where是用来过滤行的，having是用来过滤分组的 </li>
<li>having一般跟在group by子句后</li>
<li>where是在分组前进行过滤，而having是在分组后进行过滤</li>
<li>where后面不可以加聚合函数过滤条件，having可以</li>
<li>where效率比having高，因此只有出现聚合函数作为过滤条件时用having，其余所有情况都用where</li>
</ul>
<p><strong>where条件里为什么不能有聚合函数</strong>：聚合函数是对行组进行计算，而执行顺序上是先where对单个行进行过滤，才分组，两者有个先后关系。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--求人数大于4的部门的名称和人数</span></span><br><span class="line"><span class="keyword">select</span>  deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp  <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">count</span>(<span class="number">1</span>)<span class="operator">&gt;</span><span class="number">4</span> </span><br></pre></td></tr></table></figure>

<p>having 只能筛选聚合函数和分组后的列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--求各部门工作是销售的员工人数</span></span><br><span class="line"><span class="comment">--错误写法：没有对job进行分组，having无法对job进行筛选</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> job<span class="operator">=</span><span class="string">&#x27;SALESMAN&#x27;</span></span><br><span class="line"><span class="comment">--正确写法：使用where进行筛选</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;SALESMAN&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br></pre></td></tr></table></figure>

<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--1.查询员工姓名、工资，按照工资的正序排列</span></span><br><span class="line"><span class="keyword">select</span> enmae,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.查询员工信息，先按照部门编号降序排列，再按照工资的正序排列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">desc</span>, sal</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.查询员工信息，先按照工资降序排列，再按照部门降序排列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>, deptno <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--4.求每个部门有多少员工</span></span><br><span class="line"><span class="keyword">select</span> deptno, <span class="built_in">count</span>(<span class="number">1</span>)  <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.求每个部门里的最高工资</span></span><br><span class="line"><span class="keyword">select</span> deptno, <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.参加每种工作的人数</span></span><br><span class="line"><span class="keyword">select</span> job, <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> job</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.求员工里面的最高工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--8.求公司有多少个部门</span></span><br><span class="line"><span class="comment">--使用dept表</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> dept</span><br><span class="line"><span class="comment">--使用emp表进行子查询，缺点：若emp表中没有某部门数据，则会少算这一部门，可能计数不全</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> deptno <span class="keyword">from</span> emp)</span><br><span class="line"></span><br><span class="line"><span class="comment">--9.求部门平均工资大于1600的部门编号</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;</span><span class="number">1600</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--10.求部门平均工资大于1600,并且不是20号部门的部门编号</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">!=</span><span class="number">20</span> <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;</span><span class="number">1600</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--11.列出最低薪金大于1500的各种工作</span></span><br><span class="line"><span class="keyword">select</span> job <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> job <span class="keyword">having</span> <span class="built_in">min</span>(sal)<span class="operator">&gt;</span><span class="number">1500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--12.列出在每个部门工作的员工数量、平均工资</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>), <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--13.列出各个部门的MANAGER（经理）的最低薪金</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">min</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--14.查询每个部门每个岗位的工资总和。</span></span><br><span class="line"><span class="keyword">select</span> deptno, job, <span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno, job <span class="keyword">order</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--15.查询部门人数大于2的部门编号，最低工资、最高工资,部门人数。</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">min</span>(sal),<span class="built_in">max</span>(sal),<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">count</span>(<span class="number">1</span>)<span class="operator">&gt;</span><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--16.查询部门平均工资大于2000，且人数大于2的 部门编号、部门人数、部门平均工资 ，并按照部门人数升序排序。</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>),<span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;</span><span class="number">2000</span> <span class="keyword">and</span> <span class="built_in">count</span>(<span class="number">1</span>)<span class="operator">&gt;</span><span class="number">2</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">count</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--17.查询员工岗位中不是以“SA”开头并且平均工资在2500元以上的岗位及平均工资，并按平均工资降序排序</span></span><br><span class="line"><span class="keyword">select</span> job,<span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> job <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">&#x27;SA%&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> job <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;</span><span class="number">2500</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">avg</span>(sal) <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--18.查询岗位不为SALESMAN，工资和大于等于2500的岗位及 每种岗位的工资和</span></span><br><span class="line"><span class="keyword">select</span> job,<span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">!=</span><span class="string">&#x27;SALESMAN&#x27;</span> <span class="keyword">group</span> <span class="keyword">by</span> job <span class="keyword">having</span> <span class="built_in">sum</span>(sal)<span class="operator">&gt;=</span><span class="number">2500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--19.写一个查询，显示每个部门最高工资和最低工资的差额</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">max</span>(sal)<span class="operator">-</span><span class="built_in">min</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.7总结：函数</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5SQL/5.7%E6%80%BB%E7%BB%93%EF%BC%9A%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>SQL 函数会对传递进来的参数进行处理，并返回一个处理结果，也就是返回一个值。通常用于返回特定的数据，可以很方便地转换和处理数据，Oracle 数据库中主要使用两种类型的函数： </p>
<ul>
<li>单行函数：对每一个函数应用在表的记录中时，只能输入一行结果，返回一个结果，有：<blockquote>
<p>字符函数：对字符串操作。<br>数字函数：对数字进行计算，返回一个数字。<br>转换函数：可以将一种数据类型转换为另外一种数据类型。<br>日期函数：对日期和时间进行处理。 </p>
</blockquote>
</li>
<li>聚合函数：聚合函数同时可以对多行数据进行操作，并返回一个结果。</li>
</ul>
<h2 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--加法计算器 输入两个数 返回一个和 </span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> getSum(n1 <span class="keyword">in</span> number,n2 <span class="keyword">in</span> number) <span class="keyword">return</span> number </span><br><span class="line"><span class="keyword">as</span> he number(<span class="number">4</span>); </span><br><span class="line"><span class="keyword">begin</span> he:<span class="operator">=</span>n1<span class="operator">+</span>n2; <span class="keyword">return</span> he; <span class="keyword">end</span>; </span><br><span class="line"><span class="keyword">select</span> getSum(<span class="number">3</span>,<span class="number">5</span>) <span class="keyword">from</span> dual <span class="number">102</span> </span><br><span class="line"><span class="keyword">select</span> empno,deptno,sal,comm,getSum(empno,deptno) <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure>

<h2 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h2><h3 id="length-计算字符串长度"><a href="#length-计算字符串长度" class="headerlink" title="length 计算字符串长度"></a>length 计算字符串长度</h3><p>length 不区分中英文<br>lengthb 区分中英文</p>
<h3 id="upper-和-lower-大-小写转换"><a href="#upper-和-lower-大-小写转换" class="headerlink" title="upper 和 lower 大&#x2F;小写转换"></a>upper 和 lower 大&#x2F;小写转换</h3><h3 id="concat-连接字符串"><a href="#concat-连接字符串" class="headerlink" title="concat 连接字符串"></a>concat 连接字符串</h3><p>只能连接两个字符</p>
<h3 id="lpad-和-rpad-左-右填充"><a href="#lpad-和-rpad-左-右填充" class="headerlink" title="lpad 和 rpad 左&#x2F;右填充"></a>lpad 和 rpad 左&#x2F;右填充</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 对原始字符串str向左填充指定字符（str_p，可不填，默认空格），直到字符串达到n个</span></span><br><span class="line">lpad(str,len,str_p)</span><br><span class="line"><span class="comment">-- 对ABC向左填充*直到变为5个字符，结果为&#x27;**ABC&#x27;</span></span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;ABC&#x27;</span>,<span class="number">5</span>,<span class="string">&#x27;*&#x27;</span>) <span class="keyword">from</span> dual</span><br><span class="line"><span class="comment">-- str_p不填时默认填充空格，结果为&#x27;  ABC&#x27;</span></span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;ABC&#x27;</span>,<span class="number">5</span>) <span class="keyword">from</span> dual</span><br><span class="line"><span class="comment">-- 若len小于原始字符，则改为保留左侧len个字符</span></span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;ABC&#x27;</span>,<span class="number">2</span>) <span class="keyword">from</span> dual <span class="comment">-- 结果为AB</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向右填充，同理</span></span><br><span class="line">rpad(str,len,str_p)</span><br><span class="line"><span class="comment">-- 对ABC向右填充o直到变为6个字符，结果为&#x27;ABCooo&#x27;</span></span><br><span class="line"><span class="keyword">select</span> rpad(<span class="string">&#x27;ABC&#x27;</span>,<span class="number">6</span>,<span class="string">&#x27;o&#x27;</span>) <span class="keyword">from</span> dual</span><br><span class="line"><span class="comment">-- 若len小于原始字符，依然改为保留左侧len个字符</span></span><br><span class="line"><span class="keyword">select</span> rpad(<span class="string">&#x27;ABC&#x27;</span>,<span class="number">2</span>) <span class="keyword">from</span> dual <span class="comment">-- 结果为AB</span></span><br></pre></td></tr></table></figure>
<h3 id="instr-找字符串出现位置"><a href="#instr-找字符串出现位置" class="headerlink" title="instr 找字符串出现位置"></a>instr 找字符串出现位置</h3><p>效率比like高</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 从字符串str1中找str2，从第start个字符开始找,找第n次出现的位</span></span><br><span class="line">instr(str1,str2,<span class="keyword">start</span>,n) <span class="comment">-- strat和n可不填，默认为1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 从头开始找第2个A出现的位置，结果为5</span></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;BABBABAB&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 当start为负时，从倒数第start位往前找</span></span><br><span class="line"><span class="comment">-- 从倒数第3位找第1个A出现的位置，结果为5</span></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;BABBABAB&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="number">-3</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 找出名字含T的的员工名字</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> instr(ename,<span class="string">&#x27;T&#x27;</span>)<span class="operator">&gt;</span><span class="number">0</span></span><br></pre></td></tr></table></figure>

<h3 id="substr-截取字符串"><a href="#substr-截取字符串" class="headerlink" title="substr 截取字符串"></a>substr 截取字符串</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 对字符串str截取，从第start个字符开始，截取len个字符，返回值是一个字符串</span></span><br><span class="line">substr(str,<span class="keyword">start</span>,len) <span class="comment">-- len可不填，默认截完</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 从第2个字符开始截取3个字符，结果为BCD</span></span><br><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;ABCDEF&#x27;</span>,<span class="number">2</span>,<span class="number">3</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>

<h3 id="trunc-截断"><a href="#trunc-截断" class="headerlink" title="trunc 截断"></a>trunc 截断</h3><h4 id="数字截断：截断数字到指定的小数位数"><a href="#数字截断：截断数字到指定的小数位数" class="headerlink" title="数字截断：截断数字到指定的小数位数"></a>数字截断：截断数字到指定的小数位数</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- num:要截断的数字； n：要保留的小数位</span></span><br><span class="line">trunc(num,n)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- n为正数时，截断到n位小数，结果为123.45</span></span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.4567</span>,<span class="number">2</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">-- n不填时默认为0，即仅保留整数部分，结果为123</span></span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.4567</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">-- n为负数时，截断将小数点左边n位置0，结果: 120</span></span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.4567</span>, <span class="number">-1</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>

<h4 id="日期截断：将时间设置为当天开始的时间（00-00-00）"><a href="#日期截断：将时间设置为当天开始的时间（00-00-00）" class="headerlink" title="日期截断：将时间设置为当天开始的时间（00:00:00）"></a>日期截断：将时间设置为当天开始的时间（00:00:00）</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 当天 2025/5/7，只显示日期，不显示时间</span></span><br><span class="line"><span class="keyword">select</span> trunc(sysdate) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 当前月份的第一天 2025/5/1</span></span><br><span class="line"><span class="keyword">select</span> trunc(sysdate,<span class="string">&#x27;month&#x27;</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 当前年份的第一天 2025/1/1</span></span><br><span class="line"><span class="keyword">select</span> trunc(sysdate,<span class="string">&#x27;year&#x27;</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>
<h3 id="replace-替换字符串"><a href="#replace-替换字符串" class="headerlink" title="replace 替换字符串"></a>replace 替换字符串</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--将字符串str中的字符s替换成字符d</span></span><br><span class="line">replace(str,s,d)</span><br><span class="line"><span class="comment">--显示所有员工的姓名，将字符&#x27;A&#x27;替换为&#x27;ai&#x27;</span></span><br><span class="line"><span class="keyword">select</span> replace(ename,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;ai&#x27;</span>) <span class="keyword">from</span> emp</span><br><span class="line"><span class="comment">--d可不填，默认为空，即相当于删除字符&#x27;A&#x27;</span></span><br><span class="line"><span class="keyword">select</span> replace(ename,<span class="string">&#x27;A&#x27;</span>) <span class="keyword">from</span> emp</span><br><span class="line"><span class="comment">--脱敏（脱除敏感数据）</span></span><br></pre></td></tr></table></figure>
<h3 id="translate-替换字符串"><a href="#translate-替换字符串" class="headerlink" title="translate 替换字符串"></a>translate 替换字符串</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 将字符串str中的from替换为to（其中from和to是逐个字符一一对应关系）</span></span><br><span class="line"><span class="built_in">translate</span>(str,<span class="keyword">from</span>,<span class="keyword">to</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 简单字符替换，结果为&#x27;a234b&#x27; (1→a, 5→b)</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">translate</span>(<span class="string">&#x27;12345&#x27;</span>,<span class="string">&#x27;15&#x27;</span>,<span class="string">&#x27;ab&#x27;</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">--字符删除,结果为&#x27;He Wrd&#x27; (l和o被删除)</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">translate</span>(<span class="string">&#x27;Hello World&#x27;</span>,<span class="string">&#x27;lo&#x27;</span>,<span class="string">&#x27;&#x27;</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">--加密转换 (字母表反向映射)</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">translate</span>(<span class="string">&#x27;SECRET&#x27;</span>,<span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>,<span class="string">&#x27;ZYXWVUTSRQPONMLKJIHGFEDCBA&#x27;</span>) <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure>

<h2 id="数字函数"><a href="#数字函数" class="headerlink" title="数字函数"></a>数字函数</h2><h3 id="取整"><a href="#取整" class="headerlink" title="取整"></a>取整</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- num为要取整的数字，n为精度，可不填，默认为0，即取整数</span></span><br><span class="line"><span class="comment">-- n为正数时取小数点之后n位，为负数时则为小数点之前</span></span><br><span class="line">round(num,n) 四舍五入</span><br><span class="line"><span class="built_in">floor</span>(num,n) 向下取整</span><br><span class="line"><span class="built_in">ceil</span>(num,n) 向上取整</span><br></pre></td></tr></table></figure>

<h3 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mod</span>(num1,num2) 取num1<span class="operator">/</span>num2的余数</span><br><span class="line"><span class="built_in">power</span>(n,m) 求n的m次幂</span><br><span class="line"><span class="built_in">sqrt</span>(num) 返回num的平方根</span><br></pre></td></tr></table></figure>
<h2 id="转换函数"><a href="#转换函数" class="headerlink" title="转换函数"></a>转换函数</h2><p>隐式转换：指Oracle在执行SQL语句时自动将数据类型转换成需要的数据类型。隐式转换可能会 导致精度损失或数据不准确，因此在使用时需要谨慎。</p>
<p>显示转换：指在SQL语句中使用一些函数强制将某个数据类型转换成另一个数据类型，如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">to_number 字符转换为数字 <span class="comment">-- 正常情况下数字可以自信隐式转换，不是数字的不能使用to_number转换，结论就是一般情况不用</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> empno<span class="operator">=</span>to_number(<span class="string">&#x27;7499&#x27;</span>) <span class="comment">--数字转换的前提是看起来像数字</span></span><br><span class="line"></span><br><span class="line">to_date 字符类型按一定格式转化为日期类型 <span class="comment">-- 跟日期有关的不管是日期转字符还是字符转日期都必须带日期格式</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> hiredate<span class="operator">=</span>to_date(<span class="number">1981</span>,<span class="string">&#x27;yyyy&#x27;</span>)</span><br><span class="line"></span><br><span class="line">to_char 数字转化为字符</span><br><span class="line">to_char 日期转化为字符,必须加单引号,并且区分大小写</span><br><span class="line"></span><br><span class="line"><span class="comment">-- to_char的其他用法</span></span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;ss&#x27;</span>) <span class="keyword">from</span> dual 取当前时间秒部分</span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;mi&#x27;</span>) <span class="keyword">from</span> dual 取当前时间分钟部分 </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;HH24&#x27;</span>) <span class="keyword">from</span> dual 取当前时间小时部分 </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;DD&#x27;</span>) <span class="keyword">from</span> dual 取当前时间日期部分 </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;MM&#x27;</span>) <span class="keyword">from</span> dual 取当前时间月部分 </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;YYYY&#x27;</span>) <span class="keyword">from</span> dual 取当前时间年部分 </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">from</span> dual 取当前时间是一个月中的第几周(从<span class="number">1</span>日开始算) </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;ww&#x27;</span>) <span class="keyword">from</span> dual 取当前时间是一年中的第几周（从<span class="number">1.1</span>开始算） </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;iw&#x27;</span>) <span class="keyword">from</span> dual 取当前时间是一年中的第几周（按实际日历的） </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;d&#x27;</span>) <span class="keyword">from</span> dual 取当前时间是一周的第几天，从星期天开始，周六结束 <span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;day&#x27;</span>) <span class="keyword">from</span> dual 取当前日是星期几，和数据库设置的字符集有关，会输出<span class="string">&#x27;Tuesday&#x27;</span>或星期几 </span><br><span class="line"><span class="keyword">Select</span> to_char(sysdate,<span class="string">&#x27;ddd&#x27;</span>) <span class="keyword">from</span> dual 当前日是一年中的第几天</span><br></pre></td></tr></table></figure>

<h2 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">last_day(日期)：取当前日期月的最后一天</span><br><span class="line"></span><br><span class="line">next_day(sysdate,n)：取离自己日期最近的一个周（下周） 的第几天，假如本周还未过到这一天，那么求的就是本周对应的天数</span><br><span class="line"><span class="comment">--下下周</span></span><br><span class="line"><span class="keyword">select</span> next_day(next_day(sysdate,<span class="number">2</span>),<span class="number">2</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line">add_months(日期,月)：给一个日期加上若干个月</span><br><span class="line"><span class="comment">--加一年</span></span><br><span class="line"><span class="keyword">select</span> add_months(sysdate,<span class="number">12</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line">months_between(date1,date2)：取两个日期相差的月数</span><br></pre></td></tr></table></figure>

<h3 id="nvl-空值替换"><a href="#nvl-空值替换" class="headerlink" title="nvl 空值替换"></a>nvl 空值替换</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 若exp1为空，返回exp2，否则返回exp1（主要两者类型要一致）</span></span><br><span class="line">nvl(exp1,exp2)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 若exp1不为空，返回exp2，若exp2为空，返回exp3</span></span><br><span class="line"><span class="comment">-- exp2和exp3类型不同的话，exp3会转换为exp2的类型</span></span><br><span class="line">nvl2(exp1,exp2,exp3)</span><br></pre></td></tr></table></figure>




<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--上机练习7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--1.求姓名为SMITH的员工的工作名称长度</span></span><br><span class="line"><span class="keyword">select</span> length(job) <span class="keyword">from</span> emp <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;SMITH&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.求名字长度为6的员工姓名，编号</span></span><br><span class="line"><span class="keyword">select</span> ename,empno <span class="keyword">from</span> emp <span class="keyword">where</span> length(ename)<span class="operator">=</span><span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.求员工的工资，格式如：姓名是：SMITH,工资是：800</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;姓名是：&#x27;</span> <span class="operator">||</span> ename <span class="operator">||</span> <span class="string">&#x27;，工资是：&#x27;</span> <span class="operator">||</span> sal <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.找出emp表中员工名字包含T字母的员工</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%T%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--5.找出emp表里名字第4位之后含T字母的员工</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;____%T%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--6.找出emp表里名字倒数第3位之前含M字母的员工</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%M%___&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--7.求第五位是H的员工姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;____H%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--8.求姓名中带有三个L的姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%LLL%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--9.将员工姓名首字母大写，其余字母小写</span></span><br><span class="line"><span class="keyword">select</span> initcap(ename) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--10.将员工姓名首字母小写，其余字母大写</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(substr(ename,<span class="number">1</span>,<span class="number">1</span>)) <span class="operator">||</span> <span class="built_in">upper</span>(substr(ename,<span class="number">2</span>)) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--11.查询工资是偶数的员工</span></span><br><span class="line"><span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="built_in">mod</span>(sal,<span class="number">2</span>)<span class="operator">=</span><span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--12.求1981年2月20号入职的员工</span></span><br><span class="line"><span class="keyword">select</span> ename,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> hiredate <span class="operator">=</span> <span class="type">date</span> <span class="string">&#x27;1981-02-20&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--13.求1981年入职的员工</span></span><br><span class="line"><span class="keyword">select</span> ename,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> to_char(hiredate,<span class="string">&#x27;yyyy&#x27;</span>)<span class="operator">=</span><span class="string">&#x27;1981&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--14.求2月份入职的员工</span></span><br><span class="line"><span class="keyword">select</span> ename,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> to_char(hiredate,<span class="string">&#x27;mm&#x27;</span>)<span class="operator">=</span><span class="string">&#x27;02&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--15.取当前月倒数第5天入职的员工</span></span><br><span class="line"><span class="keyword">select</span> ename,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> </span><br><span class="line">to_char(hiredate,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>)<span class="operator">=</span> to_char(last_day(sysdate)<span class="number">-4</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--16.取每个月倒数第5天入职的员工</span></span><br><span class="line"><span class="keyword">select</span> ename,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> </span><br><span class="line">to_char(hiredate,<span class="string">&#x27;dd&#x27;</span>)<span class="operator">=</span> to_char(last_day(hiredate)<span class="number">-4</span>,<span class="string">&#x27;dd&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--17.求下下个周三的日期</span></span><br><span class="line"><span class="keyword">select</span> next_day(sysdate,<span class="number">4</span>)<span class="operator">+</span><span class="number">7</span> <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">--18.求3个月后的今天</span></span><br><span class="line"><span class="keyword">select</span> add_months(sysdate,<span class="number">3</span>) <span class="keyword">from</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">--19.求每个员工的月收入</span></span><br><span class="line"><span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--20.如果comm为空就显示“No Commission”，如果不为空就显示comm的值</span></span><br><span class="line"><span class="keyword">select</span> nvl(to_char(comm),<span class="string">&#x27;No Commission&#x27;</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--21.求员工的一年的总收入（工资和佣金）</span></span><br><span class="line"><span class="keyword">select</span> sal<span class="operator">*</span><span class="number">12</span><span class="operator">+</span>nvl(comm,<span class="number">0</span>) 总薪资 <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--进阶额外40题</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--1、使用concat 函数完成 &quot;我是***,我的工作是***&quot; </span></span><br><span class="line"><span class="keyword">select</span> concat(concat(<span class="string">&#x27;我是&#x27;</span>,ename),concat(<span class="string">&#x27;我的工作是&#x27;</span>,job)) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--2、对emp  ename字段首字母进行大写</span></span><br><span class="line"><span class="keyword">select</span> initcap(ename) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--3、使用函数 求所有人员姓名的大写 首字母大写 小写 以及姓名字符长度 initcap（），upper（），lower（），length（）</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(ename),initcap(ename),<span class="built_in">lower</span>(ename),length(ename) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--3、从EMP表中获取job下所有职业名【distinct】（进阶需求：将工作名称都替换成中文case when）</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> <span class="keyword">case</span></span><br><span class="line">       <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;职员&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;SALESMAN&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;销售&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;PRESIDENT&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;董事&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;经理&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;ANALYST&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;分析&#x27;</span></span><br><span class="line">       <span class="keyword">else</span> <span class="string">&#x27;其他&#x27;</span></span><br><span class="line">       <span class="keyword">end</span> 职业</span><br><span class="line"><span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.instr()求ename字段 A字母位置 </span></span><br><span class="line"><span class="keyword">select</span> ename,instr(ename,<span class="string">&#x27;A&#x27;</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.显示所有员工的姓名，用“ai”替换所有“A”</span></span><br><span class="line"><span class="keyword">select</span> replace(ename,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;ai&#x27;</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.以首字母小写后面大写方式显示所有员工姓名。</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(substr(ename,<span class="number">1</span>,<span class="number">1</span>)) <span class="operator">||</span> <span class="built_in">upper</span>(substr(ename,<span class="number">2</span>)) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.查询员工姓名的第三个字母是A的员工姓名 </span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;__A%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--8.显示正好为5个字符的员工的姓名。</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;_____&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--9.求所有ename带‘L’的员工，并以L为界将L前的字母大写，之后的字母小写。</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(substr(ename,<span class="number">1</span>,instr(ename,<span class="string">&#x27;L&#x27;</span>)<span class="number">-1</span>)) <span class="operator">||</span> <span class="string">&#x27;L&#x27;</span> <span class="operator">||</span> <span class="built_in">lower</span>(substr(ename,instr(ename,<span class="string">&#x27;L&#x27;</span>)<span class="operator">+</span><span class="number">1</span>))</span><br><span class="line"><span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%L%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--10.对所有ename用空格进行长度补齐，左右两边的空格数大致相同，使其统一长度为15，（对该列数据进行去空格操作）。</span></span><br><span class="line"><span class="keyword">select</span> rpad(lpad(ename,length(ename)<span class="operator">+</span><span class="built_in">ceil</span>((<span class="number">15</span><span class="operator">-</span>length(ename))<span class="operator">/</span><span class="number">2</span>)),<span class="number">15</span>) 姓名 <span class="keyword">from</span> emp </span><br><span class="line"></span><br><span class="line"><span class="comment">--11.在所有的名字中间使用‘+’进行补齐至18位（奇数名使用数字函数round（）将位数取整）</span></span><br><span class="line"><span class="keyword">select</span> ename,substr(ename,<span class="number">1</span>,length(ename)<span class="operator">-</span>round(length(ename)<span class="operator">/</span><span class="number">2</span>)) <span class="operator">||</span> lpad(substr(ename,round(length(ename)<span class="operator">/</span><span class="number">2</span>)),<span class="number">18</span><span class="operator">-</span>round(length(ename)<span class="operator">/</span><span class="number">2</span>),<span class="string">&#x27;+&#x27;</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--12.将所有的ename中A开头或A结尾的记录 中的A去掉</span></span><br><span class="line"><span class="keyword">select</span> ename,replace(ename,<span class="string">&#x27;A&#x27;</span>) <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;A%&#x27;</span> <span class="keyword">or</span> ename <span class="keyword">like</span> <span class="string">&#x27;%A&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--13.求所有名字，b字母出现的个数</span></span><br><span class="line"><span class="keyword">select</span> ename,length(ename)<span class="operator">-</span>length(replace(ename,<span class="string">&#x27;b&#x27;</span>)) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--14.查找a-z字母表中a字母出现次数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--15.截取ename字段的后3位字母</span></span><br><span class="line"><span class="keyword">select</span> substr(ename,length(ename)<span class="number">-2</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--16.求所有员工的名字字符长度，并按照从高到低排列，所有员工名称小写</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(ename) 员工, length(ename) 字符长度 <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> 字符长度 <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--17.将ename和job 进行并列并在中间填充 * 使整列达到20个字符</span></span><br><span class="line"><span class="keyword">select</span> rpad(ename,<span class="number">20</span><span class="operator">-</span>length(job),<span class="string">&#x27;*&#x27;</span>) <span class="operator">||</span> job <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--18.显示员工姓名中最后一个字符是T的员工以及姓名第二个字是L 的员工 用instr这个语句实现 </span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> instr(ename,<span class="string">&#x27;T&#x27;</span>,<span class="number">-1</span>)<span class="operator">=</span>length(ename) <span class="keyword">or</span> instr(ename,<span class="string">&#x27;L&#x27;</span>,<span class="number">2</span>)<span class="operator">=</span><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--19.取所有员工日薪，精确到分，对后面的位数进行四舍五入。</span></span><br><span class="line"><span class="keyword">select</span> round(sal<span class="operator">*</span><span class="number">12</span><span class="operator">/</span><span class="number">365</span>,<span class="number">2</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--20.取所有员工日薪，精确到分，对小数位数进行截断，只保留整数部分</span></span><br><span class="line"><span class="keyword">select</span> trunc(round(sal<span class="operator">*</span><span class="number">12</span><span class="operator">/</span><span class="number">365</span>,<span class="number">2</span>)) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="number">21.</span>求所有员工日薪的最大整数并加余数 </span><br><span class="line"><span class="number">22.</span>求所有员工日薪的最大小数点后<span class="number">2</span>位有效数</span><br><span class="line"><span class="number">23.</span>求入职最早和入职最晚员工</span><br><span class="line"><span class="number">24.</span>求所有员工入职<span class="number">10</span>年后的日期</span><br><span class="line"><span class="number">25</span>求员工入职的时间时星期几</span><br><span class="line"><span class="number">26</span>求员工到目前入职了多少月多少周多少天多少年，所有日期都四舍五入</span><br><span class="line"><span class="number">27.</span>员工入职时间月底是星期几</span><br><span class="line"><span class="number">28</span>求所有员工入职的下一个月的第一个星期一</span><br><span class="line"><span class="number">29</span>求当前时间的一个月零<span class="number">12</span>天是几月几号</span><br><span class="line"><span class="number">30</span>求当前年月日时分秒数值相加之和</span><br><span class="line"><span class="number">31.</span>将<span class="number">2018</span>年<span class="number">1</span>月<span class="number">1</span>日加一年零<span class="number">2</span>个月 后是什么日期</span><br><span class="line"><span class="number">32.</span>把字符串<span class="number">2015</span><span class="number">-3</span>月<span class="number">-18</span> <span class="number">13</span>:<span class="number">13</span>:<span class="number">13</span>?转换成日期格式?转换成日期格式，并计算和系统当前时间间隔多少天。</span><br><span class="line"><span class="number">33.</span>找出各月倒数第<span class="number">2</span>天受雇的所有员工。</span><br><span class="line"><span class="number">34.</span>显示所有<span class="number">11</span>月份入职的员工</span><br><span class="line"><span class="number">35.</span>求 各个工作岗位中 工资最高的金额和最低的金额</span><br><span class="line"><span class="number">36.</span>求各个部门的工资总和，并列出工资数最高的金额，求标准差。</span><br><span class="line"><span class="number">37.</span>求各部门薪酬最大值和最小值的差值</span><br><span class="line"><span class="number">38.</span>统计 <span class="number">85</span>年前入职的员工 和<span class="number">85</span>年入职后的员工的平均工资</span><br><span class="line"><span class="number">39.</span> 将<span class="number">30</span>号部门人员都改<span class="number">40</span>号部门 人员显示</span><br><span class="line"><span class="number">40.</span>对员工工资进行评级 <span class="number">4000</span><span class="number">-5000</span> A级   <span class="number">3000</span><span class="number">-4000</span>B级 <span class="number">2</span><span class="number">-3000</span>C级 <span class="number">1</span><span class="number">-2000</span>D级 <span class="number">1000</span>以下的是F级</span><br><span class="line"><span class="number">41.</span>对各个部门各职业工资情况进行从高到低排序</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.9总结：子查询</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5SQL/5.9%E6%80%BB%E7%BB%93%EF%BC%9A%E5%AD%90%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h1 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h1><p>什么是子查询？简单理解，子查询就是嵌套在查询中的查询。<br>为什么要使用子查询？很多时候，我们对数据的查询处理不是一个查询语句就可以完成的； 不能完成的原因，可能是查询条件比较复杂，也可能是受困于SQL自身语法的限制； 这时候，子查询作为查询条件的重要组成部分，用在WHERE子句以及HAVING子句中， 可以帮助我们快速灵活的完成查询操作……</p>
<h2 id="单行子查询"><a href="#单行子查询" class="headerlink" title="单行子查询"></a>单行子查询</h2><p>单行子查询是指返回一行数据的子查询语句。<br>当where子句引用单行子查询时，可以使用 比较运算符（&#x3D;、&gt;、&lt;等）。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询工资大于平均工资的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp; <span class="comment">--单行单列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp); </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询部门平均工资大于整个公司平均工资的各部门平均工资</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 子查询可用于select中</span></span><br><span class="line"><span class="keyword">select</span> ename,sal,(<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 子查询可用于from中，其中起的别名可用于外层语句</span></span><br><span class="line"><span class="keyword">select</span> pjf <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) pjf <span class="keyword">from</span> emp)</span><br></pre></td></tr></table></figure>
<h2 id="多行子查询"><a href="#多行子查询" class="headerlink" title="多行子查询"></a>多行子查询</h2><p>单行子查询是指返回多行数据的子查询语句。当where子句引用多行子查询时，必须使用 多行比较符（in、any、all、exist等）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询部门编号&gt;10的员工信息</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> dept <span class="keyword">where</span> deptno<span class="operator">&gt;</span><span class="number">10</span>; <span class="comment">--多行单列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> dept <span class="keyword">where</span> deptno<span class="operator">&gt;</span><span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 多条件查询，大多数可以使用开窗代替</span></span><br><span class="line"><span class="comment">-- 例子：查看每个部门工资最高的员工姓名和他的工资</span></span><br><span class="line"><span class="comment">-- 开窗的做法 </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ( </span><br><span class="line">	<span class="keyword">select</span> ename,sal,deptno,<span class="built_in">rank</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) r <span class="keyword">from</span> emp</span><br><span class="line">) <span class="keyword">where</span> r<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 多条件多行操作 </span></span><br><span class="line"><span class="keyword">select</span> ename,sal,deptno <span class="keyword">from</span> emp <span class="keyword">where</span> (deptno,sal) <span class="keyword">in</span> (</span><br><span class="line">	<span class="keyword">select</span> deptno,<span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 多行多列 单行多列 一个表 </span></span><br><span class="line"><span class="keyword">select</span> ename,sal,<span class="built_in">rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> ( </span><br><span class="line">	<span class="keyword">select</span> ename,sal,<span class="built_in">rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) paiming <span class="keyword">from</span> emp </span><br><span class="line">) <span class="keyword">where</span> paiming<span class="operator">&lt;=</span><span class="number">3</span></span><br></pre></td></tr></table></figure>

<h1 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h1><p>SQL联合查询主要是涉及两个表或者多个表（自身表多次）的查询。 主要分为<strong>连接查询</strong>和<strong>集合查询</strong>两大类，其中：</p>
<p><strong>连接查询</strong> 列拼（保证行一致）<br>• 内连接（inner Join 或 Join）<br>• 左外连接（left outer Join 或 left Join）<br>• 右外连接（right outer Join 或 right Join）<br>• 全外连接（full outer Join 或 full Join） </p>
<p><strong>集合查询</strong> 行拼（保证列一致）<br>• minus（差集）<br>• intersect（交集）<br>• union、union all（并集）</p>
<h2 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h2><h3 id="交叉连接（笛卡尔连接）-cross-join"><a href="#交叉连接（笛卡尔连接）-cross-join" class="headerlink" title="交叉连接（笛卡尔连接） cross join"></a>交叉连接（笛卡尔连接） cross join</h3><p>把笛卡尔积所有的结果给显示出来了 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">A <span class="keyword">cross</span> <span class="keyword">join</span> B </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">cross</span> <span class="keyword">join</span> dept; </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp,dept;</span><br><span class="line"><span class="comment">-- 应用举例，两个球队之间交叉比赛，循环赛 </span></span><br></pre></td></tr></table></figure>

<h3 id="自然连接-natural-join"><a href="#自然连接-natural-join" class="headerlink" title="自然连接 natural join"></a>自然连接 natural join</h3><p>一种特殊的内连接 没有链接条件on，如果两个表里面有一列相等， 系统默认把这一列作为链接条件，并且把这两列合成一列放到表的最前面, 适用于知道表里面有这样一列，并且要用这一列的时候</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">natural</span> <span class="keyword">join</span> dept</span><br></pre></td></tr></table></figure>
<p>等于内连接结果集，一般不用</p>
<h3 id="using"><a href="#using" class="headerlink" title="using"></a>using</h3><p>跟自然连接作用相同，不同在于当有多个列相同时，可以指定用哪一列来做链接 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">join</span> dept <span class="keyword">using</span>(deptno)</span><br></pre></td></tr></table></figure>

<h3 id="内连接-inner-join"><a href="#内连接-inner-join" class="headerlink" title="内连接 inner join"></a>内连接 inner join</h3><p>inner可不写，只写join默认相当于inner join</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 等值连接：只返回两个表中连接字段相等的行。</span></span><br><span class="line"><span class="comment">-- 连接emp表和dept表，匹配deptno</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp,dept <span class="keyword">where</span> emp.deptno<span class="operator">=</span>dept.deptno </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">inner</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 不等值连接：过滤条件的符号不是等号</span></span><br><span class="line"><span class="comment">-- 查询员工的工资级别：连接emp表和salgrade表，根据emp表的sal和salgrade表的losal和hisal匹配其他内容</span></span><br><span class="line"><span class="keyword">select</span> ename,sal,grade <span class="keyword">from</span> emp <span class="keyword">inner</span> <span class="keyword">join</span> salgrade <span class="keyword">on</span> emp.sal <span class="keyword">between</span> losal <span class="keyword">and</span> hisal</span><br></pre></td></tr></table></figure>
<h4 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询出每个员工的上级领导(查询内容：员工编号、员工姓名、领导编号、领导姓名) </span></span><br><span class="line"><span class="keyword">select</span> yg.empno,yg.ename,ld.empno,ld.ename <span class="keyword">from</span> emp yg <span class="keyword">inner</span> <span class="keyword">join</span> emp ld <span class="keyword">on</span> yg.mgr<span class="operator">=</span>ld.empno </span><br></pre></td></tr></table></figure>
<h4 id="多表连接"><a href="#多表连接" class="headerlink" title="多表连接"></a>多表连接</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> yg.empno,yg.ename,ld.empno,ld.ename,dname <span class="keyword">from</span> emp yg <span class="keyword">inner</span> <span class="keyword">join</span> emp ld <span class="keyword">on</span> yg.mgr<span class="operator">=</span>ld.empno <span class="keyword">inner</span> <span class="keyword">join</span> dept <span class="keyword">on</span> ld.deptno<span class="operator">=</span>dept.deptno</span><br></pre></td></tr></table></figure>

<h3 id="外连接-outer-join"><a href="#外连接-outer-join" class="headerlink" title="外连接 outer join"></a>外连接 outer join</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">left</span> <span class="keyword">join</span>（左连接，左外连接）：返回包括左表中的所有记录和右表中连接字段相等的记录，如果没有匹配上，以<span class="keyword">null</span>值代表右边表的列。</span><br><span class="line"><span class="comment">-- 左表（from的表）为主表，全显示，右表（join的表）为子表，显示满足on匹配条件的数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> emp <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno</span><br><span class="line"></span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span>（右连接，右外连接）：返回包括右表中的所有记录和左表中连接字段相等的记录，如果没有匹配，以<span class="keyword">null</span>值代表左边表的列 </span><br><span class="line"><span class="comment">-- 右表（join的表）为主表，全显示，左表（from的表）为子表，显示满足on匹配条件的数据</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept <span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> emp <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno </span><br><span class="line"> </span><br><span class="line"><span class="keyword">full</span> <span class="keyword">join</span>（全外连接）：返回左右表中所有的记录和左右表中连接字段相等的记录，没有匹配上，以<span class="keyword">null</span>值代表左右边表的列。</span><br><span class="line"><span class="comment">-- 左右表都显示，满足条件的显示，不满足条件的留空</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">full</span> <span class="keyword">outer</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 筛选出来emp表中不满足条件的数据 </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">left</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> d.deptno <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line"><span class="comment">-- 筛选出dept表中不满足条件数据 </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">right</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> e.deptno <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line"><span class="comment">-- 筛选出emp和dept表中不满足条件的数据 </span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">full</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">where</span> d.deptno <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">or</span> e.deptno <span class="keyword">is</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure>

<h2 id="集合查询"><a href="#集合查询" class="headerlink" title="集合查询"></a>集合查询</h2><p>关键词之间没有优先级，需要用括号使程序优先执行<br>集合查询要保证列的个数一致，当字段没值时用Null值填充</p>
<h3 id="union-并集（去重且排序，效率低）"><a href="#union-并集（去重且排序，效率低）" class="headerlink" title="union 并集（去重且排序，效率低）"></a>union 并集（去重且排序，效率低）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--对应字段的数据类型要保证一致</span></span><br><span class="line"><span class="keyword">select</span> empno,ename <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="keyword">null</span> <span class="keyword">from</span> dept</span><br><span class="line"></span><br><span class="line"><span class="comment">---行拼+列拼</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">inner</span> <span class="keyword">join</span>(</span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> dept) t</span><br><span class="line"><span class="keyword">on</span> t.deptno<span class="operator">=</span>emp.deptno</span><br></pre></td></tr></table></figure>
<h3 id="union-all-并集（不去重不排序，效率高）"><a href="#union-all-并集（不去重不排序，效率高）" class="headerlink" title="union all 并集（不去重不排序，效率高）"></a>union all 并集（不去重不排序，效率高）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> </span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> dept</span><br><span class="line"></span><br><span class="line"><span class="comment">--union all 并集全部显示（列名可以不一样，类型一样就可以了） </span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> </span><br><span class="line"><span class="keyword">select</span> sal <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure>
<h3 id="intersect-交集"><a href="#intersect-交集" class="headerlink" title="intersect 交集"></a>intersect 交集</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">intersect</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> dept </span><br></pre></td></tr></table></figure>
<h3 id="minus-差集"><a href="#minus-差集" class="headerlink" title="minus 差集"></a>minus 差集</h3><p>union&#x2F;union all&#x2F;intersect 没有上下关系，minus有（永远是上减下）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> dept</span><br><span class="line">minus</span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp </span><br></pre></td></tr></table></figure>

<h2 id="with-表名-as-子查询"><a href="#with-表名-as-子查询" class="headerlink" title="with 表名 as(子查询)"></a>with 表名 as(子查询)</h2><p>好用，多用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="exists"><a href="#exists" class="headerlink" title="exists"></a>exists</h2><p>用于检查子查询是否返回任何行<br>判断结果集是否为真，为真则返回前面的查询语句的结果集，为假则不执行前面的语句<br>它是一个非常重要的高级查询工具，特别适合处理存在性检查的复杂查询场景</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 列 <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">exists</span>(子查询);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询有下属的领导</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp ld <span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line">    <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp yg <span class="keyword">where</span> yg.mgr <span class="operator">=</span> ld.empno</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询emp表中有2个以上直接下属的领导人员信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp ld <span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp <span class="keyword">where</span> mgr<span class="operator">=</span>ld.empno  <span class="keyword">group</span> <span class="keyword">by</span> mgr <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">=</span><span class="number">2</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<ol>
<li><p><strong>执行过程</strong>：</p>
<ul>
<li><p>对外部查询的每一行，执行一次子查询</p>
</li>
<li><p>如果子查询返回至少一行，返回<code>TRUE</code></p>
</li>
<li><p>如果子查询返回空结果，返回<code>FALSE</code></p>
</li>
</ul>
</li>
<li><p><strong>关键特点</strong>：</p>
<ul>
<li><p>不关心子查询返回的具体数据，只关心是否有数据返回</p>
</li>
<li><p>子查询通常使用<code>select 1</code>或<code>select *</code>，因为返回的内容不重要</p>
</li>
<li><p>当找到第一个匹配项时就会停止搜索，因此性能通常较好</p>
</li>
</ul>
</li>
</ol>
<p>在 in 和 exists 中 子查询结果集大优先考虑用 exists<br>外表大内表小 用 in<br>外表小内表大 用 exists<br>在 not in 和 not exists 中无脑选 not exists</p>
<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 上机练习10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--1.查询工资比20号部门工资都大的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.查询工资比20号部门工资任意一个大的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="built_in">min</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.求最高工资员工的姓名</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">=</span>(<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp)</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.查询员工工资和工作都和20号部门同时一样的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (sal,job) <span class="keyword">in</span>(<span class="keyword">select</span> sal,job <span class="keyword">from</span> emp <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.查询部门平均工资大于整个公司平均工资的部门</span></span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp)</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.求工资前五名的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (</span><br><span class="line">       <span class="keyword">select</span> emp.<span class="operator">*</span>,<span class="built_in">dense_rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) rnk <span class="keyword">from</span> emp</span><br><span class="line">) <span class="keyword">where</span> rnk<span class="operator">&lt;=</span><span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--7.查询emp表中所有数据的第2条到第5条</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(</span><br><span class="line">       <span class="keyword">select</span> emp.<span class="operator">*</span>,<span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> rownum <span class="keyword">desc</span>) rnk <span class="keyword">from</span> emp</span><br><span class="line">) <span class="keyword">where</span> rnk <span class="keyword">between</span> <span class="number">2</span> <span class="keyword">and</span> <span class="number">5</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--8.求每个部门工资最高的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (deptno,sal) <span class="keyword">in</span>(</span><br><span class="line">       <span class="keyword">select</span> deptno,<span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 上机练习11</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--1.查询所有员工的名字和部门名称</span></span><br><span class="line"><span class="keyword">select</span> ename,dname <span class="keyword">from</span> emp,dept <span class="keyword">where</span> emp.deptno<span class="operator">=</span>dept.deptno</span><br><span class="line"><span class="keyword">select</span> ename,dname <span class="keyword">from</span> emp <span class="keyword">inner</span> <span class="keyword">join</span> dept <span class="keyword">on</span> emp.deptno<span class="operator">=</span>dept.deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.查询所有部门名称及部门的所有员工列表</span></span><br><span class="line"><span class="keyword">select</span> d.deptno,wm_concat(ename)</span><br><span class="line"><span class="keyword">from</span> dept d <span class="keyword">left</span> <span class="keyword">join</span> emp e <span class="keyword">on</span> d.deptno <span class="operator">=</span> e.deptno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> d.deptno,d.dname</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> d.deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.求所有员工姓名,工资和其领导的姓名,工资</span></span><br><span class="line"><span class="keyword">select</span> yg.ename,yg.sal,ld.ename,ld.sal </span><br><span class="line"><span class="keyword">from</span> emp yg <span class="keyword">inner</span> <span class="keyword">join</span> emp ld <span class="keyword">on</span> yg.mgr<span class="operator">=</span>ld.empno</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.求所有员工工资大于其领导工资的员工姓名和其上级领导姓名，上级领导工资及员工工资</span></span><br><span class="line"><span class="keyword">select</span> yg.ename,yg.sal,ld.ename,ld.sal </span><br><span class="line"><span class="keyword">from</span> emp yg <span class="keyword">inner</span> <span class="keyword">join</span> emp ld <span class="keyword">on</span> yg.mgr<span class="operator">=</span>ld.empno </span><br><span class="line"><span class="keyword">where</span> yg.sal<span class="operator">&gt;</span>ld.sal</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.在上题的基础上查询员工所对应的部门</span></span><br><span class="line"><span class="keyword">select</span> yg.deptno,dname,yg.ename,yg.sal,ld.ename,ld.sal </span><br><span class="line"><span class="keyword">from</span> emp yg <span class="keyword">inner</span> <span class="keyword">join</span> emp ld <span class="keyword">on</span> yg.mgr<span class="operator">=</span>ld.empno</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> dept <span class="keyword">on</span> yg.deptno<span class="operator">=</span>dept.deptno</span><br><span class="line"><span class="keyword">where</span> yg.sal<span class="operator">&gt;</span>ld.sal</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.查询出不是领导的员工</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> empno <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> mgr <span class="keyword">from</span> emp <span class="keyword">where</span> mgr <span class="keyword">is</span> <span class="keyword">not null</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.查询出每个员工编号，姓名，部门名称，工资等级和他的上级领导的姓名，工资等级</span></span><br><span class="line"><span class="keyword">select</span> yg.empno,yg.ename,dname,yg_sg.grade,ld.ename,ld_sg.grade</span><br><span class="line"><span class="keyword">from</span>  emp yg </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> yg.deptno<span class="operator">=</span>d.deptno</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> emp ld <span class="keyword">on</span> yg.mgr<span class="operator">=</span>ld.empno</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> salgrade yg_sg <span class="keyword">on</span> yg.sal <span class="keyword">between</span> yg_sg.losal <span class="keyword">and</span> yg_sg.hisal</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> salgrade ld_sg <span class="keyword">on</span> ld.sal <span class="keyword">between</span> ld_sg.losal <span class="keyword">and</span> ld_sg.hisal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 上机练习12</span></span><br><span class="line"><span class="comment">--1.10号部门的部门名称和7369的员工姓名进行行拼显示，使用union all实现</span></span><br><span class="line"><span class="keyword">select</span> dname <span class="keyword">from</span> dept <span class="keyword">where</span> deptno<span class="operator">=</span><span class="number">10</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> empno<span class="operator">=</span><span class="number">7369</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--2.查看不是领导的员工编号和员工姓名，使用minus和子查询实现</span></span><br><span class="line"><span class="keyword">select</span> empno,ename <span class="keyword">from</span> emp</span><br><span class="line">minus</span><br><span class="line"><span class="keyword">select</span> empno,ename <span class="keyword">from</span> emp <span class="keyword">where</span> empno <span class="keyword">in</span> (<span class="keyword">select</span> mgr <span class="keyword">from</span> emp <span class="keyword">where</span> mgr <span class="keyword">is</span> <span class="keyword">not null</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--上机练习13</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--1.查询比三个部门平均工资都高的员工编号，员工姓名，工种和收入</span></span><br><span class="line"><span class="keyword">select</span> empno,ename,job,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&gt;</span><span class="keyword">all</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.显示部门名称为RESEARCH的员工姓名，工资</span></span><br><span class="line"><span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp e</span><br><span class="line"><span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno</span><br><span class="line"><span class="keyword">where</span> dname<span class="operator">=</span><span class="string">&#x27;RESEARCH&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--3.如果部门名称中含有字母T，则查询该部门所有员工信息，两种方法实现</span></span><br><span class="line"><span class="comment">--join</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e</span><br><span class="line"><span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno</span><br><span class="line"><span class="keyword">where</span> dname <span class="keyword">like</span> <span class="string">&#x27;%T%&#x27;</span></span><br><span class="line"><span class="comment">--子查询</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span>(</span><br><span class="line">       <span class="keyword">select</span> deptno <span class="keyword">from</span> dept <span class="keyword">where</span> dname <span class="keyword">like</span> <span class="string">&#x27;%T%&#x27;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.如果有平均工资不小于1500的部门信息则查询相应的部门信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept <span class="keyword">where</span> deptno <span class="keyword">in</span>(</span><br><span class="line">       <span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal)<span class="operator">&gt;=</span><span class="number">1500</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.查询出Emp表中比所有销售员(“SALESMAN”)工资低的员工姓名、工作、工资</span></span><br><span class="line"><span class="keyword">select</span> ename,job,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">&lt;</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="built_in">min</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> job<span class="operator">=</span><span class="string">&#x27;SALESMAN&#x27;</span> </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--6.显示比工资最高的员工参加工作时间晚的员工姓名，参加工作时间</span></span><br><span class="line"><span class="keyword">select</span> ename,hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> hiredate<span class="operator">&gt;</span><span class="keyword">all</span>(</span><br><span class="line">       <span class="keyword">select</span> hiredate <span class="keyword">from</span> emp <span class="keyword">where</span> sal<span class="operator">=</span>(</span><br><span class="line">              <span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp</span><br><span class="line">       )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.查询emp表中有2个以上直接下属的领导人员信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">where</span> <span class="keyword">exists</span>(</span><br><span class="line">       <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp <span class="keyword">where</span> mgr<span class="operator">=</span>e.empno  <span class="keyword">group</span> <span class="keyword">by</span> mgr <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">=</span><span class="number">2</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--8.使用开窗函数求出emp表中每一个部门工资第一高的人员姓名ename和人员工资sal，以及他所在部门的最高工资</span></span><br><span class="line"><span class="keyword">with</span> rnk_emp <span class="keyword">as</span>(</span><br><span class="line">     <span class="keyword">select</span> ename,sal,deptno,</span><br><span class="line">            <span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>)  row_num,</span><br><span class="line">            <span class="built_in">max</span>(sal)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno) dept_max_sal</span><br><span class="line">     <span class="keyword">from</span> emp</span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> rnk_emp <span class="keyword">where</span> row_num<span class="operator">=</span><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--9.emp表中每个部门员工入职日期最早的员工信息，多条件子查询</span></span><br><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span> <span class="keyword">from</span> emp e <span class="keyword">join</span>(</span><br><span class="line">       <span class="keyword">select</span> deptno,<span class="built_in">min</span>(hiredate) min_date <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line">) d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno <span class="keyword">and</span> e.hiredate <span class="operator">=</span> d.min_date</span><br><span class="line"></span><br><span class="line"><span class="comment">--10.实现下表功能</span></span><br><span class="line"><span class="comment">--小计</span></span><br><span class="line"><span class="keyword">select</span> e.deptno &quot;部门&quot;, d.dname &quot;部门名称&quot;, e.job &quot;工作&quot;, <span class="built_in">count</span>(<span class="operator">*</span>) &quot;小计&quot;, <span class="keyword">null</span> &quot;合计&quot;</span><br><span class="line"><span class="keyword">from</span> emp e <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno <span class="operator">=</span> d.deptno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> e.deptno, d.dname, e.job</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="comment">--合计</span></span><br><span class="line"><span class="keyword">select</span> e.deptno &quot;部门&quot;, d.dname &quot;部门名称&quot;, <span class="keyword">null</span> &quot;工作&quot;, <span class="keyword">null</span> &quot;小计&quot;, <span class="built_in">count</span>(<span class="operator">*</span>) &quot;合计&quot;</span><br><span class="line"><span class="keyword">from</span> emp e <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno <span class="operator">=</span> d.deptno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> e.deptno, d.dname</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> &quot;部门&quot;,&quot;工作&quot; <span class="keyword">nulls first</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.8总结：开窗函数</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5SQL/5.8%E6%80%BB%E7%BB%93%EF%BC%9A%E5%BC%80%E7%AA%97%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="case-when-搜索"><a href="#case-when-搜索" class="headerlink" title="case when 搜索"></a>case when 搜索</h2><p>简单case函数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno,<span class="keyword">case</span> deptno </span><br><span class="line">	<span class="keyword">when</span> <span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;第一部门&#x27;</span> </span><br><span class="line">	<span class="keyword">when</span> <span class="number">20</span> <span class="keyword">then</span> <span class="string">&#x27;第二部门&#x27;</span> </span><br><span class="line">	<span class="keyword">when</span> <span class="number">30</span> <span class="keyword">then</span> <span class="string">&#x27;第三部门&#x27;</span> </span><br><span class="line">	<span class="keyword">else</span> <span class="string">&#x27;第四部门&#x27;</span> </span><br><span class="line">	<span class="keyword">end</span> <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure>

<p>case搜索函数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno,<span class="keyword">case</span> </span><br><span class="line">	<span class="keyword">when</span> deptno<span class="operator">=</span><span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;第一部门&#x27;</span> </span><br><span class="line">	<span class="keyword">when</span> deptno<span class="operator">=</span><span class="number">20</span> <span class="keyword">then</span> <span class="string">&#x27;第二部门&#x27;</span> </span><br><span class="line">	<span class="keyword">when</span> deptno<span class="operator">=</span><span class="number">30</span> <span class="keyword">then</span> <span class="string">&#x27;第三部门&#x27;</span> </span><br><span class="line">	<span class="keyword">else</span> <span class="string">&#x27;第四部门&#x27;</span> </span><br><span class="line">	<span class="keyword">end</span> <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure>

<p>case when 生成的列也可以丢到 group by 后面去分组的，where、having都可以<br>使用case表达式需注意的点：<br>各个分支&lt;表达式&gt;返回的数据类型要统一<br>case写完后不能丢了end<br>else可省略但不建议省，没有值时可写 else null<br>case when 是一个列，可以起别名，可以放在group by后</p>
<h2 id="decode-等值翻译"><a href="#decode-等值翻译" class="headerlink" title="decode 等值翻译"></a>decode 等值翻译</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 把10号部门翻译成“十号部门”，20号部门翻译成“二十号部门”，30号部门翻译成“三十号部门”，其他显示其他部门，翻译时可以对列进行处理 </span></span><br><span class="line"><span class="keyword">select</span> decode(deptno,<span class="number">10</span>,<span class="string">&#x27;十号部门&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;二十号部门&#x27;</span>,<span class="number">30</span>,<span class="string">&#x27;三十号部门&#x27;</span>,<span class="string">&#x27;其他部门&#x27;</span>) <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure>

<p>decode与case when 的比较：<br>1、decode 只有Oracle、informix才有，其它数据库不支持；<br>2、case when的用法， Oracle、SQL Server、 MySQL、 informix、都支持；<br>3、decode 只能用做相等判断，但是可以配合sign函数进行大于，小于，等于的判断，CASE when可用于&#x3D;,&gt;&#x3D;,&lt;,&lt;&#x3D;,&lt;&gt;,is null,is not null 等的判断；<br>4、decode 使用其来比较简洁，CASE 虽然复杂但更为灵活；<br>5、另外，在decode中，null和null是相等的，但在case when中，只能用is null来判断。<br>6、decode效率比case when高，Oracle环境中能用decode尽量不用case when</p>
<h2 id="行转列"><a href="#行转列" class="headerlink" title="行转列"></a>行转列</h2><h3 id="聚合case实现行转列"><a href="#聚合case实现行转列" class="headerlink" title="聚合case实现行转列"></a>聚合case实现行转列</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 求各部门的各职位的工资</span></span><br><span class="line"><span class="comment">-- 各职位（&#x27;SALESMAN&#x27;、&#x27;MANAGER&#x27;、&#x27;CLERK&#x27;）作为列名</span></span><br><span class="line"><span class="comment">-- 空格后的 salesman、manager、clerk是别名</span></span><br><span class="line"><span class="keyword">select</span> deptno, </span><br><span class="line"><span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> job<span class="operator">=</span><span class="string">&#x27;SALESMAN&#x27;</span> <span class="keyword">then</span> sal <span class="keyword">end</span>) salesman, </span><br><span class="line"><span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> job<span class="operator">=</span><span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">then</span> sal <span class="keyword">end</span>) manager, </span><br><span class="line"><span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> job<span class="operator">=</span><span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">then</span> sal <span class="keyword">end</span>) clerk </span><br><span class="line"><span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br></pre></td></tr></table></figure>

<h2 id="pivot-行转列"><a href="#pivot-行转列" class="headerlink" title="pivot 行转列"></a>pivot 行转列</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 格式</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (数据查询集) <span class="comment">--后面行转列用到的字段</span></span><br><span class="line">	pivot(</span><br><span class="line">	(行转列后列的值) <span class="keyword">for</span> 需要转的列 <span class="keyword">in</span> （转换后的列值）</span><br><span class="line">	)</span><br><span class="line"><span class="comment">-- 求各部门的各职位的工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> deptno,job,sal <span class="keyword">from</span> emp) </span><br><span class="line">	pivot (</span><br><span class="line">		<span class="built_in">max</span>(sal) <span class="keyword">for</span> job <span class="keyword">in</span> (<span class="string">&#x27;SALESMAN&#x27;</span>,<span class="string">&#x27;MANAGER&#x27;</span>,<span class="string">&#x27;CLERK&#x27;</span>)</span><br><span class="line">	)</span><br><span class="line"><span class="comment">-- 行转列后的值应是聚集函数集</span></span><br></pre></td></tr></table></figure>

<p>unpivot 列转行</p>
<h2 id="开窗函数（分析函数）"><a href="#开窗函数（分析函数）" class="headerlink" title="开窗函数（分析函数）"></a>开窗函数（分析函数）</h2><p>开窗函数只能写在select里，不能用在where里</p>
<ul>
<li>聚合函数:avg() sum() count() max() min()</li>
<li>序列函数: row_number() rank() dense_rank()</li>
<li>分析函数:listagg()</li>
<li>偏移函数：lead  lag</li>
</ul>
<h3 id="排序类开窗函数"><a href="#排序类开窗函数" class="headerlink" title="排序类开窗函数"></a>排序类开窗函数</h3><p>row_number() rank() dense_rank()<br>主要做排序，他能够：</p>
<ul>
<li>在不减少行数的情况下进行计算</li>
<li>基于与当前行相关的行集（窗口）进行计算</li>
<li>为每行返回一个值，同时保持原始表的行数不变</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 格式</span></span><br><span class="line">函数名(列名)<span class="keyword">over</span>(</span><br><span class="line">    <span class="keyword">partition</span> <span class="keyword">by</span> 列名 <span class="comment">--可选，相当于group by分组，但没有去重效果</span></span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> 列名 <span class="comment">--排序函数必带</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">其中函数名有：</span><br><span class="line">row_number：对相等的值不进行区分，相等的值对应的排名不同，序号从<span class="number">1</span>到n连续（其实就是行号）</span><br><span class="line"><span class="comment">-- 如果有两个最高分，他们排名序号仍为1和2，而不是并列第一 （1,2,3...）</span></span><br><span class="line"><span class="keyword">select</span> sal,<span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">rank：相等的值排名相同，但若有相等的值，则序号从<span class="number">1</span>到n不连续</span><br><span class="line"><span class="comment">-- 如果有两个最高分，他们序号都为1（并列第一），但下一名的序号仍为3，而不是2 （1,1,3,4...）</span></span><br><span class="line"><span class="keyword">select</span> sal,<span class="built_in">rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line">dense_rank：对相等的值排名相同，但序号从<span class="number">1</span>到n连续</span><br><span class="line"><span class="comment">-- 如果有两个最高分，则下一名的序号为2（即第三个人为第二名） （1,1,2,3）  </span></span><br><span class="line"><span class="keyword">select</span> sal,<span class="built_in">dense_rank</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="built_in">ntile</span>(n)：将数据分成n组</span><br></pre></td></tr></table></figure>

<h4 id="累加效果"><a href="#累加效果" class="headerlink" title="累加效果"></a>累加效果</h4><p>sum+开窗函数over(order by)<br>当值一致时，累计值会默认加到相同值的最后一个，失去累加效果</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal),deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal)<span class="keyword">over</span>() <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno) <span class="keyword">from</span> emp</span><br><span class="line"><span class="comment">--累计效果的partition by 有需要则加，没需要就不加</span></span><br><span class="line"><span class="keyword">select</span> deptno,sal,<span class="built_in">sum</span>(sal)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--partition by 可以和group by 共存,前提是group by分组后的列，才能做的排序（可以用但是很少用到）</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">desc</span>) r <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br></pre></td></tr></table></figure>


<h4 id="listagg-将多行合并成一行"><a href="#listagg-将多行合并成一行" class="headerlink" title="listagg 将多行合并成一行"></a>listagg 将多行合并成一行</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--作为普通函数，对工资进行排序，用顿号&#x27;、&#x27;进行拼接。 </span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">listagg</span>(ename,<span class="string">&#x27;、&#x27;</span>)<span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) name <span class="keyword">from</span> emp; </span><br><span class="line"><span class="comment">--作为分组函数： </span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">listagg</span>(ename,<span class="string">&#x27;、&#x27;</span>)<span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) name <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br><span class="line"><span class="comment">--作为分析函数： </span></span><br><span class="line"><span class="keyword">select</span> deptno,ename,sal,<span class="built_in">listagg</span>(ename,<span class="string">&#x27;、&#x27;</span>)<span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno)name <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">---listagg里面的order by是语法必带，搭配开窗，开窗里面的order by不用带</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">listagg</span>(ename,<span class="string">&#x27;,&#x27;</span>)<span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> ename)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> deptno ) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wm_concat(列名)：该函数可以把列值以&quot;,&quot;号分隔起来,并显示成一行</span><br><span class="line"><span class="keyword">select</span> wm_concat(ename) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure>



<h3 id="偏移开窗"><a href="#偏移开窗" class="headerlink" title="偏移开窗"></a>偏移开窗</h3><p>偏移的目的是把不同行的数据放到同一行做运算</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- field:需要查找的字段; num:往下查找的行数; defaultvalue:没有符合条件的默认值。</span></span><br><span class="line"><span class="built_in">lead</span>(field,num,defaultvalue) </span><br><span class="line"></span><br><span class="line"><span class="comment">-- lead(params,m,n) 以params为目标向下m位取数，当取不到时默认为n, </span></span><br><span class="line"><span class="keyword">select</span> sal,<span class="built_in">lead</span>(sal,<span class="number">1</span>,<span class="number">0</span>)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) lastsal <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- lag(params,m,n) 以params为目标向上m位取数，当取不到时默认为n </span></span><br><span class="line"><span class="keyword">select</span> sal,<span class="built_in">lag</span>(sal,<span class="number">1</span>,<span class="number">0</span>)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) lastsal <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 环比 (sal-lastsal/lastsal) *100% </span></span><br><span class="line"><span class="comment">---环比增长率 =（本期数－上期数）/ 上期数 ×100%</span></span><br><span class="line"><span class="keyword">select</span> to_char(((sal<span class="operator">-</span>lastsal)<span class="operator">/</span>lastsal)<span class="operator">*</span><span class="number">100</span>,<span class="string">&#x27;990.99&#x27;</span>) <span class="operator">||</span> <span class="string">&#x27;%&#x27;</span> <span class="keyword">from</span>(</span><br><span class="line">       <span class="keyword">select</span> sal,<span class="built_in">lag</span>(sal,<span class="number">1</span>,<span class="keyword">null</span>)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) lastsal <span class="keyword">from</span> emp</span><br><span class="line">)</span><br><span class="line"><span class="comment">--to_char的占位用法，9代表一个位置，0代表把小数点之前的0补齐</span></span><br></pre></td></tr></table></figure>



<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 上机练习8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1.把10号部门翻译成“十号部门”，20号部门翻译成“二十号部门”，30号部门翻译成“三十号部门”</span></span><br><span class="line"><span class="keyword">select</span> deptno, <span class="keyword">case</span> deptno </span><br><span class="line">       <span class="keyword">when</span> <span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;十号部门&#x27;</span> </span><br><span class="line">       <span class="keyword">when</span> <span class="number">20</span> <span class="keyword">then</span> <span class="string">&#x27;二十号部门&#x27;</span> </span><br><span class="line">	     <span class="keyword">when</span> <span class="number">30</span> <span class="keyword">then</span> <span class="string">&#x27;三十号部门&#x27;</span> </span><br><span class="line">	     <span class="keyword">else</span> <span class="string">&#x27;其他部门&#x27;</span> </span><br><span class="line"><span class="keyword">end</span> 部门 <span class="keyword">from</span> emp</span><br><span class="line">  </span><br><span class="line"><span class="comment">-- 2.给所有的10号部门员工加薪10% 20号部门的员工加薪20% 30号员工加薪30% ,其他部门加薪5%</span></span><br><span class="line"><span class="keyword">select</span> ename,deptno,sal,<span class="keyword">case</span> </span><br><span class="line">       <span class="keyword">when</span> deptno<span class="operator">=</span><span class="number">10</span> <span class="keyword">then</span> sal<span class="operator">*</span><span class="number">1.1</span> </span><br><span class="line">       <span class="keyword">when</span> deptno<span class="operator">=</span><span class="number">20</span> <span class="keyword">then</span> sal<span class="operator">*</span><span class="number">1.2</span> </span><br><span class="line">	     <span class="keyword">when</span> deptno<span class="operator">=</span><span class="number">30</span> <span class="keyword">then</span> sal<span class="operator">*</span><span class="number">1.3</span> </span><br><span class="line">	     <span class="keyword">else</span> sal<span class="operator">*</span><span class="number">1.05</span> </span><br><span class="line"><span class="keyword">end</span> new_sal <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.统计工资级别相应的数量（1600以下 C级,1600-3000 B级,3000以上 A级）</span></span><br><span class="line"><span class="comment">--方法1</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">case</span></span><br><span class="line">       <span class="keyword">when</span> sal<span class="operator">&lt;</span><span class="number">1600</span> <span class="keyword">then</span> <span class="string">&#x27;C级&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> sal <span class="keyword">between</span> <span class="number">1600</span> <span class="keyword">and</span> <span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;B级&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> sal<span class="operator">&gt;</span><span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;A级&#x27;</span></span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">end</span> 工资级别, <span class="built_in">count</span>(<span class="number">1</span>) 合计 <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">case</span></span><br><span class="line">       <span class="keyword">when</span> sal<span class="operator">&lt;</span><span class="number">1600</span> <span class="keyword">then</span> <span class="string">&#x27;C级&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> sal <span class="keyword">between</span> <span class="number">1600</span> <span class="keyword">and</span> <span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;B级&#x27;</span></span><br><span class="line">       <span class="keyword">when</span> sal<span class="operator">&gt;</span><span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;A级&#x27;</span></span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">--方法2</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">	<span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sal<span class="operator">&lt;</span><span class="number">1600</span> <span class="keyword">then</span> <span class="string">&#x27;C级&#x27;</span> <span class="keyword">end</span>) C级,</span><br><span class="line">	<span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sal <span class="keyword">between</span> <span class="number">1600</span> <span class="keyword">and</span> <span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;B级&#x27;</span> <span class="keyword">end</span>) B级,</span><br><span class="line">	<span class="built_in">count</span>(<span class="keyword">case</span> <span class="keyword">when</span> sal<span class="operator">&gt;</span><span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;A级&#x27;</span> <span class="keyword">end</span>) A级  <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.实现两种方法的行转列</span></span><br><span class="line"><span class="comment">-- 聚合case</span></span><br><span class="line"><span class="keyword">select</span> deptno, </span><br><span class="line">       <span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> job<span class="operator">=</span><span class="string">&#x27;SALESMAN&#x27;</span> <span class="keyword">then</span> sal <span class="keyword">end</span>) salesman, </span><br><span class="line">       <span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> job<span class="operator">=</span><span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">then</span> sal <span class="keyword">end</span>) manager, </span><br><span class="line">       <span class="built_in">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> job<span class="operator">=</span><span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">then</span> sal <span class="keyword">end</span>) clerk </span><br><span class="line"><span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">-- pivot</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> deptno,job,sal <span class="keyword">from</span> emp) </span><br><span class="line">	     pivot (</span><br><span class="line">		         <span class="built_in">max</span>(sal) <span class="keyword">for</span> job <span class="keyword">in</span> (<span class="string">&#x27;SALESMAN&#x27;</span>,<span class="string">&#x27;MANAGER&#x27;</span>,<span class="string">&#x27;CLERK&#x27;</span>)</span><br><span class="line">	     )</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 上机练习9</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--1.按照部门编号升序查找所有部门名称，用、隔开</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">listagg</span>(dname,<span class="string">&#x27;、&#x27;</span>) <span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> deptno) <span class="keyword">from</span> dept</span><br><span class="line"></span><br><span class="line"><span class="comment">--2.按照工资降序查找每个部门的员工姓名，用、隔开</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">listagg</span>(ename,<span class="string">&#x27;、&#x27;</span>) <span class="keyword">within</span> <span class="keyword">group</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) </span><br><span class="line"><span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> deptno</span><br><span class="line"></span><br><span class="line"><span class="comment">--3.使用工资偏移计算环比 （sal-lastsal）/sal*100%</span></span><br><span class="line"><span class="keyword">select</span> ename,sal,<span class="built_in">lag</span>(sal,<span class="number">1</span>,<span class="number">0</span>)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal) lastsal,concat(</span><br><span class="line">       to_char(round((sal<span class="operator">-</span><span class="built_in">lag</span>(sal,<span class="number">1</span>,<span class="number">0</span>)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> sal))<span class="operator">/</span>sal<span class="operator">*</span><span class="number">100</span>,<span class="number">2</span>),<span class="string">&#x27;990.99&#x27;</span>) ,<span class="string">&#x27;%&#x27;</span></span><br><span class="line">) <span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--4.查询员工表中工资最高的前三名</span></span><br><span class="line"><span class="keyword">select</span> ename, sal <span class="keyword">from</span>(</span><br><span class="line">    <span class="keyword">select</span> ename, sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span></span><br><span class="line">) <span class="keyword">where</span> rownum <span class="operator">&lt;=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--5.查询员工表中每个部门的工资第2~3名的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(</span><br><span class="line">       <span class="keyword">select</span> emp.<span class="operator">*</span>,<span class="built_in">dense_rank</span>()<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) rnk <span class="keyword">from</span> emp</span><br><span class="line">) <span class="keyword">where</span> rnk <span class="keyword">between</span> <span class="number">2</span> <span class="keyword">and</span> <span class="number">3</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--6.查询员工姓名、部门及部门平均工资,以及部门内最高工资</span></span><br><span class="line"><span class="keyword">select</span> ename,deptno,sal,</span><br><span class="line">       round(<span class="built_in">avg</span>(sal)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno)) 部门平均工资,</span><br><span class="line">       <span class="built_in">max</span>(sal)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno) 部门最高工资</span><br><span class="line"><span class="keyword">from</span> emp</span><br><span class="line"></span><br><span class="line"><span class="comment">--7.每种工作累计求工资和</span></span><br><span class="line"><span class="keyword">select</span> job,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> job,sal</span><br><span class="line"><span class="keyword">select</span> job,<span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> job <span class="keyword">order</span> <span class="keyword">by</span> job</span><br><span class="line"><span class="keyword">select</span> job,<span class="built_in">sum</span>(sal)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> job <span class="keyword">order</span> <span class="keyword">by</span> sal,ename) <span class="keyword">from</span> emp</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>5.28总结：Python基础</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5Python/5.28%E6%80%BB%E7%BB%93%EF%BC%9APython%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="VS操作"><a href="#VS操作" class="headerlink" title="VS操作"></a>VS操作</h1><p>ctrl+&#x2F;  注释<br>tab  缩进<br>shift+tab  往回缩进</p>
<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><p>数字型：bool int float<br>非数字型：str list tuple set dict<br>日期型：time datetime<br>type(n) 查看变量n的类型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name=<span class="string">&quot;hello&quot;</span> </span><br><span class="line">age=<span class="number">10.5</span> </span><br><span class="line">xb=<span class="literal">False</span> <span class="comment">#区分大小写</span></span><br><span class="line"><span class="built_in">print</span>(name,end=<span class="string">&quot;&quot;</span>) </span><br><span class="line"><span class="comment">#小明学号为00001，年龄为18岁，身高为1.79米 </span></span><br><span class="line">sno=<span class="number">1</span> </span><br><span class="line">age=<span class="number">18</span> </span><br><span class="line">sname=<span class="string">&quot;小明&quot;</span> </span><br><span class="line">high=<span class="number">1.786</span> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(name)) <span class="comment">#查看name的数据类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#print打印时，字符数据类型可以使用+与&quot;&quot;连接</span></span><br><span class="line"><span class="comment">#其他类型则最好使用f&quot;&#123;变量&#125;其他内容&quot;</span></span><br><span class="line"><span class="built_in">print</span>(sname+<span class="string">&quot;你好&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(sname,<span class="string">&quot;你好&quot;</span>) <span class="comment">#以空格分隔</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;sname&#125;</span>学号为<span class="subst">&#123;sno&#125;</span>,年龄为<span class="subst">&#123;age&#125;</span>岁,身高为<span class="subst">&#123;high&#125;</span>米&quot;</span>) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;sname&#125;</span>学号为<span class="subst">&#123;sno:05d&#125;</span>，年龄为<span class="subst">&#123;age&#125;</span>岁，身高为<span class="subst">&#123;high:<span class="number">.2</span>f&#125;</span>米&quot;</span>)</span><br><span class="line"><span class="comment">#05d：数字宽度为5位，不足补零（`d`表示十进制整数）</span></span><br><span class="line"><span class="comment">#浮点数保留2位小数（`f`表示浮点数，`.2`控制小数位数）</span></span><br></pre></td></tr></table></figure>

<h1 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h1><p>使⽤ input 函数来接收⽤⼾从键盘输⼊，input输⼊的内容是字符串型</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pwd=<span class="built_in">input</span>(<span class="string">&quot;请输⼊密码：&quot;</span>) </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(pwd))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">int</span>(pwd)+<span class="number">5</span>)</span><br></pre></td></tr></table></figure>
<p> 使⽤ int() 、 float() 、 str() 等对变量进行数据类型的转换</p>
<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>算数： + - * &#x2F; %( 取余 ) **( 幂 ) &#x2F;&#x2F;( 取商 )<br>⽐较： &#x3D;&#x3D; !&#x3D; &gt; &gt;&#x3D; &lt; &lt;&#x3D;<br>赋值： &#x3D; +&#x3D; -&#x3D; *&#x3D; &#x2F;&#x3D; **&#x3D; &#x2F;&#x2F;&#x3D;<br>逻辑： and or not</p>
<h1 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h1><h2 id="if-选择结构"><a href="#if-选择结构" class="headerlink" title="if 选择结构"></a>if 选择结构</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sex=<span class="string">&quot;女&quot;</span> </span><br><span class="line"><span class="keyword">if</span> sex==<span class="string">&quot;男&quot;</span>: </span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;打游戏&quot;</span>) </span><br><span class="line"><span class="keyword">elif</span> sex==<span class="string">&quot;女&quot;</span>: </span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;去逛街&quot;</span>) </span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;其他&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>1 、每个条件后⾯要使⽤冒号  : ，表⽰接下来是满⾜条件后要执⾏的语句块。<br>2 、使⽤缩进来划分语句块，缩进采⽤ Tab 键或者 4 个空格，相同缩进组成⼀个语句块。<br>3 、在 Python 中没有 case 语句。</p>
<h2 id="while-for-循环结构"><a href="#while-for-循环结构" class="headerlink" title="while for 循环结构"></a>while for 循环结构</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 输出1-10数字 </span></span><br><span class="line">i= <span class="number">1</span> </span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">10</span>: </span><br><span class="line">	<span class="built_in">print</span>(i) </span><br><span class="line">	i+=<span class="number">1</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串可以直接循环输出里面的字符 </span></span><br><span class="line">names=<span class="string">&quot;hello world*你好&quot;</span> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> names: <span class="comment">#i逐个字符遍历</span></span><br><span class="line">	<span class="built_in">print</span>(i) </span><br><span class="line">	</span><br><span class="line"><span class="comment">#range序列，从0开始，左闭右开</span></span><br><span class="line"><span class="comment">#range(1,10,2) 1开始数字，10结束数字（不包含），步长2</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>) <span class="comment">#1,2,3...9</span></span><br><span class="line">	<span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure>

<h1 id="索引切片"><a href="#索引切片" class="headerlink" title="索引切片"></a>索引切片</h1><p>字符串的索引截取，变量名 [ 头下标 : 尾下标 ]<br>索引值以 0 为开始值，-1 为从末尾的开始位置<br>![[Pasted image 20250528112354.png]]</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#索引切片 </span></span><br><span class="line"><span class="comment">#abcdef</span></span><br><span class="line"><span class="comment">#012345</span></span><br><span class="line">s=<span class="string">&quot;abcdef&quot;</span> </span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">2</span>]) <span class="comment">#取下标为2的字符，即c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#做切片的时候，是左闭右开的，也就是不包括右边数字对应的下标索引 </span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">0</span>:<span class="number">4</span>]) <span class="comment">#取下标0-4的字符（取不到4），即abcd </span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">2</span>:]) <span class="comment">#取下标为2开始直到结束的字符，即cdef</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">0</span>:<span class="number">5</span>:<span class="number">2</span>]) <span class="comment">#步长为2（即中间隔一个），即ace</span></span><br></pre></td></tr></table></figure>

<h1 id="字符串相关操作"><a href="#字符串相关操作" class="headerlink" title="字符串相关操作"></a>字符串相关操作</h1><p>+拼接 *复制 “””保留格式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#len() 获取字符串长度</span></span><br><span class="line"><span class="built_in">str</span>=<span class="string">&quot;today&quot;</span> </span><br><span class="line">l=<span class="built_in">len</span>(<span class="built_in">str</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">#str.find() 字符查找 ,找到返回索引，没找到返回-1 </span></span><br><span class="line">name = <span class="string">&quot;LionelLionel&quot;</span> </span><br><span class="line">name.find(<span class="string">&quot;i&quot;</span>) <span class="comment">#返回1</span></span><br><span class="line"><span class="built_in">print</span>(name.find(<span class="string">&quot;i&quot;</span>)) <span class="comment">#显示还需使用print</span></span><br><span class="line">name.find(<span class="string">&quot;i&quot;</span>,<span class="number">3</span>) <span class="comment">#开始索引，从下标3的字符开始找</span></span><br><span class="line">name.find(<span class="string">&quot;i&quot;</span>,<span class="number">1</span>,<span class="number">2</span>) <span class="comment">#代表开始索引和结束索引 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#str.rfind() 从右侧开始查找 </span></span><br><span class="line">name.rfind(<span class="string">&quot;i&quot;</span>) <span class="comment">#返回7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#str.isdigit() </span></span><br><span class="line"><span class="comment">#判断字符串str是否为数字</span></span><br><span class="line"><span class="comment">#全是数字返回True，存在其他字符返回False</span></span><br><span class="line">sname=<span class="string">&quot;he54ll999&quot;</span> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sname: </span><br><span class="line">	<span class="keyword">if</span> i.isdigit(): </span><br><span class="line">		<span class="built_in">print</span>(i) </span><br><span class="line"></span><br><span class="line">i=<span class="built_in">input</span>(<span class="string">&quot;输入字符：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> i.isdigit(): </span><br><span class="line">	<span class="built_in">print</span>(i+<span class="string">&quot;是数字&quot;</span>) <span class="comment">#123</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">	<span class="built_in">print</span>(i+<span class="string">&quot;不是数字&quot;</span>) <span class="comment">#hao123</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#str.count() 统计字符串里某个字符或子字符串出现的次数 </span></span><br><span class="line"><span class="built_in">print</span>(sname.count(<span class="string">&quot;l&quot;</span>))</span><br></pre></td></tr></table></figure>

<h1 id="list-列表"><a href="#list-列表" class="headerlink" title="list 列表"></a>list 列表</h1><p><strong>list</strong> （列表） 是 Python 中使⽤最频繁的数据类型，专⻔⽤于存储⼀串数据，可以完成⼤多数集合类的数据结构实现<br>存储的数据称为<strong>元素</strong>，元素之间⽤逗号分隔<br>列表中元素的类型可以不相同，它⽀持数字，字符串甚⾄可以包含列表（所谓嵌套）<br>列表和字符串⼀样，索引从 0 开始，列表同样可以被索引和截取，列表被截取后返回⼀个包含所需元素的新列表<br>list 可以使⽤ + 操作符进⾏拼接<br>⽤星号  *  可以将列表中的元素解包为独立的元素，常用于函数传参或合并列表<br>创建空列表： 变量名&#x3D;[]</p>
<h2 id="列表常用操作"><a href="#列表常用操作" class="headerlink" title="列表常用操作"></a>列表常用操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line"><span class="built_in">print</span>(*list1)  <span class="comment">#输出列表的所有元素，默认以空格隔开</span></span><br><span class="line"><span class="built_in">print</span>(*list1,sep=<span class="string">&quot;\n&quot;</span>) <span class="comment">#可使用sep设置分割符</span></span><br><span class="line"><span class="comment">#一个列表可以同时对多个变量赋值，前提是变量数与列表的元素个数一致</span></span><br><span class="line">s1,s2,s3=[ni,hao,hello]</span><br><span class="line"><span class="built_in">print</span>(s1)</span><br><span class="line"><span class="built_in">print</span>(s2)</span><br><span class="line"><span class="built_in">print</span>(s3)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加</span></span><br><span class="line">list1.append(值)  <span class="comment">#在列表末尾追加一个元素</span></span><br><span class="line">list1.extend([值<span class="number">1</span>,值<span class="number">2</span>])  <span class="comment">#在列表末尾追加多个元素</span></span><br><span class="line">list1.insert(下标,值)  <span class="comment">#将一个元素插入到列表指定位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">list1.remove(值)  <span class="comment">#从列表中删除第一次出现在列表中的值</span></span><br><span class="line">list1.pop(下标)  <span class="comment">#删除索引对应的元素，如果不加索引，默认删除最后元素，同时返回删除后列表的最后一个元素</span></span><br><span class="line"><span class="keyword">del</span> list1[下标<span class="number">1</span>:下标<span class="number">2</span>:步长]  <span class="comment">#按照切片指定索引删除列表元素</span></span><br><span class="line">list1.clear()  <span class="comment">#清空列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line">list1[下标]=值  <span class="comment">#修改指定索引的元素，元素不存在会报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询</span></span><br><span class="line">list1[下标]  <span class="comment">#根据索引取值，索引不存在会报错</span></span><br><span class="line">list1.count(值)  <span class="comment">#返回列表中包含某个值的个数</span></span><br><span class="line">list1.sort()  <span class="comment">#将列表中的元素进行排序（升序）</span></span><br><span class="line">list1.sort(reverse=<span class="literal">True</span>) <span class="comment">#降序排序</span></span><br><span class="line">list1.reverse()  <span class="comment">#列表反转排序</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">len</span>(list1)  <span class="comment">#返回列表长度（元素个数）</span></span><br><span class="line"><span class="built_in">max</span>(list1)  <span class="comment">#返回列表元素最大值</span></span><br><span class="line"><span class="built_in">min</span>(list1)  <span class="comment">#返回列表元素最小值</span></span><br><span class="line"><span class="built_in">sum</span>(list1)  <span class="comment">#返回列表元素的总和</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 索引和元素同时显示</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(list1)):</span><br><span class="line">    <span class="built_in">print</span>(i,list1[i])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断某个元素是否在列表中</span></span><br><span class="line"><span class="keyword">if</span> <span class="number">100</span> <span class="keyword">in</span> list1:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;在&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不在&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表嵌套列表（多维数组）</span></span><br><span class="line">list1=[<span class="number">45</span>,<span class="number">60</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="string">&quot;hello&quot;</span>,<span class="literal">False</span>,<span class="number">4.5</span>,[<span class="number">365</span>,<span class="number">648</span>,<span class="string">&quot;hello&quot;</span>]]</span><br><span class="line"><span class="built_in">print</span>(list1[-<span class="number">1</span>][-<span class="number">1</span>][<span class="number">0</span>])  <span class="comment">#取出h</span></span><br></pre></td></tr></table></figure>

<h2 id="字符串与列表转换"><a href="#字符串与列表转换" class="headerlink" title="字符串与列表转换"></a>字符串与列表转换</h2><h3 id="split-分割字符串为列表"><a href="#split-分割字符串为列表" class="headerlink" title="split 分割字符串为列表"></a>split 分割字符串为列表</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1=<span class="string">&quot;hello world test&quot;</span></span><br><span class="line"><span class="comment"># 将字符串以空格分割存入列表</span></span><br><span class="line">list1=str1.split(<span class="string">&quot; &quot;</span>)  <span class="comment">#在&quot;&quot;内设置分割符</span></span><br><span class="line">list1=str1.split()  <span class="comment">#默认处理连续空格</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以使用split拆分后赋值给多个</span></span><br><span class="line">str2=<span class="string">&quot;nihao 你好 123&quot;</span></span><br><span class="line">list2=str2.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">s1,s2,s3=str2.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="comment"># 等效于s1,s2,s3=list2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(s1) <span class="comment">#nihao</span></span><br><span class="line"><span class="built_in">print</span>(s2) <span class="comment">#你好</span></span><br><span class="line"><span class="built_in">print</span>(s3) <span class="comment">#123</span></span><br></pre></td></tr></table></figure>
<h3 id="join-拼接列表为字符串"><a href="#join-拼接列表为字符串" class="headerlink" title="join 拼接列表为字符串"></a>join 拼接列表为字符串</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1=[<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;world&quot;</span>,<span class="string">&quot;test&quot;</span>]</span><br><span class="line"><span class="comment"># 将列表元素以_拼接</span></span><br><span class="line">str2=<span class="string">&quot;_&quot;</span>.join(list1)  <span class="comment">#在&quot;&quot;内设置拼接符</span></span><br></pre></td></tr></table></figure>

<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 上机练习1</span></span><br><span class="line"><span class="comment"># 1.定⼀个浮点型，将其转成int类型，观察取整后截断情况</span></span><br><span class="line">n=<span class="built_in">int</span>(<span class="number">3.14</span>)</span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.定义⼀个整型，将其转成float，再计算其平⽅</span></span><br><span class="line">n=<span class="built_in">float</span>(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(n**<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.不换⾏输出两个字符串（print⽅法的end参数）我喜欢 编程</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我喜欢&quot;</span>, end=<span class="string">&quot;编程&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.输⼊⼀个数字，判断是奇数还是偶数</span></span><br><span class="line">n=<span class="built_in">input</span>(<span class="string">&quot;请输入一个数字&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> n.isdigit():</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">int</span>(n)%<span class="number">2</span>==<span class="number">0</span> :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;n&#125;</span>是偶数&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;n&#125;</span>是奇数&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入的不是数字！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.输出8到88的偶数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>,<span class="number">89</span>,<span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.已知字符串，s=&quot;哈佛在等我呢&quot;</span></span><br><span class="line">s=<span class="string">&quot;哈佛在等我呢&quot;</span></span><br><span class="line"><span class="comment"># 获取第4⾄第5个字符</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">3</span>:<span class="number">5</span>])</span><br><span class="line"><span class="comment"># 获取左起第3个起所有的字符</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">2</span>:])</span><br><span class="line"><span class="comment"># 字符串做*运算，拷⻉字符串5次</span></span><br><span class="line"><span class="built_in">print</span>(s*<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.从键盘接收⼀个字符串，查找它在 s=&quot;aforsadvj happy so thank&quot; 中是否存在，如果存在 就打印 &quot; 找到你了 &quot; ，并且显⽰出现的次数，不存在就打印 &quot; 怎么没有你 &quot;</span></span><br><span class="line">s=<span class="string">&quot;aforsadvj happy so thank&quot;</span></span><br><span class="line">fs=<span class="built_in">input</span>(<span class="string">&quot;请输入要查找的字符串: &quot;</span>)</span><br><span class="line">count=s.count(fs)</span><br><span class="line"><span class="keyword">if</span> count&gt;<span class="number">0</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;找到你了&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;出现次数: <span class="subst">&#123;count&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;怎么没有你&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.从键盘接收⼀个字符串，取出字符串中的数字，并且统计字符串的总⻓度及所有数字出现的个数。</span></span><br><span class="line">s=<span class="built_in">input</span>(<span class="string">&quot;请输入字符串：&quot;</span>)</span><br><span class="line">cd=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    <span class="keyword">if</span> i.isdigit():</span><br><span class="line">        cd+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;总长度：<span class="subst">&#123;<span class="built_in">len</span>(s)&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;所有数字数量：<span class="subst">&#123;cd&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 9.根据完整路径从路径中取出⽂件路径，⽂件扩展名py </span></span><br><span class="line">str2=<span class="string">&quot;D:\ 软件 \python\python39\Tools\scripts\mitype.py&quot;</span></span><br><span class="line">n1=str2.rfind(<span class="string">&quot;\\&quot;</span>)</span><br><span class="line">n2=str2.rfind(<span class="string">&quot;.&quot;</span>)+<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(str2[<span class="number">0</span>:n1])</span><br><span class="line"><span class="built_in">print</span>(str2[n2:])</span><br><span class="line"><span class="comment"># 输出结果为：</span></span><br><span class="line"><span class="comment"># D:\ 软件 \python\python39\Tools\scripts </span></span><br><span class="line"><span class="comment"># py</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上机练习2</span></span><br><span class="line"><span class="comment"># 1.请将列表 l1=[&quot;hello&quot;,&quot;world&quot;,&quot;test&quot;] 中的每个元素通过 &quot;_&quot; 链接起来。 输出结果： hello_world_test</span></span><br><span class="line">l1=[<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;world&quot;</span>,<span class="string">&quot;test&quot;</span>]</span><br><span class="line">str1=<span class="string">&quot;_&quot;</span>.join(l1)</span><br><span class="line"><span class="built_in">print</span>(str1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.有如下两个列表 </span></span><br><span class="line">list1 = [<span class="string">&quot;M&quot;</span>, <span class="string">&quot;na&quot;</span>, <span class="string">&quot;i&quot;</span>, <span class="string">&quot;Ke&quot;</span>] </span><br><span class="line">list2 = [<span class="string">&quot;y&quot;</span>, <span class="string">&quot;me&quot;</span>, <span class="string">&quot;s&quot;</span>, <span class="string">&quot;lly&quot;</span>] </span><br><span class="line"><span class="comment">#处理后保存到新列表中</span></span><br><span class="line">list3 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(list1)):</span><br><span class="line">    s=list1[i]+list2[i]</span><br><span class="line">    list3.append(s)</span><br><span class="line"><span class="built_in">print</span>(list3)</span><br><span class="line"><span class="comment">#输出结果： [&#x27;My&#x27;, &#x27;name&#x27;, &#x27;is&#x27;, &#x27;Kelly&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.⽣成 100 个卡号 , 存储到列表中打印输出；卡号以 6102009 开头 , 后⾯ 3 位依次是 （ 001,002,003,...,100 ）</span></span><br><span class="line">list1=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">    n=<span class="string">f&quot;6102009<span class="subst">&#123;i:03d&#125;</span>&quot;</span></span><br><span class="line">    list1.append(n)</span><br><span class="line"><span class="built_in">print</span>(*list1,sep=<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#直接赋值写法(推导式)</span></span><br><span class="line">list1 = [</span><br><span class="line">    <span class="string">f&quot;6102009<span class="subst">&#123;i:03d&#125;</span>&quot;</span>  <span class="comment">#:03d表示3位整数，不足补0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>)</span><br><span class="line">]</span><br><span class="line"><span class="built_in">print</span>(*list1,sep=<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">	</span><br><span class="line"><span class="comment"># 4.已知字符串 </span></span><br><span class="line">str1=<span class="string">&quot;hello c sharp&quot;</span></span><br><span class="line"><span class="comment">#将其中的单词以反序输出 </span></span><br><span class="line">list1=str1.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">list1.reverse()</span><br><span class="line"><span class="built_in">print</span>(*list1)</span><br><span class="line"><span class="comment"># str2=&quot; &quot;.join(list1)</span></span><br><span class="line"><span class="comment"># print(str2)</span></span><br><span class="line"><span class="comment">#输出结果：sharp c hello</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.给定⼀个列表,将每⼀位数字变成它的平⽅ </span></span><br><span class="line">alist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>] </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(alist)):</span><br><span class="line">    alist[i]**=<span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(alist)</span><br><span class="line"><span class="comment">#输出结果： [1, 4, 9, 16, 25, 36, 49]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.重新使⽤split和join的⽅法做1.9题:根据完整路径从路径中取出⽂件路径，⽂件扩展名py</span></span><br><span class="line">str2=<span class="string">&quot;D:\ 软件 \python\python39\Tools\scripts\mitype.py&quot;</span></span><br><span class="line">list2=str2.split(<span class="string">&quot;\\&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(list2)</span><br><span class="line">list3=list2[-<span class="number">1</span>].split(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">list2.pop()</span><br><span class="line">str3=<span class="string">&quot;\\&quot;</span>.join(list2)</span><br><span class="line"><span class="built_in">print</span>(str3)</span><br><span class="line"><span class="built_in">print</span>(list3[-<span class="number">1</span>])</span><br><span class="line"><span class="comment"># 输出结果为：</span></span><br><span class="line"><span class="comment"># D:\ 软件 \python\python39\Tools\scripts </span></span><br><span class="line"><span class="comment"># py</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.把下⾯的列表⾥⾯的数字提取出来⽣成⼀个新的列表</span></span><br><span class="line">list1 = [<span class="number">13</span>, <span class="number">2</span>, <span class="number">55</span>, [<span class="number">11</span>, <span class="number">32</span>, <span class="string">&quot;eee&quot;</span>], [<span class="string">&quot;ssd&quot;</span>, <span class="number">55</span>, <span class="string">&quot;ggg&quot;</span>]]</span><br><span class="line">list2 = []</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">l</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>(i) == <span class="built_in">int</span>:</span><br><span class="line">            list2.append(i)</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">type</span>(i) == <span class="built_in">list</span>:</span><br><span class="line">            func(i)</span><br><span class="line">            </span><br><span class="line">func(list1)</span><br><span class="line"><span class="built_in">print</span>(list2) </span><br><span class="line"><span class="comment"># 输出: [13, 2, 55, 11, 32, 55]</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>5.29总结：元组、集合、字典、推导式</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5Python/5.29%E6%80%BB%E7%BB%93%EF%BC%9A%E5%85%83%E7%BB%84%E3%80%81%E9%9B%86%E5%90%88%E3%80%81%E5%AD%97%E5%85%B8%E3%80%81%E6%8E%A8%E5%AF%BC%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="tuple-（元组）只读的列表"><a href="#tuple-（元组）只读的列表" class="headerlink" title="tuple （元组）只读的列表"></a>tuple （元组）只读的列表</h1><p>元组（<strong>tuple</strong>）是 Python 中一种不可变的序列类型，用于存储<strong>有序、可重复</strong>的元素。它与列表（list）类似，但关键区别在于 <strong>元组一旦创建，内容不可修改</strong>（不可变性）。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tuple1 = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">34</span>,<span class="number">5</span>,<span class="number">6</span>) <span class="comment">#元组定义</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(tuple1)) <span class="comment">#类型为tuple</span></span><br><span class="line"><span class="built_in">print</span>(tuple1[<span class="number">3</span>]) <span class="comment">#访问元素</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tuple1: <span class="comment">#遍历元组</span></span><br><span class="line">	<span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"><span class="comment">#想对元组操作，需要将其转为列表</span></span><br><span class="line">list1=<span class="built_in">list</span>(tupe1)</span><br></pre></td></tr></table></figure>

<h1 id="set-（集合）无序，去掉重复数据"><a href="#set-（集合）无序，去掉重复数据" class="headerlink" title="set （集合）无序，去掉重复数据"></a>set （集合）无序，去掉重复数据</h1><p>集合（<strong>set</strong>）是 Python 中一种<strong>无序、不重复</strong>的容器类型，基于哈希表实现，常用于快速成员检测、去重和数学集合运算（如并集、交集）。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">set1 = <span class="built_in">set</span>()  <span class="comment">#创建空集合，必须使用set(),使用&#123;&#125;会创建一个空字典</span></span><br><span class="line">set1 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>&#125;  <span class="comment">#集合定义</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(set1)) <span class="comment">#类型为set</span></span><br><span class="line"><span class="built_in">print</span>(set1)  <span class="comment">#只有&#123;1,2,3,4,5&#125;</span></span><br><span class="line">set1.add(<span class="number">666</span>)  <span class="comment">#添加元素</span></span><br><span class="line">set1.remove(<span class="number">55</span>)  <span class="comment">#删除元素</span></span><br><span class="line">set1.pop()  <span class="comment">#随机删除一个元素</span></span><br><span class="line"><span class="comment">#不能使用下标访问set，所以修改操作一般为remove操作 + add操作</span></span><br></pre></td></tr></table></figure>

<h1 id="dict-（字典）"><a href="#dict-（字典）" class="headerlink" title="dict （字典）"></a>dict （字典）</h1><p>字典是 键 (key) : 值 (value)  的集合<br>在同⼀个字典中，键 (key) 必须是唯⼀的<br>创建空字典使⽤  { } </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建字典</span></span><br><span class="line">dict1 = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Alice&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">30</span>, <span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;New York&#x27;</span>&#125;  <span class="comment"># 直接创建</span></span><br><span class="line">dict2 = <span class="built_in">dict</span>([(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;Bob&#x27;</span>), (<span class="string">&#x27;age&#x27;</span>, <span class="number">25</span>)])  <span class="comment"># 使用 dict() 函数从元组列表创建</span></span><br><span class="line">dict3 = <span class="built_in">dict</span>(name=<span class="string">&#x27;Charlie&#x27;</span>, age=<span class="number">35</span>)  <span class="comment"># 使用关键字参数创建</span></span><br><span class="line">empty_dict = &#123;&#125;  <span class="comment"># 创建空字典</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问元素</span></span><br><span class="line"><span class="built_in">print</span>(dict1[<span class="string">&#x27;name&#x27;</span>])  <span class="comment"># 通过键获取值，键不存在会报错</span></span><br><span class="line"><span class="built_in">print</span>(dict1.get(<span class="string">&#x27;age&#x27;</span>))  <span class="comment"># 通过 get() 方法获取值，键不存在返回 None</span></span><br><span class="line"><span class="built_in">print</span>(dict1.get(<span class="string">&#x27;gender&#x27;</span>, <span class="string">&#x27;Unknown&#x27;</span>))  <span class="comment"># 可设置默认值，键不存在时返回</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加/修改元素</span></span><br><span class="line">dict1[<span class="string">&#x27;job&#x27;</span>] = <span class="string">&#x27;Engineer&#x27;</span>  <span class="comment"># 若键不存在，会添加新键值对</span></span><br><span class="line">dict1[<span class="string">&#x27;age&#x27;</span>] = <span class="number">31</span>  <span class="comment"># 若键存在，则修改键对应的值</span></span><br><span class="line">dict1.update(&#123;<span class="string">&#x27;city&#x27;</span>: <span class="string">&#x27;Los Angeles&#x27;</span>, <span class="string">&#x27;hobby&#x27;</span>: <span class="string">&#x27;Reading&#x27;</span>&#125;)  <span class="comment"># 批量添加/更新</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除元素</span></span><br><span class="line"><span class="keyword">del</span> dict1[<span class="string">&#x27;city&#x27;</span>]  <span class="comment"># 删除指定键的键值对</span></span><br><span class="line">age = dict1.pop(<span class="string">&#x27;age&#x27;</span>)  <span class="comment"># 删除指定键的键值对，并返回对应的值</span></span><br><span class="line">last_item = dict1.popitem()  <span class="comment"># 删除并返回字典的最后一个键值对（Python 3.7+ 有序）</span></span><br><span class="line">dict1.clear()  <span class="comment"># 清空字典</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历字典</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> dict1:  <span class="comment"># 遍历键</span></span><br><span class="line">    <span class="built_in">print</span>(key,dict1[key])</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> dict1.values():  <span class="comment"># 遍历值</span></span><br><span class="line">    <span class="built_in">print</span>(value)</span><br><span class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> dict1.items():  <span class="comment"># 遍历键值对</span></span><br><span class="line">    <span class="built_in">print</span>(key,value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他常用操作</span></span><br><span class="line"><span class="built_in">len</span>(dict1)  <span class="comment"># 返回字典中键值对的数量</span></span><br><span class="line"><span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> dict1  <span class="comment"># 检查键是否存在</span></span><br><span class="line"><span class="built_in">list</span>(dict1.keys())  <span class="comment"># 获取所有键的列表</span></span><br><span class="line"><span class="built_in">list</span>(dict1.values())  <span class="comment"># 获取所有值的列表</span></span><br><span class="line"><span class="built_in">list</span>(dict1.items())  <span class="comment"># 获取所有键值对的列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字典复制</span></span><br><span class="line">dict_copy = dict1.copy()  <span class="comment"># 浅复制</span></span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line">deep_copy = copy.deepcopy(dict1)  <span class="comment"># 深复制</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字典合并（Python 3.9+）</span></span><br><span class="line">merged_dict = dict1 | dict2  <span class="comment"># 使用 | 运算符合并两个字典</span></span><br><span class="line">dict1 |= dict2  <span class="comment"># 原地合并（更新 dict1）</span></span><br></pre></td></tr></table></figure>

<h1 id="推导式"><a href="#推导式" class="headerlink" title="推导式"></a>推导式</h1><p>输⼊源： range list tuple set dict<br>输出源： list tuple set dict<br>推导式格式为：表达式 for 变量 in 输⼊源 if 条件<br>推导式格式为：表达式 for 变量 in 输⼊源 if 条件 for 变量 in 输⼊源 if 条件</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 给定一个列表,将每一位数字变成它的平方 </span></span><br><span class="line"><span class="comment"># alist = [1, 2, 3, 4, 5, 6, 7] </span></span><br><span class="line"><span class="comment"># 输出结果：[1, 4, 9, 16, 25, 36, 49] </span></span><br><span class="line">alist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>] </span><br><span class="line"><span class="built_in">print</span>([i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> alist]) </span><br><span class="line"><span class="built_in">print</span>([i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> alist <span class="keyword">if</span> i+<span class="number">2</span>&gt;<span class="number">5</span>]) </span><br><span class="line"><span class="built_in">print</span>(&#123;i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> alist&#125;) </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>((i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> alist))) </span><br><span class="line"><span class="built_in">print</span>(&#123;i**<span class="number">2</span>:<span class="string">f&quot;test<span class="subst">&#123;i&#125;</span>&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> alist&#125;) </span><br><span class="line"><span class="comment">#推导 30 以内可以被 3 整除的整数为列表： </span></span><br><span class="line"><span class="built_in">print</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>) <span class="keyword">if</span> i % <span class="number">3</span> == <span class="number">0</span>])</span><br></pre></td></tr></table></figure>

<h2 id="数据源使用字典"><a href="#数据源使用字典" class="headerlink" title="数据源使用字典"></a>数据源使用字典</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">d1=&#123;<span class="string">&quot;张三&quot;</span>:<span class="number">20</span>,<span class="string">&quot;李四&quot;</span>:<span class="number">30</span>,<span class="string">&quot;王五&quot;</span>:<span class="number">40</span>&#125; </span><br><span class="line"><span class="comment"># 推导列表 </span></span><br><span class="line"><span class="built_in">print</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> d1.values()]) </span><br><span class="line"><span class="comment"># 推导字典 </span></span><br><span class="line"><span class="built_in">print</span>(&#123;i:i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> d1.values() <span class="keyword">if</span> i&gt;<span class="number">20</span>&#125;) </span><br><span class="line"><span class="comment"># 推导集合 </span></span><br><span class="line"><span class="built_in">print</span>(&#123;i <span class="keyword">for</span> i <span class="keyword">in</span> d1.values() <span class="keyword">if</span> i&gt;<span class="number">20</span>&#125;) </span><br><span class="line"><span class="comment"># 推导元组 </span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>((i <span class="keyword">for</span> i <span class="keyword">in</span> d1.values() <span class="keyword">if</span> i&gt;<span class="number">20</span>))) </span><br><span class="line"><span class="comment"># 二重循环 提取数字为列表[45,67,45,34,65,78] </span></span><br><span class="line">l1=[[<span class="number">45</span>,<span class="number">67</span>,<span class="number">45</span>,<span class="string">&quot;hhh&quot;</span>],[<span class="number">34</span>,<span class="number">65</span>,<span class="number">78</span>,<span class="string">&quot;test&quot;</span>]] </span><br><span class="line"><span class="built_in">print</span>([j <span class="keyword">for</span> i <span class="keyword">in</span> l1 <span class="keyword">for</span> j <span class="keyword">in</span> i <span class="keyword">if</span> <span class="built_in">type</span>(j)==<span class="built_in">int</span>])</span><br></pre></td></tr></table></figure>
<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1. 获取字典中的值：获取下列字典键为 &#x27;history&#x27; 的值 </span></span><br><span class="line">sampleDict = &#123;<span class="string">&quot;class&quot;</span>:&#123;<span class="string">&quot;student&quot;</span>:&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;Mike&quot;</span>,<span class="string">&quot;marks&quot;</span>:&#123;<span class="string">&quot;physics&quot;</span>:<span class="number">70</span>,<span class="string">&quot;history&quot;</span>:<span class="number">80</span>&#125;&#125;&#125;&#125; </span><br><span class="line"><span class="built_in">print</span>(sampleDict[<span class="string">&quot;class&quot;</span>][<span class="string">&quot;student&quot;</span>][<span class="string">&quot;marks&quot;</span>][<span class="string">&quot;history&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.请将元组 v1 = (11,22,33) 中的所有元素追加到列表 v2 = [44,55,66] 中 </span></span><br><span class="line">v1 = (<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>)</span><br><span class="line">v2 = [<span class="number">44</span>,<span class="number">55</span>,<span class="number">66</span>]</span><br><span class="line"><span class="comment"># v2=v2+list(v1)</span></span><br><span class="line">v2+=v1</span><br><span class="line"><span class="built_in">print</span>(v2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.已知列表： </span></span><br><span class="line">list1 = [<span class="string">&#x27;life&#x27;</span>,<span class="string">&#x27;is&#x27;</span>,<span class="string">&#x27;short&#x27;</span>] </span><br><span class="line">list2 = [<span class="string">&#x27;you&#x27;</span>,<span class="string">&#x27;need&#x27;</span>,<span class="string">&#x27;python&#x27;</span>] </span><br><span class="line">list3 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>] </span><br><span class="line"><span class="comment">#完成以下操作： </span></span><br><span class="line"><span class="comment"># （1）把上述三个列表构造为⼀个集合 set1 </span></span><br><span class="line">set1 = <span class="built_in">set</span>(list1+list2+list3)</span><br><span class="line"><span class="built_in">print</span>(set1)</span><br><span class="line"><span class="comment"># （2）输出集合的⻓度 </span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(set1))</span><br><span class="line"><span class="comment"># （3）把 python 从集合中移除</span></span><br><span class="line">set1.remove(<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(set1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.已知列表 </span></span><br><span class="line">li = [<span class="number">11</span>,<span class="number">22</span>,<span class="number">100</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">66</span>,<span class="number">55</span>,<span class="number">77</span>,<span class="number">88</span>,<span class="number">99</span>,<span class="number">90</span>]</span><br><span class="line"><span class="comment"># 将所有⼤于66的值保存⾄字典的第⼀个key对应的列表中，将⼩于66的值保存⾄第⼆个key对应的列表中。 </span></span><br><span class="line">d1 = &#123;<span class="string">&#x27;key1&#x27;</span>:[],<span class="string">&#x27;key2&#x27;</span>:[]&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> li:</span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">66</span> :</span><br><span class="line">        d1[<span class="string">&#x27;key1&#x27;</span>].append(i)</span><br><span class="line">    <span class="keyword">elif</span> i &lt; <span class="number">66</span> :</span><br><span class="line">        d1[<span class="string">&#x27;key2&#x27;</span>].append(i)</span><br><span class="line"><span class="built_in">print</span>(d1)</span><br><span class="line"><span class="comment"># 输出结果： &#123;&#x27;key1&#x27;:[100,77,88,99,90],&#x27;key2&#x27;:[11,22,33,44,55]&#125; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.已知列表 </span></span><br><span class="line">list1 = [<span class="number">11</span>,<span class="number">22</span>,<span class="number">11</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span>,<span class="number">66</span>,<span class="number">55</span>,<span class="number">66</span>] </span><br><span class="line"><span class="comment">#统计列表中每个元素出现的次数，⽣成⼀个字典 输出结果： &#123;11:2,22:1.....&#125; 注：顺序不要求 </span></span><br><span class="line">d1 = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list1:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> d1:</span><br><span class="line">        d1[i]=<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        d1[i]+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(d1) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.已知字典 </span></span><br><span class="line">d1=&#123;<span class="string">&quot;subjects&quot;</span>:[&#123;<span class="string">&quot;rate&quot;</span>:<span class="string">&quot;7.4&quot;</span>,<span class="string">&quot;cover_x&quot;</span>:<span class="number">640</span>&#125;,&#123;<span class="string">&quot;rate&quot;</span>:<span class="string">&quot;6.0&quot;</span>,<span class="string">&quot;cover_x&quot;</span>:<span class="number">1080</span>&#125;]&#125; </span><br><span class="line"><span class="comment"># 处理显⽰成如下格式输出： 7.4 640 6.0 1080</span></span><br><span class="line">l1=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d1.values():</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> i:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> j.values():</span><br><span class="line">            l1.append(k)</span><br><span class="line"><span class="built_in">print</span>(*l1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.已知如下数据 </span></span><br><span class="line">d1 = &#123; <span class="string">&#x27;192.168.1.1&#x27;</span>:&#123;<span class="string">&#x27;cpu&#x27;</span>:<span class="string">&#x27;0.23&#x27;</span>,<span class="string">&#x27;内存&#x27;</span>:<span class="string">&#x27;16&#x27;</span>,<span class="string">&#x27;硬盘&#x27;</span>:<span class="string">&#x27;500&#x27;</span>&#125;,</span><br><span class="line">       <span class="string">&#x27;192.168.1.2&#x27;</span>:&#123;<span class="string">&#x27;cpu&#x27;</span>:<span class="string">&#x27;3.22&#x27;</span>,<span class="string">&#x27;内存&#x27;</span>:<span class="string">&#x27;64&#x27;</span>,<span class="string">&#x27;硬盘&#x27;</span>:<span class="string">&#x27;700&#x27;</span>&#125;,</span><br><span class="line">       <span class="string">&#x27;192.168.1.3&#x27;</span>:&#123;<span class="string">&#x27;cpu&#x27;</span>:<span class="string">&#x27;1.99&#x27;</span>,<span class="string">&#x27;内存&#x27;</span>:<span class="string">&#x27;32&#x27;</span>,<span class="string">&#x27;硬盘&#x27;</span>:<span class="string">&#x27;800&#x27;</span>&#125; &#125; </span><br><span class="line"><span class="comment">#处理显⽰成如下格式输出： </span></span><br><span class="line"><span class="comment"># 192.168.1.1: cpu 0.23 内存 16 硬盘 500 </span></span><br><span class="line"><span class="comment"># 192.168.1.2: cpu 3.22 内存 64 硬盘 700 </span></span><br><span class="line"><span class="comment"># 192.168.1.3: cpu 1.99 内存 32 硬盘 800 </span></span><br><span class="line"><span class="keyword">for</span> i,j <span class="keyword">in</span> d1.items():</span><br><span class="line">    str1=<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>: &quot;</span></span><br><span class="line">    <span class="keyword">for</span> n,m <span class="keyword">in</span> j.items():</span><br><span class="line">        str1+=<span class="string">f&quot;<span class="subst">&#123;n&#125;</span> <span class="subst">&#123;m&#125;</span>&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(str1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.有字符串 &quot;k: 1|k1:2|k2:3 |k3 :4&quot; 处理成字典 &#123;&#x27;k&#x27;:1,&#x27;k1&#x27;:2,&#x27;k3&#x27;:4&#125; </span></span><br><span class="line"><span class="comment"># 注：字符串替换使⽤ replace 函数</span></span><br><span class="line">str1 = <span class="string">&quot;k: 1|k1:2|k2:3 |k3 :4&quot;</span></span><br><span class="line">str1 = str1.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">list1 = str1.split(<span class="string">&quot;|&quot;</span>)</span><br><span class="line">dict1 = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list1:</span><br><span class="line">    key,value = i.split(<span class="string">&quot;:&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> key != <span class="string">&quot;k2&quot;</span>:</span><br><span class="line">        dict1[key] = <span class="built_in">int</span>(value)</span><br><span class="line"><span class="built_in">print</span>(dict1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上机练习4</span></span><br><span class="line"><span class="comment"># 1.⽣成⼀个存放 1-100 之间个位数为 3 的数据列表</span></span><br><span class="line"><span class="built_in">print</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>) <span class="keyword">if</span> (i)%<span class="number">10</span>==<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.利⽤列表推导式将已知列表中的整数提取出来 [17, 98, 34, 21] </span></span><br><span class="line">list_two = [<span class="literal">True</span>, <span class="number">17</span>, <span class="string">&quot;hello&quot;</span>, <span class="string">&quot;bye&quot;</span>, <span class="number">98</span>, <span class="number">34</span>, <span class="number">21</span>] </span><br><span class="line"><span class="built_in">print</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> list_two <span class="keyword">if</span> <span class="built_in">type</span>(i)==<span class="built_in">int</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.根据列表利⽤推导式存放指定列表中 字符串的⻓度如下 </span></span><br><span class="line"><span class="comment"># &#123;&#x27;good&#x27;:4, &#x27;nice&#x27;:4, &#x27;see you&#x27;:7, &#x27;bye&#x27;:3&#125; </span></span><br><span class="line">list_three=[<span class="string">&quot;good&quot;</span>, <span class="string">&quot;nice&quot;</span>, <span class="string">&quot;see you&quot;</span>, <span class="string">&quot;bye&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(&#123;i:<span class="built_in">len</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> list_three&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.⽣成⼀个列表，其中的元素为 &#x27;0-1&#x27;，&#x27;1-2&#x27;，&#x27;2-3&#x27;，&#x27;3-4&#x27;，&#x27;4-5&#x27; </span></span><br><span class="line"><span class="built_in">print</span>([<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>-<span class="subst">&#123;i+<span class="number">1</span>&#125;</span>&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.已知数据 </span></span><br><span class="line">t1=((<span class="number">1</span>,<span class="number">100</span>),(<span class="number">2</span>,<span class="number">30</span>),(<span class="number">3</span>,<span class="number">80</span>),(<span class="number">4</span>,<span class="number">234</span>)) </span><br><span class="line"><span class="comment"># 推导成列表 [100,30,80,234] </span></span><br><span class="line"><span class="built_in">print</span>([i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> t1])</span><br><span class="line"><span class="comment"># 推导成字典 &#123;1: 100, 2: 30, 3: 80, 4: 234&#125; </span></span><br><span class="line"><span class="built_in">print</span>(&#123;i[<span class="number">0</span>]:i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> t1&#125;)</span><br><span class="line"><span class="comment"># 推导成列表 [&#123;&#x27;name&#x27;:1, &#x27;value&#x27;:100&#125;,&#123;&#x27;name&#x27;:2,&#x27;value&#x27;:30&#125;,&#123;&#x27;name&#x27;:3,&#x27;value&#x27;:80&#125;,&#123;&#x27;name&#x27;:4,&#x27;value&#x27;:234&#125;]</span></span><br><span class="line"><span class="built_in">print</span>([&#123;<span class="string">&#x27;name&#x27;</span>:i[<span class="number">0</span>],<span class="string">&#x27;value&#x27;</span>:i[<span class="number">1</span>]&#125; <span class="keyword">for</span> i <span class="keyword">in</span> t1])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.已知如下列表 students ，在列表中保存了 6 个学⽣的信息，根据要求完成下⾯的题⽬ </span></span><br><span class="line">students = [ </span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;⼩花&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">19</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">90</span>,<span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;⼥&#x27;</span>,<span class="string">&#x27;tel&#x27;</span>:<span class="string">&#x27;15300022839&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;明明&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">20</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">40</span>,<span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;tel&#x27;</span>:<span class="string">&#x27;15300022838&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;华仔&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">18</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">100</span>,<span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;⼥&#x27;</span>,<span class="string">&#x27;tel&#x27;</span>:<span class="string">&#x27;15300022839&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;静静&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">16</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">90</span>,<span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;不明&#x27;</span>,<span class="string">&#x27;tel&#x27;</span>:<span class="string">&#x27;15300022428&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">17</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">59</span>,<span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;不明&#x27;</span>,<span class="string">&#x27;tel&#x27;</span>:<span class="string">&#x27;15300022839&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;Bob&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="number">18</span>,<span class="string">&#x27;score&#x27;</span>:<span class="number">90</span>,<span class="string">&#x27;gender&#x27;</span>:<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;tel&#x27;</span>:<span class="string">&#x27;15300022839&#x27;</span>&#125; ] </span><br><span class="line"></span><br><span class="line"><span class="comment">#打印学⽣分数列表 </span></span><br><span class="line"><span class="built_in">print</span>([i[<span class="string">&#x27;score&#x27;</span>] <span class="keyword">for</span> i <span class="keyword">in</span> students])</span><br><span class="line"><span class="comment">#打印⼿机尾号是 8 的学⽣的名字列表 </span></span><br><span class="line"><span class="built_in">print</span>([i[<span class="string">&#x27;name&#x27;</span>] <span class="keyword">for</span> i <span class="keyword">in</span> students <span class="keyword">if</span> i[<span class="string">&#x27;tel&#x27;</span>][-<span class="number">1</span>]==<span class="string">&#x27;8&#x27;</span>])</span><br><span class="line"><span class="comment">#打印不及格的同学的所有信息列表，效果如下： </span></span><br><span class="line"><span class="built_in">print</span>([j <span class="keyword">for</span> i <span class="keyword">in</span> students <span class="keyword">if</span> i[<span class="string">&#x27;score&#x27;</span>]&lt;<span class="number">60</span> <span class="keyword">for</span> j <span class="keyword">in</span> i.values()])</span><br><span class="line"><span class="comment">#[&#x27;明明&#x27;,20,40,&#x27;男&#x27;,&#x27;15300022838&#x27;,&#x27;Tom&#x27;,17,59,&#x27;不明&#x27;,&#x27;15300022839&#x27;]</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>5.30总结：函数</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5Python/5.30%E6%80%BB%E7%BB%93%EF%BC%9A%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="命名法"><a href="#命名法" class="headerlink" title="命名法"></a>命名法</h1><p>驼峰命名法：首字母小写，后面的首字母大写  helloWorld<br>帕斯卡命名法：每个首字母都大写（常用于类名）  HelloWorld<br>系统命名法：单词都小写，以下划线_划分  hello_world </p>
<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>函数代码块以  def  关键词开头 return [ 表达式 ]  结束函数并返回⼀个或多个值给调⽤⽅，不带表达式的 return 相 当于返回 None ，多个值为元组</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 声明 </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sayHello</span>(): </span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;你好&quot;</span>) </span><br><span class="line"><span class="comment"># 调用 </span></span><br><span class="line">	sayHello()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据两个数求和 </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSum</span>(<span class="params">n1,n2=<span class="number">18</span></span>): <span class="comment"># n2设置默认值，有默认值的参数必须写在最后</span></span><br><span class="line">	he=n1+n2 </span><br><span class="line">	<span class="keyword">return</span> he </span><br><span class="line">	</span><br><span class="line">res=getSum(<span class="number">5</span>,<span class="number">3</span>) </span><br><span class="line">res=getSum(<span class="number">5</span>) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;结果是：<span class="subst">&#123;result&#125;</span>&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据两个数求和和差和积 </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getJiSuan</span>(<span class="params">n1,n2</span>): </span><br><span class="line">	he=n1+n2 </span><br><span class="line">	cha=n1-n2 </span><br><span class="line">	ji=n1*n2 </span><br><span class="line">	<span class="keyword">return</span> he,cha,ji  <span class="comment">#可以返回多个结果，用逗号隔开，以元组形式输出</span></span><br><span class="line">	</span><br><span class="line">res=getJiSuan(<span class="number">5</span>,<span class="number">2</span>) </span><br><span class="line"><span class="built_in">print</span>(res) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;和是：<span class="subst">&#123;res[<span class="number">0</span>]&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="不定长参数"><a href="#不定长参数" class="headerlink" title="不定长参数"></a>不定长参数</h2><p>加了星号  *  的参数会以元组 (tuple) 的形式导⼊，存放所有未命名的变量参数。加了两个 星号  **  的参数会以字典的形式导⼊</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getNumTuple</span>(<span class="params">n1,*n</span>): </span><br><span class="line">	<span class="built_in">print</span>(n1) </span><br><span class="line">	<span class="built_in">print</span>(n) </span><br><span class="line">getNumTuple(<span class="number">8</span>,<span class="number">9</span>,<span class="number">90</span>,<span class="number">100</span>,<span class="string">&quot;hello&quot;</span>,<span class="literal">True</span>,<span class="number">3.5</span>) </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getNumDict</span>(<span class="params">n1,**n</span>): </span><br><span class="line">	<span class="built_in">print</span>(n1) </span><br><span class="line">	<span class="built_in">print</span>(n) </span><br><span class="line">	</span><br><span class="line">getNumDict(<span class="number">8</span>,age=<span class="number">40</span>,name=<span class="string">&quot;周杰伦&quot;</span>)</span><br></pre></td></tr></table></figure>

<h1 id="值传递与引用传递"><a href="#值传递与引用传递" class="headerlink" title="值传递与引用传递"></a>值传递与引用传递</h1><p>值传递：传递的是数值，适⽤于实参类型为不可变类型（int,float,bool,str,tuple）<br>引⽤传递：传递的是地址，适⽤于实参类型为可变类型（list,set,dict,class）</p>
<h1 id="main函数"><a href="#main函数" class="headerlink" title="main函数"></a>main函数</h1><p>一个规范的代码项目结构如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局变量</span></span><br><span class="line">n=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun1</span>():</span><br><span class="line">	<span class="keyword">global</span> n  <span class="comment">#函数中修改全局变量需要使用global声明</span></span><br><span class="line">	n += <span class="number">1</span></span><br><span class="line">	<span class="built_in">print</span>(n)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;欢迎&quot;</span>)</span><br><span class="line">	fun1()</span><br><span class="line">	</span><br><span class="line"><span class="comment"># 入口</span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>: </span><br><span class="line">	main()</span><br></pre></td></tr></table></figure>

<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.写函数 , 输⼊⼀个数字，传递到函数中，输出从 1 到此数 </span></span><br><span class="line">num=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;输入一个数字：&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func1</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">func1(num)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.写函数 , 接收 n 个数字 , 返回这些数字的和、最⼩值、最⼤值 </span></span><br><span class="line">num=<span class="built_in">input</span>(<span class="string">&quot;输入任意个数字(以空格隔开):&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func2</span>(<span class="params">num</span>):</span><br><span class="line">    lst = [<span class="built_in">float</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> str1.split()]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(lst),<span class="built_in">min</span>(lst),<span class="built_in">max</span>(lst)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(*func2(num))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.写函数，接收⼀个不定⻓参数，为多个字符串，判断每个字符串的⻓度是否为⼤于 5 ，如： isLen5(&quot;hello&quot;,&quot;worldd&quot;,&quot;test&quot;) 返回 [False,True,False] 注：使⽤推导式 </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isLen5</span>(<span class="params">*s</span>):</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">len</span>(s)&gt;<span class="number">5</span> <span class="keyword">for</span> i <span class="keyword">in</span> s]</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(isLen5(<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;worldd&quot;</span>,<span class="string">&quot;test&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.写函数，传⼊两个列表参数 , 返回⼀个扑克牌列表 , ⾥⾯有52项,每⼀项都是⼀个 tuple  </span></span><br><span class="line"><span class="comment"># 结果输出如 :[(&#x27;红⼼&#x27;,&#x27;A&#x27;),(&#x27;梅花&#x27;,&#x27;A&#x27;)…(&#x27;⿊桃&#x27;,&#x27;k&#x27;)] </span></span><br><span class="line"><span class="comment"># 注：使⽤推导式</span></span><br><span class="line">list1=[<span class="string">&quot;红⼼&quot;</span>,<span class="string">&quot;梅花&quot;</span>,<span class="string">&quot;⽅块&quot;</span>,<span class="string">&quot;⿊桃&quot;</span>]</span><br><span class="line">list2=[<span class="string">&quot;A&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>,<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;7&quot;</span>,<span class="string">&quot;8&quot;</span>,<span class="string">&quot;9&quot;</span>,<span class="string">&quot;10&quot;</span>,<span class="string">&quot;j&quot;</span>,<span class="string">&quot;q&quot;</span>,<span class="string">&quot;k&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func4</span>(<span class="params">l1,l2</span>):</span><br><span class="line">    <span class="keyword">return</span> [(j,i) <span class="keyword">for</span> i <span class="keyword">in</span> l2 <span class="keyword">for</span> j <span class="keyword">in</span> l1]</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(func4(list1,list2))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.编写printstar(x)函数，(x是⼤于1的奇数数字)，忽略边框</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printstar</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="comment"># 上半</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(x//<span class="number">2</span>, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;* &quot;</span>*i + <span class="string">&quot;  &quot;</span>*(x-<span class="number">2</span>*i) + <span class="string">&quot;* &quot;</span>*i)</span><br><span class="line">    <span class="comment"># 中间</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;  &#x27;</span>*x)</span><br><span class="line">    <span class="comment"># 下半</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, x//<span class="number">2</span> + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;* &quot;</span>*i + <span class="string">&quot;  &quot;</span>*(x-<span class="number">2</span>*i) + <span class="string">&quot;* &quot;</span>*i)</span><br><span class="line">        </span><br><span class="line">x=<span class="built_in">input</span>(<span class="string">&quot;请输入一个大于1的奇数数字:&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> x.isdigit() <span class="keyword">and</span> <span class="built_in">int</span>(x)&gt;<span class="number">1</span> <span class="keyword">and</span> <span class="built_in">int</span>(x)%<span class="number">2</span>==<span class="number">1</span> :</span><br><span class="line">    x=<span class="built_in">int</span>(x)</span><br><span class="line">    printstar(x)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;输入不合法！&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩展题：输入s1和s2两个字符串，用于判断s1是否是s2经过删除一些（也可以不删除）字符而不改变剩余字符相对位置形成的新字符串。  </span></span><br><span class="line"><span class="comment"># 3.输入s1和s2两个字符串，用于判断s1是否是s2经过删除一些（也可以不删除）字符而不改变剩余字符相对位置形成的新字符串。  </span></span><br><span class="line">str3=<span class="built_in">input</span>(<span class="string">&quot;请输入两个字符串（以空格隔开）：&quot;</span>)</span><br><span class="line">str1,str2=str3.split()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sCheck</span>(<span class="params">s1,s2</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s1:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> s2:</span><br><span class="line">            <span class="keyword">if</span> i == j :</span><br><span class="line">                <span class="keyword">if</span> i == s1[-<span class="number">1</span>]:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">                s2=<span class="string">&quot;&quot;</span>.join(s2.split(j,<span class="number">1</span>)[<span class="number">1</span>:])</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="built_in">print</span>(sCheck(str1,str2))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ATM机</span></span><br><span class="line">data=[&#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;1001&#x27;</span>,<span class="string">&#x27;passwd&#x27;</span>:<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;bat&#x27;</span>:<span class="string">&#x27;1000&#x27;</span>&#125;,</span><br><span class="line"> &#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;1002&#x27;</span>,<span class="string">&#x27;passwd&#x27;</span>:<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;bat&#x27;</span>:<span class="string">&#x27;2000&#x27;</span>&#125;,</span><br><span class="line"> &#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;1003&#x27;</span>,<span class="string">&#x27;passwd&#x27;</span>:<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;bat&#x27;</span>:<span class="string">&#x27;3000&#x27;</span>&#125;,</span><br><span class="line"> &#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;1004&#x27;</span>,<span class="string">&#x27;passwd&#x27;</span>:<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;bat&#x27;</span>:<span class="string">&#x27;4000&#x27;</span>&#125;]</span><br><span class="line">userdata=&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CaoZuoYeMian</span>():</span><br><span class="line">    menu=<span class="string">&quot;&quot;&quot;----------操作⻚⾯----------</span></span><br><span class="line"><span class="string">1.存款</span></span><br><span class="line"><span class="string">2.取款</span></span><br><span class="line"><span class="string">3.查询余额</span></span><br><span class="line"><span class="string">4.转账</span></span><br><span class="line"><span class="string">5.退出</span></span><br><span class="line"><span class="string">----------------------------&quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(menu)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        ctrl = <span class="built_in">input</span>(<span class="string">&quot;请输入操作选项:&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> ctrl == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            CunKuan()</span><br><span class="line">        <span class="keyword">elif</span> ctrl == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            QuKuan()</span><br><span class="line">        <span class="keyword">elif</span> ctrl == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            ChaXun()</span><br><span class="line">        <span class="keyword">elif</span> ctrl == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            ZhuanZhang()</span><br><span class="line">        <span class="keyword">elif</span> ctrl == <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">            TuiChu()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;无效的操作选项，请重新输入！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CunKuan</span>():</span><br><span class="line">    <span class="keyword">global</span> userdata</span><br><span class="line">    money=<span class="built_in">input</span>(<span class="string">&quot;请输入存款金额:&quot;</span>)</span><br><span class="line">    money=checkMoney(money)</span><br><span class="line">    userdata[<span class="string">&quot;bat&quot;</span>]=<span class="built_in">str</span>(<span class="built_in">float</span>(userdata[<span class="string">&quot;bat&quot;</span>])+money)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;您已成功存款<span class="subst">&#123;money&#125;</span>，您当前的余额为：<span class="subst">&#123;userdata[<span class="string">&#x27;bat&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">    inputToReturn()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">QuKuan</span>():</span><br><span class="line">    <span class="keyword">global</span> userdata</span><br><span class="line">    money=<span class="built_in">input</span>(<span class="string">&quot;请输入取款金额:&quot;</span>)</span><br><span class="line">    money=checkMoney(money)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">float</span>(userdata[<span class="string">&quot;bat&quot;</span>]) &gt;= money:</span><br><span class="line">        userdata[<span class="string">&quot;bat&quot;</span>]=<span class="built_in">str</span>(<span class="built_in">float</span>(userdata[<span class="string">&quot;bat&quot;</span>])-money)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;您已成功取款<span class="subst">&#123;money&#125;</span>，您当前的余额为：<span class="subst">&#123;userdata[<span class="string">&#x27;bat&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">        inputToReturn()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;您的余额不足！&quot;</span>)</span><br><span class="line">        inputToReturn()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ChaXun</span>():</span><br><span class="line">    <span class="keyword">global</span> userdata</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;您当前的余额为：<span class="subst">&#123;userdata[<span class="string">&#x27;bat&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">    inputToReturn()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ZhuanZhang</span>():</span><br><span class="line">    <span class="keyword">global</span> userdata</span><br><span class="line">    skzh=<span class="built_in">input</span>(<span class="string">&quot;请输入收款账号:&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> skzh==userdata[<span class="string">&#x27;id&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;收款账号不能是自己！&quot;</span>)</span><br><span class="line">        inputToReturn()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">if</span> i[<span class="string">&#x27;id&#x27;</span>]==skzh:</span><br><span class="line">            money=<span class="built_in">input</span>(<span class="string">&quot;请输入转帐金额：&quot;</span>)</span><br><span class="line">            money=checkMoney(money)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">float</span>(userdata[<span class="string">&quot;bat&quot;</span>]) &gt; money:</span><br><span class="line">                userdata[<span class="string">&quot;bat&quot;</span>]=<span class="built_in">str</span>(<span class="built_in">float</span>(userdata[<span class="string">&quot;bat&quot;</span>])-money)</span><br><span class="line">                <span class="comment"># i[&quot;bat&quot;]=str(float(i[&quot;bat&quot;])+money)</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;您已成功转帐<span class="subst">&#123;money&#125;</span>，您当前的余额为：<span class="subst">&#123;userdata[<span class="string">&#x27;bat&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">                inputToReturn()</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;您的余额不足！&quot;</span>)</span><br><span class="line">                inputToReturn()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;收款账号不存在！&quot;</span>)</span><br><span class="line">    inputToReturn()</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">TuiChu</span>():</span><br><span class="line">    <span class="keyword">global</span> userdata</span><br><span class="line">    esc=<span class="built_in">input</span>(<span class="string">&quot;请问是否退出? y/n:&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> esc.lower() == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> esc.lower() == <span class="string">&#x27;yes&#x27;</span>:</span><br><span class="line">        <span class="comment"># for i in data:</span></span><br><span class="line">        <span class="comment">#     if i[&#x27;id&#x27;]==userdata[&#x27;id&#x27;]:</span></span><br><span class="line">        <span class="comment">#         i=userdata</span></span><br><span class="line">        <span class="comment">#         break</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;已成功退出，请取回您的银行卡&quot;</span>)</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        CaoZuoYeMian()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">checkMoney</span>(<span class="params">m</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        m=<span class="built_in">float</span>(m)</span><br><span class="line">        <span class="keyword">if</span> m &lt;=<span class="number">0</span> :</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;金额必须大于0!&quot;</span>)</span><br><span class="line">            inputToReturn()</span><br><span class="line">        <span class="keyword">return</span> m</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;输入不合法！&quot;</span>)</span><br><span class="line">        inputToReturn()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">inputToReturn</span>():</span><br><span class="line">    <span class="built_in">input</span>(<span class="string">&quot;输入任意键返回主菜单..&quot;</span>)</span><br><span class="line">    CaoZuoYeMian()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">global</span> userdata</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;----------欢迎使用ATM机----------&quot;</span>)</span><br><span class="line">        userid=<span class="built_in">input</span>(<span class="string">&quot;请输入账号:&quot;</span>)</span><br><span class="line">        pwd=<span class="built_in">input</span>(<span class="string">&quot;请输入密码:&quot;</span>)</span><br><span class="line">        isLogin=<span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">            <span class="keyword">if</span> i[<span class="string">&#x27;id&#x27;</span>]==userid <span class="keyword">and</span> i[<span class="string">&#x27;passwd&#x27;</span>]==pwd:</span><br><span class="line">                isLogin=<span class="literal">True</span></span><br><span class="line">                userdata=i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> isLogin==<span class="literal">True</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;登录成功，请进⾏下列操作：&quot;</span>)</span><br><span class="line">            CaoZuoYeMian()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;账号或密码错误！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2025/06/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5Python/6.11%20%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<p>在实习期间，我参与开发了智慧天气数据分析系统。系统面向气象研究人员、环保部门和公众用户，实现了多源气象数据采集、历史数据分析和气象灾害预警功能。</p>
<p>项目采用Python+Flask+MySQL+Nginx架构，前端使用HTML+CSS+JavaScript构建响应式界面，后端通过Flask处理API请求和业务逻辑，MySQL存储气象历史数据和分析结果，并且引入了机器学习算法（随机森林和支持向量机）优化气象预测准确率。</p>
<p>我负责的模块包括：数据采集和数据清理、基于机器学习的气象预测算法、结合历史数据的气象灾害预警模型、ECharts可视化仪表盘（包含温度变化曲线、降水统计图和分布热力图）、系统部署采用Docker容器化技术，通过Nginx实现负载均衡和静态资源分发。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2025/06/10/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5Python/6.10%E6%80%BB%E7%BB%93%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%81%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>6.3总结：文件读写、封装、继承、多态</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5Python/6.3%E6%80%BB%E7%BB%93%EF%BC%9A%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E3%80%81%E5%B0%81%E8%A3%85%E3%80%81%E7%BB%A7%E6%89%BF%E3%80%81%E5%A4%9A%E6%80%81/</url>
    <content><![CDATA[<h1 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h1><h2 id="文本文件写"><a href="#文本文件写" class="headerlink" title="文本文件写"></a>文本文件写</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 写文件时若路径没有该文件会新建文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;D:\\wtest.txt&quot;</span>, mode=<span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f : </span><br><span class="line">	f.write(<span class="string">&quot;ccccccccccccccc\n&quot;</span>)  <span class="comment">#不会自动换行，需要自行加\n换行</span></span><br><span class="line">	f.write(<span class="string">&quot;ccccccccccccccc\n&quot;</span>) </span><br><span class="line"><span class="comment"># with语句会自动管理文件的生命周期，在代码块结束后自动关闭文件，无需手动调用f.close()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果直接通过open()打开文件且不使用with语句，必须手动调用f.close()关闭文件</span></span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">&quot;file.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) </span><br><span class="line">f.write(<span class="string">&quot;Hello, World!&quot;</span>) </span><br><span class="line">f.close() <span class="comment"># 必须手动关闭</span></span><br></pre></td></tr></table></figure>
<h2 id="文本文件读"><a href="#文本文件读" class="headerlink" title="文本文件读"></a>文本文件读</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/test.txt&quot;</span>, mode=<span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f: </span><br><span class="line">	res1 = f.read()  <span class="comment">#将文件的全部内容读取为一个字符串</span></span><br><span class="line">	res2 = f.readlines()  <span class="comment">#每行作为一个元素返回列表</span></span><br><span class="line">	<span class="built_in">print</span>(res1) </span><br></pre></td></tr></table></figure>

<p><code>mode</code><br>w 覆盖写<br>a 追加写<br>r 读</p>
<h1 id="python-库"><a href="#python-库" class="headerlink" title="python 库"></a>python 库</h1><p>标准库，扩展库，自定义库<br>⽤  import  或者  from … import  来导⼊相应的库</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> csv  <span class="comment"># 导入CSV处理模块，用于读写CSV格式文件</span></span><br><span class="line"></span><br><span class="line">data = [&#123;<span class="string">&quot;id&quot;</span>: <span class="number">1</span>, <span class="string">&quot;passwd&quot;</span>: <span class="string">&quot;123456&quot;</span>, <span class="string">&quot;bat&quot;</span>: <span class="number">1000</span>&#125;,  <span class="comment"># 示例数据：包含两个用户信息的字典列表</span></span><br><span class="line">        &#123;<span class="string">&quot;id&quot;</span>: <span class="number">2</span>, <span class="string">&quot;passwd&quot;</span>: <span class="string">&quot;abcdef&quot;</span>, <span class="string">&quot;bat&quot;</span>: <span class="number">2000</span>&#125;]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入CSV文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/user.csv&quot;</span>, mode=<span class="string">&quot;w&quot;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="comment"># 创建DictWriter对象，指定表头字段顺序</span></span><br><span class="line">    writer = csv.DictWriter(f, fieldnames=[<span class="string">&quot;id&quot;</span>, <span class="string">&quot;passwd&quot;</span>, <span class="string">&quot;bat&quot;</span>])</span><br><span class="line">    writer.writeheader()  <span class="comment"># 写入表头行（id,passwd,bat）</span></span><br><span class="line">    writer.writerows(data)  <span class="comment"># 将data中的所有字典按表头格式写入文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取CSV文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/user.csv&quot;</span>, mode=<span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    reader = csv.DictReader(f)  <span class="comment"># 创建DictReader对象，自动将首行作为表头</span></span><br><span class="line">    <span class="comment"># 因为文件是字典列表的格式，因此需要遍历文件中的每一行以取出其中的每一个字典</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> reader:  </span><br><span class="line">        <span class="built_in">print</span>(i)  <span class="comment"># 输出每一个字典,可通过键名访问字段值：i[&#x27;id&#x27;] 返回 &#x27;1&#x27;</span></span><br><span class="line">        data.append(i)  <span class="comment"># 将字典逐个添加到列表中给之后使用</span></span><br><span class="line">        <span class="comment"># 若data有原始数据需要覆盖写可于遍历前先清空：data.clear()</span></span><br></pre></td></tr></table></figure>

<h1 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>: </span><br><span class="line">    x = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数字: &quot;</span>)) </span><br><span class="line">    z=<span class="number">100</span>/x </span><br><span class="line">    <span class="keyword">if</span> x&lt;<span class="number">0</span> :  </span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&quot;x不能小于0&quot;</span>)  <span class="comment"># 自定义异常</span></span><br><span class="line">    <span class="keyword">if</span> x&gt;<span class="number">100</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&quot;x不能大于100&quot;</span>)  <span class="comment"># 可设置多个异常情况，后面的e会根据情况输出信息</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ok&quot;</span>)</span><br><span class="line">      </span><br><span class="line"><span class="keyword">except</span> ValueError: </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您输入的不是数字,请再次尝试输入！&quot;</span>) </span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError: </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;除数不能为零&quot;</span>) </span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e: </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;其他错误:&quot;</span>,e)  <span class="comment"># e显示为异常信息</span></span><br></pre></td></tr></table></figure>


<h1 id="封装、继承、多态"><a href="#封装、继承、多态" class="headerlink" title="封装、继承、多态"></a>封装、继承、多态</h1><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>类及对象包含属性和⽅法<br>属性：静态特征 全局变量 成员<br>⽅法：动态特征 函数 功能<br>魔法⽅法：不需要调⽤就可以⾃动执⾏。<br>作⽤：初始化对象的成员 ( 给对象添加属性 )</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#类定义 </span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">People</span>: </span><br><span class="line">	name=<span class="string">&quot;&quot;</span> </span><br><span class="line">	age=<span class="number">0</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,xingming,nianling</span>): </span><br><span class="line">		<span class="variable language_">self</span>.name=xingming </span><br><span class="line">		<span class="variable language_">self</span>.age=nianling </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>): </span><br><span class="line">		<span class="built_in">print</span>(<span class="string">f&quot;姓名是<span class="subst">&#123;self.name&#125;</span>,年龄是<span class="subst">&#123;self.age&#125;</span>&quot;</span>) </span><br><span class="line">		</span><br><span class="line"><span class="comment">#调用 </span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>: </span><br><span class="line">	ldh=People(<span class="string">&quot;刘德华&quot;</span>,<span class="number">50</span>) </span><br><span class="line">	ldh.show()</span><br></pre></td></tr></table></figure>

<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>class ⼦类名 ( ⽗类名 ):<br>⼦类直接具备⽗类的属性和⽅法<br>解决代码重⽤问题，提⾼开发效率</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">People</span>): </span><br><span class="line">	grade=<span class="string">&quot;&quot;</span> </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, xingming, nianling,nianji</span>): </span><br><span class="line">		<span class="built_in">super</span>().__init__(xingming,nianling) </span><br><span class="line">		<span class="variable language_">self</span>.grade=nianji </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">self</span>): </span><br><span class="line">		<span class="built_in">print</span>(<span class="string">f&quot;年级是<span class="subst">&#123;self.grade&#125;</span>&quot;</span>) </span><br><span class="line">		</span><br><span class="line">	<span class="comment"># 方法重写 </span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>): </span><br><span class="line">		<span class="built_in">print</span>(<span class="string">f&quot;姓名是<span class="subst">&#123;self.name&#125;</span>,年龄是<span class="subst">&#123;self.age&#125;</span>,年级是<span class="subst">&#123;self.grade&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p>多态从字⾯上理解就是⼀个事物可以呈现多种状态。<br>没有继承就没有多态。<br>多态是能⾃⼰进⾏判断该去执⾏什么 , 创建⼀个列表来体现 , ⾯向对象的列表。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1=[ldh,zjl] </span><br><span class="line"><span class="comment"># 通过遍历以一个触发使用各子类重写方法的过程就称作多态</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l1: </span><br><span class="line">	<span class="built_in">print</span>(i.name) </span><br><span class="line">	i.show()</span><br></pre></td></tr></table></figure>

<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.将内容 “ 诚挚邀请您来参加本次宴会 ” 追加到 “ 邀请函 .txt” ⽂件末尾。 </span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/邀请函.txt&quot;</span>,mode=<span class="string">&#x27;a&#x27;</span>,encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f : </span><br><span class="line">	f.write(<span class="string">&quot;诚挚邀请您来参加本次宴会&quot;</span>)  </span><br><span class="line">	<span class="comment"># f.close()</span></span><br><span class="line">	</span><br><span class="line"><span class="comment"># 2.读取邀请函的内容。</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/邀请函.txt&quot;</span>,mode=<span class="string">&quot;r&quot;</span>,encoding=<span class="string">&quot;UTF-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    result=f.read()</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="comment"># f.close()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.修改 atm 取款机数据为持久化永久存储， csv 读取实现（分别使⽤函数实现读和取） , 使⽤异常处理 atm 取款机读取 csv 时判断⽂件是否存在，如果⽂件不存在提⽰ &quot; 没有⽂件使⽤原数据 &quot;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/user.csv&quot;</span>,mode=<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            result=csv.DictReader(f)</span><br><span class="line">            data.clear()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> result:</span><br><span class="line">                data.append(i)</span><br><span class="line">            <span class="comment"># f.close()</span></span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;没有文件使用原数据&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.使⽤异常在 atm 取款机的项⽬中存款函数中： 如果输⼊的存款⾦额不是整数则提⽰：请输⼊整数； 如果输⼊的存款⾦额不是 100 的倍数或者是负数则提⽰：请输⼊ 100 的倍数的正整数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 存款</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CunKuan</span>(<span class="params">userdata</span>):</span><br><span class="line">    money=<span class="built_in">input</span>(<span class="string">&quot;请输入存款金额:&quot;</span>)</span><br><span class="line">    money=checkMoney(money)</span><br><span class="line">    userdata[<span class="string">&quot;bat&quot;</span>]=<span class="built_in">str</span>(<span class="built_in">float</span>(userdata[<span class="string">&quot;bat&quot;</span>])+money)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;您已成功存款<span class="subst">&#123;money&#125;</span>，您当前的余额为：<span class="subst">&#123;userdata[<span class="string">&#x27;bat&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line">    inputToReturn()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测金额输入</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">checkMoney</span>(<span class="params">m</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        m=<span class="built_in">float</span>(m)</span><br><span class="line">        <span class="keyword">if</span> m &lt;=<span class="number">0</span> <span class="keyword">or</span> m%<span class="number">100</span>!=<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;金额必须为100倍数的正整数!&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> m</span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;请输入整数！&quot;</span>)</span><br><span class="line">        inputToReturn()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        inputToReturn()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上机练习8</span></span><br><span class="line"><span class="comment"># 1.定义⼀个⽔果类，定义属性（名称和颜⾊），使⽤魔法⽅法，然后通过⽔果类，创建苹果对象、橘⼦对象、西⽠对象并分别添加上颜⾊属性，定义⼀个⽅法分别输出如： </span></span><br><span class="line"><span class="comment">#红⾊的苹果真好吃 </span></span><br><span class="line"><span class="comment">#橙⾊的橘⼦真好吃 </span></span><br><span class="line"><span class="comment">#绿⾊的西⽠真好吃 </span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Fruit</span>: </span><br><span class="line">	name=<span class="string">&quot;&quot;</span> </span><br><span class="line">	color=<span class="string">&quot;&quot;</span> </span><br><span class="line">	</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,color</span>): </span><br><span class="line">		<span class="variable language_">self</span>.name=name</span><br><span class="line">		<span class="variable language_">self</span>.color=color</span><br><span class="line">		 </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">self</span>): </span><br><span class="line">		<span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;self.color&#125;</span>的<span class="subst">&#123;self.name&#125;</span>真好吃&quot;</span>) </span><br><span class="line">				</span><br><span class="line">    <span class="comment">#调用 </span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>: </span><br><span class="line">	apple=Fruit(<span class="string">&quot;苹果&quot;</span>,<span class="string">&quot;红色&quot;</span>)</span><br><span class="line">	orange=Fruit(<span class="string">&quot;橘子&quot;</span>,<span class="string">&quot;橙色&quot;</span>)</span><br><span class="line">	watermelon=Fruit(<span class="string">&quot;西瓜&quot;</span>,<span class="string">&quot;绿色&quot;</span>)</span><br><span class="line">	apple.show()</span><br><span class="line">	orange.show()</span><br><span class="line">	watermelon.show()</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line"><span class="comment"># 猫类Cat。属性:⽑的颜⾊color，品种breed，亲和度love。⽅法:吃饭eat() </span></span><br><span class="line"><span class="comment"># 狗类Dog。属性:⽑的颜⾊color，品种breed，忠诚度loyal。⽅法:吃饭eat() </span></span><br><span class="line"><span class="comment"># 要求 : 使⽤封装、继承和多态，根据以上要求抽取⽗类为Animal，重写eat⽅法，输出打印如下： </span></span><br><span class="line"><span class="comment"># 有⼀只亲和度是10级的花⾊的波斯猫正在吃⻥.....</span></span><br><span class="line"><span class="comment"># 有⼀只忠诚度是9级的⿊⾊的藏獒正在啃⻣头..... </span></span><br><span class="line"><span class="comment"># 有⼀只亲和度是8级的⽩⾊的加菲猫正在吃⻥..... </span></span><br><span class="line"><span class="comment"># 有⼀只忠诚度是 6 级的棕⾊的茶杯⽝正在啃⻣头.....</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>: </span><br><span class="line">	color=<span class="string">&quot;&quot;</span></span><br><span class="line">	breed=<span class="string">&quot;&quot;</span> </span><br><span class="line">	</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,color,breed</span>): </span><br><span class="line">		<span class="variable language_">self</span>.color=color</span><br><span class="line">		<span class="variable language_">self</span>.breed=breed</span><br><span class="line">		 </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>): </span><br><span class="line">		<span class="built_in">print</span>(<span class="string">f&quot;有一只<span class="subst">&#123;self.color&#125;</span>的<span class="subst">&#123;self.breed&#125;</span>正在吃饭....&quot;</span>)</span><br><span class="line">		</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    love=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, color, breed,love</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(color, breed)</span><br><span class="line">        <span class="variable language_">self</span>.love=love</span><br><span class="line">		</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>): </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;有一只亲和度是<span class="subst">&#123;self.love&#125;</span>级<span class="subst">&#123;self.color&#125;</span>的<span class="subst">&#123;self.breed&#125;</span>正在吃鱼....&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    loyal=<span class="string">&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, color, breed,loyal</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(color, breed)</span><br><span class="line">        <span class="variable language_">self</span>.loyal=loyal</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>): </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;有一只忠诚度是<span class="subst">&#123;self.loyal&#125;</span>级<span class="subst">&#123;self.color&#125;</span>的<span class="subst">&#123;self.breed&#125;</span>正在啃骨头&quot;</span>)</span><br><span class="line">				</span><br><span class="line"><span class="comment">#调用 </span></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>: </span><br><span class="line">    cat1=Cat(<span class="string">&quot;花色&quot;</span>,<span class="string">&quot;波斯猫&quot;</span>,<span class="string">&quot;10&quot;</span>)</span><br><span class="line">    dog1=Dog(<span class="string">&quot;黑色&quot;</span>,<span class="string">&quot;藏獒&quot;</span>,<span class="string">&quot;9&quot;</span>)</span><br><span class="line">    cat2=Cat(<span class="string">&quot;白色&quot;</span>,<span class="string">&quot;加菲猫&quot;</span>,<span class="string">&quot;8&quot;</span>)</span><br><span class="line">    dog2=Dog(<span class="string">&quot;棕色&quot;</span>,<span class="string">&quot;茶杯犬&quot;</span>,<span class="string">&quot;6&quot;</span>)</span><br><span class="line">    list1=[cat1,dog1,cat2,dog2]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> list1:</span><br><span class="line">         i.eat()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>6.4总结：连接MySQL、三层架构</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5Python/6.4%E6%80%BB%E7%BB%93%EF%BC%9A%E8%BF%9E%E6%8E%A5MySQL%E3%80%81%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<h1 id="time-datetime-库"><a href="#time-datetime-库" class="headerlink" title="time &amp; datetime 库"></a>time &amp; datetime 库</h1><p>Python 中处理时间的标准库<br>提供获取系统时间并格式化输出功能<br>提供系统级精确计时功能，⽤于程序性能分析</p>
<h2 id="time库包含三类函数"><a href="#time库包含三类函数" class="headerlink" title="time库包含三类函数"></a>time库包含三类函数</h2><p>时间获取： localtime()<br>时间格式化： strftime()   strptime()<br>程序计时： sleep()   perf_counter()</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time </span><br><span class="line"><span class="comment"># 日期类型与字符串直接互相转化 </span></span><br><span class="line"><span class="comment"># 日期转字符串</span></span><br><span class="line">t1= time.localtime() </span><br><span class="line"><span class="built_in">print</span>(time.strftime(<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>,t1)) </span><br><span class="line"><span class="comment"># 字符串转日期</span></span><br><span class="line">timeStr = <span class="string">&#x27;2018-01-26 12:55:20&#x27;</span> </span><br><span class="line">t2=time.strptime(timeStr, <span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">#测试程序执行时间差 </span></span><br><span class="line">t_start = time.perf_counter()  <span class="comment"># 程序从开始到这条代码的运行时间</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;测试&quot;</span>) </span><br><span class="line"><span class="comment">#开始休眠 </span></span><br><span class="line">time.sleep(<span class="number">5</span>) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;休眠完毕&quot;</span>) </span><br><span class="line">t_end = time.perf_counter() </span><br><span class="line"><span class="built_in">print</span>( t_end-t_start ) </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> datetime </span><br><span class="line">t = datetime.datetime.now() </span><br><span class="line"><span class="built_in">print</span>(datetime.datetime.strftime(t,<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)) </span><br><span class="line"><span class="built_in">print</span>(datetime.datetime.strptime(<span class="string">&quot;20230211&quot;</span>,<span class="string">&quot;%Y%m%d&quot;</span>))</span><br></pre></td></tr></table></figure>

<h1 id="连接MySQL操作"><a href="#连接MySQL操作" class="headerlink" title="连接MySQL操作"></a>连接MySQL操作</h1><p>pymysql 是在 Python3.x 版本中⽤于连接 MySQL 服务器的⼀个库<br>在 vscode 终端下⾯直接运⾏ pip3 install pymysql 安装即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql </span><br><span class="line"><span class="comment"># 连接database </span></span><br><span class="line">conn = pymysql.connect( </span><br><span class="line">	host=<span class="string">&quot;127.0.0.1&quot;</span>, </span><br><span class="line">	user=<span class="string">&quot;root&quot;</span>,</span><br><span class="line">	password=<span class="string">&quot;root123456&quot;</span>, </span><br><span class="line">	database=<span class="string">&quot;test&quot;</span>, </span><br><span class="line">	charset=<span class="string">&quot;utf8&quot;</span>) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;打开数据库&quot;</span>) </span><br><span class="line"><span class="comment">#关闭数据库 </span></span><br><span class="line">conn.close() </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;关闭数据库&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="结构操作"><a href="#结构操作" class="headerlink" title="结构操作"></a>结构操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用预处理语句创建表 </span></span><br><span class="line">sql1 = <span class="string">&quot;&quot;&quot;create table if not exists MovieType( </span></span><br><span class="line"><span class="string">	tid int primary key, </span></span><br><span class="line"><span class="string">	tname varchar(20), </span></span><br><span class="line"><span class="string">	tcontent varchar(500), </span></span><br><span class="line"><span class="string">	tdate datetime )&quot;&quot;&quot;</span> </span><br><span class="line">	</span><br><span class="line">baoma.execute(sql1) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;操作成功&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="execute-sql-的返回值"><a href="#execute-sql-的返回值" class="headerlink" title=".execute(sql)的返回值"></a>.execute(sql)的返回值</h3><p>pymysql中，<code>cursor.execute(sql)</code> 的返回值是一个整数，表示：</p>
<ul>
<li>对于<code>INSERT</code>、<code>UPDATE</code>、<code>DELETE</code>语句：返回受影响的行数（即成功插入、更新或删除的行数）。</li>
<li>对于<code>SELECT</code>语句：返回结果集的行数（即查询返回的总行数）。</li>
</ul>
<h2 id="数据增删改操作"><a href="#数据增删改操作" class="headerlink" title="数据增删改操作"></a>数据增删改操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c=<span class="string">&quot;insert into MovieType values(1,&#x27;喜剧&#x27;,&#x27;这是一种搞笑的视频&#x27;,now())&quot;</span> </span><br><span class="line">result=baoma.execute(c) </span><br><span class="line">conn.commit() <span class="comment">#需要提交才到数据库，有错则rollback </span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;插入成功&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="数据查询操作"><a href="#数据查询操作" class="headerlink" title="数据查询操作"></a>数据查询操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql sql = <span class="string">&quot;select * from MovieType order by tdate desc&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#读一行</span></span><br><span class="line">baoma.execute(sql) </span><br><span class="line">data = baoma.fetchone()  <span class="comment">#执⾏完毕返回的结果集默认以元组显⽰</span></span><br><span class="line"><span class="built_in">print</span>(data) </span><br><span class="line"></span><br><span class="line"><span class="comment">#读所有 </span></span><br><span class="line">data = baoma.fetchall() <span class="comment">#元组的元组</span></span><br><span class="line"><span class="built_in">print</span>(data) </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data: </span><br><span class="line">	<span class="built_in">print</span>(i[<span class="number">0</span>],i[<span class="number">1</span>])</span><br></pre></td></tr></table></figure>


<h1 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h1><p>表示层（前端UI）<br>业务逻辑层（BLL）(Business Logic Layer)<br>数据访问层（DAL）(Data Access Layer)<br>![[Pasted image 20250604191209.png]]</p>
<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.灵活使⽤ pymyql 来完成创建表、添加数据、查询数据</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dbconnect</span>():</span><br><span class="line">    <span class="comment"># 连接database</span></span><br><span class="line">    conn = pymysql.connect(</span><br><span class="line">        host=<span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">        user=<span class="string">&quot;root&quot;</span>,</span><br><span class="line">        password=<span class="string">&quot;root123456&quot;</span>,</span><br><span class="line">        database=<span class="string">&quot;test&quot;</span>,</span><br><span class="line">        port=<span class="number">3306</span>,</span><br><span class="line">        charset=<span class="string">&quot;utf8&quot;</span></span><br><span class="line">    )</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;连接数据库成功&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> conn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">jiegou</span>():</span><br><span class="line">    sql=<span class="string">&quot;&quot;&quot;create table if not exists MovieType(</span></span><br><span class="line"><span class="string">    tid int primary key,</span></span><br><span class="line"><span class="string">    tname varchar(20),</span></span><br><span class="line"><span class="string">    tcontent varchar(200),</span></span><br><span class="line"><span class="string">    tdate datetime</span></span><br><span class="line"><span class="string">    )&quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 连接database</span></span><br><span class="line">    conn = dbconnect()</span><br><span class="line">    jianbiao=conn.cursor()</span><br><span class="line">    jianbiao.execute(sql)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;MovieType表创建完成&quot;</span>)</span><br><span class="line">    jianbiao.close()</span><br><span class="line">    conn.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;关闭数据库成功&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">edit</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;示例: 1,喜剧,这是一个搞笑的电影&quot;</span>)</span><br><span class="line">    data=<span class="built_in">input</span>(<span class="string">&quot;请输入要插入的数据（逗号隔开）:&quot;</span>).split(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">    tid=<span class="built_in">int</span>(data[<span class="number">0</span>])</span><br><span class="line">    tname=data[<span class="number">1</span>]</span><br><span class="line">    tcontent=data[<span class="number">2</span>]</span><br><span class="line">    sql=<span class="string">f&quot;insert into MovieType values(<span class="subst">&#123;tid&#125;</span>,&#x27;<span class="subst">&#123;tname&#125;</span>&#x27;,&#x27;<span class="subst">&#123;tcontent&#125;</span>&#x27;,now())&quot;</span></span><br><span class="line">    conn = dbconnect()</span><br><span class="line">    inserdata=conn.cursor()</span><br><span class="line">    res=inserdata.execute(sql)</span><br><span class="line">    <span class="keyword">if</span> res&gt;<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;添加成功&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;添加失败&quot;</span>)</span><br><span class="line">    conn.commit()</span><br><span class="line">    inserdata.close()</span><br><span class="line">    conn.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;关闭数据库成功&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.查询数据时⽇期处理成如下格式： </span></span><br><span class="line"><span class="comment"># 1 喜剧 这是⼀个搞笑的电影 2023 年 08 ⽉ 21 ⽇ </span></span><br><span class="line"><span class="comment"># 2 动作 这是⼀个打⽃的电影 2023 年 08 ⽉ 21 ⽇</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cha</span>():</span><br><span class="line">    sql=<span class="string">&quot;select * from MovieType&quot;</span></span><br><span class="line">    conn=dbconnect()</span><br><span class="line">    show=conn.cursor()</span><br><span class="line">    show.execute(sql)</span><br><span class="line">    res=show.fetchall()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">        <span class="built_in">print</span>(i[<span class="number">0</span>],i[<span class="number">1</span>],i[<span class="number">2</span>],datetime.datetime.strftime(i[<span class="number">3</span>],<span class="string">&quot;%Y年%m月%d日&quot;</span>))</span><br><span class="line">    show.close()</span><br><span class="line">    conn.close()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;关闭数据库成功&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># jiegou()</span></span><br><span class="line">    <span class="comment"># edit()</span></span><br><span class="line">    cha()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上机练习10 三层架构开发豆瓣网</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模型层 Model.py</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MovieType</span>:</span><br><span class="line">    <span class="comment">#属性</span></span><br><span class="line">    tid=<span class="number">0</span></span><br><span class="line">    tname=<span class="string">&quot;&quot;</span></span><br><span class="line">    tcontent=<span class="string">&quot;&quot;</span></span><br><span class="line">    tdate=datetime.datetime.now()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,tid1,tname1,tcontent1</span>):</span><br><span class="line">        <span class="variable language_">self</span>.tid=tid1</span><br><span class="line">        <span class="variable language_">self</span>.tname=tname1</span><br><span class="line">        <span class="variable language_">self</span>.tcontent=tcontent1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据层 DAL.py</span></span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DBHelper</span>:</span><br><span class="line">    <span class="comment">#打开数据库</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">openDB</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment">#把局部变量变成全局变量</span></span><br><span class="line">        <span class="keyword">global</span> conn</span><br><span class="line">        conn=pymysql.connect(host=<span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">                             user=<span class="string">&quot;root&quot;</span>,</span><br><span class="line">                             password=<span class="string">&quot;root123456&quot;</span>,</span><br><span class="line">                            database=<span class="string">&quot;test&quot;</span>,</span><br><span class="line">                            port=<span class="number">3306</span>,charset=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">        <span class="keyword">global</span> baoma</span><br><span class="line">        baoma=conn.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#关闭数据库</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">closeDB</span>(<span class="params">self</span>):</span><br><span class="line">        baoma.close()</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">edit</span>(<span class="params">self,sql</span>):</span><br><span class="line">        <span class="variable language_">self</span>.openDB()</span><br><span class="line">        result=baoma.execute(sql)</span><br><span class="line">        conn.commit()</span><br><span class="line">        <span class="variable language_">self</span>.closeDB()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chaOne</span>(<span class="params">self,sql</span>):</span><br><span class="line">        <span class="variable language_">self</span>.openDB()</span><br><span class="line">        baoma.execute(sql)</span><br><span class="line">        result=baoma.fetchone()</span><br><span class="line">        <span class="variable language_">self</span>.closeDB()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chaAll</span>(<span class="params">self,sql</span>):</span><br><span class="line">        <span class="variable language_">self</span>.openDB()</span><br><span class="line">        baoma.execute(sql)</span><br><span class="line">        result=baoma.fetchall()</span><br><span class="line">        <span class="variable language_">self</span>.closeDB()</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">     </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MovieTypeDAL</span>(<span class="title class_ inherited__">DBHelper</span>):</span><br><span class="line">    <span class="comment"># 1.录⼊电影类型信息</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">insert</span>(<span class="params">self,mt</span>):</span><br><span class="line">        sql=<span class="string">f&quot;insert into MovieType values(<span class="subst">&#123;mt.tid&#125;</span>,&#x27;<span class="subst">&#123;mt.tname&#125;</span>&#x27;,&#x27;<span class="subst">&#123;mt.tcontent&#125;</span>&#x27;,now())&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.edit(sql)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 2.1 显示tid的数据内容</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">showformtid</span>(<span class="params">self,tid</span>):</span><br><span class="line">        sql=<span class="string">f&quot;select * from MovieType where tid=&#x27;<span class="subst">&#123;tid&#125;</span>&#x27;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.chaOne(sql)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 2.2修改电影类型信息</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self,mt</span>):</span><br><span class="line">        edtname=<span class="number">0</span></span><br><span class="line">        edtcontent=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span>(mt.tname!=<span class="string">&quot;&quot;</span>):</span><br><span class="line">            sql1=<span class="string">f&quot;update MovieType set tname=&#x27;<span class="subst">&#123;mt.tname&#125;</span>&#x27; where tid=<span class="subst">&#123;mt.tid&#125;</span>&quot;</span></span><br><span class="line">            edtname=<span class="variable language_">self</span>.edit(sql1)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(mt.tcontent!=<span class="string">&quot;&quot;</span>):</span><br><span class="line">            sql2=<span class="string">f&quot;update MovieType set tcontent=&#x27;<span class="subst">&#123;mt.tcontent&#125;</span>&#x27; where tid=<span class="subst">&#123;mt.tid&#125;</span>&quot;</span></span><br><span class="line">            edtcontent=<span class="variable language_">self</span>.edit(sql2)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> edtname,edtcontent</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 3.删除电影类型信息</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">delet</span>(<span class="params">self,tid</span>):</span><br><span class="line">        sql=<span class="string">f&quot;delete from MovieType where tid=<span class="subst">&#123;tid&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.edit(sql)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4.显示所有电影类型信息</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">showall</span>(<span class="params">self</span>):</span><br><span class="line">        sql=<span class="string">&quot;select * from MovieType&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.chaAll(sql)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 业务逻辑层 BLL.py</span></span><br><span class="line"><span class="keyword">from</span> Model <span class="keyword">import</span> MovieType</span><br><span class="line"><span class="keyword">from</span> DAL <span class="keyword">import</span> MovieTypeDAL</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">mtdal=MovieTypeDAL()</span><br><span class="line">menu=<span class="string">&quot;&quot;&quot;\n-------------⾖瓣⽹管理系统-----------------</span></span><br><span class="line"><span class="string">===========功能菜单===========</span></span><br><span class="line"><span class="string">1 录⼊电影类型信息</span></span><br><span class="line"><span class="string">2 修改电影类型信息</span></span><br><span class="line"><span class="string">3 删除电影类型信息</span></span><br><span class="line"><span class="string">4 显⽰所有电影类型信息</span></span><br><span class="line"><span class="string">0 退出系统</span></span><br><span class="line"><span class="string">=============================&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.录⼊电影类型信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">option1</span>():</span><br><span class="line">    tid=<span class="built_in">input</span>(<span class="string">&quot;请输⼊编号：&quot;</span>)</span><br><span class="line">    res=mtdal.showformtid(tid)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> res:</span><br><span class="line">        tname=<span class="built_in">input</span>(<span class="string">&quot;请输⼊名称：&quot;</span>)</span><br><span class="line">        tcontent=<span class="built_in">input</span>(<span class="string">&quot;请输⼊内容：&quot;</span>)</span><br><span class="line">        mt=MovieType(tid,tname,tcontent)</span><br><span class="line">        res= mtdal.insert(mt)</span><br><span class="line">        <span class="keyword">if</span> res&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;录入成功&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;录入失败&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;编号已存在！&quot;</span>)</span><br><span class="line">    <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改电影类型信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">option2</span>():</span><br><span class="line">    tid=<span class="built_in">input</span>(<span class="string">&quot;请输入修改编号：&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n编号 名称 内容 创建⽇期&quot;</span>)</span><br><span class="line">    res=mtdal.showformtid(tid)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> res:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;此电影类型不存在！&quot;</span>)</span><br><span class="line">        <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="built_in">print</span>(res[<span class="number">0</span>],res[<span class="number">1</span>],res[<span class="number">2</span>],datetime.datetime.strftime(res[<span class="number">3</span>],<span class="string">&quot;%Y年%m月%d日\n&quot;</span>))</span><br><span class="line"></span><br><span class="line">    tname=<span class="built_in">input</span>(<span class="string">&quot;请输入修改名称（若不修改则直接回车）：&quot;</span>)</span><br><span class="line">    tcontent=<span class="built_in">input</span>(<span class="string">&quot;请输⼊修改内容（若不修改则直接回车）：&quot;</span>)</span><br><span class="line">    mt=MovieType(tid,tname,tcontent)</span><br><span class="line">    res=mtdal.update(mt)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;res[<span class="number">0</span>]&#125;</span>个名称被修改，<span class="subst">&#123;res[<span class="number">1</span>]&#125;</span>个内容被修改&quot;</span>)</span><br><span class="line">    <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.删除电影类型信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">option3</span>():</span><br><span class="line">    tid=<span class="built_in">input</span>(<span class="string">&quot;请输入删除编号：&quot;</span>)</span><br><span class="line">    res1=mtdal.showformtid(tid)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> res1:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;此电影类型不存在！&quot;</span>)</span><br><span class="line">        <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n编号 名称 内容 创建⽇期&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(res1[<span class="number">0</span>],res1[<span class="number">1</span>],res1[<span class="number">2</span>],datetime.datetime.strftime(res1[<span class="number">3</span>],<span class="string">&quot;%Y年%m月%d日\n&quot;</span>))</span><br><span class="line">    esc=<span class="built_in">input</span>(<span class="string">&quot;确认要删除吗? y/n:&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> esc.lower() == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> esc.lower() == <span class="string">&#x27;yes&#x27;</span>:</span><br><span class="line">        res2=mtdal.delet(tid)</span><br><span class="line">        <span class="keyword">if</span> res2&gt;<span class="number">0</span> :</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;删除成功&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;删除失败&quot;</span>)</span><br><span class="line">    <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.显示所有电影类型信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">option4</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n编号 名称 内容 创建⽇期&quot;</span>)</span><br><span class="line">    res=mtdal.showall()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">        <span class="built_in">print</span>(i[<span class="number">0</span>],i[<span class="number">1</span>],i[<span class="number">2</span>],datetime.datetime.strftime(i[<span class="number">3</span>],<span class="string">&quot;%Y年%m月%d日&quot;</span>))</span><br><span class="line">    <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 0.退出系统</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">option0</span>():</span><br><span class="line">    esc=<span class="built_in">input</span>(<span class="string">&quot;请问是否退出? y/n:&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> esc.lower() == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> esc.lower() == <span class="string">&#x27;yes&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;已成功退出&quot;</span>)</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">input</span>(<span class="string">&quot;\n按下回车键返回主菜单..&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(menu)</span><br><span class="line">        option=<span class="built_in">input</span>(<span class="string">&quot;请输⼊操作选项：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> option==<span class="string">&quot;1&quot;</span>:</span><br><span class="line">            option1()</span><br><span class="line">        <span class="keyword">elif</span> option==<span class="string">&quot;2&quot;</span>:</span><br><span class="line">            option2()</span><br><span class="line">        <span class="keyword">elif</span> option==<span class="string">&quot;3&quot;</span>:</span><br><span class="line">            option3()</span><br><span class="line">        <span class="keyword">elif</span> option==<span class="string">&quot;4&quot;</span>:</span><br><span class="line">            option4()</span><br><span class="line">        <span class="keyword">elif</span> option==<span class="string">&quot;0&quot;</span>:</span><br><span class="line">            option0()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;无效操作，请重新输入！&quot;</span>)</span><br><span class="line">            <span class="built_in">input</span>(<span class="string">&quot;按下回车键继续..&quot;</span>)</span><br><span class="line">        </span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>6.5总结：html语言、前后端结合 app.py</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5Python/6.5%E6%80%BB%E7%BB%93%EF%BC%9Ahtml%E8%AF%AD%E8%A8%80%E3%80%81%E5%89%8D%E5%90%8E%E7%AB%AF%E7%BB%93%E5%90%88%20app.py/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span>  #根标签</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span>  #头标签</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span>  #头标题标签，在<span class="tag">&lt;<span class="name">head</span>&gt;</span>标签⾥设置</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span>  #常⽤于指定⻚⾯编码，在<span class="tag">&lt;<span class="name">head</span>&gt;</span>标签内</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span>  #⻚⾯的内容基本上写在此标签内</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span> h1...h6  #标题标签</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>  #段落标签</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  #超级链接标签</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span>  #表格标签</span><br><span class="line">表单标签：<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span><span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span>表单元素控件<span class="tag">&lt;/<span class="name">form</span>&gt;</span>  #表单标签</span><br><span class="line"></span><br><span class="line">#表单元素控件  <span class="tag">&lt;<span class="name">input</span>&gt;</span> </span><br><span class="line">文本显示: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;动漫&quot;</span> <span class="attr">readonly</span>&gt;</span></span><br><span class="line">类型: number(step 0.1) date password</span><br><span class="line">提示功能: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span><span class="attr">placeholder</span>=<span class="string">&quot;请输入电影名称&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 下拉框标签  <span class="tag">&lt;<span class="name">select</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;tid&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>喜剧<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">selected</span>&gt;</span>动画<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 图片标签</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;static/p11.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># 样式标签 style</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"> </span></span><br><span class="line"><span class="language-css">	<span class="selector-tag">body</span>&#123; <span class="attribute">margin</span>: <span class="number">0</span> auto; <span class="attribute">width</span>: <span class="number">800px</span>; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">&quot;static/bg.jpg&quot;</span>);</span></span><br><span class="line"><span class="language-css">		<span class="attribute">background-repeat</span>:no-repeat;</span></span><br><span class="line"><span class="language-css">		<span class="attribute">background-size</span>: cover;</span></span><br><span class="line"><span class="language-css">	&#125;</span></span><br><span class="line"><span class="language-css">	<span class="selector-tag">h1</span>&#123; <span class="attribute">color</span>: <span class="number">#258dcd</span>&#125;</span></span><br><span class="line"><span class="language-css">	<span class="selector-tag">a</span>&#123; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">background-color</span>: <span class="number">#258dcd</span>; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">color</span>: white; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">		<span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">		<span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">		<span class="comment">/*半透明*/</span></span></span><br><span class="line"><span class="language-css">		<span class="comment">/*background-color:rgba(55,55,55,0.5)*/</span></span></span><br><span class="line"><span class="language-css">	&#125;</span></span><br><span class="line"><span class="language-css">	<span class="selector-tag">table</span>,<span class="selector-tag">tr</span>,<span class="selector-tag">td</span>&#123; <span class="attribute">border</span>: <span class="number">2px</span> solid black; <span class="attribute">border-collapse</span>: collapse;&#125;</span></span><br><span class="line"><span class="language-css">	<span class="selector-tag">table</span>&#123; <span class="attribute">width</span>: <span class="number">100%</span> &#125;</span></span><br><span class="line"><span class="language-css">	<span class="selector-tag">td</span>&#123; <span class="attribute">text-align</span>: center; <span class="attribute">padding</span>: <span class="number">10px</span>;&#125;</span></span><br><span class="line"><span class="language-css">	<span class="selector-class">.tou</span>&#123; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">background-color</span>: <span class="number">#258dcd</span>; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">color</span>: white; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">font-size</span>: <span class="number">18px</span>; </span></span><br><span class="line"><span class="language-css">		<span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">	&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><p>1.制作列表⻚： list.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>豆瓣网列表页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 全局样式设置 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置页面字体 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Segoe UI&#x27;</span>, Tahoma, Geneva, Verdana, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景图片路径 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-image: url(&quot;static/pbg1.jpg&quot;); */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-size</span>: cover;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景图片覆盖整个页面 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景图片居中显示 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 使用 Flexbox 布局 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 垂直排列子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 水平居中对齐子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: flex-start;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 垂直顶部对齐子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 最小高度为视口高度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 清除默认边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 盒模型包含内边距和边框 */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 标题颜色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加文字阴影 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">4px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 导航链接容器样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-links</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 使用 Flexbox 布局 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 水平居中对齐链接 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 链接之间的间距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">gap</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 小屏幕下自动换行 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 导航链接样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-links</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 文字颜色 - 白色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 去除下划线 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: background-color <span class="number">0.3s</span> ease;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色过渡动画 */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 悬停时背景色变深 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 导航链接悬停效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-links</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#1a6fa3</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 列表容器样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.movie-list</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 半透明白色背景 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加阴影效果 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 宽度为父容器的100% */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 最大宽度限制 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">max-width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 盒模型包含内边距和边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 表格样式优化 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">table</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 宽度为父容器的100% */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 合并边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-collapse</span>: collapse;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">th</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 单元格内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 文本居中对齐 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">th</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 表头背景色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 表头文字颜色 - 白色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 表头文字粗细 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">600</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 行悬停时背景色变浅 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">tr</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 操作按钮样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.action-btn</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 行内块元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 文字颜色 - 白色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 去除下划线 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色过渡动画 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: background-color <span class="number">0.3s</span> ease;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 悬停时背景色变深 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.action-btn</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#1a6fa3</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 响应式设计 - 小屏幕设备 */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.nav-links</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 缩小链接间距 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">gap</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.nav-links</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 减小链接内边距 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 减小链接文字大小 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">th</span>,</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 减小单元格内边距 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 减小文字大小 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.action-btn</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 减小按钮内边距 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">3px</span> <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 减小按钮文字大小 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 页面标题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎使用豆瓣网<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 导航链接区域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav-links&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/list&quot;</span>&gt;</span>电影类型列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/add&quot;</span>&gt;</span>添加电影类型<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/addMovie&quot;</span>&gt;</span>添加电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/zhu&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>查看柱状图<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;bing&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>查看饼状图<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 电影列表容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;movie-list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>创建日期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;% for i in info %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;i[0]&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;i[1]&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;i[2]&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;i[4]&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/update/&#123;&#123;i[0]&#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;action-btn&quot;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/delete/&#123;&#123;i[0]&#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;action-btn&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;action-btn&quot;</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.制作添加⻚： add.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>豆瓣网添加页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 全局样式设置 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置页面字体 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Segoe UI&#x27;</span>, Tahoma, Geneva, Verdana, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景图片路径 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* background-image: url(&quot;static/pbg1.jpg&quot;); */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景图片覆盖整个页面 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-size</span>: cover;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景图片居中显示 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 使用 Flexbox 布局 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 垂直排列子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 水平居中对齐子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 垂直顶部对齐子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: flex-start;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 最小高度为视口高度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 清除默认边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 盒模型包含内边距和边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 页面标题样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 标题颜色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加文字阴影 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">4px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 导航链接容器样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-links</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 使用 Flexbox 布局 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 水平居中对齐链接 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 链接之间的间距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">gap</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 导航链接样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-links</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 文字颜色 - 白色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 去除下划线 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色过渡动画 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: background-color <span class="number">0.3s</span> ease;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 导航链接悬停效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav-links</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 悬停时背景色变深 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#1a6fa3</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 图片样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 图片宽度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 最大宽度为父容器的90% */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">max-width</span>: <span class="number">90%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加阴影效果 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 表单容器样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 半透明白色背景 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.9</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 添加阴影效果 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 宽度为父容器的100% */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 最大宽度 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">max-width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 表单内段落样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 使用 Flexbox 布局 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 垂直排列子元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 表单标签样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> <span class="selector-tag">label</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 底部外边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 字体粗细 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">600</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 文字颜色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 文本输入框样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 边框样式 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 字体大小 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 提交按钮样式 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色 - 蓝色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#238ccd</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 文字颜色 - 白色 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 内边距 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 无边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 圆角边框 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 鼠标指针样式 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 字体大小 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 背景色过渡动画 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">transition</span>: background-color <span class="number">0.3s</span> ease;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 提交按钮悬停效果 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">form</span> <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 悬停时背景色变深 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#1a6fa3</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 响应式设计 - 小屏幕设备 */</span></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">600px</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 添加内边距防止内容溢出 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.nav-links</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/* 链接换行显示 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 页面标题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎使用豆瓣网<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 导航链接区域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav-links&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/list&quot;</span>&gt;</span>电影类型列表<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/add&quot;</span>&gt;</span>添加电影类型<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/addMovie&quot;</span>&gt;</span>添加电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/zhu&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>查看柱状图<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;bing&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>查看饼状图<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 装饰图片 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;static/py11.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 添加电影类型表单 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/addSubmit&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;id&quot;</span>&gt;</span>编号：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tid&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span>名称：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tname&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;content&quot;</span>&gt;</span>内容：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;tcontent&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;添加&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="使⽤-python-flask-mysql-html-三层架构开发⾖瓣⽹"><a href="#使⽤-python-flask-mysql-html-三层架构开发⾖瓣⽹" class="headerlink" title="使⽤ python+flask+mysql+html 三层架构开发⾖瓣⽹"></a>使⽤ python+flask+mysql+html 三层架构开发⾖瓣⽹</h2><p>电影类型列表页面<br>![[Pasted image 20250605192834.png]]</p>
<p>添加电影类型页面<br>![[Pasted image 20250605193232.png]]</p>
<p>添加成功<br>![[Pasted image 20250605193255.png]]<br>![[Pasted image 20250605193305.png]]</p>
<p>修改页面<br>![[Pasted image 20250605193426.png]]</p>
<p>修改成功（测试仅修改内容，不修改名称）<br>![[Pasted image 20250605193519.png]]<br>![[Pasted image 20250605193533.png]]</p>
<p>删除操作（测试删除 3 功夫）<br>![[Pasted image 20250605193645.png]]<br>![[Pasted image 20250605193656.png]]</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>6.6总结：电影表增删改查、模糊搜索</title>
    <url>/2025/06/07/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5Python/6.6%E6%80%BB%E7%BB%93%EF%BC%9A%E7%94%B5%E5%BD%B1%E8%A1%A8%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2/</url>
    <content><![CDATA[<p>查看不同电影类型的电影列表<br>![[Pasted image 20250606215523.png]]<br>![[Pasted image 20250606215547.png]]</p>
<p>实现电影的添加<br>![[Pasted image 20250606215717.png]]<br>![[Pasted image 20250606215732.png]]<br>![[Pasted image 20250606215752.png]]</p>
<p>实现电影的修改<br>![[Pasted image 20250606215903.png]]<br>![[Pasted image 20250606215925.png]]<br>![[Pasted image 20250606215942.png]]</p>
<p>删除<br>![[Pasted image 20250606220057.png]]<br>![[Pasted image 20250606220115.png]]<br>![[Pasted image 20250606220127.png]]</p>
<p>电影类型列表⻚添加模糊搜索电影功能<br>![[Pasted image 20250606220151.png]]<br>![[Pasted image 20250606220214.png]]</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>影刀考试题</title>
    <url>/2025/06/12/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.12%20%E5%BD%B1%E5%88%80%E8%80%83%E8%AF%95%E9%A2%98/</url>
    <content><![CDATA[<h1 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h1><p>流程截图<br>![[Pasted image 20250612112922.png]]</p>
<p>Python代码段</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df=pd.DataFrame(list1)</span><br><span class="line">df[<span class="string">&quot;票房&quot;</span>]=df[<span class="string">&quot;票房&quot;</span>].astype(<span class="built_in">int</span>)</span><br><span class="line">df=df.groupby(<span class="string">&quot;制片地区&quot;</span>)[<span class="string">&quot;票房&quot;</span>].<span class="built_in">sum</span>().reset_index()</span><br><span class="line">df=df.sort_values(by=<span class="string">&quot;票房&quot;</span>,ascending=<span class="literal">False</span>).head(<span class="number">3</span>)</span><br><span class="line">df.insert(<span class="number">0</span>,<span class="string">&quot;提交人&quot;</span>,<span class="string">&quot;Tetuka&quot;</span>)</span><br><span class="line">res=df.values.tolist()</span><br><span class="line"><span class="comment">#3.0-3.5</span></span><br><span class="line">df=pd.DataFrame(list1)</span><br><span class="line">df=df[(df.评分!=<span class="string">&quot;-&quot;</span>)]</span><br><span class="line">df[<span class="string">&quot;评分&quot;</span>]=df[<span class="string">&quot;评分&quot;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line">df[<span class="string">&quot;票房&quot;</span>]=df[<span class="string">&quot;票房&quot;</span>].astype(<span class="built_in">int</span>)</span><br><span class="line">df=df[(df.评分&gt;=<span class="number">3.0</span>) &amp; (df.评分&lt;=<span class="number">3.5</span>)]</span><br><span class="line">n1=df[<span class="string">&quot;票房&quot;</span>].<span class="built_in">sum</span>()</span><br><span class="line">res.append([<span class="string">&quot;Tetuka&quot;</span>,<span class="string">&quot;3.0-3.5&quot;</span>,<span class="built_in">int</span>(n1)])</span><br><span class="line"></span><br><span class="line"><span class="comment">#9.0-9.5</span></span><br><span class="line">df=pd.DataFrame(list1)</span><br><span class="line">df=df[(df.评分!=<span class="string">&quot;-&quot;</span>)]</span><br><span class="line">df[<span class="string">&quot;票房&quot;</span>]=df[<span class="string">&quot;票房&quot;</span>].astype(<span class="built_in">int</span>)</span><br><span class="line">df[<span class="string">&quot;评分&quot;</span>]=df[<span class="string">&quot;评分&quot;</span>].astype(<span class="built_in">float</span>)</span><br><span class="line">df=df[(df.评分&gt;=<span class="number">9.0</span>) &amp; (df.评分&lt;=<span class="number">9.5</span>)]</span><br><span class="line">n2=df[<span class="string">&quot;票房&quot;</span>].<span class="built_in">sum</span>()</span><br><span class="line">res.append([<span class="string">&quot;Tetuka&quot;</span>,<span class="string">&quot;9.0-9.5&quot;</span>,<span class="built_in">int</span>(n2)])</span><br><span class="line"></span><br><span class="line"> <span class="comment">#无评分</span></span><br><span class="line">df=pd.DataFrame(list1)</span><br><span class="line">df[<span class="string">&quot;票房&quot;</span>]=df[<span class="string">&quot;票房&quot;</span>].astype(<span class="built_in">int</span>)</span><br><span class="line">df=df[(df.评分==<span class="string">&quot;-&quot;</span>)]</span><br><span class="line">n3=df[<span class="string">&quot;票房&quot;</span>].<span class="built_in">sum</span>()</span><br><span class="line">res.append([<span class="string">&quot;Tetuka&quot;</span>,<span class="string">&quot;无评分&quot;</span>,<span class="built_in">int</span>(n3)])</span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure>

<p>mysql运行结果<br>![[Pasted image 20250612112951.png]]</p>
<h1 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h1><p>python代码段</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用提醒:</span></span><br><span class="line"><span class="comment"># 1. xbot包提供软件自动化、数据表格、Excel、日志、AI等功能</span></span><br><span class="line"><span class="comment"># 2. package包提供访问当前应用数据的功能，如获取元素、访问全局变量、获取资源文件等功能</span></span><br><span class="line"><span class="comment"># 3. 当此模块作为流程独立运行时执行main函数</span></span><br><span class="line"><span class="comment"># 4. 可视化流程中可以通过&quot;调用模块&quot;的指令使用此模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xbot,pymysql</span><br><span class="line"><span class="keyword">from</span> xbot <span class="keyword">import</span> <span class="built_in">print</span>, sleep</span><br><span class="line"><span class="keyword">from</span> .<span class="keyword">import</span> package</span><br><span class="line"><span class="keyword">from</span> .package <span class="keyword">import</span> variables <span class="keyword">as</span> glv</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">recountry</span>(<span class="params">c</span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1e8-1f1f3.svg&quot;</span>:<span class="string">&quot;中国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1fa-1f1f8.svg&quot;</span>:<span class="string">&quot;美国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1ee-1f1f3.svg&quot;</span>:<span class="string">&quot;印度&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1ef-1f1f5.svg&quot;</span>:<span class="string">&quot;日本&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1ec-1f1e7.svg&quot;</span>:<span class="string">&quot;英国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1eb-1f1f7.svg&quot;</span>:<span class="string">&quot;法国&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://s.w.org/images/core/emoji/12.0.0-1/svg/1f1eb-1f1ee.svg&quot;</span>:<span class="string">&quot;芬兰&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> c <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">return</span> data[c]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">args</span>):</span><br><span class="line">    webpage = xbot.web.create(url=<span class="string">&quot;http://www.boxofficecn.com/the-red-box-office&quot;</span>)</span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">        web1 = webpage.find_all_by_xpath(<span class="string">&#x27;//tbody/tr&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> web1:</span><br><span class="line">            mname = j.children()[<span class="number">1</span>].get_text().split(<span class="string">&quot;（&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            year = j.children()[<span class="number">0</span>].get_text().replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">            country = recountry(j.children()[<span class="number">0</span>].children()[<span class="number">0</span>].get_attribute(<span class="string">&quot;src&quot;</span>))</span><br><span class="line">            score = j.children()[<span class="number">1</span>].get_text().split(<span class="string">&quot;（&quot;</span>)[<span class="number">1</span>].replace(<span class="string">&quot;）&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;-&quot;</span>,<span class="string">&quot;0&quot;</span>)</span><br><span class="line">            director = j.children()[<span class="number">2</span>].get_text()</span><br><span class="line">            mbo = j.children()[<span class="number">3</span>].get_text().replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;&amp;&quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;↗&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">            res.append([mname,year,country,score,director,mbo,<span class="string">&quot;Tetuka&quot;</span>])</span><br><span class="line">        nextpage = webpage.find_by_xpath(<span class="string">&quot;//div[@id=&#x27;tablepress-4_paginate&#x27;]/a[2]&quot;</span>)</span><br><span class="line">        nextpage.click()</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line">    webpage.close()</span><br><span class="line"></span><br><span class="line">     <span class="comment">#数据写入数据库</span></span><br><span class="line">    conn=pymysql.connect(host=<span class="string">&quot;192.168.48.129&quot;</span>,user=<span class="string">&quot;root&quot;</span>,password=<span class="string">&quot;root123456&quot;</span>,</span><br><span class="line">    database=<span class="string">&quot;test&quot;</span>,charset=<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">    insertdata=conn.cursor()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">        sql=<span class="string">f&quot;insert into movie values(&#x27;<span class="subst">&#123;i[<span class="number">0</span>]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;i[<span class="number">1</span>]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;i[<span class="number">2</span>]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;i[<span class="number">3</span>]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;i[<span class="number">4</span>]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;i[<span class="number">5</span>]&#125;</span>&#x27;,&#x27;<span class="subst">&#123;i[<span class="number">6</span>]&#125;</span>&#x27;)&quot;</span></span><br><span class="line">        insertdata.execute(sql)</span><br><span class="line">    conn.commit()</span><br><span class="line">    insertdata.close()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>mysql运行结果<br>![[Pasted image 20250612164350.png]]</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>影刀</tag>
      </tags>
  </entry>
  <entry>
    <title>6.9总结：Pandas、爬虫</title>
    <url>/2025/06/09/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5Python/6.9%E6%80%BB%E7%BB%93%EF%BC%9APandas%E3%80%81%E7%88%AC%E8%99%AB/</url>
    <content><![CDATA[<h1 id="Python-API-接⼝开发⽤法介绍"><a href="#Python-API-接⼝开发⽤法介绍" class="headerlink" title="Python API 接⼝开发⽤法介绍"></a>Python API 接⼝开发⽤法介绍</h1><p>API （ Application Programming Interface ）是应⽤程序接⼝的简称</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义一个API接口</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&lt;a href=&#x27;/list&#x27;&gt;&lt;img src=&#x27;/static/py11.png&#x27;&gt;&lt;/a&gt;&quot;</span></span><br><span class="line"> <span class="comment"># 定义一个API接口</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/addSubmit&quot;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">addSubmit</span>():</span><br><span class="line">    tid = request.form.get(<span class="string">&quot;tid&quot;</span>)</span><br><span class="line">    tname = request.form.get(<span class="string">&quot;tname&quot;</span>)</span><br><span class="line">    tcontent=request.form.get(<span class="string">&quot;tcontent&quot;</span>)</span><br><span class="line">    leixing=MovieType(tid,tname,tcontent)</span><br><span class="line">    result=mtdal.insert(leixing)</span><br><span class="line">    <span class="keyword">if</span> result&gt;<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;插入成功 &lt;a href=&#x27;/list&#x27;&gt;刷新&lt;/a&gt;&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;插入失败 &lt;a href=&#x27;/list&#x27;&gt;刷新&lt;/a&gt;&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h1><p>Pandas 是 Python 语⾔的⼀个扩展程序库，⽤于数据分析。<br>Pandas 名字衍⽣⾃术语 “panel data” （⾯板数据）<br>Pandas 可以从各种⽂件格式⽐如 CSV 、 JSON 、 Excel </p>
<p>python 终端输⼊安装： </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple pandas</span><br></pre></td></tr></table></figure>

<h2 id="Pandas-数据结构-DataFrame"><a href="#Pandas-数据结构-DataFrame" class="headerlink" title="Pandas 数据结构  DataFrame"></a>Pandas 数据结构  DataFrame</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = &#123;<span class="string">&quot;Site&quot;</span>:[<span class="string">&quot;Google&quot;</span>, <span class="string">&quot;Runoob&quot;</span>, <span class="string">&quot;Wiki&quot;</span>], <span class="string">&quot;Age&quot;</span>:[<span class="number">10</span>, <span class="number">12</span>, <span class="number">13</span>],<span class="string">&quot;sss&quot;</span>:[<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>]&#125;</span><br><span class="line">df = pd.DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(df.loc[<span class="number">1</span>]) <span class="comment">#一行</span></span><br><span class="line"><span class="built_in">print</span>(df.loc[[<span class="number">0</span>,<span class="number">1</span>]]) <span class="comment"># 多行</span></span><br><span class="line"><span class="built_in">print</span>(df[<span class="string">&quot;Age&quot;</span>]) <span class="comment"># 一列</span></span><br><span class="line"><span class="built_in">print</span>(df[[<span class="string">&quot;Age&quot;</span>,<span class="string">&quot;Site&quot;</span>]]) <span class="comment"># 多列</span></span><br><span class="line"><span class="built_in">print</span>(df[<span class="string">&quot;Age&quot;</span>][<span class="number">1</span>]) <span class="comment"># 一个值</span></span><br><span class="line"><span class="built_in">print</span>(df[(df.Age&gt;<span class="number">11</span>) &amp; (df.sss&gt;<span class="number">35</span>)])<span class="comment"># 带条件筛选</span></span><br><span class="line"><span class="built_in">print</span>(df[(df.Age&gt;<span class="number">11</span>) &amp; (df.sss&gt;<span class="number">35</span>)][<span class="string">&quot;Age&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(df[(df.Age.astype(<span class="built_in">int</span>)&gt;<span class="number">11</span>) &amp; (df.sss&gt;<span class="number">35</span>)]) <span class="comment">#如果需要转换数据类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改值-查出来后，右侧给左侧赋值即可，不存在的列即为添加</span></span><br><span class="line">df[<span class="string">&quot;Age&quot;</span>]=<span class="number">100</span></span><br><span class="line">df[<span class="string">&quot;Age&quot;</span>][<span class="number">1</span>]=<span class="number">99</span></span><br><span class="line"> <span class="comment">#添加列</span></span><br><span class="line">df[<span class="string">&quot;tid&quot;</span>]=<span class="number">2</span></span><br><span class="line">df[<span class="string">&quot;Score&quot;</span>]=[<span class="number">90</span>,<span class="number">40</span>,<span class="number">99</span>]</span><br><span class="line">df.insert(<span class="number">1</span>,<span class="string">&quot;Sex&quot;</span>,[<span class="string">&quot;男&quot;</span>,<span class="string">&quot;女&quot;</span>,<span class="string">&quot;男&quot;</span>])</span><br><span class="line"> <span class="comment"># 1代表列 0代表行</span></span><br><span class="line">df.drop(<span class="number">1</span>,axis=<span class="number">0</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">df.drop([<span class="number">0</span>,<span class="number">1</span>],axis=<span class="number">0</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">df.drop(<span class="string">&quot;Age&quot;</span>,axis=<span class="number">1</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">df.drop(df[df.Age&gt;<span class="number">10</span>].index,axis=<span class="number">0</span>,inplace=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

<h2 id="Pandas-处理-CSV-⽂件"><a href="#Pandas-处理-CSV-⽂件" class="headerlink" title="Pandas 处理 CSV ⽂件"></a>Pandas 处理 CSV ⽂件</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&quot;/root/shell/douban.csv&quot;</span>) </span><br><span class="line">df = df[[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;title&quot;</span>,<span class="string">&quot;rate&quot;</span>]] </span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/db.csv&quot;</span>,index=<span class="literal">False</span>) </span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/db.csv&quot;</span>,mode=<span class="string">&quot;a&quot;</span>, header=<span class="literal">False</span>, index=<span class="literal">False</span>) <span class="comment">#追加</span></span><br></pre></td></tr></table></figure>

<h2 id="Pandas-处理-JSON"><a href="#Pandas-处理-JSON" class="headerlink" title="Pandas 处理 JSON"></a>Pandas 处理 JSON</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd </span><br><span class="line">d2 = [ </span><br><span class="line">&#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;Year 1&quot;</span>, <span class="string">&quot;student number&quot;</span>: <span class="number">20</span>, <span class="string">&quot;room&quot;</span>: <span class="string">&quot;Yellow&quot;</span>&#125;, </span><br><span class="line">&#123;<span class="string">&quot;class&quot;</span>: <span class="string">&quot;Year 2&quot;</span>, <span class="string">&quot;student number&quot;</span>: <span class="number">25</span>, <span class="string">&quot;room&quot;</span>: <span class="string">&quot;Blue&quot;</span>&#125; ] </span><br><span class="line">df = pd.DataFrame(d2) </span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure>

<h2 id="douban-txt-的文件处理"><a href="#douban-txt-的文件处理" class="headerlink" title="douban.txt 的文件处理"></a>douban.txt 的文件处理</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#内嵌的方法 </span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd </span><br><span class="line"><span class="keyword">import</span> json </span><br><span class="line">dict1=<span class="literal">None</span> </span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;douban.txt&quot;</span>,mode=<span class="string">&quot;r&quot;</span>,encoding=<span class="string">&quot;UTF-8&quot;</span>) <span class="keyword">as</span> f: </span><br><span class="line">	dict1 = json.loads(</span><br><span class="line">	f.read()) <span class="comment">#可以从文件读取过来 </span></span><br><span class="line">	f.close() </span><br><span class="line">df = pd.DataFrame(dict1[<span class="string">&quot;subjects&quot;</span>]) </span><br><span class="line">df=df[[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;rate&quot;</span>]] <span class="comment">#改变顺序和列数 </span></span><br><span class="line"><span class="built_in">print</span>(df) </span><br><span class="line">df.to_csv(<span class="string">&quot;doubanout1.csv&quot;</span>,index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<h2 id="Pandas-处理-excel-⽂件"><a href="#Pandas-处理-excel-⽂件" class="headerlink" title="Pandas 处理 excel ⽂件"></a>Pandas 处理 excel ⽂件</h2><p>sheet_name 指定了读取 excel ⾥⾯的哪⼀个 sheet<br>usecols 指定了读取哪些列<br>nrows 指定了总共读取多少⾏<br>header 指定了列名在第⼏⾏，并且只读取这⼀⾏往下的数据<br>index_col 指定了 index 在第⼏列<br>engine&#x3D;”openpyxl” 指定了使⽤什么引擎来读取 excel ⽂件</p>
<p>安装命令：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd </span><br><span class="line">df = pd.read_excel(<span class="string">&quot;student.xlsx&quot;</span>,sheet_name=<span class="string">&quot;Sheet1&quot;</span>,header=<span class="number">1</span>) </span><br><span class="line"><span class="built_in">print</span>(df) </span><br><span class="line">df.to_excel(<span class="string">&quot;student1.xlsx&quot;</span>,sheet_name=<span class="string">&quot;xs&quot;</span>,index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>

<h1 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h1><p>安装</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple requests </span><br><span class="line">pip3 install urllib3==<span class="number">1.26</span><span class="number">.15</span></span><br></pre></td></tr></table></figure>

<p>爬取一条数据<br>数据包的 headers ⾥⾯有我们需要的所有数据<br>数据包的 response ⾥⾯有我们要传递的 json 数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">headers=&#123;<span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.71 Safari/537.36&quot;</span>&#125; </span><br><span class="line">url=<span class="string">&quot;https://movie.douban.com/j/chart/top_list&quot;</span> </span><br><span class="line">params=&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;25&quot;</span>,<span class="string">&quot;interval_id&quot;</span>:<span class="string">&quot;100:90&quot;</span>,<span class="string">&quot;action&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;start&quot;</span>:<span class="string">&quot;0&quot;</span>,<span class="string">&quot;limit&quot;</span>:<span class="string">&quot;1&quot;</span>&#125; </span><br><span class="line">ck=&#123;<span class="string">&quot;Cookie&quot;</span>:<span class="string">&#x27;自己浏览器的&#x27;</span>&#125; </span><br><span class="line">response=requests.get(url=url,headers=headers,params=params,cookies=ck) </span><br><span class="line"><span class="built_in">print</span>(response.json())</span><br></pre></td></tr></table></figure>

<p>爬取所有数据</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">url1=<span class="string">&quot;https://movie.douban.com/j/chart/top_list&quot;</span></span><br><span class="line">params1=&#123;<span class="string">&quot;type&quot;</span>:<span class="number">20</span>,<span class="string">&quot;interval_id&quot;</span>:<span class="string">&quot;100:90&quot;</span>,<span class="string">&quot;action&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;start&quot;</span>:<span class="number">0</span>,<span class="string">&quot;limit&quot;</span>:<span class="number">400</span>&#125;</span><br><span class="line">header1=&#123;<span class="string">&quot;user-agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0&quot;</span>&#125;</span><br><span class="line">res=requests.get(url=url1,params=params1,headers=header1)</span><br><span class="line">content=res.json()</span><br><span class="line">df=pd.DataFrame(content)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure>

<h2 id="pandas-分析处理数据"><a href="#pandas-分析处理数据" class="headerlink" title="pandas 分析处理数据"></a>pandas 分析处理数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">content=response.json()</span><br><span class="line">df=pd.DataFrame(content)</span><br><span class="line">df=df[[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;title&quot;</span>,<span class="string">&quot;release_date&quot;</span>,<span class="string">&quot;score&quot;</span>]]</span><br><span class="line">df[<span class="string">&quot;tid&quot;</span>]=<span class="number">1</span></span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/movie.csv&quot;</span>,mode=<span class="string">&quot;a&quot;</span>,header=<span class="literal">False</span>,index=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去掉重复数据 去掉后面的</span></span><br><span class="line">df=pd.read_csv(<span class="string">&quot;/root/python/movie.csv&quot;</span>)</span><br><span class="line">df=df.drop_duplicates(subset=[<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;title&#x27;</span>,<span class="string">&#x27;release_date&#x27;</span>,<span class="string">&#x27;score&#x27;</span>])</span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/movie1.csv&quot;</span>,index=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改mysqlcsv.sh 导入到mysql数据库</span></span><br><span class="line">os.system(<span class="string">&quot;cp /root/python/movie1.csv /usr/local/mysql/data/movie1.csv&quot;</span>)</span><br><span class="line"> </span><br><span class="line">os.system(<span class="string">&quot;/root/shell/mysqlcsv.sh Movie /usr/local/mysql/data/movie1.csv&quot;</span>)</span><br></pre></td></tr></table></figure>

<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><p>1.安装 postman ，测试添加电影类型接⼝是否正确 </p>
<ul>
<li>地址栏<a href="http://127.0.0.1:5000/addSubmit">http://127.0.0.1:5000/addSubmit</a></li>
<li>设置POST传递方式</li>
<li>设置Body中的x-www-form-urlencoded</li>
<li>填写数据后点击send提交</li>
</ul>
<p>![[Pasted image 20250609102509.png]]</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 上机练习14</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.创建以⽇期时间为名字的⽇志⽂件，格式如 20230303102030.log </span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">current_time = datetime.datetime.now()</span><br><span class="line">filename = current_time.strftime(<span class="string">&quot;%Y%m%d%H%M%S.log&quot;</span>)</span><br><span class="line">os.system(<span class="string">f&quot;touch /root/python/<span class="subst">&#123;filename&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.列表 [[&quot;Google&quot;,10],[&quot;Runoob&quot;,12],[&quot;Wiki&quot;,13]], 转成 DataFrame 数据打印 </span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data=[[<span class="string">&quot;Google&quot;</span>,<span class="number">10</span>],[<span class="string">&quot;Runoob&quot;</span>,<span class="number">12</span>],[<span class="string">&quot;Wiki&quot;</span>,<span class="number">13</span>]]</span><br><span class="line">df=pd.DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.将 [&#123;&quot;a&quot;: 1, &quot;b&quot;: 2&#125;,&#123;&quot;a&quot;: 5, &quot;b&quot;: 10, &quot;c&quot;: 20&#125;] 转成 DataFrame 数据，提取第 2 ⾏ a 那⼀列的数据 </span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data=[&#123;<span class="string">&quot;a&quot;</span>: <span class="number">1</span>, <span class="string">&quot;b&quot;</span>: <span class="number">2</span>&#125;,&#123;<span class="string">&quot;a&quot;</span>: <span class="number">5</span>, <span class="string">&quot;b&quot;</span>: <span class="number">10</span>, <span class="string">&quot;c&quot;</span>: <span class="number">20</span>&#125;]</span><br><span class="line">df=pd.DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(df.loc[<span class="number">1</span>,<span class="string">&quot;a&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.将 data = &#123;&quot;chinese&quot;: [89,97,68,56,88,77],&quot;math&quot;: [99,67,100,78,89,66],&quot;english&quot;: [73,57,89,90,82,55]&#125; 转成 DataFrame 数据 , 提取三科分数都及格的数据 </span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = &#123;<span class="string">&quot;chinese&quot;</span>: [<span class="number">89</span>,<span class="number">97</span>,<span class="number">68</span>,<span class="number">56</span>,<span class="number">88</span>,<span class="number">77</span>],</span><br><span class="line">        <span class="string">&quot;math&quot;</span>: [<span class="number">99</span>,<span class="number">67</span>,<span class="number">100</span>,<span class="number">78</span>,<span class="number">89</span>,<span class="number">66</span>],</span><br><span class="line">        <span class="string">&quot;english&quot;</span>: [<span class="number">73</span>,<span class="number">57</span>,<span class="number">89</span>,<span class="number">90</span>,<span class="number">82</span>,<span class="number">55</span>]</span><br><span class="line">&#125;</span><br><span class="line">df=pd.DataFrame(data)</span><br><span class="line"><span class="built_in">print</span>(df[(df.chinese&gt;<span class="number">60</span>) &amp; (df.math&gt;<span class="number">60</span>) &amp; (df.english&gt;<span class="number">60</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.使⽤ pandas 处理 douban.txt ，提取列 id,title,rate, 并且提取 rate ⼤于 7.5 的⾏导出 douban1.csv</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">dict1=<span class="literal">None</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;/root/python/douban.txt&quot;</span>, mode=<span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;UTF-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    dict1 = json.loads(f.read())</span><br><span class="line"></span><br><span class="line">df=pd.DataFrame(dict1[<span class="string">&quot;subjects&quot;</span>])</span><br><span class="line">df=df[df.rate.astype(<span class="built_in">float</span>)&gt;<span class="number">7.5</span>][[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;title&quot;</span>,<span class="string">&quot;rate&quot;</span>]]</span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/douban1.csv&quot;</span>,index=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.把 order.xlsx 使⽤ mobox 传⼊到 /root/python 中，根据⽂档做如下操作 </span></span><br><span class="line"><span class="comment"># 把⽂档数据（从列名开始）转换为 dataframe 输出 </span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df=pd.read_excel(<span class="string">&quot;/root/python/order.xlsx&quot;</span>,sheet_name=<span class="string">&quot;Sheet1&quot;</span>,header=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"><span class="comment"># 在产品后⾯增加⼀列采购⼈，内容为 [&quot;坤坤&quot;,&quot;杰杰&quot;,&quot;坤坤&quot;,&quot;丽丽&quot;,&quot;丽丽&quot;,&quot;坤坤&quot;] </span></span><br><span class="line">df.insert(<span class="number">2</span>,<span class="string">&quot;采购人&quot;</span>,[<span class="string">&quot;坤坤&quot;</span>,<span class="string">&quot;杰杰&quot;</span>,<span class="string">&quot;坤坤&quot;</span>,<span class="string">&quot;丽丽&quot;</span>,<span class="string">&quot;丽丽&quot;</span>,<span class="string">&quot;坤坤&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看⾦额⼤于 100 的坤坤的订单列表 </span></span><br><span class="line"><span class="built_in">print</span>(df[(df.金额&gt;<span class="number">100</span>) &amp; (df.采购人==<span class="string">&quot;坤坤&quot;</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看⾦额⼤于 100 的坤坤的订单列表的产品及⾦额列 </span></span><br><span class="line">df=df[(df.金额&gt;<span class="number">100</span>) &amp; (df.采购人==<span class="string">&quot;坤坤&quot;</span>)][[<span class="string">&quot;产品&quot;</span>,<span class="string">&quot;金额&quot;</span>]]</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把上⼀步的结果另存为 order_kunkun.xlsx ，表单名称为坤坤，不显⽰索引，如下： </span></span><br><span class="line"><span class="comment"># 产品 ⾦额 </span></span><br><span class="line"><span class="comment"># 投影仪 2000 </span></span><br><span class="line"><span class="comment"># 打印机 298</span></span><br><span class="line">df.to_excel(<span class="string">&quot;/root/python/order_kunkun.xlsx&quot;</span>,sheet_name=<span class="string">&quot;坤坤&quot;</span>,index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 上机练习15</span></span><br><span class="line"><span class="comment"># 爬取⾄少五种电影类型（动画、科幻、恐怖）的电影追加到 csv ⽂件中</span></span><br><span class="line"><span class="comment"># 每次更换类型进行爬取需要修改params1的&quot;type&quot;:20中的数字（豆瓣网的），以及df[&quot;tid&quot;]=6的数字（自己网站对应类型的编号）</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">url1=<span class="string">&quot;https://movie.douban.com/j/chart/top_list&quot;</span></span><br><span class="line">params1=&#123;<span class="string">&quot;type&quot;</span>:<span class="number">20</span>,<span class="string">&quot;interval_id&quot;</span>:<span class="string">&quot;100:90&quot;</span>,<span class="string">&quot;action&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;start&quot;</span>:<span class="number">0</span>,<span class="string">&quot;limit&quot;</span>:<span class="number">400</span>&#125;</span><br><span class="line">header1=&#123;<span class="string">&quot;user-agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 Edg/137.0.0.0&quot;</span>&#125;</span><br><span class="line">res=requests.get(url=url1,params=params1,headers=header1)</span><br><span class="line">content=res.json()</span><br><span class="line">df=pd.DataFrame(content)</span><br><span class="line">df=df[[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;title&quot;</span>,<span class="string">&quot;release_date&quot;</span>,<span class="string">&quot;score&quot;</span>]]</span><br><span class="line">df[<span class="string">&quot;tid&quot;</span>]=<span class="number">6</span></span><br><span class="line"><span class="comment"># df.to_csv(&quot;/root/python/getdouban.csv&quot;,index=False)  # 第一次执行,覆盖写</span></span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/getdouban.csv&quot;</span>,index=<span class="literal">False</span>,mode=<span class="string">&quot;a&quot;</span>,header=<span class="literal">False</span>)  <span class="comment">#添加数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把csv⾥⾯重复的数据去掉，导⼊到 mysql 数据库的 Movie 表中</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">df=pd.read_csv(<span class="string">&quot;/root/python/getdouban.csv&quot;</span>)</span><br><span class="line">df=df.drop_duplicates(subset=[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;title&quot;</span>,<span class="string">&quot;release_date&quot;</span>,<span class="string">&quot;score&quot;</span>])</span><br><span class="line">df.to_csv(<span class="string">&quot;/root/python/getdouban.csv&quot;</span>,index=<span class="literal">False</span>)</span><br><span class="line">os.system(<span class="string">&quot;cp /root/python/getdouban.csv /usr/local/mysql/data/getdouban.csv&quot;</span>)</span><br><span class="line">os.system(<span class="string">&quot;/root/python/mysqlcsv.sh Movie /usr/local/mysql/data/getdouban.csv&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># mysqlcsv.sh内容：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置mysql连接参数</span></span><br><span class="line">dbhost=<span class="string">&quot;127.0.0.1&quot;</span>  <span class="comment">#主机名</span></span><br><span class="line">dbprot=<span class="number">3306</span>  <span class="comment">#端口</span></span><br><span class="line">dbuser=<span class="string">&quot;root&quot;</span>  <span class="comment">#用户名</span></span><br><span class="line">dbpass=<span class="string">&quot;root123456&quot;</span>  <span class="comment">#密码</span></span><br><span class="line">db=<span class="string">&quot;test&quot;</span>  <span class="comment">#表空间</span></span><br><span class="line"><span class="comment">#导入数据</span></span><br><span class="line">sql3=<span class="string">&quot;&quot;&quot;LOAD DATA INFILE &#x27;$2&#x27; INTO TABLE $1</span></span><br><span class="line"><span class="string">CHARACTER SET utf8</span></span><br><span class="line"><span class="string">FIELDS TERMINATED BY &#x27;,&#x27;</span></span><br><span class="line"><span class="string">LINES TERMINATED BY &#x27;\n&#x27;</span></span><br><span class="line"><span class="string">IGNORE 1 LINES&quot;&quot;&quot;</span></span><br><span class="line">mysql -h$dbhost -P$dbprot -u$dbuser -p$dbpass $db -e  <span class="string">&quot;$sql3&quot;</span></span><br><span class="line">echo <span class="string">&quot;导入完成&quot;</span></span><br></pre></td></tr></table></figure>

<h1 id="其他Python库"><a href="#其他Python库" class="headerlink" title="其他Python库"></a>其他Python库</h1><h3 id="1-NumPy-Numerical-Python"><a href="#1-NumPy-Numerical-Python" class="headerlink" title="1. NumPy (Numerical Python)"></a><strong>1. NumPy (Numerical Python)</strong></h3><ul>
<li><strong>核心功能</strong>：提供多维数组对象（<code>ndarray</code>）、高效的数学函数、线性代数运算和随机数生成。</li>
<li><strong>应用场景</strong>：科学计算、数据分析、机器学习（如 TensorFlow 依赖 NumPy 数组）。</li>
<li><strong>优势</strong>：底层用 C 实现，运算速度极快，是众多科学库的基础。<strong>示例</strong>：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])  <span class="comment"># 创建一维数组</span></span><br><span class="line"><span class="built_in">print</span>(a.mean())  <span class="comment"># 计算平均值</span></span><br></pre></td></tr></table></figure>
<h3 id="2-Matplotlib"><a href="#2-Matplotlib" class="headerlink" title="2. Matplotlib"></a><strong>2. Matplotlib</strong></h3><ul>
<li><strong>核心功能</strong>：2D 绘图库，支持线图、散点图、柱状图、饼图等多种可视化类型。</li>
<li><strong>应用场景</strong>：数据可视化、论文图表、交互式绘图。</li>
<li><strong>搭配工具</strong>：常与<code>pandas</code>（数据处理）和<code>seaborn</code>（高级可视化）结合使用。</li>
<li><strong>示例</strong>：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">y = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">plt.plot(x, y)  <span class="comment"># 绘制线图</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<h3 id="3-unittest"><a href="#3-unittest" class="headerlink" title="3. unittest"></a><strong>3. unittest</strong></h3><ul>
<li><strong>核心功能</strong>：Python 内置的单元测试框架，支持测试用例、测试套件、断言等。</li>
<li><strong>应用场景</strong>：软件开发中的测试驱动开发（TDD）、代码质量保障。</li>
<li><strong>对比工具</strong>：类似<code>pytest</code>，但<code>unittest</code>更适合初学者和小型项目。</li>
<li><strong>示例</strong>：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">a, b</span>):</span><br><span class="line">	<span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestAdd</span>(unittest.TestCase):</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">test_add</span>(<span class="params">self</span>):</span><br><span class="line">		<span class="variable language_">self</span>.assertEqual(add(<span class="number">1</span>, <span class="number">2</span>), <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">	unittest.main()</span><br></pre></td></tr></table></figure>

<h3 id="4-Setuptools"><a href="#4-Setuptools" class="headerlink" title="4. Setuptools"></a><strong>4. Setuptools</strong></h3><ul>
<li><strong>核心功能</strong>：Python 包开发工具，用于打包、分发和安装 Python 项目。</li>
<li><strong>关键文件</strong>：<code>setup.py</code>（定义包元信息）、<code>requirements.txt</code>（依赖列表）。</li>
<li><strong>应用场景</strong>：发布开源库到 PyPI（Python Package Index）或内部使用。</li>
<li><strong>示例</strong>：</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># setup.py</span></span><br><span class="line"><span class="keyword">from</span> setuptools <span class="keyword">import</span> setup, find_package</span><br><span class="line">	setup(</span><br><span class="line">		name=<span class="string">&#x27;mypackage&#x27;</span>,</span><br><span class="line">		version=<span class="string">&#x27;1.0.0&#x27;</span>,</span><br><span class="line">		packages=find_packages(),</span><br><span class="line">	)</span><br></pre></td></tr></table></figure>
<h3 id="5-Jupyter-Notebook"><a href="#5-Jupyter-Notebook" class="headerlink" title="5. Jupyter Notebook"></a><strong>5. Jupyter Notebook</strong></h3><ul>
<li><strong>核心功能</strong>：交互式计算环境，支持代码、Markdown 文本、公式和可视化混排。</li>
<li><strong>应用场景</strong>：数据分析、机器学习实验、学术论文写作（如 Jupyter Lab）。</li>
<li><strong>优势</strong>：实时运行代码，便于分享和演示，支持多种编程语言（通过内核）。</li>
<li><strong>启动命令</strong>：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jupyter notebook  <span class="comment"># 启动传统界面</span></span><br><span class="line">jupyter lab     <span class="comment"># 启动更现代化的Jupyter Lab</span></span><br></pre></td></tr></table></figure>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><table>
<thead>
<tr>
<th>库名</th>
<th>主要用途</th>
<th>典型场景</th>
</tr>
</thead>
<tbody><tr>
<td>NumPy</td>
<td>高性能数组计算</td>
<td>科学计算、AI 框架基础</td>
</tr>
<tr>
<td>Matplotlib</td>
<td>数据可视化</td>
<td>论文图表、交互式绘图</td>
</tr>
<tr>
<td>unittest</td>
<td>单元测试</td>
<td>代码质量保障</td>
</tr>
<tr>
<td>Setuptools</td>
<td>包打包与分发</td>
<td>发布 Python 库到 PyPI</td>
</tr>
<tr>
<td>Jupyter</td>
<td>交互式计算与文档</td>
<td>数据分析、学术研究</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
        <tag>爬虫</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>6.13总结：Kettle、ETL</title>
    <url>/2025/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.13%E6%80%BB%E7%BB%93%EF%BC%9AKettle%E3%80%81ETL/</url>
    <content><![CDATA[<h1 id="Kettle"><a href="#Kettle" class="headerlink" title="Kettle"></a>Kettle</h1><p>Kettle 是⼀款纯 Java 编写的开源 ETL ⼯具。 Kettle 是 PDI （ Pentaho Data Integeration ）的前⾝。表⽰抽取、转换、装⼊和加载数据， 翻译成中⽂是⽔壶的意思，希望把各种数据放到⼀个壶⾥，像⽔⼀样，以⼀种指定的格式流出，表达数据流的含义。</p>
<p>Kettle 共有两类设计模式，转换（ Transformation ）和作业（ Job ）；<br>转换⽤于控制数据处理和流转，作业则⽤于转换集成和流程控制。 </p>
<h1 id="ETL"><a href="#ETL" class="headerlink" title="ETL"></a>ETL</h1><p>ETL 的 3 个字⺟分别代表 Extract （抽取）、 Transform （转换）和 Load （装载）。<br>数据抽取：从数据源端的系统中，抽取⽬标端系统需要的数据。<br>数据转换：从数据源端获取的数据按照业务需求，转换成⽬标端要求的数据形式，并对错误、不规范、不⼀致的数据（俗称”脏数据”）进⾏清洗和加⼯。<br>数据装载：将转换后的数据装载到指定数据库或⽂件中。</p>
<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><p>1.处理等于 3000 抽取到 emp3000 ，不等于抽取到 empnot3000<br>![[Pasted image 20250613113101.png]]<br>![[Pasted image 20250613113153.png]]<br>![[Pasted image 20250613113210.png]]</p>
<p>计算每个员⼯的年薪<br>![[Pasted image 20250613114209.png]]</p>
<p>2.查询所有⼤于平均⼯资的员⼯信息<br>![[Pasted image 20250613114912.png]]<br>![[Pasted image 20250613115626.png]]</p>
<p>3.表 A 和表 B 数据结构完全相同，表⾃建，数据⾃定义 表 A 数据存在新增 &amp; 修改 &amp; 删除 操作，实现表 A 和表 B 的数据保持⼀致<br>![[Pasted image 20250613162750.png]]<br>(表A修改后记得提交！)</p>
<p>![[Pasted image 20250613164447.png]]</p>
<p>执行后表B与表A数据一致（将表A更新到表B）<br>![[Pasted image 20250613164643.png]]</p>
<p>4.数据来⾃ excel ，利⽤ PRODUCTID 和 CUSTOMID 进⾏关联后，插⼊到本地数据库中的⼀个表中</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--建表</span></span><br><span class="line"><span class="keyword">create table</span> pcid(</span><br><span class="line"> ORDERID varchar2(<span class="number">100</span>),  ZTIME varchar2(<span class="number">100</span>),</span><br><span class="line"> PRODUCTID varchar2(<span class="number">100</span>),  SALE_AMOUNT number(<span class="number">5</span>),</span><br><span class="line"> CUSTOMID varchar2(<span class="number">100</span>),  PRICE number(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line"> CUSTOMNAME  varchar2(<span class="number">100</span>),  COUNTRY varchar2(<span class="number">100</span>)</span><br><span class="line"> );</span><br></pre></td></tr></table></figure>
<p>![[Pasted image 20250613165929.png]]</p>
<p>执行后查看表pcid<br>![[Pasted image 20250613170016.png]]</p>
<p>新建作业，发送邮件<br>SMTP 服务需要⾃⼰登录 qq 邮箱开通：账号与安全-安全设置-根据提⽰开通服务<br>![[Pasted image 20250613173222.png]]</p>
<p>转换错误执行发送邮件，之后成功接收邮件<br>![[Pasted image 20250613173302.png]]</p>
<p>使⽤ windows ⾃带任务计划管理程序定时调⽤ Kettle 作业，同时输出 BASIC 级别⽇志<br>将以下代码写入到winjob.bat</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:</span><br><span class="line"><span class="built_in">cd</span> D:\data-integration</span><br><span class="line">kitchen /rep huangwenzhe /user admin /pass admin /file D:\kettle\huangwenzhe\kjob1.kjb /level basic&gt;D:\kettle\huangwenzhe\kettle.log</span><br></pre></td></tr></table></figure>

<p>Windows管理工具-任务计划程序-操作-创建基本任务<br>![[Pasted image 20250613184804.png]]</p>
<p>到点任务执行，发送邮件并生成log<br>![[Pasted image 20250613185554.png]]<br>![[Pasted image 20250613185532.png]]</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Oracle</tag>
        <tag>Kettle</tag>
        <tag>ETL</tag>
      </tags>
  </entry>
  <entry>
    <title>6.17帆软FineReport填报功能</title>
    <url>/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/</url>
    <content><![CDATA[<h2 id="1-添加员工信息"><a href="#1-添加员工信息" class="headerlink" title="1.添加员工信息"></a>1.添加员工信息</h2><p>1.设计界⾯ 在属性⾯板的控件设置 每⼀个选择合适的类型 下拉框需要选择数据字典， 控件可以设置约束<br>2.⼯具栏 模版 报表填报属性 添加内置 sql ，选择数据表，选择对应单元格，确定<br>3.预览的时候选择下拉箭头下的填报预览，输⼊信息后点击左上⻆的提交，则提⽰成 功，去数据库查询验证是否插⼊成功</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617104843783.png" class="">
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617104949161.png" class="">
<h2 id="2-增删改员⼯信息导航功能完成"><a href="#2-增删改员⼯信息导航功能完成" class="headerlink" title="2.增删改员⼯信息导航功能完成"></a>2.增删改员⼯信息导航功能完成</h2><p>数据量⻓的情况可以修改⽹⻚⼤⼩ ⼯具栏 模版 ⻚⾯设置 修改尺⼨⼤些 , 设计⻚⾯ 在数 据单元格选择控件类型 , 报表填报属性选择智能 , 选择填报预览</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617111315393.png" class="">
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617111406343.png" class="">

<h2 id="3-增删改员⼯信息单元格按钮完成，给出提⽰，并且添加自动刷新"><a href="#3-增删改员⼯信息单元格按钮完成，给出提⽰，并且添加自动刷新" class="headerlink" title="3.增删改员⼯信息单元格按钮完成，给出提⽰，并且添加自动刷新"></a>3.增删改员⼯信息单元格按钮完成，给出提⽰，并且添加自动刷新</h2><p>设置回调函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (fr_submitinfo.<span class="property">success</span>) &#123; </span><br><span class="line">	<span class="variable constant_">FR</span>.<span class="property">Msg</span>.<span class="title function_">toast</span>(<span class="string">&#x27;当前行删除成功&#x27;</span>); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">	<span class="variable constant_">FR</span>.<span class="property">Msg</span>.<span class="title function_">toast</span>(<span class="string">&#x27;当前行删除失败，错误信息为：&#x27;</span> + fr_submitinfo.<span class="property">failinfo</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>删除7777</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617113946322.png" class="">
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617114022395.png" class="">

<p>修改</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617114837781.png" class="">
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617140939533.png" class="">

<p>添加点击事件（自动刷新）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">_g</span>().<span class="title function_">refreshAllSheets</span>()</span><br></pre></td></tr></table></figure>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617141705325.png" class="">
<h2 id="4-填报操作-C"><a href="#4-填报操作-C" class="headerlink" title="4. 填报操作-C"></a>4. 填报操作-C</h2><p>使⽤数据： FRDemo 中的数据表员⼯⾏程安排表（以姓名、⽇期、地点为 联合主键）<br>题⽬要求：<br>1 ）参数栏可选择登录⼈员：⼈事员 A 、⼈事员 B 、⼈事经理；<br>2 ） 选择⼈事员 A 、⼈事员 B 登录时，⻚⾯显⽰对应⼈事员的个⼈⾏程安排表 可在空⽩⾏提交 数据，其中姓名默认为登录⼈不可编辑，⽇期默认为当天可编辑，地点 ( 单选 ) 可下拉选择 ⽆锡总部、南京总部，⼯作内容可⾃由编辑，参会⼈员（多选）可下拉复选⼈事员 A 、⼈ 事员 B 、⼈事经理，点击提交可填报数据⼊库，若记录已存在则做数据更新，填报后⾃动 参数刷新⻚⾯； 可针对已有数据做更新、删除，仅地点、⼯作内容、参会⼈员可编辑， 设置与上述⼀致，点击更新可做数据更新，点击删除可做数据删除；<br>3 ）选择⼈事经理 登录时，除 2 ）中的内容，还可查看⼈事员 A 、⼈事员 B 的⾏程安排表 仅⽤⼀张模板实现</p>
<p>制作界面</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617161547561.png" class="">

<p>人事经理显示人员行程安排表，人事员A、B不显示<br>人员行程安排表添加条件属性 $姓名!&#x3D;”人事经理”</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617190414758.png" class="">

<p>增删改自动提交<br>参与人员下拉复选框需设置返回值为字符串</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617191226508.png" class="">
<h2 id="5-填报实操-F"><a href="#5-填报实操-F" class="headerlink" title="5.填报实操-F"></a>5.填报实操-F</h2><p>弹出框添加和修改员⼯信息<br>数据来源： FRdemo 中 员⼯信息表 展⽰所有部⻔职位信息<br>1).“ 点击增加⼈员 ” ，传参部⻔、职位打开对话框，其中⼈员 ID 需⾃动取当前表⾥ ID 最⼤ 值＋ 1 ，仅姓名处可⾃由编辑，提交时校验是否为空，提交后新增该条数据<br>2).“ 点击修改⼈员明细 ” ，传参部⻔、职位打开对话框，仅⼯资处可⾃由编辑，提交后修 改该⼈员⼯资数据<br>3). 两个对话框在提交完成后都会⾃动关闭对话框<br>4). 模板完成后，增加姓名为本⼈的记录，并修改⼯资为 10000 ，在结果⽂档中截图体现<br>5). 最多可使⽤ 3 张模板</p>
<p>首页模板制作</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617191544614.png" class="">

<p>新增人员弹出框模板制作</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617191849377.png" class="">

<p>修改人员信息模板制作</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617191753466.png" class="">

<p>新增人员、修改人员 添加网络报表链接</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617192115473.png" class="">

<p>展⽰所有部⻔职位信息</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617192234918.png" class="">

<p>新增人员弹出框</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617192416846.png" class="">

<p>修改人员弹出框</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.17%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E5%A1%AB%E6%8A%A5/file-20250617192437100.png" class="">

<p>刷新父窗口（弹出框提交后返回父窗口）<br>弹出框模板界面-模板-模板Web属性-填报页面设置-事件设置-填报成功-添加如下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">window.parent.location.reload();</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>帆软</tag>
      </tags>
  </entry>
  <entry>
    <title>帆软FineReport</title>
    <url>/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.16%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AFFineReport/</url>
    <content><![CDATA[<p>帆软 FineReport 是一款由帆软公司自主研发的企业级报表工具，主要用于解决企业内部数据展示、数据分析和报表管理等需求。它提供了直观的拖拽式设计界面，支持多种数据源连接，并能够生成各种复杂格式的报表。以下是其主要特点和功能的概述：</p>
<h3 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a><strong>核心功能</strong></h3><ol>
<li><p><strong>多数据源整合</strong><br> 支持连接各类数据库（如 Oracle、MySQL、SQL Server）、Excel 文件、CSV 文件，甚至可以整合不同数据源的数据到同一张报表中。</p>
</li>
<li><p><strong>丰富的报表模板</strong><br> 提供多种预设模板，包括表格报表、图表报表、交叉表、中国式复杂报表等，满足不同场景需求。</p>
</li>
<li><p><strong>强大的计算能力</strong><br> 内置丰富的函数库，支持复杂的公式计算、聚合分析和数据处理，如行列计算、分组统计、同比环比等。</p>
</li>
<li><p><strong>数据可视化</strong><br> 支持多种图表类型（柱状图、折线图、饼图、雷达图等），并提供交互式图表功能，如钻取、联动、参数筛选等。</p>
</li>
<li><p><strong>权限管理与安全</strong><br> 提供细致的权限控制，可按用户、角色、部门分配不同的报表查看、编辑和导出权限，保障数据安全。</p>
</li>
<li><p><strong>定时调度与分发</strong><br> 支持设置定时任务自动生成报表，并通过邮件、短信、FTP 等方式将报表分发给指定人员。</p>
</li>
<li><p><strong>移动端适配</strong><br> 报表可自动适配手机、平板等移动设备，支持触摸操作和离线查看，方便移动办公。</p>
</li>
</ol>
<h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a><strong>应用场景</strong></h3><p>FineReport 适用于各类有数据报表需求的企业，尤其是中大型企业和集团化公司，可帮助其整合分散的数据资源，提升决策效率。</p>
<ul>
<li><strong>企业经营分析</strong>：制作财务报表、销售分析、库存管理等。</li>
<li><strong>数据监控</strong>：实时展示关键业务指标（KPI），支持预警功能。</li>
<li><strong>数据填报</strong>：设计在线表单，收集和汇总分散的数据。</li>
<li><strong>复杂报表制作</strong>：处理含有合并单元格、多层表头的中国式复杂报表。</li>
</ul>
<h1 id="一些操作"><a href="#一些操作" class="headerlink" title="一些操作"></a>一些操作</h1><p>在需要⾃动提交的控件上找到事件 添加条件 编辑后 加⼊如下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_g().parameterCommit()</span><br></pre></td></tr></table></figure>

<h1 id="作业练习"><a href="#作业练习" class="headerlink" title="作业练习"></a>作业练习</h1><p>连接数据库：服务器-定义数据库连接-新建JDBC<br>![[Pasted image 20250616194010.png]]</p>
<h2 id="1-使⽤数据集参数实现-emp-参数的各种操作"><a href="#1-使⽤数据集参数实现-emp-参数的各种操作" class="headerlink" title="1.使⽤数据集参数实现 emp 参数的各种操作"></a>1.使⽤数据集参数实现 emp 参数的各种操作</h2><p>默认显⽰所有数据：参数⾯板中， para 下⾯的点击查询前不显⽰报表内容的勾去掉<br>为空查询全部</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> </span><br><span class="line">$&#123;if(len(部门)<span class="operator">=</span><span class="operator">=</span><span class="number">0</span>,&quot;&quot;,&quot;and deptno=&#x27;&quot;<span class="operator">+</span>部门<span class="operator">+</span>&quot;&#x27;&quot; )&#125; </span><br><span class="line">$&#123;if(len(岗位)<span class="operator">=</span><span class="operator">=</span><span class="number">0</span>,&quot;&quot;,&quot;and job in (&#x27;&quot;<span class="operator">+</span>岗位<span class="operator">+</span>&quot;&#x27;)&quot;)&#125;</span><br></pre></td></tr></table></figure>
<p>![[Pasted image 20250616193641.png]]</p>
<p>多选框与部门编号关联<br>![[Pasted image 20250616193739.png]]</p>
<p>在部⻔编号上添加超级链接 ⽹络报表 对话框 添加参数：部⻔编号 &#x3D;$$$<br>点击部门编号跳转到对应部门信息<br>![[Pasted image 20250616193829.png]]</p>
<h2 id="2-完成销量表"><a href="#2-完成销量表" class="headerlink" title="2.完成销量表"></a>2.完成销量表</h2><p>![[Pasted image 20250616194745.png]]</p>
<p>点击地区超链接查询相关数据并在饼图上显示<br>点击图表中的销售员图形区域超级链接该销售员各种产品的销量<br>![[Pasted image 20250616194814.png]]</p>
<h2 id="3-运货费预警与悬浮变⾊"><a href="#3-运货费预警与悬浮变⾊" class="headerlink" title="3.运货费预警与悬浮变⾊"></a>3.运货费预警与悬浮变⾊</h2><p>使⽤数据： FRDemo 中的数据：订单<br>题⽬要求： </p>
<ol>
<li>参数查询框 ⼀个复选框控件，可选 择发货⽇期、到货⽇期。 </li>
<li>点击查询 发货⽇期、到货⽇期列根据选择的其他信息情况 展⽰ 运货费根据输⼊的预警值，⼤于等于输⼊值背景变红 ⿏标悬浮⾏变⾊ 注意数据格 式设置 效果如图所⽰ , 注意需⽤⼀张模板实现</li>
</ol>
<p>![[Pasted image 20250616195732.png]]</p>
<h1 id="4-成绩区间展示"><a href="#4-成绩区间展示" class="headerlink" title="4.成绩区间展示"></a>4.成绩区间展示</h1><p>数据来源：FRdemo 中STSCORE </p>
<ol>
<li>班级和学号控件都是复选，选择班级联动学号控件，参数为空时显⽰全部 </li>
<li>默认显⽰英语成绩，成绩在 60~80 分期间（⼤于等于60 ，⼩于80）， 点击可选择显⽰不同的分数区间 </li>
<li>低于 60 分的分数加粗变红显⽰</li>
</ol>
<p>准备三个数据集ds1、ds2、ds3（模板数据集-数据库查询）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--ds1 学生分数详情</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stscore</span><br><span class="line"><span class="keyword">where</span> course<span class="operator">=</span><span class="string">&#x27;English&#x27;</span></span><br><span class="line">$&#123;if(len(classno) <span class="operator">=</span><span class="operator">=</span> <span class="number">0</span>,&quot;&quot;,&quot;and classno in (&#x27;&quot; <span class="operator">+</span> classno <span class="operator">+</span> &quot;&#x27;)&quot;)&#125; </span><br><span class="line">$&#123;if(len(sno) <span class="operator">=</span><span class="operator">=</span> <span class="number">0</span>,&quot;&quot;,&quot;and studentno in (&#x27;&quot; <span class="operator">+</span> sno <span class="operator">+</span> &quot;&#x27;)&quot;)&#125;</span><br><span class="line">$&#123;if(len(s1) <span class="operator">=</span><span class="operator">=</span> <span class="number">0</span>,&quot;and grade &gt;= 60&quot;,&quot;and grade &gt;=&quot; <span class="operator">+</span> s1)&#125;</span><br><span class="line">$&#123;if(len(s2) <span class="operator">=</span><span class="operator">=</span> <span class="number">0</span>,&quot;and grade &lt; 80 &quot;,&quot;and grade &lt; &quot; <span class="operator">+</span> s2)&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">--ds2 查询班级</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> classno <span class="keyword">from</span> stscore</span><br><span class="line"></span><br><span class="line"><span class="comment">--ds3 根据班级查学号</span></span><br><span class="line"><span class="keyword">select</span> studentno <span class="keyword">from</span> stscore <span class="keyword">where</span> classno <span class="keyword">in</span> (<span class="string">&#x27;$&#123;classno&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>界面设计及超级链接动态参数设计<br>![[Pasted image 20250616201130.png]]</p>
<p>默认显示60~80<br>![[Pasted image 20250616201235.png]]</p>
<p>不及格分数加粗变红显示<br>![[Pasted image 20250616201315.png]]</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>帆软</tag>
        <tag>FineReport</tag>
      </tags>
  </entry>
  <entry>
    <title>帆软企业大屏开发</title>
    <url>/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="大屏开发-数据可视化平台"><a href="#大屏开发-数据可视化平台" class="headerlink" title="大屏开发-数据可视化平台"></a>大屏开发-数据可视化平台</h1><p><strong>新建模板</strong>：文件-新建其他模板-新建决策报表-新建空白模板-确定<br><strong>布局方式</strong>：模板-PC端自适应属性-布局方式:绝对布局-报表缩放设置:双向自适应-设置方式:为该模板单独设置-字体:不自适应<br><strong>背景设置</strong>：组件设置-body-背景设置-自定义-选择图片-拉伸<br><strong>组件样式（背景）设置</strong>：属性-样式设置-自定义-主体填充-图片-选择图片-拉伸-不透明度100-外沿样式-内边距0<br><strong>添加数据</strong>：内置数据集-表设计:设置表结构（列名，数据类型），插入行:添加数据</p>
<p>添加图表轮播</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/file-20250618193950962.png" class="">

<p>界面设计</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/file-20250618193209096.png" class="">

<p>PC端预览</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/file-20250618193539590.png" class="">

<h1 id="移动端开发-学生成绩"><a href="#移动端开发-学生成绩" class="headerlink" title="移动端开发-学生成绩"></a>移动端开发-学生成绩</h1><p>设置移动端属性：模板-移动端属性-勾选设置为手机端模板-自适应属性自动匹配-确定</p>
<p>准备数据集</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">显示班级 </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stscore </span><br><span class="line"></span><br><span class="line">折线图 </span><br><span class="line"><span class="keyword">select</span> classno,course,<span class="built_in">avg</span>(grade) <span class="keyword">from</span> stscore </span><br><span class="line"><span class="keyword">where</span> classno<span class="operator">=</span><span class="string">&#x27;$&#123;班级&#125;&#x27;</span> </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> classno,course </span><br><span class="line"></span><br><span class="line">列表 </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stscore <span class="keyword">where</span> classno<span class="operator">=</span><span class="string">&#x27;$&#123;班级&#125;&#x27;</span> </span><br><span class="line"></span><br><span class="line">柱状图 </span><br><span class="line"><span class="keyword">select</span> classno,course,sex,<span class="built_in">avg</span>(grade) <span class="keyword">from</span> stscore </span><br><span class="line"><span class="keyword">where</span> classno<span class="operator">=</span><span class="string">&#x27;$&#123;班级&#125;&#x27;</span> $&#123;if(len(科目)<span class="operator">=</span><span class="operator">=</span><span class="number">0</span>,&quot;&quot;,&quot; and course=&#x27;&quot;<span class="operator">+</span>科目<span class="operator">+</span>&quot;&#x27;&quot;)&#125; </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> classno,course,sex</span><br></pre></td></tr></table></figure>

<p>设计界面</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/file-20250618194901920.png" class="">

<p>移动端效果预览</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/file-20250618195125809.jpg" class="">

<p>点击不同的班级可以查看不同班级的数据<br>点击折线图中的分类，可以联动 柱形图和明细发⽣变化</p>
<img src="/2025/06/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.18%E6%80%BB%E7%BB%93%EF%BC%9A%E5%B8%86%E8%BD%AF%E4%BC%81%E4%B8%9A%E5%A4%A7%E5%B1%8F%E5%BC%80%E5%8F%91/file-20250618195444338.jpg" class="">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>帆软</tag>
        <tag>FineReport</tag>
      </tags>
  </entry>
  <entry>
    <title>6.19测试文章</title>
    <url>/2025/06/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%BA%8C%E9%98%B6%E6%AE%B5%E5%BD%B1%E5%88%80%E5%B8%86%E8%BD%AF/6.19%E6%80%BB%E7%BB%93%EF%BC%9A%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>帆软</tag>
        <tag>FineReport</tag>
        <tag>测试</tag>
      </tags>
  </entry>
</search>
